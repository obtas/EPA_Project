{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/input/input/index.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { InputProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { InputProps };\n\nconst Input = React.forwardRef(\n  (\n    {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      spellcheck,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ariaLabelledby,\n      ariaDescribedby,\n      invalid,\n      controlId,\n      clearAriaLabel,\n      ...rest\n    }: InputProps,\n    ref: Ref<InputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Input');\n    const baseProps = getBaseProps(rest);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          inputRef.current?.focus(...args);\n        },\n        select() {\n          inputRef.current?.select();\n        },\n      }),\n      [inputRef]\n    );\n\n    return (\n      <InternalInput\n        ref={inputRef}\n        {...{\n          ...baseProps,\n          ...baseComponentProps,\n          autoComplete,\n          ariaLabel,\n          ariaRequired,\n          autoFocus,\n          disabled,\n          disableBrowserAutocorrect,\n          name,\n          onKeyDown,\n          onKeyUp,\n          onChange,\n          onBlur,\n          onFocus,\n          placeholder,\n          readOnly,\n          type,\n          step,\n          inputMode,\n          spellcheck,\n          value,\n          ariaDescribedby,\n          ariaLabelledby,\n          invalid,\n          controlId,\n          clearAriaLabel,\n        }}\n        className={clsx(styles.root, baseProps.className)}\n        __inheritFormFieldProps={true}\n      />\n    );\n  }\n);\n\napplyDisplayName(Input, 'Input');\nexport default Input;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAGA,mBAAwD;AAUxD,IAAM,QAAQ,aAAAA,QAAM,WAClB,CACE,IA2BA,QACE;MA5BF,EACE,OACA,OAAO,QACP,MACA,WACA,eAAe,MACf,YACA,UACA,UACA,2BACA,WACA,SACA,UACA,QACA,SACA,cACA,MACA,aACA,WACA,WACA,gBACA,iBACA,SACA,WACA,eAAc,IAAA,IACX,OAAI,OAAA,IAzBT,CAAA,SAAA,QAAA,QAAA,aAAA,gBAAA,cAAA,YAAA,YAAA,6BAAA,aAAA,WAAA,YAAA,UAAA,WAAA,gBAAA,QAAA,eAAA,aAAA,aAAA,kBAAA,mBAAA,WAAA,aAAA,gBAAA,CA0BC;AAGD,QAAM,qBAAqB,iBAAiB,OAAO;AACnD,QAAM,YAAY,aAAa,IAAI;AAEnC,QAAM,eAAW,qBAAyB,IAAI;AAE9C,wCACE,KACA,OAAO;IACL,SAAS,MAAsC;;AAC7C,OAAAC,MAAA,SAAS,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,MAAM,GAAG,IAAI;IACjC;IACA,SAAM;;AACJ,OAAAA,MAAA,SAAS,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,OAAM;IAC1B;MAEF,CAAC,QAAQ,CAAC;AAGZ,SACE,aAAAD,QAAA,cAAC,kBAAa,OAAA,OAAA,EACZ,KAAK,SAAQ,GAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GAER,SAAS,GACT,kBAAkB,GAAA;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAc,CAAA,GAAA,EAEhB,WAAW,eAAK,mBAAO,MAAM,UAAU,SAAS,GAChD,yBAAyB,KAAI,CAAA,CAAA;AAGnC,CAAC;AAGH,iBAAiB,OAAO,OAAO;AAC/B,IAAA,gBAAe;",
  "names": ["React", "_a"]
}

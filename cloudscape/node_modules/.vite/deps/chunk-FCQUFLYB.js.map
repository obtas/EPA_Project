{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/table/table/index.tsx", "../../@cloudscape-design/components/table/table/internal.tsx", "../../@cloudscape-design/components/table/table/tools-header.tsx", "../../@cloudscape-design/components/table/styles.css.js", "../../@cloudscape-design/components/table/table/thead.tsx", "../../@cloudscape-design/components/table/selection-control/table/selection-control/index.tsx", "../../@cloudscape-design/components/table/selection-control/styles.css.js", "../../@cloudscape-design/components/table/table/use-selection.ts", "../../@cloudscape-design/components/table/table/utils.ts", "../../@cloudscape-design/components/table/header-cell/table/header-cell/index.tsx", "../../@cloudscape-design/components/table/header-cell/table/header-cell/utils.ts", "../../@cloudscape-design/components/table/header-cell/styles.css.js", "../../@cloudscape-design/components/table/resizer/table/resizer/index.tsx", "../../@cloudscape-design/components/table/resizer/styles.css.js", "../../@cloudscape-design/components/table/table/use-column-widths.tsx", "../../@cloudscape-design/components/table/sticky-columns/table/sticky-columns/use-sticky-columns.ts", "../../@cloudscape-design/components/area-chart/async-store/area-chart/async-store/index.ts", "../../@cloudscape-design/components/table/body-cell/styles.css.js", "../../@cloudscape-design/components/table/body-cell/table/body-cell/index.tsx", "../../@cloudscape-design/components/table/body-cell/table/body-cell/td-element.tsx", "../../@cloudscape-design/components/table/body-cell/table/body-cell/inline-editor.tsx", "../../@cloudscape-design/components/table/body-cell/table/body-cell/click-away.tsx", "../../@cloudscape-design/components/table/table/use-row-events.ts", "../../@cloudscape-design/components/internal/hooks/use-scroll-sync/internal/hooks/use-scroll-sync/index.ts", "../../@cloudscape-design/components/table/table/sticky-header.tsx", "../../@cloudscape-design/components/table/table/use-sticky-header.ts", "../../@cloudscape-design/components/table/table/sticky-scrolling.ts", "../../@cloudscape-design/components/internal/hooks/internal/hooks/use-mouse-down-target.ts", "../../@cloudscape-design/components/table/table/use-table-focus-navigation.ts", "../../@cloudscape-design/components/table/sticky-scrollbar/table/sticky-scrollbar/sticky-scrollbar.tsx", "../../@cloudscape-design/components/table/sticky-scrollbar/table/sticky-scrollbar/use-sticky-scrollbar.ts", "../../@cloudscape-design/components/table/sticky-scrollbar/styles.css.js", "../../@cloudscape-design/components/table/table/column-widths-utils.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalTable from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { TableProps };\nconst Table = React.forwardRef(\n  <T,>(\n    { items = [], selectedItems = [], variant = 'container', contentDensity = 'comfortable', ...props }: TableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Table');\n    return (\n      <InternalTable\n        items={items}\n        selectedItems={selectedItems}\n        variant={variant}\n        contentDensity={contentDensity}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n) as TableForwardRefType;\n\napplyDisplayName(Table, 'Table');\nexport default Table;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef, useState } from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead, { TheadProps } from './thead';\nimport { TableBodyCell } from './body-cell';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport SelectionControl from './selection-control';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { focusMarkers, useFocusMove, useSelection } from './use-selection';\nimport { fireCancelableEvent, fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport LiveRegion from '../internal/components/live-region';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { SomeRequired } from '../internal/types';\nimport { TableTdElement } from './body-cell/td-element';\nimport { useStickyColumns } from './sticky-columns';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport { checkColumnWidths } from './column-widths-utils';\n\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant'> &\n  InternalBaseComponentProps;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    stickyHeader = stickyHeader && supportsStickyPosition();\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(({ width }) => width);\n    const wrapperRefObject = useRef(null);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(({ width }) => width);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const [currentEditCell, setCurrentEditCell] = useState<[number, number] | null>(null);\n    const [lastSuccessfulEditCell, setLastSuccessfulEditCell] = useState<[number, number] | null>(null);\n    const [currentEditLoading, setCurrentEditLoading] = useState(false);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit: () => setCurrentEditCell(null),\n      }),\n      []\n    );\n\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useFocusMove(selectionType, items.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps, updateShiftToggle } = useSelection({\n      items,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n      ? 'container'\n      : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const theadProps: TheadProps = {\n      containerWidth,\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) => newWidth[getColumnKey(column, index)] || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n    };\n\n    const wrapperRef = useMergeRefs(wrapperMeasureRef, wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    // Allows keyboard users to scroll horizontally with arrow keys by making the wrapper part of the tab sequence\n    const isWrapperScrollable = tableWidth && containerWidth && tableWidth > containerWidth;\n    const wrapperProps = isWrapperScrollable\n      ? { role: 'region', tabIndex: 0, 'aria-label': ariaLabels?.tableLabel }\n      : {};\n\n    const getMouseDownTarget = useMouseDownTarget();\n    const wrapWithInlineLoadingState = (submitEdit: TableProps['submitEdit']) => {\n      if (!submitEdit) {\n        return undefined;\n      }\n      return async (...args: Parameters<typeof submitEdit>) => {\n        setCurrentEditLoading(true);\n        try {\n          await submitEdit(...args);\n        } finally {\n          setCurrentEditLoading(false);\n        }\n      };\n    };\n\n    const hasDynamicHeight = computedVariant === 'full-page';\n    const overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight });\n    useTableFocusNavigation(selectionType, tableRefObject, visibleColumnDefinitions, items?.length);\n    const toolsHeaderWrapper = useRef(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const toolsHeaderHeight =\n      (toolsHeaderWrapper?.current as HTMLDivElement | null)?.getBoundingClientRect().height ?? 0;\n\n    return (\n      <ColumnWidthsProvider visibleColumns={visibleColumnWidthsWithSelection} resizableColumns={resizableColumns}>\n        <InternalContainer\n          {...baseProps}\n          __internalRootRef={__internalRootRef}\n          className={clsx(baseProps.className, styles.root)}\n          header={\n            <>\n              {hasHeader && (\n                <div\n                  ref={overlapElement}\n                  className={clsx(hasDynamicHeight && [styles['dark-header'], 'awsui-context-content-header'])}\n                >\n                  <div\n                    ref={toolsHeaderWrapper}\n                    className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                  >\n                    <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                  </div>\n                </div>\n              )}\n              {stickyHeader && (\n                <StickyHeader\n                  ref={stickyHeaderRef}\n                  variant={computedVariant}\n                  theadProps={theadProps}\n                  wrapperRef={wrapperRefObject}\n                  theadRef={theadRef}\n                  secondaryWrapperRef={secondaryWrapperRef}\n                  tableRef={tableRefObject}\n                  onScroll={handleScroll}\n                  tableHasHeader={hasHeader}\n                  contentDensity={contentDensity}\n                />\n              )}\n            </>\n          }\n          disableHeaderPaddings={true}\n          disableContentPaddings={true}\n          variant={toContainerVariant(computedVariant)}\n          __disableFooterPaddings={true}\n          __disableFooterDivider={true}\n          __disableStickyMobile={false}\n          footer={\n            hasFooter ? (\n              <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                  {footer && <span>{footer}</span>}\n                  {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                </div>\n              </div>\n            ) : null\n          }\n          __stickyHeader={stickyHeader}\n          __mobileStickyOffset={toolsHeaderHeight}\n          __stickyOffset={stickyHeaderVerticalOffset}\n          {...focusMarkers.root}\n        >\n          <div\n            ref={wrapperRef}\n            className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n              [styles['has-footer']]: hasFooter,\n              [styles['has-header']]: hasHeader,\n            })}\n            onScroll={handleScroll}\n            {...wrapperProps}\n          >\n            {!!renderAriaLive && !!firstIndex && (\n              <LiveRegion>\n                <span>{renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 })}</span>\n              </LiveRegion>\n            )}\n            <table\n              ref={tableRef}\n              className={clsx(\n                styles.table,\n                resizableColumns && styles['table-layout-fixed'],\n                contentDensity === 'compact' && getVisualContextClassname('compact-table')\n              )}\n              // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n              // If we state explicitly, they get it always correctly even with low number of rows.\n              role=\"table\"\n              aria-label={ariaLabels?.tableLabel}\n              aria-rowcount={totalItemsCount ? totalItemsCount + 1 : -1}\n            >\n              <Thead\n                ref={theadRef}\n                hidden={stickyHeader}\n                onFocusedComponentChange={component => stickyHeaderRef.current?.setFocus(component)}\n                {...theadProps}\n              />\n              <tbody>\n                {loading || items.length === 0 ? (\n                  <tr>\n                    <td\n                      colSpan={selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length}\n                      className={clsx(styles['cell-merged'], hasFooter && styles['has-footer'])}\n                    >\n                      <div\n                        className={styles['cell-merged-content']}\n                        style={{\n                          width:\n                            (supportsStickyPosition() && containerWidth && Math.floor(containerWidth)) || undefined,\n                        }}\n                      >\n                        {loading ? (\n                          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n                            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n                          </InternalStatusIndicator>\n                        ) : (\n                          <div className={styles.empty}>{empty}</div>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  items.map((item, rowIndex) => {\n                    const firstVisible = rowIndex === 0;\n                    const lastVisible = rowIndex === items.length - 1;\n                    const isEven = rowIndex % 2 === 0;\n                    const isSelected = !!selectionType && isItemSelected(item);\n                    const isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);\n                    const isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);\n                    return (\n                      <tr\n                        key={getItemKey(trackBy, item, rowIndex)}\n                        className={clsx(styles.row, isSelected && styles['row-selected'])}\n                        onFocus={({ currentTarget }) => {\n                          // When an element inside table row receives focus we want to adjust the scroll.\n                          // However, that behaviour is unwanted when the focus is received as result of a click\n                          // as it causes the click to never reach the target element.\n                          if (!currentTarget.contains(getMouseDownTarget())) {\n                            stickyHeaderRef.current?.scrollToRow(currentTarget);\n                          }\n                        }}\n                        {...focusMarkers.item}\n                        onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item)}\n                        onContextMenu={onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)}\n                        aria-rowindex={firstIndex ? firstIndex + rowIndex + 1 : undefined}\n                      >\n                        {selectionType !== undefined && (\n                          <TableTdElement\n                            className={clsx(styles['selection-control'])}\n                            isVisualRefresh={isVisualRefresh}\n                            isFirstRow={firstVisible}\n                            isLastRow={lastVisible}\n                            isSelected={isSelected}\n                            isNextSelected={isNextSelected}\n                            isPrevSelected={isPrevSelected}\n                            wrapLines={false}\n                            isEvenRow={isEven}\n                            stripedRows={stripedRows}\n                            hasSelection={hasSelection}\n                            hasFooter={hasFooter}\n                            stickyState={stickyState}\n                            columnId={selectionColumnId}\n                          >\n                            <SelectionControl\n                              onFocusDown={moveFocusDown}\n                              onFocusUp={moveFocusUp}\n                              onShiftToggle={updateShiftToggle}\n                              {...getItemSelectionProps(item)}\n                            />\n                          </TableTdElement>\n                        )}\n                        {visibleColumnDefinitions.map((column, colIndex) => {\n                          const isEditing =\n                            !!currentEditCell && currentEditCell[0] === rowIndex && currentEditCell[1] === colIndex;\n                          const successfulEdit =\n                            !!lastSuccessfulEditCell &&\n                            lastSuccessfulEditCell[0] === rowIndex &&\n                            lastSuccessfulEditCell[1] === colIndex;\n                          const isEditable = !!column.editConfig && !currentEditLoading;\n                          return (\n                            <TableBodyCell\n                              key={getColumnKey(column, colIndex)}\n                              style={\n                                resizableColumns\n                                  ? {}\n                                  : {\n                                      width: column.width,\n                                      minWidth: column.minWidth,\n                                      maxWidth: column.maxWidth,\n                                    }\n                              }\n                              ariaLabels={ariaLabels}\n                              column={column}\n                              item={item}\n                              wrapLines={wrapLines}\n                              isEditable={isEditable}\n                              isEditing={isEditing}\n                              isRowHeader={column.isRowHeader}\n                              isFirstRow={firstVisible}\n                              isLastRow={lastVisible}\n                              isSelected={isSelected}\n                              isNextSelected={isNextSelected}\n                              isPrevSelected={isPrevSelected}\n                              successfulEdit={successfulEdit}\n                              onEditStart={() => {\n                                setLastSuccessfulEditCell(null);\n                                setCurrentEditCell([rowIndex, colIndex]);\n                              }}\n                              onEditEnd={editCancelled => {\n                                const eventCancelled = fireCancelableEvent(onEditCancel, {});\n                                if (!eventCancelled) {\n                                  setCurrentEditCell(null);\n                                  if (!editCancelled) {\n                                    setLastSuccessfulEditCell([rowIndex, colIndex]);\n                                  }\n                                }\n                              }}\n                              submitEdit={wrapWithInlineLoadingState(submitEdit)}\n                              hasFooter={hasFooter}\n                              stripedRows={stripedRows}\n                              isEvenRow={isEven}\n                              columnId={column.id ?? colIndex}\n                              stickyState={stickyState}\n                              isVisualRefresh={isVisualRefresh}\n                            />\n                          );\n                        })}\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n            {resizableColumns && <ResizeTracker />}\n          </div>\n          <StickyScrollbar\n            ref={scrollbarRef}\n            wrapperRef={wrapperRefObject}\n            tableRef={tableRefObject}\n            onScroll={handleScroll}\n          />\n        </InternalContainer>\n      </ColumnWidthsProvider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\n\ninterface ToolsHeaderProps {\n  header: React.ReactNode;\n  filter?: React.ReactNode;\n  pagination?: React.ReactNode;\n  preferences?: React.ReactNode;\n}\n\nexport default function ToolsHeader({ header, filter, pagination, preferences }: ToolsHeaderProps) {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isSmall = breakpoint === 'default';\n  const hasTools = filter || pagination || preferences;\n  return (\n    <>\n      {header}\n      {hasTools && (\n        <div ref={ref} className={clsx(styles.tools, isSmall && styles['tools-small'])}>\n          {filter && <div className={styles['tools-filtering']}>{filter}</div>}\n          <div className={styles['tools-align-right']}>\n            {pagination && <div className={styles['tools-pagination']}>{pagination}</div>}\n            {preferences && <div className={styles['tools-preferences']}>{preferences}</div>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_wih1l_lik9w_97\",\n  \"tools\": \"awsui_tools_wih1l_lik9w_108\",\n  \"tools-filtering\": \"awsui_tools-filtering_wih1l_lik9w_114\",\n  \"tools-align-right\": \"awsui_tools-align-right_wih1l_lik9w_128\",\n  \"tools-pagination\": \"awsui_tools-pagination_wih1l_lik9w_132\",\n  \"tools-preferences\": \"awsui_tools-preferences_wih1l_lik9w_132\",\n  \"tools-small\": \"awsui_tools-small_wih1l_lik9w_138\",\n  \"table\": \"awsui_table_wih1l_lik9w_144\",\n  \"table-layout-fixed\": \"awsui_table-layout-fixed_wih1l_lik9w_150\",\n  \"wrapper\": \"awsui_wrapper_wih1l_lik9w_154\",\n  \"variant-stacked\": \"awsui_variant-stacked_wih1l_lik9w_163\",\n  \"variant-container\": \"awsui_variant-container_wih1l_lik9w_163\",\n  \"variant-embedded\": \"awsui_variant-embedded_wih1l_lik9w_167\",\n  \"variant-borderless\": \"awsui_variant-borderless_wih1l_lik9w_167\",\n  \"has-header\": \"awsui_has-header_wih1l_lik9w_170\",\n  \"has-footer\": \"awsui_has-footer_wih1l_lik9w_173\",\n  \"cell-merged\": \"awsui_cell-merged_wih1l_lik9w_190\",\n  \"cell-merged-content\": \"awsui_cell-merged-content_wih1l_lik9w_201\",\n  \"empty\": \"awsui_empty_wih1l_lik9w_216\",\n  \"loading\": \"awsui_loading_wih1l_lik9w_220\",\n  \"selection-control\": \"awsui_selection-control_wih1l_lik9w_229\",\n  \"selection-control-header\": \"awsui_selection-control-header_wih1l_lik9w_236\",\n  \"dark-header\": \"awsui_dark-header_wih1l_lik9w_245\",\n  \"header-secondary\": \"awsui_header-secondary_wih1l_lik9w_250\",\n  \"table-has-header\": \"awsui_table-has-header_wih1l_lik9w_266\",\n  \"header-controls\": \"awsui_header-controls_wih1l_lik9w_270\",\n  \"variant-full-page\": \"awsui_variant-full-page_wih1l_lik9w_274\",\n  \"footer-wrapper\": \"awsui_footer-wrapper_wih1l_lik9w_287\",\n  \"footer\": \"awsui_footer_wih1l_lik9w_287\",\n  \"footer-with-pagination\": \"awsui_footer-with-pagination_wih1l_lik9w_295\",\n  \"footer-pagination\": \"awsui_footer-pagination_wih1l_lik9w_303\",\n  \"thead-active\": \"awsui_thead-active_wih1l_lik9w_307\",\n  \"row\": \"awsui_row_wih1l_lik9w_308\",\n  \"row-selected\": \"awsui_row-selected_wih1l_lik9w_309\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { TableProps } from './interfaces';\nimport SelectionControl from './selection-control';\nimport { focusMarkers, SelectionProps } from './use-selection';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { getColumnKey, getStickyClassNames } from './utils';\nimport { TableHeaderCell } from './header-cell';\nimport { useColumnWidths } from './use-column-widths';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\nimport cellStyles from './header-cell/styles.css.js';\nimport headerCellStyles from './header-cell/styles.css.js';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\nimport { StickyColumnsModel, useStickyCellStyles } from './sticky-columns';\n\nexport type InteractiveComponent =\n  | { type: 'selection' }\n  | { type: 'column'; col: number }\n  | { type: 'resizer'; col: number };\n\nexport interface TheadProps {\n  containerWidth: number | null;\n  selectionType: TableProps.SelectionType | undefined;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>;\n  sortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  variant: TableProps.Variant;\n  wrapLines: boolean | undefined;\n  resizableColumns: boolean | undefined;\n  getSelectAllProps: () => SelectionProps;\n  onFocusMove: ((sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) => void) | undefined;\n  onResizeFinish: (newWidths: Record<string, number>) => void;\n  onSortingChange: NonCancelableEventHandler<TableProps.SortingState<any>> | undefined;\n  sticky?: boolean;\n  hidden?: boolean;\n  stuck?: boolean;\n  singleSelectionHeaderAriaLabel?: string;\n  stripedRows?: boolean;\n  stickyState: StickyColumnsModel;\n  selectionColumnId: PropertyKey;\n  focusedComponent?: InteractiveComponent | null;\n  onFocusedComponentChange?: (element: InteractiveComponent | null) => void;\n}\n\nconst Thead = React.forwardRef(\n  (\n    {\n      containerWidth,\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      resizableColumns,\n      variant,\n      wrapLines,\n      onFocusMove,\n      onSortingChange,\n      onResizeFinish,\n      singleSelectionHeaderAriaLabel,\n      stripedRows,\n      sticky = false,\n      hidden = false,\n      stuck = false,\n      stickyState,\n      selectionColumnId,\n      focusedComponent,\n      onFocusedComponentChange,\n    }: TheadProps,\n    outerRef: React.Ref<HTMLTableRowElement>\n  ) => {\n    const isVisualRefresh = useVisualRefresh();\n\n    const headerCellClass = clsx(\n      headerCellStyles['header-cell'],\n      headerCellStyles[`header-cell-variant-${variant}`],\n      sticky && headerCellStyles['header-cell-sticky'],\n      stuck && headerCellStyles['header-cell-stuck'],\n      stripedRows && headerCellStyles['has-striped-rows'],\n      isVisualRefresh && headerCellStyles['is-visual-refresh']\n    );\n\n    const selectionCellClass = clsx(\n      styles['selection-control'],\n      styles['selection-control-header'],\n      isVisualRefresh && styles['is-visual-refresh']\n    );\n\n    const { columnWidths, totalWidth, updateColumn, setCell } = useColumnWidths();\n\n    const stickyStyles = useStickyCellStyles({\n      stickyColumns: stickyState,\n      columnId: selectionColumnId,\n      getClassName: props => getStickyClassNames(cellStyles, props),\n    });\n    return (\n      <thead className={clsx(!hidden && styles['thead-active'])}>\n        <tr {...focusMarkers.all} ref={outerRef} aria-rowindex={1}>\n          {selectionType ? (\n            <th\n              className={clsx(\n                headerCellClass,\n                selectionCellClass,\n                hidden && headerCellStyles['header-cell-hidden'],\n                stickyStyles.className\n              )}\n              style={stickyStyles.style}\n              ref={stickyStyles.ref}\n              scope=\"col\"\n            >\n              {selectionType === 'multi' ? (\n                <SelectionControl\n                  onFocusDown={event => {\n                    onFocusMove!(event.target as HTMLElement, -1, +1);\n                  }}\n                  focusedComponent={focusedComponent}\n                  onFocusedComponentChange={onFocusedComponentChange}\n                  {...getSelectAllProps()}\n                  {...(sticky ? { tabIndex: -1 } : {})}\n                />\n              ) : (\n                <ScreenreaderOnly>{singleSelectionHeaderAriaLabel}</ScreenreaderOnly>\n              )}\n            </th>\n          ) : null}\n\n          {columnDefinitions.map((column, colIndex) => {\n            const columnId = getColumnKey(column, colIndex);\n\n            let widthOverride;\n            if (resizableColumns) {\n              if (columnWidths) {\n                // use stateful value if available\n                widthOverride = columnWidths[columnId];\n              }\n              if (colIndex === columnDefinitions.length - 1 && containerWidth && containerWidth > totalWidth) {\n                // let the last column grow and fill the container width\n                widthOverride = 'auto';\n              }\n            }\n            return (\n              <TableHeaderCell\n                key={columnId}\n                className={headerCellClass}\n                style={{\n                  width: widthOverride || column.width,\n                  minWidth: sticky ? undefined : column.minWidth,\n                  maxWidth: resizableColumns || sticky ? undefined : column.maxWidth,\n                }}\n                tabIndex={sticky ? -1 : 0}\n                focusedComponent={focusedComponent}\n                onFocusedComponentChange={onFocusedComponentChange}\n                column={column}\n                activeSortingColumn={sortingColumn}\n                sortingDescending={sortingDescending}\n                sortingDisabled={sortingDisabled}\n                wrapLines={wrapLines}\n                hidden={hidden}\n                colIndex={colIndex}\n                columnId={columnId}\n                updateColumn={updateColumn}\n                onResizeFinish={() => onResizeFinish(columnWidths)}\n                resizableColumns={resizableColumns}\n                onClick={detail => fireNonCancelableEvent(onSortingChange, detail)}\n                isEditable={!!column.editConfig}\n                stickyState={stickyState}\n                cellRef={node => setCell(columnId, node)}\n              />\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  }\n);\n\nexport default Thead;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { KeyboardEvent, KeyboardEventHandler, MouseEvent } from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport InternalCheckbox from '../../checkbox/internal';\nimport RadioButton from '../../radio-group/radio-button';\n\nimport styles from './styles.css.js';\nimport { InteractiveComponent } from '../thead';\nimport { SelectionProps } from '../use-selection';\n\nexport interface SelectionControlProps extends SelectionProps {\n  onShiftToggle?(shiftPressed: boolean): void;\n  onFocusUp?: KeyboardEventHandler;\n  onFocusDown?: KeyboardEventHandler;\n  ariaLabel?: string;\n  tabIndex?: -1;\n\n  focusedComponent?: InteractiveComponent | null;\n  onFocusedComponentChange?: (element: InteractiveComponent | null) => void;\n}\n\nexport default function SelectionControl({\n  selectionType,\n  indeterminate = false,\n  onShiftToggle,\n  onFocusUp,\n  onFocusDown,\n  name,\n  ariaLabel,\n\n  focusedComponent,\n  onFocusedComponentChange,\n  ...sharedProps\n}: SelectionControlProps) {\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n\n  const setShiftState = (event: KeyboardEvent | MouseEvent) => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  const onMouseDownHandler = (event: MouseEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = (event: KeyboardEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  const handleClick = (event: MouseEvent) => {\n    const target = event.currentTarget;\n    const nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input')) as HTMLInputElement;\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput?.focus();\n  };\n\n  const selector = isMultiSelection ? (\n    <InternalCheckbox\n      {...sharedProps}\n      showOutline={focusedComponent?.type === 'selection'}\n      onFocus={() => onFocusedComponentChange?.({ type: 'selection' })}\n      onBlur={() => onFocusedComponentChange?.(null)}\n      controlId={controlId}\n      indeterminate={indeterminate}\n    />\n  ) : (\n    <RadioButton {...sharedProps} controlId={controlId} name={name} value={''} label={''} />\n  );\n\n  return (\n    <>\n      <label\n        onKeyDown={handleKeyDown}\n        onKeyUp={setShiftState}\n        onMouseDown={onMouseDownHandler}\n        onMouseUp={setShiftState}\n        onClick={handleClick}\n        htmlFor={controlId}\n        className={clsx(styles.label, styles.root)}\n        aria-label={ariaLabel}\n        title={ariaLabel}\n      >\n        {selector}\n      </label>\n      {/* HACK: IE11 collapses td's height to 0, if it contains only an absouletely positioned label */}\n      <span className={clsx(styles.stud)} aria-hidden={true}>\n        &nbsp;\n      </span>\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1ut8b_i97ok_93\",\n  \"label\": \"awsui_label_1ut8b_i97ok_97\",\n  \"stud\": \"awsui_stud_1ut8b_i97ok_111\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyboardEvent, useState } from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { TableProps } from './interfaces';\nimport { getTrackableValue } from './utils';\nimport selectionStyles from './selection-control/styles.css.js';\nimport { joinStrings } from '../internal/utils/strings';\n\nexport interface SelectionProps {\n  name: string;\n  disabled: boolean;\n  selectionType: 'single' | 'multi';\n  indeterminate?: boolean;\n  checked: boolean;\n  onChange: () => void;\n  ariaLabel?: string;\n}\n\nconst SELECTION_ITEM = 'selection-item';\nconst SELECTION_ROOT = 'selection-root';\n\nfunction findSelectionControlByIndex(rootContainer: HTMLElement, index: number) {\n  if (index === -1) {\n    // find \"select all\" checkbox\n    return rootContainer.querySelector<HTMLInputElement>(\n      `[data-${SELECTION_ITEM}=\"all\"] .${selectionStyles.root} input`\n    );\n  }\n  return rootContainer.querySelectorAll<HTMLInputElement>(\n    `[data-${SELECTION_ITEM}=\"item\"] .${selectionStyles.root} input`\n  )[index];\n}\n\nfunction findRootContainer(element: HTMLElement) {\n  return findUpUntil(element, node => node.dataset.selectionRoot === 'true')!;\n}\n\nexport function useFocusMove(selectionType: TableProps['selectionType'], totalItems: number) {\n  if (selectionType !== 'multi') {\n    return {};\n  }\n  function moveFocus(sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) {\n    let index = fromIndex;\n    const rootContainer = findRootContainer(sourceElement);\n\n    while (index >= -1 && index < totalItems) {\n      index += direction;\n      const control = findSelectionControlByIndex(rootContainer, index);\n      if (control && !control.disabled) {\n        control.focus();\n        break;\n      }\n    }\n  }\n  const [moveFocusDown, moveFocusUp] = ([1, -1] as const).map(direction => {\n    return (event: KeyboardEvent) => {\n      const target = event.currentTarget as HTMLElement;\n      const itemNode = findUpUntil(target, node => node.dataset.selectionItem === 'item')!;\n      const fromIndex = Array.prototype.indexOf.call(itemNode.parentElement!.children, itemNode);\n      moveFocus(target, fromIndex, direction);\n    };\n  });\n  return {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus,\n  };\n}\n\n// A set, that compares items by their \"trackables\" (the results of applying `trackBy` to them)\nclass ItemSet<T> {\n  constructor(trackBy: TableProps.TrackBy<T> | undefined, items: ReadonlyArray<T>) {\n    this.trackBy = trackBy;\n    items.forEach(this.put);\n  }\n  private trackBy: TableProps.TrackBy<T> | undefined;\n  private map: Map<unknown, T> = new Map();\n  put = (item: T) => this.map.set.call(this.map, getTrackableValue(this.trackBy, item), item);\n  has = (item: T) => this.map.has.call(this.map, getTrackableValue(this.trackBy, item));\n  forEach = this.map.forEach.bind(this.map);\n}\n\nexport const focusMarkers = {\n  item: { ['data-' + SELECTION_ITEM]: 'item' },\n  all: { ['data-' + SELECTION_ITEM]: 'all' },\n  root: { ['data-' + SELECTION_ROOT]: 'true' },\n};\n\nexport function useSelection<T>({\n  items,\n  selectedItems = [],\n  selectionType,\n  isItemDisabled = () => false,\n  trackBy,\n  onSelectionChange,\n  ariaLabels,\n  loading,\n}: Pick<\n  TableProps<T>,\n  | 'ariaLabels'\n  | 'items'\n  | 'selectedItems'\n  | 'selectionType'\n  | 'isItemDisabled'\n  | 'trackBy'\n  | 'onSelectionChange'\n  | 'loading'\n>) {\n  const [shiftPressed, setShiftPressed] = useState(false);\n  const [lastClickedItem, setLastClickedItem] = useState<T | null>(null);\n  const selectionName = useUniqueId();\n  const finalSelectedItems = selectionType === 'single' ? selectedItems.slice(0, 1) : selectedItems;\n  const selectedSet = new ItemSet(trackBy, finalSelectedItems);\n  const itemIndexesMap = new Map();\n  items.forEach((item, i) => itemIndexesMap.set(getTrackableValue(trackBy, item), i));\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n  const getItemState = (item: T) => ({\n    disabled: isItemDisabled(item),\n    selected: isItemSelected(item),\n  });\n  const [allDisabled, allEnabledSelected] = selectionType\n    ? items.reduce(\n        ([allDisabled, allEnabledSelected], item) => {\n          const { disabled, selected } = getItemState(item);\n          return [\n            // all items are disabled (or none are present)\n            allDisabled && disabled,\n            // all enabled items are selected (or none are present)\n            allEnabledSelected && (selected || disabled),\n          ];\n        },\n        [true, true]\n      )\n    : [true, true];\n\n  // the page has at least one selected item\n  const hasSelected = finalSelectedItems.length > 0;\n\n  const handleToggleAll = () => {\n    const requestedItems = new ItemSet(trackBy, items);\n    const newSelectedItems = allEnabledSelected ? deselectItems(requestedItems) : selectItems(requestedItems);\n    fireNonCancelableEvent(onSelectionChange, { selectedItems: newSelectedItems });\n  };\n\n  const getRequestedItems = (item: T) => {\n    const requestedItems = new ItemSet(trackBy, [item]);\n    let lastClickedItemIndex = lastClickedItem ? itemIndexesMap.get(getTrackableValue(trackBy, lastClickedItem)) : -1;\n    if (lastClickedItemIndex === undefined) {\n      lastClickedItemIndex = -1;\n    }\n    // we use lastClickedItemIndex to determine if filtering/sorting/pagination\n    // made previously selected item invisible, therefore we reset state for shift-select\n    if (shiftPressed && lastClickedItemIndex !== -1) {\n      // item is always in items\n      const currentItemIndex = itemIndexesMap.get(getTrackableValue(trackBy, item)) as number;\n      const start = Math.min(currentItemIndex, lastClickedItemIndex);\n      const end = Math.max(currentItemIndex, lastClickedItemIndex);\n      items.slice(start, end + 1).forEach(item => requestedItems.put(item));\n    }\n    return requestedItems;\n  };\n\n  const deselectItems = (requestedItems: ItemSet<T>) => {\n    const newSelectedItems: Array<T> = [];\n    selectedItems.forEach(selectedItem => {\n      const toUnselect = requestedItems.has(selectedItem);\n      if (!toUnselect || isItemDisabled(selectedItem)) {\n        newSelectedItems.push(selectedItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const selectItems = (requestedItems: ItemSet<T>) => {\n    const newSelectedItems = [...selectedItems];\n    requestedItems.forEach(newItem => {\n      const { selected, disabled } = getItemState(newItem);\n      if (!selected && !disabled) {\n        newSelectedItems.push(newItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const handleToggleItem = (item: T) => () => {\n    const { disabled, selected } = getItemState(item);\n    if (disabled || (selectionType === 'single' && selected)) {\n      return;\n    }\n    if (selectionType === 'single') {\n      fireNonCancelableEvent(onSelectionChange, { selectedItems: [item] });\n    } else {\n      const requestedItems = getRequestedItems(item);\n      const selectedItems = selected ? deselectItems(requestedItems) : selectItems(requestedItems);\n      fireNonCancelableEvent(onSelectionChange, { selectedItems });\n      setLastClickedItem(item);\n    }\n  };\n\n  return {\n    isItemSelected,\n    getSelectAllProps: (): SelectionProps => {\n      if (!selectionType) {\n        throw new Error('Invariant violation: calling selection props with missing selection type.');\n      }\n      return {\n        name: selectionName,\n        disabled: allDisabled || !!loading,\n        selectionType: selectionType,\n        indeterminate: hasSelected && !allEnabledSelected,\n        checked: hasSelected && allEnabledSelected,\n        onChange: handleToggleAll,\n        ariaLabel: joinStrings(\n          ariaLabels?.selectionGroupLabel,\n          ariaLabels?.allItemsSelectionLabel?.({ selectedItems })\n        ),\n      };\n    },\n    getItemSelectionProps: (item: T): SelectionProps => {\n      if (!selectionType) {\n        throw new Error('Invariant violation: calling selection props with missing selection type.');\n      }\n      return {\n        name: selectionName,\n        selectionType: selectionType,\n        ariaLabel: joinStrings(\n          ariaLabels?.selectionGroupLabel,\n          ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n        ),\n        onChange: handleToggleItem(item),\n        checked: isItemSelected(item),\n        disabled: isItemDisabled(item),\n      };\n    },\n    updateShiftToggle: (value: boolean) => {\n      setShiftPressed(value);\n    },\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { InternalContainerProps } from '../container/internal';\nimport { StickyColumnsCellState } from './sticky-columns';\nimport { TableProps } from './interfaces';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant === 'borderless' ? 'embedded' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n\nexport function getVisibleColumnDefinitions<T>({\n  columnDisplay,\n  visibleColumns,\n  columnDefinitions,\n}: {\n  columnDisplay?: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  visibleColumns?: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  // columnsDisplay has a precedence over visibleColumns.\n  if (columnDisplay) {\n    return getVisibleColumnDefinitionsFromColumnDisplay({ columnDisplay, columnDefinitions });\n  } else if (visibleColumns) {\n    return getVisibleColumnDefinitionsFromVisibleColumns({ visibleColumns, columnDefinitions });\n  } else {\n    return columnDefinitions;\n  }\n}\n\nfunction getVisibleColumnDefinitionsFromColumnDisplay<T>({\n  columnDisplay,\n  columnDefinitions,\n}: {\n  columnDisplay: ReadonlyArray<TableProps.ColumnDisplayProperties>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const columnDefinitionsById: Record<string, TableProps.ColumnDefinition<T>> = columnDefinitions.reduce(\n    (accumulator, item) => (item.id === undefined ? accumulator : { ...accumulator, [item.id]: item }),\n    {}\n  );\n  return columnDisplay\n    .filter(item => item.visible)\n    .map(item => columnDefinitionsById[item.id])\n    .filter(Boolean);\n}\n\nfunction getVisibleColumnDefinitionsFromVisibleColumns<T>({\n  visibleColumns,\n  columnDefinitions,\n}: {\n  visibleColumns: ReadonlyArray<string>;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>;\n}) {\n  const ids = new Set(visibleColumns);\n  return columnDefinitions.filter(({ id }) => id !== undefined && ids.has(id));\n}\n\nexport function getStickyClassNames(styles: Record<string, string>, props: StickyColumnsCellState | null) {\n  return {\n    [styles['sticky-cell']]: !!props,\n    [styles['sticky-cell-pad-left']]: !!props?.padLeft,\n    [styles['sticky-cell-last-left']]: !!props?.lastLeft,\n    [styles['sticky-cell-last-right']]: !!props?.lastRight,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport { KeyCode } from '../../internal/keycode';\nimport { TableProps } from '../interfaces';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\nimport { Resizer } from '../resizer';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { InteractiveComponent } from '../thead';\nimport { getStickyClassNames } from '../utils';\nimport { useInternalI18n } from '../../internal/i18n/context';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\n\ninterface TableHeaderCellProps<ItemType> {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<ItemType>;\n  activeSortingColumn?: TableProps.SortingColumn<ItemType>;\n  sortingDescending?: boolean;\n  sortingDisabled?: boolean;\n  wrapLines?: boolean;\n  hidden?: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onResizeFinish: () => void;\n  colIndex: number;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  resizableColumns?: boolean;\n  isEditable?: boolean;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  cellRef: React.RefCallback<HTMLElement>;\n  focusedComponent?: InteractiveComponent | null;\n  onFocusedComponentChange?: (element: InteractiveComponent | null) => void;\n}\n\nexport function TableHeaderCell<ItemType>({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  focusedComponent,\n  onFocusedComponentChange,\n  hidden,\n  onClick,\n  colIndex,\n  updateColumn,\n  resizableColumns,\n  onResizeFinish,\n  isEditable,\n  columnId,\n  stickyState,\n  cellRef,\n}: TableHeaderCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  const headerId = useUniqueId('table-header-');\n\n  const stickyStyles = useStickyCellStyles({\n    stickyColumns: stickyState,\n    columnId,\n    getClassName: props => getStickyClassNames(styles, props),\n  });\n\n  const mergedRef = useMergeRefs(stickyStyles.ref, cellRef);\n\n  return (\n    <th\n      className={clsx(\n        className,\n        {\n          [styles['header-cell-resizable']]: !!resizableColumns,\n          [styles['header-cell-sortable']]: sortingStatus,\n          [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n          [styles['header-cell-disabled']]: sortingDisabled,\n          [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n          [styles['header-cell-descending']]: sortingStatus === 'descending',\n          [styles['header-cell-hidden']]: hidden,\n        },\n        stickyStyles.className\n      )}\n      aria-sort={sortingStatus && getAriaSort(sortingStatus)}\n      style={{ ...style, ...stickyStyles.style }}\n      scope=\"col\"\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: focusedComponent?.type === 'column' && focusedComponent.col === colIndex,\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingStatus && !sortingDisabled\n          ? {\n              onKeyPress: handleKeyPress,\n              tabIndex: tabIndex,\n              role: 'button',\n              onClick: handleClick,\n              onFocus: () => onFocusedComponentChange?.({ type: 'column', col: colIndex }),\n              onBlur: () => onFocusedComponentChange?.(null),\n            }\n          : {})}\n      >\n        <div className={clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])} id={headerId}>\n          {column.header}\n          {isEditable ? (\n            <span\n              className={styles['edit-icon']}\n              role=\"img\"\n              aria-label={i18n('columnDefinitions.editConfig.editIconAriaLabel', column.editConfig?.editIconAriaLabel)}\n            >\n              <InternalIcon name=\"edit\" />\n            </span>\n          ) : null}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizableColumns && (\n        <>\n          <Resizer\n            tabIndex={tabIndex}\n            showFocusRing={focusedComponent?.type === 'resizer' && focusedComponent.col === colIndex}\n            onDragMove={newWidth => updateColumn(columnId, newWidth)}\n            onFinish={onResizeFinish}\n            ariaLabelledby={headerId}\n            onFocus={() => onFocusedComponentChange?.({ type: 'resizer', col: colIndex })}\n            onBlur={() => onFocusedComponentChange?.(null)}\n            minWidth={typeof column.minWidth === 'string' ? parseInt(column.minWidth) : column.minWidth}\n          />\n        </>\n      )}\n    </th>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\ntype SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\nconst stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const getAriaSort = (sortingState: SortingStatus) => stateToAriaSort[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\n", "\n    import './styles.scoped.css';\n    export default {\n  \"header-cell\": \"awsui_header-cell_1spae_1knid_93\",\n  \"header-cell-sticky\": \"awsui_header-cell-sticky_1spae_1knid_105\",\n  \"header-cell-stuck\": \"awsui_header-cell-stuck_1spae_1knid_108\",\n  \"header-cell-variant-full-page\": \"awsui_header-cell-variant-full-page_1spae_1knid_108\",\n  \"header-cell-hidden\": \"awsui_header-cell-hidden_1spae_1knid_111\",\n  \"header-cell-sortable\": \"awsui_header-cell-sortable_1spae_1knid_114\",\n  \"sticky-cell\": \"awsui_sticky-cell_1spae_1knid_117\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_1spae_1knid_125\",\n  \"has-selection\": \"awsui_has-selection_1spae_1knid_125\",\n  \"sticky-cell-last-left\": \"awsui_sticky-cell-last-left_1spae_1knid_128\",\n  \"header-cell-resizable\": \"awsui_header-cell-resizable_1spae_1knid_132\",\n  \"sticky-cell-last-right\": \"awsui_sticky-cell-last-right_1spae_1knid_135\",\n  \"sorting-icon\": \"awsui_sorting-icon_1spae_1knid_165\",\n  \"edit-icon\": \"awsui_edit-icon_1spae_1knid_173\",\n  \"header-cell-content\": \"awsui_header-cell-content_1spae_1knid_179\",\n  \"header-cell-fake-focus\": \"awsui_header-cell-fake-focus_1spae_1knid_208\",\n  \"header-cell-disabled\": \"awsui_header-cell-disabled_1spae_1knid_226\",\n  \"header-cell-sorted\": \"awsui_header-cell-sorted_1spae_1knid_226\",\n  \"header-cell-text\": \"awsui_header-cell-text_1spae_1knid_240\",\n  \"header-cell-text-wrap\": \"awsui_header-cell-text-wrap_1spae_1knid_245\",\n  \"header-cell-ascending\": \"awsui_header-cell-ascending_1spae_1knid_251\",\n  \"header-cell-descending\": \"awsui_header-cell-descending_1spae_1knid_252\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_1spae_1knid_262\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_1spae_1knid_273\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport tableStyles from '../styles.css.js';\nimport styles from './styles.css.js';\nimport { KeyCode } from '../../internal/keycode';\nimport { DEFAULT_COLUMN_WIDTH } from '../use-column-widths';\n\ninterface ResizerProps {\n  onDragMove: (newWidth: number) => void;\n  onFinish: () => void;\n  ariaLabelledby?: string;\n  minWidth?: number;\n  tabIndex?: number;\n\n  showFocusRing?: boolean;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nconst AUTO_GROW_START_TIME = 10;\nconst AUTO_GROW_INTERVAL = 10;\nconst AUTO_GROW_INCREMENT = 5;\n\nexport function Resizer({\n  onDragMove,\n  onFinish,\n  ariaLabelledby,\n  minWidth = DEFAULT_COLUMN_WIDTH,\n  tabIndex,\n  showFocusRing,\n  onFocus,\n  onBlur,\n}: ResizerProps) {\n  const [isDragging, setIsDragging] = useState(false);\n  const [headerCell, setHeaderCell] = useState<HTMLElement>();\n  const autoGrowTimeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  const onFinishStable = useStableEventHandler(onFinish);\n  const onDragStable = useStableEventHandler(onDragMove);\n  const [resizerHasFocus, setResizerHasFocus] = useState(false);\n  const [headerCellWidth, setHeaderCellWidth] = useState(0);\n\n  useEffect(() => {\n    if ((!isDragging && !resizerHasFocus) || !headerCell) {\n      return;\n    }\n    const rootElement = findUpUntil(headerCell, element => element.className.indexOf(tableStyles.root) > -1)!;\n    const tableElement = rootElement.querySelector<HTMLElement>(`table`)!;\n    // tracker is rendered inside table wrapper to align with its size\n    const tracker = rootElement.querySelector<HTMLElement>(`.${styles.tracker}`)!;\n    const scrollParent = getOverflowParents(headerCell)[0];\n    const { left: leftEdge, right: rightEdge } = scrollParent.getBoundingClientRect();\n\n    const updateTrackerPosition = (newOffset: number) => {\n      const { left: scrollParentLeft } = tableElement.getBoundingClientRect();\n      tracker.style.top = headerCell.getBoundingClientRect().height + 'px';\n      // minus one pixel to offset the cell border\n      tracker.style.left = newOffset - scrollParentLeft - 1 + 'px';\n    };\n\n    const updateColumnWidth = (newWidth: number) => {\n      const { right, width } = headerCell.getBoundingClientRect();\n      const updatedWidth = newWidth < minWidth ? minWidth : newWidth;\n      updateTrackerPosition(right + updatedWidth - width);\n      setHeaderCellWidth(newWidth);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      onDragStable(newWidth);\n    };\n\n    const resizeColumn = (offset: number) => {\n      if (offset > leftEdge) {\n        const cellLeft = headerCell.getBoundingClientRect().left;\n        const newWidth = offset - cellLeft;\n        // callbacks must be the last calls in the handler, because they may cause an extra update\n        updateColumnWidth(newWidth);\n      }\n    };\n\n    const onAutoGrow = () => {\n      const width = headerCell.getBoundingClientRect().width;\n      autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_INTERVAL);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      updateColumnWidth(width + AUTO_GROW_INCREMENT);\n      scrollParent.scrollLeft += AUTO_GROW_INCREMENT;\n    };\n    const onMouseMove = (event: MouseEvent) => {\n      clearTimeout(autoGrowTimeout.current);\n      const offset = event.pageX;\n      if (offset > rightEdge) {\n        autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_START_TIME);\n      } else {\n        resizeColumn(offset);\n      }\n    };\n    const onMouseUp = (event: MouseEvent) => {\n      resizeColumn(event.pageX);\n      setIsDragging(false);\n      onFinishStable();\n      clearTimeout(autoGrowTimeout.current);\n    };\n    const onKeyDown = (event: KeyboardEvent) => {\n      // prevent screenreader cursor move\n      if (event.keyCode === KeyCode.left || event.keyCode === KeyCode.right) {\n        event.preventDefault();\n      }\n      // update width\n      if (event.keyCode === KeyCode.left) {\n        updateColumnWidth(headerCell.getBoundingClientRect().width - 10);\n      }\n      if (event.keyCode === KeyCode.right) {\n        updateColumnWidth(headerCell.getBoundingClientRect().width + 10);\n      }\n    };\n\n    updateTrackerPosition(headerCell.getBoundingClientRect().right);\n    document.body.classList.add(styles['resize-active']);\n    document.body.classList.remove(styles['resize-active-with-focus']);\n    if (isDragging) {\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n    }\n    if (resizerHasFocus) {\n      document.body.classList.add(styles['resize-active-with-focus']);\n      headerCell.addEventListener('keydown', onKeyDown);\n    }\n\n    return () => {\n      clearTimeout(autoGrowTimeout.current);\n      document.body.classList.remove(styles['resize-active']);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      headerCell.removeEventListener('keydown', onKeyDown);\n    };\n  }, [headerCell, isDragging, onDragStable, onFinishStable, resizerHasFocus, minWidth]);\n  return (\n    <span\n      className={clsx(\n        styles.resizer,\n        isDragging && styles['resizer-active'],\n        (resizerHasFocus || showFocusRing) && styles['has-focus']\n      )}\n      onMouseDown={event => {\n        if (event.button !== 0) {\n          return;\n        }\n        event.preventDefault();\n        const headerCell = findUpUntil(event.currentTarget, element => element.tagName.toLowerCase() === 'th')!;\n        setIsDragging(true);\n        setHeaderCell(headerCell);\n      }}\n      onFocus={event => {\n        const headerCell = findUpUntil(event.currentTarget, element => element.tagName.toLowerCase() === 'th')!;\n        setHeaderCellWidth(headerCell.getBoundingClientRect().width);\n        setResizerHasFocus(true);\n        setHeaderCell(headerCell);\n        onFocus?.();\n      }}\n      onBlur={() => {\n        setResizerHasFocus(false);\n        onBlur?.();\n      }}\n      role=\"separator\"\n      aria-orientation=\"vertical\"\n      aria-labelledby={ariaLabelledby}\n      aria-valuenow={headerCellWidth}\n      // aria-valuetext is needed because the VO announces \"collapsed\" when only aria-valuenow set without aria-valuemax\n      aria-valuetext={headerCellWidth.toString()}\n      aria-valuemin={minWidth}\n      tabIndex={tabIndex}\n    />\n  );\n}\n\nexport function ResizeTracker() {\n  return <span className={styles.tracker} />;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"resize-active\": \"awsui_resize-active_x7peu_18l4k_93\",\n  \"resize-active-with-focus\": \"awsui_resize-active-with-focus_x7peu_18l4k_93\",\n  \"resizer\": \"awsui_resizer_x7peu_18l4k_98\",\n  \"resizer-active\": \"awsui_resizer-active_x7peu_18l4k_114\",\n  \"has-focus\": \"awsui_has-focus_x7peu_18l4k_126\",\n  \"tracker\": \"awsui_tracker_x7peu_18l4k_149\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState, createContext, useContext } from 'react';\n\nexport const DEFAULT_COLUMN_WIDTH = 120;\n\nexport interface ColumnWidthDefinition {\n  id: PropertyKey;\n  minWidth?: string | number;\n  width?: string | number;\n}\n\nfunction readWidths(\n  getCell: (columnId: PropertyKey) => null | HTMLElement,\n  visibleColumns: readonly ColumnWidthDefinition[]\n) {\n  const result: Record<PropertyKey, number> = {};\n  for (let index = 0; index < visibleColumns.length; index++) {\n    const column = visibleColumns[index];\n    let width = (column.width as number) || 0;\n    const minWidth = (column.minWidth as number) || width || DEFAULT_COLUMN_WIDTH;\n    if (\n      !width && // read width from the DOM if it is missing in the config\n      index !== visibleColumns.length - 1 // skip reading for the last column, because it expands to fully fit the container\n    ) {\n      const colEl = getCell(column.id);\n      width = colEl?.getBoundingClientRect().width ?? DEFAULT_COLUMN_WIDTH;\n    }\n    result[column.id] = Math.max(width, minWidth);\n  }\n  return result;\n}\n\nfunction updateWidths(\n  visibleColumns: readonly ColumnWidthDefinition[],\n  oldWidths: Record<PropertyKey, number>,\n  newWidth: number,\n  columnId: PropertyKey\n) {\n  const column = visibleColumns.find(column => column.id === columnId);\n  const minWidth = typeof column?.minWidth === 'number' ? column.minWidth : DEFAULT_COLUMN_WIDTH;\n  newWidth = Math.max(newWidth, minWidth);\n  if (oldWidths[columnId] === newWidth) {\n    return oldWidths;\n  }\n  return { ...oldWidths, [columnId]: newWidth };\n}\n\ninterface WidthsContext {\n  totalWidth: number;\n  columnWidths: Record<PropertyKey, number>;\n  updateColumn: (columnId: PropertyKey, newWidth: number) => void;\n  setCell: (columnId: PropertyKey, node: null | HTMLElement) => void;\n}\n\nconst WidthsContext = createContext<WidthsContext>({\n  totalWidth: 0,\n  columnWidths: {},\n  updateColumn: () => {},\n  setCell: () => {},\n});\n\ninterface WidthProviderProps {\n  visibleColumns: readonly ColumnWidthDefinition[];\n  resizableColumns: boolean | undefined;\n  children: React.ReactNode;\n}\n\nexport function ColumnWidthsProvider({ visibleColumns, resizableColumns, children }: WidthProviderProps) {\n  const visibleColumnsRef = useRef<(PropertyKey | undefined)[] | null>(null);\n  const [columnWidths, setColumnWidths] = useState<Record<PropertyKey, number>>({});\n\n  const cellsRef = useRef<Record<PropertyKey, HTMLElement>>({});\n  const getCell = (columnId: PropertyKey): null | HTMLElement => cellsRef.current[columnId] ?? null;\n  const setCell = (columnId: PropertyKey, node: null | HTMLElement) => {\n    if (node) {\n      cellsRef.current[columnId] = node;\n    } else {\n      delete cellsRef.current[columnId];\n    }\n  };\n\n  // The widths of the dynamically added columns (after the first render) if not set explicitly\n  // will default to the DEFAULT_COLUMN_WIDTH.\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    const updates: Record<PropertyKey, number> = {};\n    const lastVisible = visibleColumnsRef.current;\n    if (lastVisible) {\n      for (let index = 0; index < visibleColumns.length; index++) {\n        const column = visibleColumns[index];\n        if (!columnWidths[column.id] && lastVisible.indexOf(column.id) === -1) {\n          updates[column.id] = (column.width as number) || DEFAULT_COLUMN_WIDTH;\n        }\n      }\n      if (Object.keys(updates).length > 0) {\n        setColumnWidths(columnWidths => ({ ...columnWidths, ...updates }));\n      }\n    }\n    visibleColumnsRef.current = visibleColumns.map(column => column.id);\n  }, [columnWidths, resizableColumns, visibleColumns]);\n\n  // Read the actual column widths after the first render to employ the browser defaults for\n  // those columns without explicit width.\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    setColumnWidths(() => readWidths(getCell, visibleColumns));\n    // This code is intended to run only at the first render and should not re-run when table props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function updateColumn(columnId: PropertyKey, newWidth: number) {\n    setColumnWidths(columnWidths => updateWidths(visibleColumns, columnWidths, newWidth, columnId));\n  }\n\n  const totalWidth = visibleColumns.reduce(\n    (total, column) => total + (columnWidths[column.id] || DEFAULT_COLUMN_WIDTH),\n    0\n  );\n\n  return (\n    <WidthsContext.Provider value={{ columnWidths, totalWidth, updateColumn, setCell }}>\n      {children}\n    </WidthsContext.Provider>\n  );\n}\n\nexport function useColumnWidths() {\n  return useContext(WidthsContext);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport AsyncStore from '../../area-chart/async-store';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\nimport clsx from 'clsx';\n\n// We allow the table to have a minimum of 148px of available space besides the sum of the widths of the sticky columns\n// This value is an UX recommendation and is approximately 1/3 of our smallest breakpoint (465px)\nconst MINIMUM_SCROLLABLE_SPACE = 148;\n\ninterface StickyColumnsProps {\n  visibleColumns: readonly PropertyKey[];\n  stickyColumnsFirst: number;\n  stickyColumnsLast: number;\n}\n\nexport interface StickyColumnsModel {\n  isEnabled: boolean;\n  store: StickyColumnsStore;\n  style: {\n    wrapper?: React.CSSProperties;\n  };\n  refs: {\n    table: React.RefCallback<HTMLElement>;\n    wrapper: React.RefCallback<HTMLElement>;\n    cell: (columnId: PropertyKey, node: null | HTMLElement) => void;\n  };\n}\n\nexport interface StickyColumnsState {\n  cellState: Record<PropertyKey, null | StickyColumnsCellState>;\n  wrapperState: StickyColumnsWrapperState;\n}\n\n// Cell state is used to apply respective styles and offsets to sticky cells.\nexport interface StickyColumnsCellState {\n  padLeft: boolean;\n  lastLeft: boolean;\n  lastRight: boolean;\n  offset: { left?: number; right?: number };\n}\n\n// Scroll padding is applied to table's wrapper so that the table scrolls when focus goes behind sticky column.\nexport interface StickyColumnsWrapperState {\n  scrollPaddingLeft: number;\n  scrollPaddingRight: number;\n}\n\nexport function useStickyColumns({\n  visibleColumns,\n  stickyColumnsFirst,\n  stickyColumnsLast,\n}: StickyColumnsProps): StickyColumnsModel {\n  const store = useMemo(() => new StickyColumnsStore(), []);\n  const wrapperRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const tableRef = useRef<HTMLElement>(null) as React.MutableRefObject<null | HTMLElement>;\n  const cellsRef = useRef<Record<PropertyKey, HTMLElement>>({});\n\n  const hasStickyColumns = stickyColumnsFirst + stickyColumnsLast > 0;\n\n  const updateStickyStyles = useStableEventHandler(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  });\n\n  useResizeObserver(wrapperRef, updateStickyStyles);\n\n  useResizeObserver(tableRef, updateStickyStyles);\n\n  useEffect(() => {\n    if (wrapperRef.current && tableRef.current) {\n      store.updateCellStyles({\n        wrapper: wrapperRef.current,\n        table: tableRef.current,\n        cells: cellsRef.current,\n        visibleColumns,\n        stickyColumnsFirst,\n        stickyColumnsLast,\n      });\n    }\n  }, [store, stickyColumnsFirst, stickyColumnsLast, visibleColumns]);\n\n  // Update wrapper styles imperatively to avoid unnecessary re-renders.\n  useEffect(() => {\n    if (!hasStickyColumns) {\n      return;\n    }\n\n    const selector = (state: StickyColumnsState) => state.wrapperState;\n\n    const updateWrapperStyles = (state: StickyColumnsWrapperState, prev: StickyColumnsWrapperState) => {\n      if (isWrapperStatesEqual(state, prev)) {\n        return;\n      }\n\n      if (wrapperRef.current) {\n        wrapperRef.current.style.scrollPaddingLeft = state.scrollPaddingLeft + 'px';\n        wrapperRef.current.style.scrollPaddingRight = state.scrollPaddingRight + 'px';\n      }\n    };\n\n    const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n      updateWrapperStyles(selector(newState), selector(prevState))\n    );\n    return unsubscribe;\n  }, [store, hasStickyColumns]);\n\n  const setWrapper = useCallback(\n    (node: null | HTMLElement) => {\n      if (wrapperRef.current) {\n        wrapperRef.current.removeEventListener('scroll', updateStickyStyles);\n      }\n      if (node && hasStickyColumns) {\n        node.addEventListener('scroll', updateStickyStyles);\n      }\n      wrapperRef.current = node;\n    },\n    [hasStickyColumns, updateStickyStyles]\n  );\n\n  const setTable = useCallback((node: null | HTMLElement) => {\n    tableRef.current = node;\n  }, []);\n\n  const setCell = useCallback((columnId: PropertyKey, node: null | HTMLElement) => {\n    if (node) {\n      cellsRef.current[columnId] = node;\n    } else {\n      delete cellsRef.current[columnId];\n    }\n  }, []);\n\n  return {\n    isEnabled: hasStickyColumns,\n    store,\n    style: {\n      // Provide wrapper styles as props so that a re-render won't cause invalidation.\n      wrapper: hasStickyColumns ? { ...store.get().wrapperState } : undefined,\n    },\n    refs: { wrapper: setWrapper, table: setTable, cell: setCell },\n  };\n}\n\ninterface UseStickyCellStylesProps {\n  stickyColumns: StickyColumnsModel;\n  columnId: PropertyKey;\n  getClassName: (styles: null | StickyColumnsCellState) => Record<string, boolean>;\n}\n\ninterface StickyCellStyles {\n  ref: React.RefCallback<HTMLElement>;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport function useStickyCellStyles({\n  stickyColumns,\n  columnId,\n  getClassName,\n}: UseStickyCellStylesProps): StickyCellStyles {\n  const cellRef = useRef<HTMLElement>(null) as React.MutableRefObject<HTMLElement>;\n  const setCell = stickyColumns.refs.cell;\n\n  // unsubscribeRef to hold the function to unsubscribe from the store's updates\n  const unsubscribeRef = useRef<null | (() => void)>(null);\n\n  // refCallback updates the cell ref and sets up the store subscription\n  const refCallback = useCallback(\n    node => {\n      if (unsubscribeRef.current) {\n        // Unsubscribe before we do any updates to avoid leaving any subscriptions hanging\n        unsubscribeRef.current();\n      }\n\n      // Update cellRef and the store's state to point to the new DOM node\n      cellRef.current = node;\n      setCell(columnId, node);\n\n      // Update cell styles imperatively to avoid unnecessary re-renders.\n      const selector = (state: StickyColumnsState) => state.cellState[columnId];\n\n      const updateCellStyles = (state: null | StickyColumnsCellState, prev: null | StickyColumnsCellState) => {\n        if (isCellStatesEqual(state, prev)) {\n          return;\n        }\n\n        const className = getClassName(state);\n        const cellElement = cellRef.current;\n        if (cellElement) {\n          Object.keys(className).forEach(key => {\n            if (className[key]) {\n              cellElement.classList.add(key);\n            } else {\n              cellElement.classList.remove(key);\n            }\n          });\n          cellElement.style.left = state?.offset.left !== undefined ? `${state.offset.left}px` : '';\n          cellElement.style.right = state?.offset.right !== undefined ? `${state.offset.right}px` : '';\n        }\n      };\n\n      // If the node is not null (i.e., the table cell is being mounted or updated, not unmounted),\n      // set up a new subscription to the store's updates\n      if (node) {\n        unsubscribeRef.current = stickyColumns.store.subscribe(selector, (newState, prevState) => {\n          updateCellStyles(selector(newState), selector(prevState));\n        });\n      }\n    },\n\n    // getClassName is expected to be pure\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [columnId, setCell, stickyColumns.store]\n  );\n\n  // Provide cell styles as props so that a re-render won't cause invalidation.\n  const cellStyles = stickyColumns.store.get().cellState[columnId];\n  return {\n    ref: refCallback,\n    className: cellStyles ? clsx(getClassName(cellStyles)) : undefined,\n    style: cellStyles?.offset ?? undefined,\n  };\n}\n\nfunction isCellStatesEqual(s1: null | StickyColumnsCellState, s2: null | StickyColumnsCellState): boolean {\n  if (s1 && s2) {\n    return (\n      s1.padLeft === s2.padLeft &&\n      s1.lastLeft === s2.lastLeft &&\n      s1.lastRight === s2.lastRight &&\n      s1.offset.left === s2.offset.left &&\n      s1.offset.right === s2.offset.right\n    );\n  }\n  return s1 === s2;\n}\n\nfunction isWrapperStatesEqual(s1: StickyColumnsWrapperState, s2: StickyColumnsWrapperState): boolean {\n  return s1.scrollPaddingLeft === s2.scrollPaddingLeft && s1.scrollPaddingRight === s2.scrollPaddingRight;\n}\n\ninterface UpdateCellStylesProps {\n  wrapper: HTMLElement;\n  table: HTMLElement;\n  cells: Record<PropertyKey, HTMLElement>;\n  visibleColumns: readonly PropertyKey[];\n  stickyColumnsFirst: number;\n  stickyColumnsLast: number;\n}\n\nexport default class StickyColumnsStore extends AsyncStore<StickyColumnsState> {\n  private cellOffsets = new Map<PropertyKey, { first: number; last: number }>();\n  private stickyWidthLeft = 0;\n  private stickyWidthRight = 0;\n  private isStuckToTheLeft = false;\n  private isStuckToTheRight = false;\n  private padLeft = false;\n\n  constructor() {\n    super({ cellState: {}, wrapperState: { scrollPaddingLeft: 0, scrollPaddingRight: 0 } });\n  }\n\n  public updateCellStyles(props: UpdateCellStylesProps) {\n    const hasStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast > 0;\n    const hadStickyColumns = this.cellOffsets.size > 0;\n\n    if (hasStickyColumns || hadStickyColumns) {\n      this.updateScroll(props);\n      this.updateCellOffsets(props);\n      this.set(() => ({\n        cellState: this.generateCellStyles(props),\n        wrapperState: { scrollPaddingLeft: this.stickyWidthLeft, scrollPaddingRight: this.stickyWidthRight },\n      }));\n    }\n  }\n\n  private updateScroll(props: UpdateCellStylesProps) {\n    const wrapperScrollLeft = props.wrapper.scrollLeft;\n    const wrapperScrollWidth = props.wrapper.scrollWidth;\n    const wrapperClientWidth = props.wrapper.clientWidth;\n    const tablePaddingLeft = parseFloat(getComputedStyle(props.table).paddingLeft) || 0;\n    const tablePaddingRight = parseFloat(getComputedStyle(props.table).paddingRight) || 0;\n\n    this.isStuckToTheLeft = wrapperScrollLeft > tablePaddingLeft;\n\n    // Math.ceil() is used here to address an edge-case in certain browsers, where they return non-integer wrapperScrollLeft values\n    // which are lower than expected (sub-pixel difference), resulting in the table always being in the \"stuck to the right\" state\n    this.isStuckToTheRight = Math.ceil(wrapperScrollLeft) < wrapperScrollWidth - wrapperClientWidth - tablePaddingRight;\n\n    this.padLeft = tablePaddingLeft !== 0 && this.isStuckToTheLeft;\n  }\n\n  private generateCellStyles = (props: UpdateCellStylesProps): Record<PropertyKey, null | StickyColumnsCellState> => {\n    const isEnabled = this.isEnabled(props);\n    const lastLeftStickyColumnIndex = props.stickyColumnsFirst - 1;\n    const lastRightStickyColumnIndex = props.visibleColumns.length - props.stickyColumnsLast;\n\n    return props.visibleColumns.reduce((acc, columnId, index) => {\n      let stickySide = 'non-sticky';\n      if (index < props.stickyColumnsFirst) {\n        stickySide = 'left';\n      } else if (index >= props.visibleColumns.length - props.stickyColumnsLast) {\n        stickySide = 'right';\n      }\n\n      if (!isEnabled || stickySide === 'non-sticky') {\n        acc[columnId] = null;\n        return acc;\n      }\n\n      // Determine the offset of the sticky column using the `cellOffsets` state object\n      const isFirstColumn = index === 0;\n      const stickyColumnOffsetLeft = this.cellOffsets.get(columnId)?.first ?? 0;\n      const stickyColumnOffsetRight = this.cellOffsets.get(columnId)?.last ?? 0;\n\n      acc[columnId] = {\n        padLeft: isFirstColumn && this.padLeft,\n        lastLeft: this.isStuckToTheLeft && lastLeftStickyColumnIndex === index,\n        lastRight: this.isStuckToTheRight && lastRightStickyColumnIndex === index,\n        offset: {\n          left: stickySide === 'left' ? stickyColumnOffsetLeft : undefined,\n          right: stickySide === 'right' ? stickyColumnOffsetRight : undefined,\n        },\n      };\n      return acc;\n    }, {} as Record<PropertyKey, null | StickyColumnsCellState>);\n  };\n\n  private updateCellOffsets = (props: UpdateCellStylesProps): void => {\n    const firstColumnsWidths: number[] = [];\n    for (let i = 0; i < props.visibleColumns.length; i++) {\n      const element = props.cells[props.visibleColumns[i]];\n      const cellWidth = element.getBoundingClientRect().width ?? 0;\n      firstColumnsWidths[i] = (firstColumnsWidths[i - 1] ?? 0) + cellWidth;\n    }\n\n    const lastColumnsWidths: number[] = [];\n    for (let i = props.visibleColumns.length - 1; i >= 0; i--) {\n      const element = props.cells[props.visibleColumns[i]];\n      const cellWidth = element.getBoundingClientRect().width ?? 0;\n      lastColumnsWidths[i] = (lastColumnsWidths[i + 1] ?? 0) + cellWidth;\n    }\n    lastColumnsWidths.reverse();\n\n    this.stickyWidthLeft = firstColumnsWidths[props.stickyColumnsFirst - 1] ?? 0;\n    this.stickyWidthRight = lastColumnsWidths[props.stickyColumnsLast - 1] ?? 0;\n    this.cellOffsets = props.visibleColumns.reduce(\n      (map, columnId, columnIndex) =>\n        map.set(columnId, {\n          first: firstColumnsWidths[columnIndex - 1] ?? 0,\n          last: lastColumnsWidths[props.visibleColumns.length - 1 - columnIndex - 1] ?? 0,\n        }),\n      new Map()\n    );\n  };\n\n  private isEnabled = (props: UpdateCellStylesProps): boolean => {\n    const noStickyColumns = props.stickyColumnsFirst + props.stickyColumnsLast === 0;\n    if (noStickyColumns) {\n      return false;\n    }\n\n    const wrapperWidth = props.wrapper.getBoundingClientRect().width;\n    const tableWidth = props.table.getBoundingClientRect().width;\n    const isWrapperScrollable = tableWidth > wrapperWidth;\n    if (!isWrapperScrollable) {\n      return false;\n    }\n\n    const totalStickySpace = this.stickyWidthLeft + this.stickyWidthRight;\n    const tablePaddingLeft = parseFloat(getComputedStyle(props.table).paddingLeft) || 0;\n    const tablePaddingRight = parseFloat(getComputedStyle(props.table).paddingRight) || 0;\n    const hasEnoughScrollableSpace =\n      totalStickySpace + MINIMUM_SCROLLABLE_SPACE + tablePaddingLeft + tablePaddingRight < wrapperWidth;\n    if (!hasEnoughScrollableSpace) {\n      return false;\n    }\n\n    return true;\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, useState } from 'react';\nimport { unstable_batchedUpdates } from 'react-dom';\nimport { usePrevious } from '../../internal/hooks/use-previous';\n\ntype Selector<S, R> = (state: S) => R;\ntype Listener<S> = (state: S, prevState: S) => any;\n\nexport interface ReadonlyAsyncStore<S> {\n  get(): S;\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void;\n  unsubscribe(listener: Listener<any>): void;\n}\n\nexport default class AsyncStore<S> implements ReadonlyAsyncStore<S> {\n  _state: S;\n  _listeners: [Selector<S, any>, Listener<any>][] = [];\n\n  constructor(state: S) {\n    this._state = state;\n  }\n\n  get(): S {\n    return this._state;\n  }\n\n  set(cb: (state: S) => S): void {\n    const prevState = this._state;\n    const newState = cb(prevState);\n\n    this._state = newState;\n\n    unstable_batchedUpdates(() => {\n      for (const [selector, listener] of this._listeners) {\n        if (selector(prevState) !== selector(newState)) {\n          listener(newState, prevState);\n        }\n      }\n    });\n  }\n\n  subscribe<R>(selector: Selector<S, R>, listener: Listener<S>): () => void {\n    this._listeners.push([selector, listener]);\n\n    return () => this.unsubscribe(listener);\n  }\n\n  unsubscribe(listener: Listener<any>): void {\n    for (let index = 0; index < this._listeners.length; index++) {\n      const [, storedListener] = this._listeners[index];\n\n      if (storedListener === listener) {\n        this._listeners.splice(index, 1);\n        break;\n      }\n    }\n  }\n}\n\nexport function useReaction<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>, effect: Listener<R>): void {\n  useLayoutEffect(\n    () => {\n      const unsubscribe = store.subscribe(selector, (newState, prevState) =>\n        effect(selector(newState), selector(prevState))\n      );\n      return unsubscribe;\n    },\n    // ignoring selector and effect as they are expected to stay constant\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [store]\n  );\n}\n\nexport function useSelector<S, R>(store: ReadonlyAsyncStore<S>, selector: Selector<S, R>): R {\n  const [state, setState] = useState<R>(selector(store.get()));\n\n  useReaction(store, selector, newState => {\n    setState(newState);\n  });\n\n  // When store changes we need the state to be updated synchronously to avoid inconsistencies.\n  const prevStore = usePrevious(store);\n  if (prevStore !== null && prevStore !== store) {\n    return selector(store.get());\n  }\n\n  return state;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"body-cell\": \"awsui_body-cell_c6tup_djrxv_93\",\n  \"body-cell-wrap\": \"awsui_body-cell-wrap_c6tup_djrxv_103\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_c6tup_djrxv_115\",\n  \"has-striped-rows\": \"awsui_has-striped-rows_c6tup_djrxv_127\",\n  \"body-cell-edit-active\": \"awsui_body-cell-edit-active_c6tup_djrxv_130\",\n  \"body-cell-editable\": \"awsui_body-cell-editable_c6tup_djrxv_130\",\n  \"has-striped-rows-sticky-cell-pad-left\": \"awsui_has-striped-rows-sticky-cell-pad-left_c6tup_djrxv_136\",\n  \"has-selection\": \"awsui_has-selection_c6tup_djrxv_139\",\n  \"body-cell-first-row\": \"awsui_body-cell-first-row_c6tup_djrxv_145\",\n  \"body-cell-last-row\": \"awsui_body-cell-last-row_c6tup_djrxv_148\",\n  \"body-cell-selected\": \"awsui_body-cell-selected_c6tup_djrxv_148\",\n  \"has-footer\": \"awsui_has-footer_c6tup_djrxv_148\",\n  \"body-cell-shaded\": \"awsui_body-cell-shaded_c6tup_djrxv_158\",\n  \"sticky-cell\": \"awsui_sticky-cell_c6tup_djrxv_175\",\n  \"sticky-cell-pad-left\": \"awsui_sticky-cell-pad-left_c6tup_djrxv_183\",\n  \"sticky-cell-last-right\": \"awsui_sticky-cell-last-right_c6tup_djrxv_200\",\n  \"sticky-cell-last-left\": \"awsui_sticky-cell-last-left_c6tup_djrxv_204\",\n  \"body-cell-next-selected\": \"awsui_body-cell-next-selected_c6tup_djrxv_227\",\n  \"body-cell-prev-selected\": \"awsui_body-cell-prev-selected_c6tup_djrxv_231\",\n  \"body-cell-success\": \"awsui_body-cell-success_c6tup_djrxv_255\",\n  \"body-cell-editor\": \"awsui_body-cell-editor_c6tup_djrxv_255\",\n  \"body-cell-success-form\": \"awsui_body-cell-success-form_c6tup_djrxv_277\",\n  \"body-cell-editor-form\": \"awsui_body-cell-editor-form_c6tup_djrxv_277\",\n  \"body-cell-success-row\": \"awsui_body-cell-success-row_c6tup_djrxv_286\",\n  \"body-cell-editor-row\": \"awsui_body-cell-editor-row_c6tup_djrxv_286\",\n  \"body-cell-success-controls\": \"awsui_body-cell-success-controls_c6tup_djrxv_296\",\n  \"body-cell-editor-controls\": \"awsui_body-cell-editor-controls_c6tup_djrxv_296\",\n  \"body-cell-has-success\": \"awsui_body-cell-has-success_c6tup_djrxv_315\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Icon from '../../icon/internal';\nimport { TableProps } from '../interfaces';\nimport { TableTdElement, TableTdElementProps } from './td-element';\nimport { InlineEditor } from './inline-editor';\nimport LiveRegion from '../../internal/components/live-region/index.js';\nimport { useInternalI18n } from '../../internal/i18n/context';\n\nconst submitHandlerFallback = () => {\n  throw new Error('The function `handleSubmit` is required for editable columns');\n};\n\ninterface TableBodyCellProps<ItemType> extends TableTdElementProps {\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  isEditing: boolean;\n  successfulEdit?: boolean;\n  onEditStart: () => void;\n  onEditEnd: (cancelled: boolean) => void;\n  submitEdit?: TableProps.SubmitEditFunction<ItemType>;\n  ariaLabels: TableProps['ariaLabels'];\n}\n\nfunction TableCellEditable<ItemType>({\n  className,\n  item,\n  column,\n  isEditing,\n  onEditStart,\n  onEditEnd,\n  submitEdit,\n  ariaLabels,\n  isVisualRefresh,\n  successfulEdit = false,\n  ...rest\n}: TableBodyCellProps<ItemType>) {\n  const i18n = useInternalI18n('table');\n  const editActivateRef = useRef<HTMLButtonElement>(null);\n  const tdNativeAttributes = {\n    'data-inline-editing-active': isEditing.toString(),\n  };\n  const isFocusMoveNeededRef = useRef(false);\n\n  useEffect(() => {\n    if (!isEditing && editActivateRef.current && isFocusMoveNeededRef.current) {\n      isFocusMoveNeededRef.current = false;\n      editActivateRef.current.focus();\n    }\n  }, [isEditing]);\n  // To improve the initial page render performance we only show the edit icon when necessary.\n  const [hasHover, setHasHover] = useState(false);\n  const [hasFocus, setHasFocus] = useState(false);\n  const showIcon = hasHover || hasFocus;\n\n  return (\n    <TableTdElement\n      {...rest}\n      nativeAttributes={tdNativeAttributes as TableTdElementProps['nativeAttributes']}\n      className={clsx(\n        className,\n        styles['body-cell-editable'],\n        isEditing && styles['body-cell-edit-active'],\n        successfulEdit && styles['body-cell-has-success'],\n        isVisualRefresh && styles['is-visual-refresh']\n      )}\n      onClick={!isEditing ? onEditStart : undefined}\n      onMouseEnter={() => setHasHover(true)}\n      onMouseLeave={() => setHasHover(false)}\n    >\n      {isEditing ? (\n        <InlineEditor\n          ariaLabels={ariaLabels}\n          column={column}\n          item={item}\n          onEditEnd={e => {\n            isFocusMoveNeededRef.current = true;\n            onEditEnd(e);\n          }}\n          submitEdit={submitEdit ?? submitHandlerFallback}\n        />\n      ) : (\n        <>\n          {column.cell(item)}\n          {successfulEdit && (\n            <>\n              <span\n                className={styles['body-cell-success']}\n                aria-label={ariaLabels?.successfulEditLabel?.(column)}\n                role=\"img\"\n              >\n                <Icon name=\"status-positive\" variant=\"success\" />\n              </span>\n              <LiveRegion>\n                {i18n('ariaLabels.successfulEditLabel', ariaLabels?.successfulEditLabel?.(column))}\n              </LiveRegion>\n            </>\n          )}\n          <button\n            className={styles['body-cell-editor']}\n            aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n            ref={editActivateRef}\n            onFocus={() => setHasFocus(true)}\n            onBlur={() => setHasFocus(false)}\n          >\n            {showIcon && <Icon name=\"edit\" />}\n          </button>\n        </>\n      )}\n    </TableTdElement>\n  );\n}\n\nexport function TableBodyCell<ItemType>({\n  isEditable,\n  ...rest\n}: TableBodyCellProps<ItemType> & { isEditable: boolean }) {\n  if (isEditable || rest.isEditing) {\n    return <TableCellEditable {...rest} />;\n  }\n  const { column, item } = rest;\n  return <TableTdElement {...rest}>{column.cell(item)}</TableTdElement>;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport styles from './styles.css.js';\nimport { getStickyClassNames } from '../utils';\nimport { StickyColumnsModel, useStickyCellStyles } from '../sticky-columns/use-sticky-columns.js';\n\nexport interface TableTdElementProps {\n  className?: string;\n  style?: React.CSSProperties;\n  wrapLines: boolean | undefined;\n  isRowHeader?: boolean;\n  isFirstRow: boolean;\n  isLastRow: boolean;\n  isSelected: boolean;\n  isNextSelected: boolean;\n  isPrevSelected: boolean;\n  nativeAttributes?: Omit<\n    React.TdHTMLAttributes<HTMLTableCellElement> | React.ThHTMLAttributes<HTMLTableCellElement>,\n    'style' | 'className' | 'onClick'\n  >;\n  onClick?: () => void;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  children?: React.ReactNode;\n  isEvenRow?: boolean;\n  stripedRows?: boolean;\n  hasSelection?: boolean;\n  hasFooter?: boolean;\n  columnId: PropertyKey;\n  stickyState: StickyColumnsModel;\n  isVisualRefresh?: boolean;\n}\n\nexport const TableTdElement = React.forwardRef<HTMLTableCellElement, TableTdElementProps>(\n  (\n    {\n      className,\n      style,\n      children,\n      wrapLines,\n      isRowHeader,\n      isFirstRow,\n      isLastRow,\n      isSelected,\n      isNextSelected,\n      isPrevSelected,\n      nativeAttributes,\n      onClick,\n      onMouseEnter,\n      onMouseLeave,\n      isEvenRow,\n      stripedRows,\n      isVisualRefresh,\n      hasSelection,\n      hasFooter,\n      columnId,\n      stickyState,\n    },\n    ref\n  ) => {\n    let Element: 'th' | 'td' = 'td';\n    if (isRowHeader) {\n      Element = 'th';\n      nativeAttributes = {\n        ...nativeAttributes,\n        scope: 'row',\n      };\n    }\n\n    const stickyStyles = useStickyCellStyles({\n      stickyColumns: stickyState,\n      columnId,\n      getClassName: props => getStickyClassNames(styles, props),\n    });\n    return (\n      <Element\n        style={{ ...style, ...stickyStyles.style }}\n        className={clsx(\n          className,\n          styles['body-cell'],\n          wrapLines && styles['body-cell-wrap'],\n          isFirstRow && styles['body-cell-first-row'],\n          isLastRow && styles['body-cell-last-row'],\n          isSelected && styles['body-cell-selected'],\n          isNextSelected && styles['body-cell-next-selected'],\n          isPrevSelected && styles['body-cell-prev-selected'],\n          !isEvenRow && stripedRows && styles['body-cell-shaded'],\n          stripedRows && styles['has-striped-rows'],\n          isVisualRefresh && styles['is-visual-refresh'],\n          hasSelection && styles['has-selection'],\n          hasFooter && styles['has-footer'],\n          stickyStyles.className\n        )}\n        onClick={onClick}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        ref={node => {\n          if (node) {\n            stickyStyles.ref(node);\n            if (ref) {\n              (ref as React.MutableRefObject<HTMLTableCellElement>).current = node;\n            }\n          }\n        }}\n        {...nativeAttributes}\n      >\n        {children}\n      </Element>\n    );\n  }\n);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport Button from '../../button/internal';\nimport FormField from '../../form-field/internal';\nimport SpaceBetween from '../../space-between/internal';\nimport { useClickAway } from './click-away';\nimport { TableProps } from '../interfaces';\nimport styles from './styles.css.js';\nimport { Optional } from '../../internal/types';\nimport FocusLock, { FocusLockRef } from '../../internal/components/focus-lock';\nimport LiveRegion from '../../internal/components/live-region';\nimport { useInternalI18n } from '../../internal/i18n/context';\n\n// A function that does nothing\nconst noop = () => undefined;\n\ninterface InlineEditorProps<ItemType> {\n  ariaLabels: TableProps['ariaLabels'];\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n  onEditEnd: (cancelled: boolean) => void;\n  submitEdit: TableProps.SubmitEditFunction<ItemType>;\n  __onRender?: () => void;\n}\n\nexport function InlineEditor<ItemType>({\n  ariaLabels,\n  item,\n  column,\n  onEditEnd,\n  submitEdit,\n  __onRender,\n}: InlineEditorProps<ItemType>) {\n  const [currentEditLoading, setCurrentEditLoading] = useState(false);\n  const [currentEditValue, setCurrentEditValue] = useState<Optional<any>>();\n  const i18n = useInternalI18n('table');\n\n  const focusLockRef = useRef<FocusLockRef>(null);\n\n  const cellContext = {\n    currentValue: currentEditValue,\n    setValue: setCurrentEditValue,\n  };\n\n  function finishEdit(cancel = false) {\n    if (!cancel) {\n      setCurrentEditValue(undefined);\n    }\n    onEditEnd(cancel);\n  }\n\n  async function onSubmitClick(evt: React.FormEvent) {\n    evt.preventDefault();\n    if (currentEditValue === undefined) {\n      finishEdit();\n      return;\n    }\n\n    setCurrentEditLoading(true);\n    try {\n      await submitEdit(item, column, currentEditValue);\n      setCurrentEditLoading(false);\n      finishEdit();\n    } catch (e) {\n      setCurrentEditLoading(false);\n      focusLockRef.current?.focusFirst();\n    }\n  }\n\n  function onCancel() {\n    if (currentEditLoading) {\n      return;\n    }\n    finishEdit(true);\n  }\n\n  function handleEscape(event: React.KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      onCancel();\n    }\n  }\n\n  const clickAwayRef = useClickAway(onCancel);\n\n  useEffect(() => {\n    if (__onRender) {\n      const timer = setTimeout(__onRender, 1);\n      return () => clearTimeout(timer);\n    }\n  }, [__onRender]);\n\n  // asserting non-undefined editConfig here because this component is unreachable otherwise\n  const {\n    ariaLabel = undefined,\n    validation = noop,\n    errorIconAriaLabel,\n    constraintText,\n    editingCell,\n  } = column.editConfig!;\n\n  return (\n    <FocusLock restoreFocus={true} ref={focusLockRef}>\n      <div\n        role=\"dialog\"\n        ref={clickAwayRef}\n        aria-label={ariaLabels?.activateEditLabel?.(column, item)}\n        onKeyDown={handleEscape}\n      >\n        <form onSubmit={onSubmitClick} className={styles['body-cell-editor-form']}>\n          <FormField\n            stretch={true}\n            label={ariaLabel}\n            constraintText={constraintText}\n            __hideLabel={true}\n            __disableGutters={true}\n            i18nStrings={{ errorIconAriaLabel }}\n            errorText={validation(item, currentEditValue)}\n          >\n            <div className={styles['body-cell-editor-row']}>\n              {editingCell(item, cellContext)}\n              <span className={styles['body-cell-editor-controls']}>\n                <SpaceBetween direction=\"horizontal\" size=\"xxs\">\n                  {!currentEditLoading ? (\n                    <Button\n                      ariaLabel={ariaLabels?.cancelEditLabel?.(column)}\n                      formAction=\"none\"\n                      iconName=\"close\"\n                      variant=\"inline-icon\"\n                      onClick={onCancel}\n                    />\n                  ) : null}\n                  <Button\n                    ariaLabel={ariaLabels?.submitEditLabel?.(column)}\n                    formAction=\"submit\"\n                    iconName=\"check\"\n                    variant=\"inline-icon\"\n                    loading={currentEditLoading}\n                  />\n                </SpaceBetween>\n                <LiveRegion>\n                  {currentEditLoading\n                    ? i18n('ariaLabels.submittingEditText', ariaLabels?.submittingEditText?.(column))\n                    : ''}\n                </LiveRegion>\n              </span>\n            </div>\n          </FormField>\n        </form>\n      </div>\n    </FocusLock>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useRef } from 'react';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { nodeBelongs } from '../../internal/utils/node-belongs';\n\nexport function useClickAway(onClick: () => void) {\n  const awayRef = useRef<any>(null);\n  const onClickStable = useStableEventHandler(onClick);\n  useEffect(() => {\n    function handleClick(event: Event) {\n      if (!nodeBelongs(awayRef.current, event.target as HTMLElement)) {\n        onClickStable();\n      }\n    }\n    // contains returns wrong result if the next render would remove the element\n    // but capture phase happens before the render, so returns correct result\n    // Ref: https://github.com/facebook/react/issues/20325\n    document.addEventListener('click', handleClick, { capture: true });\n    return () => document.removeEventListener('click', handleClick, { capture: true });\n  }, [onClickStable]);\n  return awayRef;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fireNonCancelableEvent, fireCancelableEvent } from '../internal/events/index';\nimport { TableProps } from './interfaces';\nimport { findUpUntil } from '../internal/utils/dom';\nimport styles from './styles.css.js';\n\nexport function useRowEvents<T>({ onRowClick, onRowContextMenu }: Pick<TableProps, 'onRowClick' | 'onRowContextMenu'>) {\n  const onRowClickHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const tableCell = findUpUntil(event.target as HTMLElement, element => element.tagName.toLowerCase() === 'td');\n    if (!tableCell || !tableCell.classList.contains(styles['selection-control'])) {\n      const details: TableProps.OnRowClickDetail<T> = { rowIndex, item };\n      fireNonCancelableEvent(onRowClick, details);\n    }\n  };\n  const onRowContextMenuHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const details: TableProps.OnRowContextMenuDetail<T> = {\n      rowIndex,\n      item,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    };\n    fireCancelableEvent(onRowContextMenu, details, event);\n  };\n\n  return {\n    onRowClickHandler: onRowClick && onRowClickHandler,\n    onRowContextMenuHandler: onRowContextMenu && onRowContextMenuHandler,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { RefObject, useRef } from 'react';\nimport { supportsStickyPosition } from '../../utils/dom';\n\n/**\n * useScrollSync returns scroll event handler to be attached to synchronized scroll elements.\n *\n * For example\n *    const handleScroll = useScrollSync([ref1, ref2]);\n *    <div ref={ref1} onScroll={handleScroll}/>\n *    <div ref={ref2} onScroll={handleScroll}/>\n */\nexport function useScrollSync(refs: Array<RefObject<any>>, disabled = !supportsStickyPosition()) {\n  const activeElement = useRef<HTMLElement | null>(null);\n  const onScroll = (event: React.UIEvent) => {\n    const targetElement = event.target as HTMLElement;\n    // remembers the first element that fires onscroll to align with other elements against it\n    if (targetElement && (activeElement.current === null || activeElement.current === targetElement)) {\n      requestAnimationFrame(() => {\n        activeElement.current = targetElement;\n        refs.forEach(ref => {\n          const element = ref.current;\n          if (element && element !== targetElement) {\n            element.scrollLeft = targetElement.scrollLeft;\n          }\n        });\n        // unblock the ability to scroll the synced elements\n        requestAnimationFrame(() => {\n          activeElement.current = null;\n        });\n      });\n    }\n  };\n\n  return !disabled ? onScroll : undefined;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { TableProps } from './interfaces';\nimport Thead, { InteractiveComponent, TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocus(element: InteractiveComponent | null): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  contentDensity?: 'comfortable' | 'compact';\n  tableHasHeader?: boolean;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n    contentDensity,\n  }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedComponent, setFocusedComponent] = useState<InteractiveComponent | null>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({\n    scrollToTop,\n    scrollToRow,\n    setFocus: setFocusedComponent,\n  }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n        [styles['table-has-header']]: tableHasHeader,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table\n        className={clsx(\n          styles.table,\n          styles['table-layout-fixed'],\n          contentDensity === 'compact' && getVisualContextClassname('compact-table')\n        )}\n        role=\"table\"\n        ref={secondaryTableRef}\n      >\n        <Thead\n          ref={secondaryTheadRef}\n          sticky={true}\n          stuck={isStuck}\n          focusedComponent={focusedComponent}\n          {...theadProps}\n        />\n      </table>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, RefObject, useCallback } from 'react';\nimport { useResizeObserver } from '../internal/hooks/container-queries/use-resize-observer';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\nimport { useMobile } from '../internal/hooks/use-mobile';\n\nfunction syncSizes(from: HTMLElement, to: HTMLElement) {\n  const fromCells = Array.prototype.slice.apply(from.children);\n  const toCells = Array.prototype.slice.apply(to.children);\n  for (let i = 0; i < fromCells.length; i++) {\n    let width = fromCells[i].style.width;\n    // use auto if it is set by resizable columns or real size otherwise\n    if (width !== 'auto') {\n      width = `${fromCells[i].offsetWidth}px`;\n    }\n    toCells[i].style.width = width;\n  }\n}\n\nexport const useStickyHeader = (\n  tableRef: RefObject<HTMLElement>,\n  theadRef: RefObject<HTMLElement>,\n  secondaryTheadRef: RefObject<HTMLElement>,\n  secondaryTableRef: RefObject<HTMLElement>,\n  tableWrapperRef: RefObject<HTMLElement>\n) => {\n  const isMobile = useMobile();\n  // Sync the sizes of the column header copies in the sticky header with the originals\n  const syncColumnHeaderWidths = useCallback(() => {\n    if (\n      tableRef.current &&\n      theadRef.current &&\n      secondaryTheadRef.current &&\n      secondaryTableRef.current &&\n      tableWrapperRef.current\n    ) {\n      syncSizes(theadRef.current, secondaryTheadRef.current);\n\n      // Using the tableRef offsetWidth instead of the theadRef because in VR\n      // the tableRef adds extra padding to the table and by default the theadRef will have a width\n      // without the padding and will make the sticky header width incorrect.\n      secondaryTableRef.current.style.width = `${tableRef.current.offsetWidth}px`;\n\n      tableWrapperRef.current.style.marginTop = `-${theadRef.current.offsetHeight}px`;\n    }\n  }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef, tableRef]);\n  useLayoutEffect(() => {\n    syncColumnHeaderWidths();\n  });\n  useResizeObserver(theadRef, syncColumnHeaderWidths);\n  const scrollToTop = () => {\n    if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n      const scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n      if (scrollDist > 0) {\n        scrollUpBy(scrollDist, tableWrapperRef.current);\n      }\n    }\n  };\n  const { scrollToItem } = stickyScrolling(tableWrapperRef, secondaryTheadRef);\n  const scrollToRow = (itemNode: HTMLElement | null) => {\n    if (!isMobile) {\n      scrollToItem(itemNode);\n    }\n  };\n  return { scrollToRow, scrollToTop };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\n/**\n * @param containerRef ref to surrounding container with sticky element\n * @param stickyRef ref to sticky element scrolled inside of containerRef\n * @param containerOffset offset between header and container\n *                        originating borders or paddings\n */\nexport default function stickyScrolling(\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  stickyRef: React.MutableRefObject<HTMLElement | null>\n) {\n  const scrollToTop = () => {\n    if (!containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  const scrollToItem = (item: HTMLElement | null) => {\n    if (!item || !containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const stickyBottom = stickyRef.current.getBoundingClientRect().bottom;\n    const scrollingOffset = stickyBottom - item.getBoundingClientRect().top;\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  return {\n    scrollToTop,\n    scrollToItem,\n  };\n}\n\n/**\n * Calculates the scrolling offset between container and\n * sticky element with container offset caused by border\n * or padding\n * @param container\n * @param sticky element inside of container\n * @param containerOffset caused by borders or paddings\n */\nexport function calculateScrollingOffset(container: HTMLElement, sticky: HTMLElement) {\n  const stickyRect = sticky.getBoundingClientRect();\n  const containerRect = container.getBoundingClientRect();\n  return stickyRect.top - containerRect.top;\n}\n\n/**\n * Scrolls suitable parent of container up by amount of pixels\n * @param amount pixels to be scrolled up\n * @param container used to determine next parent element for scrolling\n */\nexport function scrollUpBy(amount: number, container: HTMLElement) {\n  const parent = getOverflowParents(container);\n  if (parent.length) {\n    // Take next overflow parent in stack\n    parent[0].scrollTop -= amount;\n  } else {\n    window.scrollTo({ top: window.pageYOffset - amount });\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { createSingletonHandler } from './use-singleton-handler';\n\nconst useEventListenersSingleton = createSingletonHandler<Node | null>(setTarget => {\n  function handleMouseDown(event: MouseEvent) {\n    setTarget(event.target as Node);\n  }\n  function handleKeyDown() {\n    setTarget(null);\n  }\n  window.addEventListener('mousedown', handleMouseDown);\n  window.addEventListener('keydown', handleKeyDown);\n  return () => {\n    window.removeEventListener('mousedown', handleMouseDown);\n    window.removeEventListener('keydown', handleKeyDown);\n  };\n});\n\n/**\n * Captures last mouse down target and clears it on keydown.\n * @returns a callback to get the last detected mouse down target.\n */\nexport default function useMouseDownTarget() {\n  const mouseDownTargetRef = useRef<null | Node>(null);\n  useEventListenersSingleton(target => {\n    mouseDownTargetRef.current = target;\n  });\n  return () => mouseDownTargetRef.current;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { RefObject, useCallback, useEffect, useMemo } from 'react';\nimport { scrollElementIntoView } from '../internal/utils/scrollable-containers';\nimport { TableProps } from './interfaces';\n\nfunction iterateTableCells<T extends HTMLElement>(\n  table: T,\n  func: (cell: HTMLTableCellElement, rowIndex: number, columnIndex: number) => void\n) {\n  table.querySelectorAll('tr').forEach((row: HTMLTableRowElement, rowIndex: number) => {\n    row.querySelectorAll('td').forEach((cell, cellIndex) => {\n      func(cell, rowIndex, cellIndex);\n    });\n  });\n}\n\n/**\n * This hook is used to navigate between table cells using the keyboard arrow keys.\n * All the functionality is implemented in the hook, so the table component does not\n * need to implement any keyboard event handlers.\n * @param enable - Toggle functionality of the hook\n * @param tableRoot - A ref to a table container. Ideally the root element of the table (<table>); tbody is also acceptable.\n * @param columnDefinitions - The column definitions for the table.\n * @param numRows - The number of rows in the table.\n */\nfunction useTableFocusNavigation<T extends { editConfig?: TableProps.EditConfig<any> }>(\n  selectionType: TableProps['selectionType'],\n  tableRoot: RefObject<HTMLTableElement>,\n  columnDefinitions: Readonly<T[]>,\n  numRows: number\n) {\n  const focusableColumns = useMemo(() => {\n    const cols = columnDefinitions.map(column => !!column.editConfig);\n    if (selectionType) {\n      cols.unshift(false);\n    }\n    return cols;\n  }, [columnDefinitions, selectionType]);\n\n  const maxColumnIndex = focusableColumns.length - 1;\n  const minColumnIndex = selectionType ? 1 : 0;\n\n  const focusCell = useCallback(\n    (rowIndex: number, columnIndex: number) => {\n      if (tableRoot?.current) {\n        iterateTableCells(tableRoot.current, (cell, rIndex, cIndex) => {\n          if (rIndex === rowIndex && cIndex === columnIndex) {\n            const editButton = cell.querySelector('button:last-child') as HTMLButtonElement | null;\n\n            if (editButton) {\n              editButton.focus?.();\n              scrollElementIntoView(editButton);\n            }\n          }\n        });\n      }\n    },\n    [tableRoot]\n  );\n\n  const shiftFocus = useCallback(\n    (vertical: -1 | 0 | 1, horizontal: -1 | 0 | 1) => {\n      const focusedCell = tableRoot.current?.querySelector<HTMLTableCellElement>('td:focus-within');\n      if (!focusedCell) {\n        return;\n      }\n\n      const columnIndex = focusedCell.cellIndex;\n      const rowIndex = (focusedCell.parentElement as HTMLTableRowElement).rowIndex;\n\n      let newRowIndex = rowIndex;\n      let newColumnIndex = columnIndex;\n\n      if (vertical !== 0) {\n        newRowIndex = Math.min(numRows, Math.max(rowIndex + vertical, 0));\n      }\n\n      if (horizontal !== 0) {\n        while (newColumnIndex <= maxColumnIndex && newColumnIndex >= minColumnIndex) {\n          newColumnIndex += horizontal;\n          if (focusableColumns[newColumnIndex]) {\n            break;\n          }\n        }\n      }\n\n      if ((rowIndex !== newRowIndex || columnIndex !== newColumnIndex) && tableRoot.current) {\n        focusCell(newRowIndex, newColumnIndex);\n      }\n    },\n    [focusCell, focusableColumns, maxColumnIndex, minColumnIndex, numRows, tableRoot]\n  );\n\n  const handleArrowKeyEvents = useCallback(\n    (event: KeyboardEvent) => {\n      const abort =\n        !!tableRoot.current?.querySelector('[data-inline-editing-active = \"true\"]') ||\n        !document.activeElement?.closest('[data-inline-editing-active]');\n\n      if (abort) {\n        return;\n      }\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          shiftFocus(-1, 0);\n          break;\n        case 'ArrowDown':\n          event.preventDefault();\n          shiftFocus(1, 0);\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          shiftFocus(0, -1);\n          break;\n        case 'ArrowRight':\n          event.preventDefault();\n          shiftFocus(0, 1);\n          break;\n        // istanbul ignore next (default case = do nothing, not testable)\n        default:\n          return;\n      }\n    },\n    [shiftFocus, tableRoot]\n  );\n\n  useEffect(() => {\n    if (!tableRoot.current) {\n      return;\n    }\n\n    const tableElement = tableRoot.current;\n    tableRoot.current.addEventListener('keydown', handleArrowKeyEvents);\n\n    return () => tableElement && tableElement.removeEventListener('keydown', handleArrowKeyEvents);\n  }, [focusableColumns, handleArrowKeyEvents, tableRoot]);\n}\n\nexport default useTableFocusNavigation;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef } from 'react';\nimport { useStickyScrollbar } from './use-sticky-scrollbar';\nimport { useMergeRefs } from '../../internal/hooks/use-merge-refs';\nimport { useAppLayoutContext } from '../../internal/context/app-layout-context';\nimport styles from './styles.css.js';\n\ninterface StickyScrollbarProps {\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n}\n\nexport default forwardRef(StickyScrollbar);\n\nfunction StickyScrollbar({ wrapperRef, tableRef, onScroll }: StickyScrollbarProps, ref: React.Ref<HTMLDivElement>) {\n  const scrollbarRef = React.useRef<HTMLDivElement>(null);\n  const scrollbarContentRef = React.useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(ref, scrollbarRef);\n\n  /**\n   * Use the appropriate AppLayout context (Classic or Visual Refresh) to determine\n   * the offsetBottom value to be used in the useStickyScrollbar hook.\n   */\n  const { stickyOffsetBottom } = useAppLayoutContext();\n\n  useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, stickyOffsetBottom);\n\n  return (\n    <div ref={mergedRef} className={styles['sticky-scrollbar']} onScroll={onScroll}>\n      <div ref={scrollbarContentRef} className={styles['sticky-scrollbar-content']} />\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { RefObject, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\nimport { getContainingBlock, supportsStickyPosition } from '../../internal/utils/dom';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers';\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\n\nexport const updatePosition = (\n  tableEl: HTMLElement | null,\n  wrapperEl: HTMLElement | null,\n  scrollbarEl: HTMLElement | null,\n  scrollbarContentEl: HTMLElement | null,\n  hasContainingBlock: boolean,\n  consideredFooterHeight: number\n) => {\n  if (!tableEl || !scrollbarEl || !wrapperEl) {\n    return;\n  }\n\n  const { width: tableWidth } = tableEl.getBoundingClientRect();\n  const { width: wrapperWidth } = wrapperEl.getBoundingClientRect();\n\n  // using 15 px as a height of transparent scrollbar on mac\n  const scrollbarHeight = browserScrollbarSize().height;\n  const areaIsScrollable = tableWidth > wrapperWidth;\n\n  if (!areaIsScrollable) {\n    scrollbarEl.classList.remove(styles['sticky-scrollbar-visible']);\n  } else {\n    // when scrollbar is not displayed scrollLeft property cannot be set by useScrollSync\n    // that's why syncing it separately\n    if (!scrollbarEl.classList.contains(styles['sticky-scrollbar-visible'])) {\n      requestAnimationFrame(() => {\n        scrollbarEl.scrollLeft = wrapperEl.scrollLeft;\n      });\n    }\n\n    scrollbarEl.classList.add(styles['sticky-scrollbar-visible']);\n    if (!scrollbarHeight) {\n      /* istanbul ignore next: covered by screenshot tests */\n      scrollbarEl.classList.add(styles['sticky-scrollbar-native-invisible']);\n    }\n  }\n\n  if (scrollbarHeight && scrollbarEl && scrollbarContentEl) {\n    scrollbarEl.style.height = `${scrollbarHeight}px`;\n    scrollbarContentEl.style.height = `${scrollbarHeight}px`;\n  }\n\n  if (tableEl && wrapperEl && scrollbarContentEl && scrollbarEl) {\n    const wrapperElRect = wrapperEl.getBoundingClientRect();\n    const tableElRect = tableEl.getBoundingClientRect();\n    scrollbarEl.style.width = `${wrapperElRect.width}px`;\n    scrollbarContentEl.style.width = `${tableElRect.width}px`;\n\n    // when using sticky scrollbars in containers\n    // we agreed to ignore dynamic bottom calculations for footer overlap\n    scrollbarEl.style.bottom = hasContainingBlock ? '0px' : `${consideredFooterHeight}px`;\n  }\n};\n\nexport function useStickyScrollbar(\n  scrollbarRef: RefObject<HTMLDivElement>,\n  scrollbarContentRef: RefObject<HTMLDivElement>,\n  tableRef: RefObject<HTMLTableElement>,\n  wrapperRef: RefObject<HTMLDivElement>,\n  footerHeight: number\n) {\n  // We don't take into account containing-block calculations because that would\n  // unnecessarily overcomplicate the position logic. For now, we assume that a\n  // containing block, if present, is below the app layout and above the overflow\n  // parent, which is a pretty safe assumption.\n  const [hasContainingBlock, setHasContainingBlock] = useState(false);\n  // We don't take into account footer height when the overflow parent is child of document body.\n  // Because in this case, we think the footer is outside the overflow parent.\n  const [hasOverflowParent, setHasOverflowParent] = useState(false);\n  const consideredFooterHeight = hasContainingBlock || hasOverflowParent ? 0 : footerHeight;\n\n  const wrapperEl = wrapperRef.current;\n  useEffect(() => {\n    if (wrapperEl && supportsStickyPosition()) {\n      setHasContainingBlock(!!getContainingBlock(wrapperEl));\n      setHasOverflowParent(!!getOverflowParents(wrapperEl)[0]);\n    }\n  }, [wrapperEl]);\n\n  // Update scrollbar position wrapper or table size change.\n  useEffect(() => {\n    if (supportsStickyPosition() && wrapperRef.current && tableRef.current) {\n      const observer = new ResizeObserver(() => {\n        if (scrollbarContentRef.current) {\n          updatePosition(\n            tableRef.current,\n            wrapperRef.current,\n            scrollbarRef.current,\n            scrollbarContentRef.current,\n            hasContainingBlock,\n            consideredFooterHeight\n          );\n        }\n      });\n      // Scrollbar width must be in sync with wrapper width.\n      observer.observe(wrapperRef.current);\n      // Scrollbar content width must be in sync with table width.\n      observer.observe(tableRef.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [scrollbarContentRef, scrollbarRef, tableRef, wrapperRef, consideredFooterHeight, hasContainingBlock]);\n\n  // Update scrollbar position when window resizes (vertically).\n  useEffect(() => {\n    if (supportsStickyPosition()) {\n      const resizeHandler = () => {\n        updatePosition(\n          tableRef.current,\n          wrapperRef.current,\n          scrollbarRef.current,\n          scrollbarContentRef.current,\n          hasContainingBlock,\n          consideredFooterHeight\n        );\n      };\n      resizeHandler();\n      window.addEventListener('resize', resizeHandler);\n      return () => {\n        window.removeEventListener('resize', resizeHandler);\n      };\n    }\n  }, [tableRef, wrapperRef, scrollbarRef, scrollbarContentRef, hasContainingBlock, consideredFooterHeight]);\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"sticky-scrollbar\": \"awsui_sticky-scrollbar_faqt8_1us5r_5\",\n  \"sticky-scrollbar-content\": \"awsui_sticky-scrollbar-content_faqt8_1us5r_15\",\n  \"sticky-scrollbar-visible\": \"awsui_sticky-scrollbar-visible_faqt8_1us5r_18\",\n  \"sticky-scrollbar-native-invisible\": \"awsui_sticky-scrollbar-native-invisible_faqt8_1us5r_21\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { TableProps } from './interfaces';\n\nexport function checkColumnWidths(columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>) {\n  for (const column of columnDefinitions) {\n    checkProperty(column, 'minWidth');\n    checkProperty(column, 'width');\n  }\n}\n\nfunction checkProperty(column: TableProps.ColumnDefinition<any>, name: 'width' | 'minWidth') {\n  const value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce(\n      'Table',\n      `resizableColumns feature requires ${name} property to be a number, got ${value}. The component may work incorrectly.`\n    );\n  }\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "React", "import_react", "import_react", "styles_css_default", "React", "internal_default", "styles_css_default", "import_react", "styles_css_default", "allDisabled", "allEnabledSelected", "item", "selectedItems", "import_react", "styles_css_default", "import_react", "styles_css_default", "import_react", "column", "columnWidths", "React", "styles_css_default", "React", "headerCell", "import_react", "import_react", "_a", "_b", "styles_css_default", "React", "React", "selectionColumnId", "styles_css_default", "styles_css_default", "import_react", "import_react", "React", "styles_css_default", "import_react", "import_react", "_a", "React", "styles_css_default", "internal_default", "React", "styles_css_default", "import_react", "import_react", "import_react", "React", "import_react", "import_react", "import_react", "import_react", "styles_css_default", "styles_css_default", "React", "styles_css_default", "React", "_a", "submitEdit", "internal_default", "React", "internal_default"]
}

{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/internal/components/checkbox-icon/internal/components/checkbox-icon/index.tsx", "../../@cloudscape-design/components/internal/components/checkbox-icon/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport styles from './styles.css.js';\n\nexport interface CheckboxIconProps extends BaseComponentProps {\n  checked?: boolean;\n  indeterminate?: boolean;\n  disabled?: boolean;\n}\nexport interface Dimension {\n  viewBox: string;\n  indeterminate: string;\n  checked: string;\n  xy: number;\n  r: number;\n  size: number;\n}\n\n// Can't use css variables for svg attributes\nexport const dimensionsByTheme: Record<NonNullable<'default' | 'refresh'>, Dimension> = {\n  default: {\n    viewBox: '0 0 14 14',\n    indeterminate: '2.5,7 11.5,7',\n    checked: '2.5,7 6,10 11,3',\n    xy: 0.5,\n    r: 1.5,\n    size: 13,\n  },\n  refresh: {\n    viewBox: '0 0 16 16',\n    indeterminate: '3.5,8 12.5,8',\n    checked: '3.5,8 7,11 12,4',\n    xy: 1,\n    r: 2,\n    size: 14,\n  },\n};\n\nconst CheckboxIcon = ({ checked, indeterminate, disabled = false, ...restProps }: CheckboxIconProps) => {\n  const baseProps = getBaseProps(restProps);\n  const theme = useVisualRefresh() ? 'refresh' : 'default';\n  const dimensions = dimensionsByTheme[theme];\n  return (\n    <svg className={styles.root} viewBox={dimensions.viewBox} aria-hidden=\"true\" focusable=\"false\" {...baseProps}>\n      <rect\n        className={clsx(styles['styled-box'], {\n          [styles['styled-box-checked']]: checked,\n          [styles['styled-box-indeterminate']]: indeterminate,\n          [styles['styled-box-disabled']]: disabled,\n        })}\n        x={dimensions.xy}\n        y={dimensions.xy}\n        rx={dimensions.r}\n        ry={dimensions.r}\n        width={dimensions.size}\n        height={dimensions.size}\n      />\n      {checked || indeterminate ? (\n        <polyline\n          className={clsx(styles['styled-line'], { [styles['styled-line-disabled']]: disabled })}\n          points={indeterminate ? dimensions.indeterminate : dimensions.checked}\n        />\n      ) : null}\n    </svg>\n  );\n};\n\nexport default CheckboxIcon;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1fn7j_dza21_93\",\n  \"styled-box\": \"awsui_styled-box_1fn7j_dza21_100\",\n  \"styled-box-checked\": \"awsui_styled-box-checked_1fn7j_dza21_106\",\n  \"styled-box-indeterminate\": \"awsui_styled-box-indeterminate_1fn7j_dza21_106\",\n  \"styled-box-disabled\": \"awsui_styled-box-disabled_1fn7j_dza21_110\",\n  \"styled-line\": \"awsui_styled-line_1fn7j_dza21_124\",\n  \"styled-line-disabled\": \"awsui_styled-line-disabled_1fn7j_dza21_129\"\n};\n  "],
  "mappings": ";;;;;;;;;;;;AAGA,mBAAkB;;;ACFd,OAAO;AACP,IAAO,qBAAQ;AAAA,EACjB,QAAQ;AAAA,EACR,cAAc;AAAA,EACd,sBAAsB;AAAA,EACtB,4BAA4B;AAAA,EAC5B,uBAAuB;AAAA,EACvB,eAAe;AAAA,EACf,wBAAwB;AAC1B;;;ADaO,IAAM,oBAA2E;EACtF,SAAS;IACP,SAAS;IACT,eAAe;IACf,SAAS;IACT,IAAI;IACJ,GAAG;IACH,MAAM;;EAER,SAAS;IACP,SAAS;IACT,eAAe;IACf,SAAS;IACT,IAAI;IACJ,GAAG;IACH,MAAM;;;AAIV,IAAM,eAAe,CAAC,OAAiF;MAAjF,EAAE,SAAS,eAAe,WAAW,MAAK,IAAA,IAAK,YAAS,OAAA,IAAxD,CAAA,WAAA,iBAAA,UAAA,CAA0D;AAC9E,QAAM,YAAY,aAAa,SAAS;AACxC,QAAM,QAAQ,iBAAgB,IAAK,YAAY;AAC/C,QAAM,aAAa,kBAAkB;AACrC,SACE,aAAAA,QAAA;IAAA;IAAA,OAAA,OAAA,EAAK,WAAW,mBAAO,MAAM,SAAS,WAAW,SAAO,eAAc,QAAO,WAAU,QAAO,GAAK,SAAS;IAC1G,aAAAA,QAAA,cAAA,QAAA,EACE,WAAW,eAAK,mBAAO,eAAe;MACpC,CAAC,mBAAO,wBAAwB;MAChC,CAAC,mBAAO,8BAA8B;MACtC,CAAC,mBAAO,yBAAyB;KAClC,GACD,GAAG,WAAW,IACd,GAAG,WAAW,IACd,IAAI,WAAW,GACf,IAAI,WAAW,GACf,OAAO,WAAW,MAClB,QAAQ,WAAW,KAAI,CAAA;IAExB,WAAW,gBACV,aAAAA,QAAA,cAAA,YAAA,EACE,WAAW,eAAK,mBAAO,gBAAgB,EAAE,CAAC,mBAAO,0BAA0B,SAAQ,CAAE,GACrF,QAAQ,gBAAgB,WAAW,gBAAgB,WAAW,QAAO,CAAA,IAErE;EAAI;AAGd;AAEA,IAAA,wBAAe;",
  "names": ["React"]
}

import {
  button_default
} from "./chunk-KTDZRZIH.js";
import {
  SpaceBetween
} from "./chunk-6OQX3WS5.js";
import {
  useCollection
} from "./chunk-JCHLL2GQ.js";
import {
  TopNavigation,
  internal_default as internal_default4,
  useEffectOnUpdate
} from "./chunk-AXBYXQ4X.js";
import {
  CollectionPreferences,
  ColumnLayout,
  InternalModal,
  checkControlled,
  internal_default as internal_default7,
  internal_default2 as internal_default8,
  useRadioGroupForwardFocus
} from "./chunk-C7WOBM2X.js";
import {
  Header
} from "./chunk-2WS5J77T.js";
import {
  InternalPagination,
  Pagination
} from "./chunk-QJPJUNM6.js";
import {
  AsyncStore,
  SelectionControl,
  ToolsHeader,
  focusMarkers,
  getItemKey,
  internal_default as internal_default9,
  nodeBelongs,
  stickyScrolling,
  table_default,
  useFocusMove,
  useMouseDownTarget,
  usePrevious,
  useReaction,
  useSelection,
  useSelector
} from "./chunk-R6QKTMJH.js";
import {
  ConstraintText,
  FormFieldContext,
  FormFieldError,
  InternalFormField,
  checkbox_icon_default,
  internal_default as internal_default5,
  internal_default2 as internal_default6,
  radio_button_default,
  useFormFieldContext
} from "./chunk-AEATPONT.js";
import {
  InternalSpaceBetween
} from "./chunk-7GVACSZY.js";
import {
  joinStrings,
  padLeftZeros
} from "./chunk-IXOWUQJP.js";
import {
  Box
} from "./chunk-YUGEO5C7.js";
import {
  HelpPanel
} from "./chunk-27SLDGB7.js";
import {
  StatusIndicator
} from "./chunk-TRCJ3DKB.js";
import {
  BreadcrumbGroup,
  InternalBreadcrumbGroup
} from "./chunk-SQ7M5CG3.js";
import {
  PopoverBody,
  PopoverContainer,
  arrow_default,
  dropdown_default,
  internal_default as internal_default3,
  options_list_default,
  styles_css_default2 as styles_css_default,
  useOpenState,
  usePortalModeClasses
} from "./chunk-CNESFELA.js";
import {
  Portal
} from "./chunk-TM5SCOBX.js";
import {
  VisualContext,
  getVisualContextClassname
} from "./chunk-W3EIS6OW.js";
import {
  focus_lock_default,
  getFirstFocusable
} from "./chunk-B33KRNJ3.js";
import {
  InternalExpandableSection,
  SideNavigation
} from "./chunk-LM56BGGH.js";
import {
  InternalHeader
} from "./chunk-HAME2ABT.js";
import {
  InternalContainer,
  useDynamicOverlap
} from "./chunk-XF76KBF2.js";
import "./chunk-3ZST7P5D.js";
import "./chunk-YTKRNNDQ.js";
import {
  scrollElementIntoView,
  useUniqueId
} from "./chunk-5PTPSAWI.js";
import {
  InternalBox
} from "./chunk-OLA4AI5K.js";
import {
  app_layout_default,
  getLimitedValue,
  resize_handler_default,
  styles_css_default as styles_css_default2,
  useKeyboardEvents,
  usePointerEvents,
  useSplitPanelContext
} from "./chunk-S537OJO3.js";
import {
  Transition
} from "./chunk-TWOQSS3Q.js";
import {
  ButtonContext,
  InternalButton,
  internal_default as internal_default2,
  useForwardFocus
} from "./chunk-46IS5YID.js";
import {
  InternalSpinner,
  ScreenreaderOnly,
  live_region_default
} from "./chunk-JGOBMKQY.js";
import {
  useInternalI18n,
  useLocale
} from "./chunk-VOJM65QS.js";
import {
  useControllable
} from "./chunk-BPYCGB7Y.js";
import "./chunk-6IFHW5WD.js";
import {
  AppLayoutContext,
  custom_css_properties_default
} from "./chunk-NABBUFNM.js";
import {
  CSSTransition_default,
  TransitionGroup_default,
  _assertThisInitialized,
  _setPrototypeOf
} from "./chunk-4BMHMQ7J.js";
import {
  useContainerBreakpoints,
  useContainerQuery,
  useResizeObserver
} from "./chunk-7EUAENCI.js";
import {
  FunnelContext,
  FunnelMetrics,
  FunnelStepContext,
  FunnelSubStepContext,
  checkSafeUrl,
  useFunnel,
  useFunnelStep
} from "./chunk-SD4QTYOH.js";
import "./chunk-7QB3VZVV.js";
import {
  useMobile
} from "./chunk-VAAYRRFE.js";
import {
  DATA_ATTR_ANALYTICS_ALERT,
  DATA_ATTR_ANALYTICS_FLASHBAR,
  DATA_ATTR_FUNNEL_STEP,
  getFunnelNameSelector,
  getNameFromSelector,
  getSubStepAllSelector,
  getSubStepNameSelector,
  getSubStepSelector
} from "./chunk-AX3SE4VV.js";
import {
  fireCancelableEvent,
  fireKeyboardEvent,
  fireNonCancelableEvent,
  hasModifierKeys,
  isPlainLeftClick
} from "./chunk-CTALK4OT.js";
import {
  internal_default,
  useMergeRefs
} from "./chunk-4FOLHITS.js";
import {
  KeyCode,
  Metrics,
  PACKAGE_SOURCE,
  PACKAGE_VERSION,
  __rest,
  applyDisplayName,
  clsx_m_default,
  containsOrEqual,
  findUpUntil,
  getBaseProps,
  isDevelopment,
  isModifierKey,
  isMotionDisabled,
  nodeContains,
  parseCssVariable,
  supportsStickyPosition,
  useBaseComponent,
  useCurrentMode,
  useReducedMotion,
  useStableEventHandler,
  useTelemetry,
  useVisualRefresh,
  warnOnce
} from "./chunk-YXZ34YT5.js";
import "./chunk-XY35XOXX.js";
import {
  __toESM,
  require_react
} from "./chunk-C3URVCCN.js";

// node_modules/@cloudscape-design/components/alert/index.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/alert/internal.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/alert/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/alert/styles.scoped.css";
var styles_css_default3 = {
  "alert": "awsui_alert_mx3cw_ba8vv_93",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_mx3cw_ba8vv_1",
  "root": "awsui_root_mx3cw_ba8vv_119",
  "hidden": "awsui_hidden_mx3cw_ba8vv_135",
  "body": "awsui_body_mx3cw_ba8vv_160",
  "header": "awsui_header_mx3cw_ba8vv_166",
  "action": "awsui_action_mx3cw_ba8vv_170",
  "action-button": "awsui_action-button_mx3cw_ba8vv_175",
  "text": "awsui_text_mx3cw_ba8vv_179",
  "icon": "awsui_icon_mx3cw_ba8vv_183",
  "message": "awsui_message_mx3cw_ba8vv_186",
  "breakpoint-default": "awsui_breakpoint-default_mx3cw_ba8vv_194",
  "content": "awsui_content_mx3cw_ba8vv_208",
  "dismiss": "awsui_dismiss_mx3cw_ba8vv_212",
  "dismiss-button": "awsui_dismiss-button_mx3cw_ba8vv_218",
  "type-error": "awsui_type-error_mx3cw_ba8vv_226",
  "type-warning": "awsui_type-warning_mx3cw_ba8vv_234",
  "type-success": "awsui_type-success_mx3cw_ba8vv_242",
  "type-info": "awsui_type-info_mx3cw_ba8vv_250"
};

// node_modules/@cloudscape-design/components/alert/internal.js
var typeToIcon = {
  error: "status-negative",
  warning: "status-warning",
  success: "status-positive",
  info: "status-info"
};
function InternalAlert(_a) {
  var { type, statusIconAriaLabel, visible = true, dismissible, dismissAriaLabel, children, header, buttonText, action, onDismiss, onButtonClick, __internalRootRef = null } = _a, rest = __rest(_a, ["type", "statusIconAriaLabel", "visible", "dismissible", "dismissAriaLabel", "children", "header", "buttonText", "action", "onDismiss", "onButtonClick", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const i18n = useInternalI18n("alert");
  const [breakpoint, breakpointRef] = useContainerBreakpoints(["xs"]);
  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
  const isRefresh = useVisualRefresh();
  const size = isRefresh ? "normal" : header && children ? "big" : "normal";
  const actionButton2 = action || import_react.default.createElement(InternalButton, { className: styles_css_default3["action-button"], onClick: () => fireNonCancelableEvent(onButtonClick), formAction: "none" }, buttonText);
  const hasAction = Boolean(action || buttonText);
  const analyticsAttributes = {
    [DATA_ATTR_ANALYTICS_ALERT]: type
  };
  return import_react.default.createElement(
    "div",
    Object.assign({}, baseProps, analyticsAttributes, { "aria-hidden": !visible, className: clsx_m_default(styles_css_default3.root, { [styles_css_default3.hidden]: !visible }, baseProps.className, styles_css_default3[`breakpoint-${breakpoint}`]), ref: mergedRef }),
    import_react.default.createElement(
      VisualContext,
      { contextName: "alert" },
      import_react.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default3.alert, styles_css_default3[`type-${type}`]) },
        import_react.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default3.icon, styles_css_default3.text), role: "img", "aria-label": statusIconAriaLabel },
          import_react.default.createElement(internal_default, { name: typeToIcon[type], size })
        ),
        import_react.default.createElement(
          "div",
          { className: styles_css_default3.body },
          import_react.default.createElement(
            "div",
            { className: clsx_m_default(styles_css_default3.message, styles_css_default3.text) },
            header && import_react.default.createElement("div", { className: styles_css_default3.header }, header),
            import_react.default.createElement("div", { className: styles_css_default3.content }, children)
          ),
          hasAction && import_react.default.createElement("div", { className: styles_css_default3.action }, actionButton2)
        ),
        dismissible && import_react.default.createElement(
          "div",
          { className: styles_css_default3.dismiss },
          import_react.default.createElement(InternalButton, { className: styles_css_default3["dismiss-button"], variant: "icon", iconName: "close", formAction: "none", ariaLabel: i18n("dismissAriaLabel", dismissAriaLabel), onClick: () => fireNonCancelableEvent(onDismiss) })
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/alert/index.js
function Alert(_a) {
  var { type = "info", visible = true } = _a, props2 = __rest(_a, ["type", "visible"]);
  const baseComponentProps = useBaseComponent("Alert");
  return import_react2.default.createElement(InternalAlert, Object.assign({ type, visible }, props2, baseComponentProps));
}
applyDisplayName(Alert, "Alert");

// node_modules/@cloudscape-design/components/annotation-context/index.js
var import_react9 = __toESM(require_react());

// node_modules/@cloudscape-design/components/annotation-context/annotation/open-annotation.js
var import_react6 = __toESM(require_react());

// node_modules/@cloudscape-design/components/annotation-context/annotation/annotation-trigger.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/annotation-context/annotation/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/annotation-context/annotation/styles.scoped.css";
var styles_css_default4 = {
  "arrow": "awsui_arrow_1hpp3_wjqd2_93",
  "arrow-outer": "awsui_arrow-outer_1hpp3_wjqd2_97",
  "arrow-inner": "awsui_arrow-inner_1hpp3_wjqd2_97",
  "arrow-position-right-top": "awsui_arrow-position-right-top_1hpp3_wjqd2_128",
  "arrow-position-right-bottom": "awsui_arrow-position-right-bottom_1hpp3_wjqd2_128",
  "arrow-position-left-top": "awsui_arrow-position-left-top_1hpp3_wjqd2_131",
  "arrow-position-left-bottom": "awsui_arrow-position-left-bottom_1hpp3_wjqd2_131",
  "arrow-position-top-center": "awsui_arrow-position-top-center_1hpp3_wjqd2_134",
  "arrow-position-top-responsive": "awsui_arrow-position-top-responsive_1hpp3_wjqd2_134",
  "arrow-position-bottom-center": "awsui_arrow-position-bottom-center_1hpp3_wjqd2_137",
  "arrow-position-bottom-responsive": "awsui_arrow-position-bottom-responsive_1hpp3_wjqd2_137",
  "annotation": "awsui_annotation_1hpp3_wjqd2_145",
  "next-button": "awsui_next-button_1hpp3_wjqd2_146",
  "previous-button": "awsui_previous-button_1hpp3_wjqd2_147",
  "finish-button": "awsui_finish-button_1hpp3_wjqd2_148",
  "header": "awsui_header_1hpp3_wjqd2_149",
  "step-counter-content": "awsui_step-counter-content_1hpp3_wjqd2_150",
  "content": "awsui_content_1hpp3_wjqd2_151",
  "description": "awsui_description_1hpp3_wjqd2_155",
  "actionBar": "awsui_actionBar_1hpp3_wjqd2_160",
  "stepCounter": "awsui_stepCounter_1hpp3_wjqd2_167",
  "divider": "awsui_divider_1hpp3_wjqd2_171",
  "hotspot": "awsui_hotspot_1hpp3_wjqd2_175",
  "icon": "awsui_icon_1hpp3_wjqd2_215"
};

// node_modules/@cloudscape-design/components/annotation-context/annotation/annotation-icon.js
var import_react3 = __toESM(require_react());
var AnnotationIcon = ({ open }) => {
  if (open) {
    return import_react3.default.createElement(
      "svg",
      { xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 16 16", focusable: "false", "aria-hidden": "true", className: styles_css_default4.icon },
      import_react3.default.createElement(
        "g",
        { fill: "none", fillRule: "evenodd", transform: "translate(1 1)" },
        import_react3.default.createElement("circle", { cx: "7", cy: "7", r: "7", strokeWidth: "2" }),
        import_react3.default.createElement("path", { strokeLinecap: "square", strokeWidth: "2.2", d: "M2.5,-1 L2.5,3", transform: "rotate(90 1.75 6.25)" })
      )
    );
  } else {
    return import_react3.default.createElement(
      "svg",
      { xmlns: "http://www.w3.org/2000/svg", width: "16", height: "16", viewBox: "0 0 16 16", focusable: "false", "aria-hidden": "true", className: styles_css_default4.icon },
      import_react3.default.createElement(
        "g",
        { fill: "none", fillRule: "evenodd", transform: "translate(1 1)" },
        import_react3.default.createElement("circle", { cx: "7", cy: "7", r: "7", strokeWidth: "2" }),
        import_react3.default.createElement(
          "g",
          { strokeLinecap: "square", strokeWidth: "2.2", transform: "translate(4.5 5)" },
          import_react3.default.createElement("path", { d: "M2.5,0 L2.5,4", transform: "rotate(90 2.5 2)" }),
          import_react3.default.createElement("path", { d: "M2.5,0 L2.5,4" })
        )
      )
    );
  }
};

// node_modules/@cloudscape-design/components/annotation-context/annotation/annotation-trigger.js
var annotation_trigger_default = import_react4.default.forwardRef(function AnnotationTrigger({ open, onClick: onClickHandler, i18nStrings, taskLocalStepIndex, totalLocalSteps }, ref) {
  const onClick = (0, import_react4.useCallback)((event) => {
    event.preventDefault();
    onClickHandler();
  }, [onClickHandler]);
  return import_react4.default.createElement(
    "button",
    { ref, className: styles_css_default4.hotspot, "aria-haspopup": "dialog", "aria-label": i18nStrings.labelHotspot(open, taskLocalStepIndex !== null && taskLocalStepIndex !== void 0 ? taskLocalStepIndex : 0, totalLocalSteps !== null && totalLocalSteps !== void 0 ? totalLocalSteps : 0), onClick },
    import_react4.default.createElement(AnnotationIcon, { open })
  );
});

// node_modules/@cloudscape-design/components/annotation-context/annotation/annotation-popover.js
var import_react5 = __toESM(require_react());
var arrow = (position) => import_react5.default.createElement(
  "div",
  { className: clsx_m_default(styles_css_default4.arrow, styles_css_default4[`arrow-position-${position}`]) },
  import_react5.default.createElement("div", { className: styles_css_default4["arrow-outer"] }),
  import_react5.default.createElement("div", { className: styles_css_default4["arrow-inner"] })
);
function AnnotationPopover({ title, content, alert, direction = "top", taskLocalStepIndex, totalLocalSteps, showPreviousButton, showFinishButton, onDismiss, nextButtonEnabled, onNextButtonClick, onFinish, trackRef, previousButtonEnabled, onPreviousButtonClick, i18nStrings }) {
  (0, import_react5.useEffect)(() => {
    var _a;
    scrollElementIntoView((_a = trackRef.current) !== null && _a !== void 0 ? _a : void 0);
  }, [trackRef]);
  const popoverHeaderId = useUniqueId("poppver-header-");
  const stepCounterId = useUniqueId("step-counter-");
  return import_react5.default.createElement(
    PopoverContainer,
    { size: "medium", fixedWidth: false, position: direction, trackRef, trackKey: taskLocalStepIndex, variant: "annotation", arrow, zIndex: 1e3 },
    import_react5.default.createElement(
      PopoverBody,
      {
        dismissButton: true,
        dismissAriaLabel: i18nStrings.labelDismissAnnotation,
        header: import_react5.default.createElement(InternalBox, { id: popoverHeaderId, color: "text-body-secondary", fontSize: "body-s", margin: { top: "xxxs" }, className: styles_css_default4.header }, title),
        onDismiss,
        className: styles_css_default4.annotation,
        variant: "annotation",
        overflowVisible: "content",
        key: taskLocalStepIndex,
        ariaLabelledby: joinStrings(popoverHeaderId, stepCounterId)
      },
      import_react5.default.createElement(
        InternalSpaceBetween,
        { size: "s" },
        import_react5.default.createElement(
          "div",
          { className: styles_css_default4.description },
          import_react5.default.createElement(InternalBox, { className: styles_css_default4.content }, content)
        ),
        alert && import_react5.default.createElement(InternalAlert, { type: "warning" }, alert),
        import_react5.default.createElement(
          InternalSpaceBetween,
          { size: "s" },
          import_react5.default.createElement("div", { className: styles_css_default4.divider }),
          import_react5.default.createElement(
            "div",
            { className: styles_css_default4.actionBar },
            import_react5.default.createElement(
              "div",
              { className: styles_css_default4.stepCounter },
              import_react5.default.createElement(InternalBox, { id: stepCounterId, className: styles_css_default4["step-counter-content"], color: "text-body-secondary", fontSize: "body-s" }, i18nStrings.stepCounterText(taskLocalStepIndex !== null && taskLocalStepIndex !== void 0 ? taskLocalStepIndex : 0, totalLocalSteps !== null && totalLocalSteps !== void 0 ? totalLocalSteps : 0))
            ),
            import_react5.default.createElement(
              InternalSpaceBetween,
              { size: "xs", direction: "horizontal" },
              showPreviousButton && import_react5.default.createElement(InternalButton, { variant: "link", onClick: onPreviousButtonClick, disabled: !previousButtonEnabled, formAction: "none", ariaLabel: i18nStrings.previousButtonText, className: styles_css_default4["previous-button"] }, i18nStrings.previousButtonText),
              showFinishButton ? import_react5.default.createElement(InternalButton, { onClick: onFinish, formAction: "none", ariaLabel: i18nStrings.finishButtonText, className: styles_css_default4["finish-button"] }, i18nStrings.finishButtonText) : import_react5.default.createElement(InternalButton, { onClick: onNextButtonClick, disabled: !nextButtonEnabled, formAction: "none", ariaLabel: i18nStrings.nextButtonText, className: styles_css_default4["next-button"] }, i18nStrings.nextButtonText)
            )
          )
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/annotation-context/annotation/open-annotation.js
function OpenAnnotation({ title, content, alert, direction, showPreviousButton, showFinishButton, taskLocalStepIndex, totalLocalSteps, onDismiss, nextButtonEnabled, onNextButtonClick, onFinish, previousButtonEnabled, onPreviousButtonClick, i18nStrings }) {
  const trackRef = (0, import_react6.useRef)(null);
  return import_react6.default.createElement(
    import_react6.default.Fragment,
    null,
    import_react6.default.createElement(annotation_trigger_default, { open: true, onClick: onDismiss, i18nStrings, ref: trackRef, totalLocalSteps, taskLocalStepIndex }),
    import_react6.default.createElement(AnnotationPopover, { trackRef, previousButtonEnabled, showPreviousButton, showFinishButton, totalLocalSteps, i18nStrings, nextButtonEnabled, onDismiss, onFinish, onNextButtonClick, onPreviousButtonClick, taskLocalStepIndex, direction, title, content, alert })
  );
}

// node_modules/@cloudscape-design/components/annotation-context/annotation/closed-annotation.js
var import_react7 = __toESM(require_react());
function ClosedAnnotation({ globalStepIndex, onOpen, i18nStrings, focusOnRender, totalLocalSteps, taskLocalStepIndex }) {
  const [hotspotRef, setHotspotRef] = (0, import_react7.useState)(null);
  const onClick = (0, import_react7.useCallback)(() => {
    onOpen(globalStepIndex);
  }, [globalStepIndex, onOpen]);
  (0, import_react7.useEffect)(() => {
    if (focusOnRender && hotspotRef) {
      hotspotRef.focus();
    }
  }, [focusOnRender, hotspotRef]);
  return import_react7.default.createElement(annotation_trigger_default, { open: false, onClick, i18nStrings, ref: setHotspotRef, totalLocalSteps, taskLocalStepIndex });
}

// node_modules/@cloudscape-design/components/annotation-context/context.js
var import_react8 = __toESM(require_react());
var defaultContext = {
  getContentForId: () => null,
  registerHotspot() {
  },
  unregisterHotspot() {
  },
  currentStepIndex: 0,
  currentTutorial: null,
  onStartTutorial() {
  },
  onExitTutorial() {
  }
};
var hotspotContext = import_react8.default.createContext(defaultContext);

// node_modules/@cloudscape-design/components/annotation-context/utils.js
function getStepInfo(annotations, index) {
  if (index >= 0) {
    let taskIndex = 0;
    for (const task of annotations) {
      if (task.steps.length <= index) {
        index -= task.steps.length;
        taskIndex++;
        continue;
      }
      return { task, step: task.steps[index], localIndex: index, taskIndex };
    }
  }
  return { task: void 0, step: void 0, localIndex: 0, taskIndex: 0 };
}

// node_modules/@cloudscape-design/components/annotation-context/index.js
var emptyTasks = [];
function AnnotationContext({ currentTutorial, children, onStepChange, onFinish: onFinishHandler, onStartTutorial, onExitTutorial, i18nStrings }) {
  var _a, _b, _c, _d;
  useTelemetry("AnnotationContext");
  const [open, setOpen] = (0, import_react9.useState)(true);
  const [currentStepIndex, setCurrentStepIndex] = (0, import_react9.useState)(0);
  (0, import_react9.useEffect)(() => {
    setCurrentStepIndex(0);
    setOpen(true);
  }, [currentTutorial, setOpen]);
  const [availableHotspots, setAvailableHotspots] = (0, import_react9.useState)({});
  const availableHotspotsRef = (0, import_react9.useRef)(availableHotspots);
  const annotations = currentTutorial ? currentTutorial.tasks : emptyTasks;
  const { task, step: step2, localIndex, taskIndex } = getStepInfo(annotations, currentStepIndex);
  const currentId = step2 === null || step2 === void 0 ? void 0 : step2.hotspotId;
  const totalStepCount = annotations.map((a2) => a2.steps.length).reduce((a2, b) => a2 + b, 0);
  const id2index = (0, import_react9.useMemo)(() => {
    const mapping = {};
    let counter = 0;
    for (const annotation of annotations) {
      for (const step3 of annotation.steps) {
        if (mapping[step3.hotspotId] === void 0) {
          mapping[step3.hotspotId] = counter;
        }
        counter++;
      }
    }
    return mapping;
  }, [annotations]);
  const openNextStep = (0, import_react9.useCallback)(() => {
    const newStepIndex = Math.min(currentStepIndex + 1, totalStepCount);
    setCurrentStepIndex(newStepIndex);
    fireNonCancelableEvent(onStepChange, { step: newStepIndex, reason: "next" });
  }, [currentStepIndex, onStepChange, totalStepCount]);
  const openPreviousStep = (0, import_react9.useCallback)(() => {
    const newStepIndex = Math.max(currentStepIndex - 1, 0);
    setCurrentStepIndex(newStepIndex);
    fireNonCancelableEvent(onStepChange, { step: newStepIndex, reason: "previous" });
  }, [onStepChange, currentStepIndex]);
  const onFinish = (0, import_react9.useCallback)(() => fireNonCancelableEvent(onFinishHandler), [onFinishHandler]);
  const isCurrentHotspotAvailable = currentId ? availableHotspots[currentId] : null;
  (0, import_react9.useEffect)(() => {
    if (!currentId || availableHotspotsRef.current[currentId]) {
      return;
    }
    const findNearestHotspot = () => {
      let nearestHotspot2 = void 0;
      let nearestDistance = Infinity;
      for (const hotspotId of Object.keys(availableHotspotsRef.current)) {
        const distanceFromCurrentHotspot = Math.abs(id2index[hotspotId] - currentStepIndex);
        if (distanceFromCurrentHotspot < nearestDistance) {
          nearestDistance = distanceFromCurrentHotspot;
          nearestHotspot2 = hotspotId;
        }
      }
      return nearestHotspot2;
    };
    const nearestHotspot = findNearestHotspot();
    if (nearestHotspot) {
      const newStepIndex = id2index[nearestHotspot];
      setCurrentStepIndex(newStepIndex);
      setOpen(true);
      fireNonCancelableEvent(onStepChange, { step: newStepIndex, reason: "auto-fallback" });
    }
  }, [annotations, isCurrentHotspotAvailable, currentId, currentStepIndex, id2index, onStepChange]);
  const onDismiss = (0, import_react9.useCallback)(() => {
    setOpen(false);
  }, [setOpen]);
  const onOpen = (0, import_react9.useCallback)((stepIndex) => {
    setCurrentStepIndex(stepIndex);
    fireNonCancelableEvent(onStepChange, { step: stepIndex, reason: "open" });
    setOpen(true);
  }, [onStepChange, setOpen]);
  const idOfPreviousHotspot = (_a = getStepInfo(annotations, currentStepIndex - 1).step) === null || _a === void 0 ? void 0 : _a.hotspotId;
  const idOfNextHotspot = (_b = getStepInfo(annotations, currentStepIndex + 1).step) === null || _b === void 0 ? void 0 : _b.hotspotId;
  const previousHotspotIsAvailable = (_c = idOfPreviousHotspot !== void 0 && availableHotspots[idOfPreviousHotspot]) !== null && _c !== void 0 ? _c : false;
  const nextHotspotIsAvailable = (_d = idOfNextHotspot !== void 0 && availableHotspots[idOfNextHotspot]) !== null && _d !== void 0 ? _d : false;
  const getContentForId = (0, import_react9.useCallback)((id, direction) => {
    if (currentTutorial === null || currentTutorial === void 0 ? void 0 : currentTutorial.completed) {
      return null;
    }
    const globalStepIndex = id2index[id];
    if (globalStepIndex === void 0) {
      return null;
    }
    if (!task || !step2 || !open || id !== currentId) {
      const { task: currentTask, localIndex: currentStepIndex2 } = getStepInfo(annotations, globalStepIndex);
      return import_react9.default.createElement(ClosedAnnotation, { globalStepIndex, i18nStrings, onOpen, focusOnRender: id === currentId, totalLocalSteps: currentTask ? currentTask.steps.length : 0, taskLocalStepIndex: currentStepIndex2 });
    }
    return import_react9.default.createElement(OpenAnnotation, { i18nStrings, direction, title: i18nStrings.taskTitle(taskIndex, task.title), content: step2.content, alert: step2.warningAlert, showPreviousButton: currentStepIndex !== 0, showFinishButton: currentStepIndex + 1 === totalStepCount, taskLocalStepIndex: localIndex, totalLocalSteps: task.steps.length, nextButtonEnabled: nextHotspotIsAvailable, onNextButtonClick: openNextStep, onFinish, previousButtonEnabled: previousHotspotIsAvailable, onPreviousButtonClick: openPreviousStep, onDismiss });
  }, [
    id2index,
    currentTutorial,
    task,
    step2,
    open,
    currentId,
    currentStepIndex,
    i18nStrings,
    taskIndex,
    localIndex,
    totalStepCount,
    nextHotspotIsAvailable,
    openNextStep,
    onFinish,
    previousHotspotIsAvailable,
    openPreviousStep,
    onDismiss,
    onOpen,
    annotations
  ]);
  const registerHotspot = (0, import_react9.useCallback)(
    (id) => {
      if (!id2index || id2index[id] === void 0) {
        return;
      }
      availableHotspotsRef.current = Object.assign(Object.assign({}, availableHotspotsRef.current), { [id]: true });
      setAvailableHotspots((availableHotspots2) => {
        if (availableHotspots2[id]) {
          return availableHotspots2;
        }
        return Object.assign(Object.assign({}, availableHotspots2), { [id]: true });
      });
    },
    [id2index]
  );
  const unregisterHotspot = (0, import_react9.useCallback)((id) => {
    if (!availableHotspotsRef.current[id]) {
      return;
    }
    availableHotspotsRef.current = removeKey(id, availableHotspotsRef.current);
    setAvailableHotspots((availableHotspots2) => {
      if (!availableHotspots2[id]) {
        return availableHotspots2;
      }
      return removeKey(id, availableHotspots2);
    });
  }, []);
  const context = {
    getContentForId,
    registerHotspot,
    unregisterHotspot,
    onStartTutorial,
    onExitTutorial,
    currentStepIndex,
    currentTutorial
  };
  return import_react9.default.createElement(hotspotContext.Provider, { value: context }, children);
}
applyDisplayName(AnnotationContext, "AnnotationContext");
function removeKey(key, object2) {
  const _a = object2, _b = key, _ = _a[_b], remainingObject = __rest(_a, [typeof _b === "symbol" ? _b : _b + ""]);
  return remainingObject;
}

// node_modules/@cloudscape-design/components/area-chart/index.js
var import_react73 = __toESM(require_react());

// node_modules/@cloudscape-design/components/area-chart/internal.js
var import_react72 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-status-container/index.js
var import_react10 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-status-container/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-status-container/styles.scoped.css";
var styles_css_default5 = {
  "root": "awsui_root_11n0s_hifrk_9",
  "empty": "awsui_empty_11n0s_hifrk_13"
};

// node_modules/@cloudscape-design/components/internal/components/chart-status-container/index.js
function getChartStatus({ externalData, visibleData, statusType }) {
  const isEmpty = !visibleData || visibleData.length === 0;
  const isNoMatch = isEmpty && visibleData.length !== externalData.length;
  const showChart = statusType === "finished" && !isEmpty;
  return { isEmpty, isNoMatch, showChart };
}
function ChartStatusContainer({ statusType, errorText, loadingText, recoveryText, noMatch, empty, onRecoveryClick, isNoMatch, isEmpty, showChart }) {
  const i18n = useInternalI18n("[charts]");
  const statusContainer = (0, import_react10.useMemo)(() => {
    const handleRecoveryClick = (event) => {
      event.preventDefault();
      fireNonCancelableEvent(onRecoveryClick);
    };
    if (statusType === "error") {
      const renderedRecoveryText = i18n("recoveryText", recoveryText);
      return import_react10.default.createElement(
        "span",
        null,
        import_react10.default.createElement(StatusIndicator, { type: "error" }, i18n("errorText", errorText)),
        " ",
        !!renderedRecoveryText && !!onRecoveryClick && import_react10.default.createElement(internal_default4, { onFollow: handleRecoveryClick, variant: "recovery" }, renderedRecoveryText)
      );
    }
    if (statusType === "loading") {
      return import_react10.default.createElement(StatusIndicator, { type: "loading" }, i18n("loadingText", loadingText));
    }
    if (isNoMatch) {
      return import_react10.default.createElement("div", { className: styles_css_default5.empty }, noMatch);
    }
    if (isEmpty) {
      return import_react10.default.createElement("div", { className: styles_css_default5.empty }, empty);
    }
  }, [i18n, statusType, onRecoveryClick, isEmpty, isNoMatch, recoveryText, loadingText, errorText, empty, noMatch]);
  return import_react10.default.createElement("div", { className: styles_css_default5.root, "aria-live": "polite", "aria-atomic": "true" }, !showChart && statusContainer);
}

// node_modules/@cloudscape-design/components/area-chart/elements/area-chart-filter.js
var import_react45 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-filter/index.js
var import_react44 = __toESM(require_react());

// node_modules/@cloudscape-design/components/multiselect/internal.js
var import_react42 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/option/utils/filter-options.js
var searchableFields = ["value", "label", "description", "labelTag"];
var matchesString = (value, searchText, strictMatching) => {
  if (!value) {
    return false;
  }
  const index = value.toLowerCase().indexOf(searchText);
  return strictMatching ? index === 0 : index > -1;
};
var matchesSingleOption = (dropdownOption, text, strictMatching) => {
  const searchText = text.toLowerCase();
  const option = dropdownOption.option;
  const searchStrFields = (attr) => matchesString(option[attr], searchText, strictMatching);
  const searchTagsFields = (attr) => {
    var _a;
    return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some((value) => matchesString(value, searchText, strictMatching));
  };
  const searchableTagFields = ["tags"];
  if (!strictMatching) {
    searchableTagFields.push("filteringTags");
  }
  return searchableFields.some(searchStrFields) || searchableTagFields.some(searchTagsFields);
};
var filterOptions = (options, searchText, strictMatching = false) => {
  if (searchText === "") {
    return options;
  }
  let currentGroup = null;
  let parentMatched = false;
  return options.reduce((acc, option) => {
    if (option.type === "parent") {
      parentMatched = false;
      currentGroup = option;
      if (matchesSingleOption(option, searchText, strictMatching)) {
        parentMatched = true;
        acc.push(currentGroup);
      }
      return acc;
    }
    if (option.type !== "child") {
      currentGroup = null;
      parentMatched = false;
    }
    if (parentMatched) {
      acc.push(option);
    } else if (matchesSingleOption(option, searchText, strictMatching)) {
      if (currentGroup) {
        acc.push(currentGroup);
        currentGroup = null;
      }
      acc.push(option);
    }
    return acc;
  }, []);
};
var isInteractive = (option) => !!option && !option.disabled && option.type !== "parent";
var isGroupInteractive = (option) => !!option && !option.disabled;
var isGroup = (option) => !!option && "options" in option;

// node_modules/@cloudscape-design/components/internal/components/dropdown-footer/index.js
var import_react12 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/dropdown-footer/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/dropdown-footer/styles.scoped.css";
var styles_css_default6 = {
  "root": "awsui_root_1afi9_4tl31_93",
  "hidden": "awsui_hidden_1afi9_4tl31_105",
  "no-items": "awsui_no-items_1afi9_4tl31_108"
};

// node_modules/@cloudscape-design/components/internal/components/dropdown-status/index.js
var import_react11 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/dropdown-status/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/dropdown-status/styles.scoped.css";
var styles_css_default7 = {
  "root": "awsui_root_vrgzu_1rmre_93",
  "recovery": "awsui_recovery_vrgzu_1rmre_107"
};

// node_modules/@cloudscape-design/components/internal/components/dropdown-status/index.js
function DropdownStatus({ children }) {
  return import_react11.default.createElement("div", { className: styles_css_default7.root }, children);
}
var useDropdownStatus = ({ statusType, empty, loadingText, finishedText, filteringResultsText, errorText, recoveryText, isEmpty, isNoMatch, isFiltered, noMatch, onRecoveryClick, errorIconAriaLabel }) => {
  const previousStatusType = usePrevious(statusType);
  const statusResult = { isSticky: true, content: null };
  if (statusType === "loading") {
    statusResult.content = import_react11.default.createElement(StatusIndicator, { type: "loading" }, loadingText);
  } else if (statusType === "error") {
    statusResult.content = import_react11.default.createElement(
      "span",
      null,
      import_react11.default.createElement(StatusIndicator, { type: "error", __animate: previousStatusType !== "error", iconAriaLabel: errorIconAriaLabel }, errorText),
      " ",
      recoveryText && import_react11.default.createElement(internal_default4, { onFollow: () => fireNonCancelableEvent(onRecoveryClick), variant: "recovery", className: styles_css_default7.recovery }, recoveryText)
    );
  } else if (isEmpty && empty) {
    statusResult.content = empty;
  } else if (isNoMatch && noMatch) {
    statusResult.content = noMatch;
  } else if (isFiltered && filteringResultsText) {
    statusResult.content = filteringResultsText;
  } else if (statusType === "finished" && finishedText) {
    statusResult.content = finishedText;
    statusResult.isSticky = false;
  }
  return statusResult;
};
var dropdown_status_default = DropdownStatus;

// node_modules/@cloudscape-design/components/internal/components/dropdown-footer/index.js
var DropdownFooter = ({ content, id, hasItems = true }) => import_react12.default.createElement(
  "div",
  { className: clsx_m_default(styles_css_default6.root, { [styles_css_default6.hidden]: content === null, [styles_css_default6["no-items"]]: !hasItems }) },
  import_react12.default.createElement(live_region_default, { visible: true, tagName: "div", id }, content && import_react12.default.createElement(dropdown_status_default, null, content))
);
var dropdown_footer_default = DropdownFooter;

// node_modules/@cloudscape-design/components/internal/components/option/utils/flatten-options.js
var flattenOptions = (options) => {
  const parentMap = /* @__PURE__ */ new Map();
  const flatOptions = options.reduce((acc, option) => {
    if ("options" in option) {
      const { options: options2 } = option, rest = __rest(option, ["options"]);
      const parentDropdownOption = { type: "parent", option };
      const allOptionsDisabled = options2.every((option2) => option2.disabled);
      if (option.disabled || allOptionsDisabled) {
        parentDropdownOption.disabled = true;
      }
      acc.push(parentDropdownOption);
      options2.forEach((child) => {
        const childDropdownOption = { type: "child", option: child };
        if (rest.disabled || child.disabled) {
          childDropdownOption.disabled = true;
        }
        acc.push(childDropdownOption);
        parentMap.set(childDropdownOption, parentDropdownOption);
      });
    } else {
      const dropdownOption = { option };
      if (option.disabled) {
        dropdownOption.disabled = true;
      }
      acc.push(dropdownOption);
    }
    return acc;
  }, []);
  return {
    flatOptions,
    parentMap
  };
};

// node_modules/@cloudscape-design/components/internal/components/options-list/utils/test-indexes.js
var testIndexMap = /* @__PURE__ */ new WeakMap();
var getTestOptionIndexes = (item) => testIndexMap.get(item);
var generateTestIndexes = (filteredItems, getParentGroup) => {
  let throughIndex = 1;
  let groupIndex = 0;
  let inGroupIndex = 1;
  let currentGroup = null;
  filteredItems.forEach((item) => {
    if (!("type" in item)) {
      testIndexMap.set(item, { throughIndex: throughIndex++ });
    } else if (item.type === "child") {
      const parentGroup = getParentGroup(item);
      if (parentGroup && parentGroup !== currentGroup) {
        currentGroup = parentGroup;
        inGroupIndex = 1;
        testIndexMap.set(item, {
          throughIndex: throughIndex++,
          groupIndex: ++groupIndex,
          inGroupIndex: inGroupIndex++
        });
      } else {
        testIndexMap.set(item, { throughIndex: throughIndex++, groupIndex, inGroupIndex: inGroupIndex++ });
      }
    }
  });
};

// node_modules/@cloudscape-design/components/internal/components/option/utils/prepare-options.js
function prepareOptions(options, filteringType, filteringText) {
  const { flatOptions, parentMap } = flattenOptions(options);
  const filteredOptions = filteringType !== "auto" ? flatOptions : filterOptions(flatOptions, filteringText);
  generateTestIndexes(filteredOptions, parentMap.get.bind(parentMap));
  return {
    filteredOptions,
    parentMap,
    totalCount: flatOptions.length,
    matchesCount: filteredOptions.length
  };
}

// node_modules/@cloudscape-design/components/select/utils/use-select.js
var import_react15 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-highlight-option.js
var import_react13 = __toESM(require_react());
function useHighlightedOption({ options, isHighlightable: isHighlightable2 }) {
  const [highlightedIndex, setHighlightedIndexState] = (0, import_react13.useState)(-1);
  const [highlightType, setHighlightType] = (0, import_react13.useState)("keyboard");
  const setHighlightedIndex = (0, import_react13.useCallback)((index, highlightType2) => {
    setHighlightedIndexState(index);
    setHighlightType(highlightType2);
  }, []);
  const highlightedOption = options[highlightedIndex] && isHighlightable2(options[highlightedIndex]) ? options[highlightedIndex] : void 0;
  const moveHighlightFrom = (direction, startIndex = highlightedIndex, highlightType2) => {
    let newIndex = startIndex;
    do {
      newIndex += direction;
    } while (options[newIndex] && !isHighlightable2(options[newIndex]));
    if (options[newIndex]) {
      setHighlightedIndex(newIndex, highlightType2);
    }
  };
  const moveHighlight = (direction, highlightType2) => moveHighlightFrom(direction, highlightedIndex, highlightType2);
  const highlightOption = (0, import_react13.useCallback)((option, highlightType2) => {
    const index = options.indexOf(option);
    setHighlightedIndex(index, highlightType2);
  }, [options, setHighlightedIndex]);
  return [
    { highlightType, highlightedIndex, highlightedOption },
    {
      setHighlightedIndexWithMouse: (index) => setHighlightedIndex(index, "mouse"),
      moveHighlightWithKeyboard: (direction) => moveHighlight(direction, "keyboard"),
      highlightOptionWithKeyboard: (option) => highlightOption(option, "keyboard"),
      resetHighlightWithKeyboard: () => setHighlightedIndex(-1, "keyboard"),
      goHomeWithKeyboard: () => moveHighlightFrom(1, -1, "keyboard"),
      goEndWithKeyboard: () => moveHighlightFrom(-1, options.length, "keyboard")
    }
  ];
}

// node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-keyboard.js
var import_react14 = __toESM(require_react());
var HOME = 36;
var END = 35;
var useMenuKeyboard = ({ moveHighlight, selectOption, goHome, goEnd, closeDropdown, preventNativeSpace = false }) => {
  return (0, import_react14.useCallback)((e) => {
    switch (e.detail.keyCode) {
      case KeyCode.up:
        e.preventDefault();
        moveHighlight(-1);
        break;
      case KeyCode.down:
        e.preventDefault();
        moveHighlight(1);
        break;
      case HOME:
        goHome();
        break;
      case END:
        goEnd();
        break;
      case KeyCode.escape:
        closeDropdown();
        break;
      case KeyCode.enter:
        e.preventDefault();
        selectOption();
        break;
      case KeyCode.space:
        if (preventNativeSpace) {
          e.preventDefault();
          selectOption();
        }
    }
  }, [moveHighlight, selectOption, goHome, goEnd, closeDropdown, preventNativeSpace]);
};
var useTriggerKeyboard = ({ openDropdown, goHome }) => {
  return (0, import_react14.useCallback)((e) => {
    switch (e.detail.keyCode) {
      case KeyCode.up:
      case KeyCode.down:
        e.preventDefault();
        goHome();
        openDropdown();
        break;
      case KeyCode.space:
      case KeyCode.enter:
        e.preventDefault();
        openDropdown();
        break;
    }
  }, [openDropdown, goHome]);
};

// node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-ids.js
var getOptionId = (menuId, index) => {
  if (index < 0) {
    return void 0;
  }
  return `${menuId}-option-${index}`;
};

// node_modules/@cloudscape-design/components/select/utils/connect-options.js
var connectOptionsByValue = (options, selectedOptions) => {
  return (selectedOptions || []).map((selectedOption) => {
    for (const dropdownOption of options) {
      if (dropdownOption.type !== "parent" && dropdownOption.option.value === selectedOption.value) {
        return dropdownOption;
      }
    }
    return { option: selectedOption };
  });
};
var findOptionIndex = (options, option) => {
  for (let index = 0; index < options.length; index++) {
    const __option = options[index];
    if (__option === option || __option.value === option.value) {
      return index;
    }
  }
  return -1;
};

// node_modules/@cloudscape-design/components/select/utils/use-select.js
function useSelect({ selectedOptions, updateSelectedOption, options, filteringType, onBlur, onFocus, externalRef, keepOpen, fireLoadItems, setFilteringValue, useInteractiveGroups = false, statusType }) {
  const interactivityCheck = useInteractiveGroups ? isGroupInteractive : isInteractive;
  const isHighlightable2 = (option) => !!option && (useInteractiveGroups || option.type !== "parent");
  const filterRef = (0, import_react15.useRef)(null);
  const triggerRef = (0, import_react15.useRef)(null);
  const menuRef = (0, import_react15.useRef)(null);
  const hasFilter = filteringType !== "none";
  const activeRef = hasFilter ? filterRef : menuRef;
  const __selectedOptions = connectOptionsByValue(options, selectedOptions);
  const __selectedValuesSet = selectedOptions.reduce((selectedValuesSet, item) => {
    if (item.value) {
      selectedValuesSet.add(item.value);
    }
    return selectedValuesSet;
  }, /* @__PURE__ */ new Set());
  const [{ highlightType, highlightedOption, highlightedIndex }, { moveHighlightWithKeyboard, resetHighlightWithKeyboard, setHighlightedIndexWithMouse, highlightOptionWithKeyboard, goHomeWithKeyboard, goEndWithKeyboard }] = useHighlightedOption({ options, isHighlightable: isHighlightable2 });
  const { isOpen, openDropdown, closeDropdown, toggleDropdown } = useOpenState({
    onOpen: () => fireLoadItems(""),
    onClose: () => {
      resetHighlightWithKeyboard();
      setFilteringValue("");
    }
  });
  const handleFocus = () => {
    fireNonCancelableEvent(onFocus, {});
  };
  const handleBlur = () => {
    fireNonCancelableEvent(onBlur, {});
    closeDropdown();
  };
  const hasSelectedOption = __selectedOptions.length > 0;
  const menuId = useUniqueId("option-list");
  const highlightedOptionId = getOptionId(menuId, highlightedIndex);
  const selectOption = (option) => {
    var _a;
    const optionToSelect = option || highlightedOption;
    if (!optionToSelect || !interactivityCheck(optionToSelect)) {
      return;
    }
    updateSelectedOption(optionToSelect.option);
    if (!keepOpen) {
      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      closeDropdown();
    }
  };
  const activeKeyDownHandler = useMenuKeyboard({
    moveHighlight: moveHighlightWithKeyboard,
    selectOption,
    goHome: goHomeWithKeyboard,
    goEnd: goEndWithKeyboard,
    closeDropdown: () => {
      var _a;
      (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      closeDropdown();
    },
    preventNativeSpace: !hasFilter
  });
  const triggerKeyDownHandler = useTriggerKeyboard({ openDropdown, goHome: goHomeWithKeyboard });
  const getDropdownProps = () => ({
    onFocus: handleFocus,
    onBlur: handleBlur
  });
  const getTriggerProps = (disabled = false, autoFocus = false) => {
    const triggerProps = {
      ref: triggerRef,
      onFocus: () => closeDropdown(),
      autoFocus
    };
    if (!disabled) {
      triggerProps.onMouseDown = (event) => {
        var _a;
        event.preventDefault();
        if (isOpen) {
          (_a = triggerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
        toggleDropdown();
      };
      triggerProps.onKeyDown = triggerKeyDownHandler;
    }
    return triggerProps;
  };
  const getFilterProps = () => {
    if (!hasFilter) {
      return {};
    }
    return {
      ref: filterRef,
      onKeyDown: activeKeyDownHandler,
      onChange: (event) => {
        setFilteringValue(event.detail.value);
        resetHighlightWithKeyboard();
      },
      __onDelayedInput: (event) => {
        fireLoadItems(event.detail.value);
      },
      __nativeAttributes: {
        "aria-activedescendant": highlightedOptionId,
        ["aria-owns"]: menuId,
        ["aria-controls"]: menuId
      }
    };
  };
  const getMenuProps = () => {
    const menuProps = {
      id: menuId,
      ref: menuRef,
      open: isOpen,
      onMouseUp: (itemIndex) => {
        if (itemIndex > -1) {
          selectOption(options[itemIndex]);
        }
      },
      onMouseMove: (itemIndex) => {
        if (itemIndex > -1) {
          setHighlightedIndexWithMouse(itemIndex);
        }
      },
      statusType
    };
    if (!hasFilter) {
      menuProps.onKeyDown = activeKeyDownHandler;
      menuProps.nativeAttributes = {
        "aria-activedescendant": highlightedOptionId
      };
    }
    return menuProps;
  };
  const getGroupState = (option) => {
    const totalSelected = option.options.filter((item) => !!item.value && __selectedValuesSet.has(item.value)).length;
    const hasSelected = totalSelected > 0;
    const allSelected = totalSelected === option.options.length;
    return {
      selected: hasSelected && allSelected,
      indeterminate: hasSelected && !allSelected
    };
  };
  const getOptionProps2 = (option, index) => {
    var _a;
    const highlighted = option === highlightedOption;
    const groupState = isGroup(option.option) ? getGroupState(option.option) : void 0;
    const selected = __selectedOptions.indexOf(option) > -1 || !!(groupState === null || groupState === void 0 ? void 0 : groupState.selected);
    const nextOption = (_a = options[index + 1]) === null || _a === void 0 ? void 0 : _a.option;
    const isNextSelected = !!nextOption && isGroup(nextOption) ? getGroupState(nextOption).selected : __selectedOptions.indexOf(options[index + 1]) > -1;
    const optionProps = {
      key: index,
      option,
      highlighted,
      selected,
      isNextSelected,
      indeterminate: !!(groupState === null || groupState === void 0 ? void 0 : groupState.indeterminate),
      ["data-mouse-target"]: isHighlightable2(option) ? index : -1,
      id: getOptionId(menuId, index)
    };
    return optionProps;
  };
  const prevOpen = usePrevious(isOpen);
  (0, import_react15.useEffect)(() => {
    if (isOpen && !prevOpen && hasSelectedOption && !hasFilter) {
      setHighlightedIndexWithMouse(options.indexOf(__selectedOptions[0]));
    }
  }, [isOpen, __selectedOptions, hasSelectedOption, setHighlightedIndexWithMouse, options, prevOpen, hasFilter]);
  (0, import_react15.useEffect)(() => {
    var _a;
    if (isOpen) {
      (_a = activeRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventScroll: true });
    }
  }, [isOpen, activeRef]);
  useForwardFocus(externalRef, triggerRef);
  const highlightedGroupSelected = !!highlightedOption && isGroup(highlightedOption.option) && getGroupState(highlightedOption.option).selected;
  const announceSelected = !!highlightedOption && (__selectedOptions.indexOf(highlightedOption) > -1 || highlightedGroupSelected);
  return {
    isOpen,
    highlightedOption,
    highlightedIndex,
    highlightType,
    getTriggerProps,
    getDropdownProps,
    getMenuProps,
    getFilterProps,
    getOptionProps: getOptionProps2,
    highlightOption: highlightOptionWithKeyboard,
    selectOption,
    announceSelected
  };
}

// node_modules/@cloudscape-design/components/select/utils/use-native-search.js
var import_react17 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-debounce-callback/index.js
var import_react16 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/debounce.js
var DEBOUNCE_DEFAULT_DELAY = 200;
function debounce(func, delay = DEBOUNCE_DEFAULT_DELAY) {
  let timeout;
  return function(...args) {
    if (timeout) {
      clearTimeout(timeout);
    }
    timeout = setTimeout(() => {
      timeout = null;
      func(...args);
    }, delay);
  };
}

// node_modules/@cloudscape-design/components/internal/hooks/use-debounce-callback/index.js
function useDebounceCallback(callback, delay) {
  const callbackRef = (0, import_react16.useRef)();
  callbackRef.current = callback;
  return (0, import_react16.useCallback)(debounce((...args) => {
    if (callbackRef.current) {
      callbackRef.current(...args);
    }
  }, delay), []);
}

// node_modules/@cloudscape-design/components/select/utils/use-native-search.js
var isChar = (keyCode) => {
  return [0, KeyCode.enter, KeyCode.space, KeyCode.tab].indexOf(keyCode) === -1;
};
var isRepeatedChar = (str) => str.split("").every((c) => c === str[0]);
function findMatchingOption(options, searchText, currentHighlight, useInteractiveGroups) {
  const interactivityCheck = useInteractiveGroups ? isGroupInteractive : isInteractive;
  const filter = (searchText2) => filterOptions(options, searchText2, true).filter((option) => interactivityCheck(option));
  const matchingOptions = filter(searchText);
  if (matchingOptions.length === 1) {
    return matchingOptions[0];
  }
  if (currentHighlight && searchText.length > 1 && isRepeatedChar(searchText)) {
    const matchingOptions2 = filter(searchText[0]);
    if (matchingOptions2.length > 0) {
      let active = isGroup(currentHighlight) ? matchingOptions2.map(({ option }) => option).indexOf(currentHighlight) : matchingOptions2.map(({ option }) => option.value).indexOf(currentHighlight.value);
      active += 1;
      active = active % matchingOptions2.length;
      return matchingOptions2[active];
    }
  }
  if (matchingOptions.length > 0) {
    return matchingOptions[0];
  }
  return null;
}
function useNativeSearch({ isEnabled, options, highlightOption, highlightedOption, useInteractiveGroups }) {
  const value = (0, import_react17.useRef)("");
  const delayedResetValue = useDebounceCallback(() => value.current = "", 500);
  return (event) => {
    if (!isEnabled) {
      return;
    }
    const { charCode } = event;
    if (!isChar(charCode)) {
      return;
    }
    delayedResetValue();
    const newValue = value.current + String.fromCharCode(charCode);
    value.current = newValue;
    const nextHighlight = findMatchingOption(options, newValue, highlightedOption, useInteractiveGroups);
    if (nextHighlight) {
      highlightOption(nextHighlight);
    }
  };
}

// node_modules/@cloudscape-design/components/select/utils/use-load-items.js
var import_react18 = __toESM(require_react());
var useLoadItems = ({ onLoadItems, options, statusType }) => {
  const prevFilteringText = (0, import_react18.useRef)(void 0);
  const fireLoadItems = (filteringText) => {
    if (prevFilteringText.current === filteringText) {
      return;
    }
    prevFilteringText.current = filteringText;
    fireNonCancelableEvent(onLoadItems, { filteringText, firstPage: true, samePage: false });
  };
  const handleLoadMore = () => {
    const firstPage = options.length === 0;
    statusType === "pending" && fireNonCancelableEvent(onLoadItems, {
      firstPage,
      samePage: false,
      filteringText: prevFilteringText.current || ""
    });
  };
  const handleRecoveryClick = () => fireNonCancelableEvent(onLoadItems, {
    firstPage: false,
    samePage: true,
    filteringText: prevFilteringText.current || ""
  });
  return {
    fireLoadItems,
    handleLoadMore,
    handleRecoveryClick
  };
};

// node_modules/@cloudscape-design/components/select/utils/use-announcement.js
var import_react19 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/option/option-announcer.js
function defaultOptionDescription(option, parentGroup) {
  return [
    parentGroup && parentGroup.label,
    option.__labelPrefix,
    option.label || option.value,
    option.description,
    option.labelTag
  ].concat(option.tags).filter((el) => !!el).join(" ");
}
var option_announcer_default = defaultOptionDescription;

// node_modules/@cloudscape-design/components/select/utils/use-announcement.js
function useAnnouncement({ announceSelected, highlightedOption, getParent, selectedAriaLabel, renderHighlightedAriaLive }) {
  const prevAnnouncedGroup = (0, import_react19.useRef)(void 0);
  (0, import_react19.useEffect)(() => {
    if (highlightedOption) {
      const frameId = requestAnimationFrame(() => {
        prevAnnouncedGroup.current = getParent(highlightedOption);
      });
      return () => cancelAnimationFrame(frameId);
    }
  });
  if (!highlightedOption) {
    return "";
  }
  const option = highlightedOption.option;
  const parent = getParent(highlightedOption);
  const group = parent && parent !== prevAnnouncedGroup.current ? parent : void 0;
  if (renderHighlightedAriaLive) {
    return renderHighlightedAriaLive(option, group);
  }
  const selectedAnnouncement = announceSelected && selectedAriaLabel ? selectedAriaLabel : "";
  const defaultDescription = option_announcer_default(option, group);
  return [selectedAnnouncement, defaultDescription].filter(Boolean).join(" ");
}

// node_modules/@cloudscape-design/components/select/parts/plain-list.js
var import_react27 = __toESM(require_react());

// node_modules/@cloudscape-design/components/select/utils/render-options.js
var import_react26 = __toESM(require_react());

// node_modules/@cloudscape-design/components/select/parts/item.js
var import_react24 = __toESM(require_react());

// node_modules/@cloudscape-design/components/select/parts/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/select/parts/styles.scoped.css";
var styles_css_default8 = {
  "placeholder": "awsui_placeholder_dwuol_1fefq_93",
  "item": "awsui_item_dwuol_1fefq_98",
  "checkbox": "awsui_checkbox_dwuol_1fefq_102",
  "filter": "awsui_filter_dwuol_1fefq_111",
  "trigger": "awsui_trigger_dwuol_1fefq_116",
  "layout-strut": "awsui_layout-strut_dwuol_1fefq_122",
  "list-bottom": "awsui_list-bottom_dwuol_1fefq_128",
  "selected-icon": "awsui_selected-icon_dwuol_1fefq_132",
  "show-label-tag": "awsui_show-label-tag_dwuol_1fefq_136"
};

// node_modules/@cloudscape-design/components/internal/components/option/index.js
var import_react22 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/option/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/option/styles.scoped.css";
var styles_css_default9 = {
  "option": "awsui_option_1p2cx_6shcc_97",
  "disabled": "awsui_disabled_1p2cx_6shcc_115",
  "parent": "awsui_parent_1p2cx_6shcc_118",
  "highlighted": "awsui_highlighted_1p2cx_6shcc_121",
  "content": "awsui_content_1p2cx_6shcc_125",
  "label-content": "awsui_label-content_1p2cx_6shcc_132",
  "label": "awsui_label_1p2cx_6shcc_132",
  "tag": "awsui_tag_1p2cx_6shcc_139",
  "label-tag": "awsui_label-tag_1p2cx_6shcc_140",
  "label-prefix": "awsui_label-prefix_1p2cx_6shcc_151",
  "tags": "awsui_tags_1p2cx_6shcc_164",
  "description": "awsui_description_1p2cx_6shcc_165",
  "selected": "awsui_selected_1p2cx_6shcc_176",
  "icon": "awsui_icon_1p2cx_6shcc_190",
  "icon-size-big": "awsui_icon-size-big_1p2cx_6shcc_197",
  "filtering-match-highlight": "awsui_filtering-match-highlight_1p2cx_6shcc_201",
  "trigger-variant": "awsui_trigger-variant_1p2cx_6shcc_216"
};

// node_modules/@cloudscape-design/components/internal/components/option/option-parts.js
var import_react21 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/option/highlight-match.js
var import_react20 = __toESM(require_react());
var splitOnFiltering = (str, highlightText) => {
  const filteringPattern = highlightText.replace(/[-[\]/{}()*+?.\\^$|]/g, "\\$&");
  const regexp = new RegExp(filteringPattern, "gi");
  const noMatches = str.split(regexp);
  const matches = str.match(regexp);
  return { noMatches, matches };
};
var Highlight = ({ str }) => str ? import_react20.default.createElement("span", { className: clsx_m_default(styles_css_default9["filtering-match-highlight"]) }, str) : null;
function HighlightMatch({ str, highlightText }) {
  if (!str || !highlightText) {
    return import_react20.default.createElement("span", null, str);
  }
  if (str === highlightText) {
    return import_react20.default.createElement(Highlight, { str });
  }
  const { noMatches, matches } = splitOnFiltering(str, highlightText);
  const highlighted = [];
  noMatches.forEach((noMatch, idx) => {
    highlighted.push(import_react20.default.createElement("span", { key: `noMatch-${idx}` }, noMatch));
    if (matches && idx < matches.length) {
      highlighted.push(import_react20.default.createElement(Highlight, { key: `match-${idx}`, str: matches[idx] }));
    }
  });
  return import_react20.default.createElement("span", null, highlighted);
}

// node_modules/@cloudscape-design/components/internal/components/option/option-parts.js
var Label = ({ label, prefix, highlightText, triggerVariant }) => import_react21.default.createElement(
  "span",
  { className: clsx_m_default(styles_css_default9.label, triggerVariant && styles_css_default9["trigger-variant"]) },
  prefix && import_react21.default.createElement(
    "span",
    { className: clsx_m_default(styles_css_default9["label-prefix"], triggerVariant && styles_css_default9["trigger-variant"]) },
    prefix,
    " "
  ),
  import_react21.default.createElement(HighlightMatch, { str: label, highlightText })
);
var LabelTag = ({ labelTag, highlightText, triggerVariant }) => labelTag ? import_react21.default.createElement(
  "span",
  { className: clsx_m_default(styles_css_default9["label-tag"], triggerVariant && styles_css_default9["trigger-variant"]) },
  import_react21.default.createElement(HighlightMatch, { str: labelTag, highlightText })
) : null;
var Description = ({ description, highlightedOption, highlightText, selectedOption, triggerVariant }) => description ? import_react21.default.createElement(
  "span",
  { className: clsx_m_default(styles_css_default9.description, {
    [styles_css_default9["trigger-variant"]]: triggerVariant,
    [styles_css_default9.highlighted]: highlightedOption,
    [styles_css_default9.selected]: selectedOption
  }) },
  import_react21.default.createElement(HighlightMatch, { str: description, highlightText })
) : null;
var Tags = ({ tags, highlightedOption, highlightText, selectedOption, triggerVariant }) => tags ? import_react21.default.createElement("span", { className: clsx_m_default(styles_css_default9.tags, {
  [styles_css_default9.highlighted]: highlightedOption,
  [styles_css_default9.selected]: selectedOption
}) }, tags.map((tag, idx) => import_react21.default.createElement(
  "span",
  { key: idx, className: clsx_m_default(styles_css_default9.tag, triggerVariant && styles_css_default9["trigger-variant"]) },
  import_react21.default.createElement(HighlightMatch, { str: tag, highlightText })
))) : null;
var FilteringTags = ({ filteringTags, highlightedOption, highlightText, selectedOption, triggerVariant }) => {
  if (!highlightText || !filteringTags) {
    return null;
  }
  const searchElement = highlightText.toLowerCase();
  return import_react21.default.createElement("span", { className: clsx_m_default(styles_css_default9.tags, {
    [styles_css_default9.highlighted]: highlightedOption,
    [styles_css_default9.selected]: selectedOption
  }) }, filteringTags.map((filteringTag, key) => {
    const match2 = filteringTag.toLowerCase().indexOf(searchElement) !== -1;
    if (match2) {
      return import_react21.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default9.tag, triggerVariant && styles_css_default9["trigger-variant"]), key, "aria-disabled": true },
        import_react21.default.createElement(HighlightMatch, { str: filteringTag, highlightText })
      );
    }
    return null;
  }));
};
var OptionIcon = (props2) => {
  if (!props2.name && !props2.url && !props2.svg) {
    return null;
  }
  return import_react21.default.createElement(
    "span",
    { className: clsx_m_default(styles_css_default9.icon, props2.size === "big" && [styles_css_default9[`icon-size-big`]]) },
    import_react21.default.createElement(internal_default, Object.assign({}, props2))
  );
};

// node_modules/@cloudscape-design/components/internal/components/option/index.js
function validateStringValue(value, propertyName) {
  if (typeof value !== "undefined" && typeof value !== "string") {
    warnOnce("DropdownOption", `This component only supports string values, but "option.${propertyName}" has ${typeof value} type. The component may work incorrectly.`);
  }
}
var Option = (_a) => {
  var _b, _c, _d, _e;
  var { option, highlightText, triggerVariant = false, isGroupOption = false, isGenericGroup = true, highlightedOption = false, selectedOption = false } = _a, restProps = __rest(_a, ["option", "highlightText", "triggerVariant", "isGroupOption", "isGenericGroup", "highlightedOption", "selectedOption"]);
  if (!option) {
    return null;
  }
  const { disabled } = option;
  const baseProps = getBaseProps(restProps);
  if (isDevelopment) {
    validateStringValue(option.label, "label");
    validateStringValue(option.description, "description");
    validateStringValue(option.labelTag, "labelTag");
    (_b = option.tags) === null || _b === void 0 ? void 0 : _b.forEach((tag, index) => {
      validateStringValue(tag, `tags[${index}]`);
    });
    (_c = option.filteringTags) === null || _c === void 0 ? void 0 : _c.forEach((tag, index) => {
      validateStringValue(tag, `filteringTags[${index}]`);
    });
  }
  const className = clsx_m_default(styles_css_default9.option, disabled && styles_css_default9.disabled, isGroupOption && styles_css_default9.parent, highlightedOption && styles_css_default9.highlighted);
  const icon = option.__customIcon || import_react22.default.createElement(OptionIcon, { name: option.iconName, url: option.iconUrl, svg: option.iconSvg, alt: option.iconAlt, size: option.description || option.tags ? "big" : "normal" });
  const genericGroupProps = isGenericGroup ? {
    title: (_d = option.label) !== null && _d !== void 0 ? _d : option.value,
    "aria-disabled": disabled
  } : void 0;
  return import_react22.default.createElement(
    "span",
    Object.assign({ "data-value": option.value, className, lang: option.lang }, genericGroupProps, baseProps),
    icon,
    import_react22.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default9.content) },
      import_react22.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default9["label-content"]) },
        import_react22.default.createElement(Label, { label: (_e = option.label) !== null && _e !== void 0 ? _e : option.value, prefix: option.__labelPrefix, highlightText, triggerVariant }),
        import_react22.default.createElement(LabelTag, { labelTag: option.labelTag, highlightText, triggerVariant })
      ),
      import_react22.default.createElement(Description, { description: option.description, highlightedOption, selectedOption, highlightText, triggerVariant }),
      import_react22.default.createElement(Tags, { tags: option.tags, highlightedOption, selectedOption, highlightText, triggerVariant }),
      import_react22.default.createElement(FilteringTags, { filteringTags: option.filteringTags, highlightedOption, selectedOption, highlightText, triggerVariant })
    )
  );
};
var option_default = Option;

// node_modules/@cloudscape-design/components/internal/components/selectable-item/index.js
var import_react23 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/selectable-item/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/selectable-item/styles.scoped.css";
var styles_css_default10 = {
  "selectable-item": "awsui_selectable-item_15o6u_1chqv_93",
  "pad-bottom": "awsui_pad-bottom_15o6u_1chqv_115",
  "has-background": "awsui_has-background_15o6u_1chqv_124",
  "highlighted": "awsui_highlighted_15o6u_1chqv_127",
  "selected": "awsui_selected_15o6u_1chqv_127",
  "disabled": "awsui_disabled_15o6u_1chqv_141",
  "next-item-selected": "awsui_next-item-selected_15o6u_1chqv_149",
  "is-keyboard": "awsui_is-keyboard_15o6u_1chqv_157",
  "parent": "awsui_parent_15o6u_1chqv_161",
  "interactiveGroups": "awsui_interactiveGroups_15o6u_1chqv_165",
  "child": "awsui_child_15o6u_1chqv_180",
  "virtual": "awsui_virtual_15o6u_1chqv_195",
  "measure-strut": "awsui_measure-strut_15o6u_1chqv_206",
  "measure-strut-first": "awsui_measure-strut-first_15o6u_1chqv_215",
  "screenreader-content": "awsui_screenreader-content_15o6u_1chqv_219",
  "option-content": "awsui_option-content_15o6u_1chqv_225"
};

// node_modules/@cloudscape-design/components/internal/components/selectable-item/index.js
var SelectableItem = (_a, ref) => {
  var { children: content, ariaSelected, ariaChecked, selected, highlighted, disabled, hasBackground, isParent, isChild, virtualPosition, padBottom, isNextSelected, useInteractiveGroups, screenReaderContent, ariaPosinset, ariaSetsize, highlightType } = _a, restProps = __rest(_a, ["children", "ariaSelected", "ariaChecked", "selected", "highlighted", "disabled", "hasBackground", "isParent", "isChild", "virtualPosition", "padBottom", "isNextSelected", "useInteractiveGroups", "screenReaderContent", "ariaPosinset", "ariaSetsize", "highlightType"]);
  const _b = getBaseProps(restProps), { className } = _b, rest = __rest(_b, ["className"]);
  const classNames = clsx_m_default(className, styles_css_default10["selectable-item"], {
    [styles_css_default10.selected]: selected,
    [styles_css_default10.highlighted]: highlighted,
    [styles_css_default10["has-background"]]: hasBackground,
    [styles_css_default10.parent]: isParent,
    [styles_css_default10.child]: isChild,
    [styles_css_default10["is-keyboard"]]: highlightType === "keyboard",
    [styles_css_default10.disabled]: disabled,
    [styles_css_default10.virtual]: virtualPosition !== void 0,
    [styles_css_default10["pad-bottom"]]: padBottom,
    [styles_css_default10["next-item-selected"]]: isNextSelected,
    [styles_css_default10.interactiveGroups]: useInteractiveGroups
  });
  const contentRef = (0, import_react23.useRef)(null);
  const screenReaderContentRef = (0, import_react23.useRef)(null);
  (0, import_react23.useLayoutEffect)(() => {
    if (highlighted && screenReaderContent) {
      if (contentRef.current) {
        contentRef.current.setAttribute("aria-hidden", "true");
      }
      if (screenReaderContentRef.current) {
        screenReaderContentRef.current.textContent = screenReaderContent;
      }
    }
  }, [highlighted, screenReaderContent, contentRef, screenReaderContentRef]);
  const style = virtualPosition !== void 0 ? {
    transform: `translateY(${virtualPosition}px)`
  } : void 0;
  const a11yProperties = {
    "aria-disabled": disabled
  };
  if (isParent && !useInteractiveGroups) {
    a11yProperties["aria-hidden"] = true;
  }
  if (ariaSelected !== void 0) {
    a11yProperties["aria-selected"] = ariaSelected;
  }
  if (ariaChecked !== void 0) {
    a11yProperties["aria-checked"] = ariaChecked;
  }
  if (ariaPosinset && ariaSetsize) {
    a11yProperties["aria-posinset"] = ariaPosinset;
    a11yProperties["aria-setsize"] = ariaSetsize;
  }
  return import_react23.default.createElement(
    "li",
    Object.assign({ role: "option", className: classNames, style }, a11yProperties, rest),
    import_react23.default.createElement("div", { className: styles_css_default10["option-content"], ref: contentRef }, content),
    import_react23.default.createElement("div", { className: styles_css_default10["measure-strut"], ref }),
    import_react23.default.createElement("div", { className: styles_css_default10["screenreader-content"], ref: screenReaderContentRef })
  );
};
var selectable_item_default = import_react23.default.forwardRef(SelectableItem);

// node_modules/@cloudscape-design/components/select/parts/item.js
var Item = (_a, ref) => {
  var { option, highlighted, selected, filteringValue, hasCheckbox, virtualPosition, padBottom, isNextSelected, screenReaderContent, ariaPosinset, ariaSetsize, highlightType } = _a, restProps = __rest(_a, ["option", "highlighted", "selected", "filteringValue", "hasCheckbox", "virtualPosition", "padBottom", "isNextSelected", "screenReaderContent", "ariaPosinset", "ariaSetsize", "highlightType"]);
  const baseProps = getBaseProps(restProps);
  const isParent = option.type === "parent";
  const isChild = option.type === "child";
  const wrappedOption = option.option;
  const disabled = option.disabled || wrappedOption.disabled;
  return import_react24.default.createElement(
    selectable_item_default,
    Object.assign({ ariaSelected: Boolean(selected), selected, isNextSelected, highlighted, disabled: option.disabled, isParent, isChild, ref, virtualPosition, padBottom, screenReaderContent, ariaPosinset, ariaSetsize, highlightType }, baseProps),
    import_react24.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default8.item, !isParent && wrappedOption.labelTag && styles_css_default8["show-label-tag"]) },
      hasCheckbox && !isParent && import_react24.default.createElement(
        "div",
        { className: styles_css_default8.checkbox },
        import_react24.default.createElement(checkbox_icon_default, { checked: selected || false, disabled: option.disabled })
      ),
      isParent ? import_react24.default.createElement("span", null, wrappedOption.label || wrappedOption.value) : import_react24.default.createElement(option_default, { option: Object.assign(Object.assign({}, wrappedOption), { disabled }), highlightedOption: highlighted, selectedOption: selected, highlightText: filteringValue }),
      !hasCheckbox && !isParent && selected && import_react24.default.createElement(
        "div",
        { className: styles_css_default8["selected-icon"] },
        import_react24.default.createElement(internal_default, { name: "check" })
      )
    )
  );
};
var item_default = import_react24.default.memo(import_react24.default.forwardRef(Item));

// node_modules/@cloudscape-design/components/select/parts/multiselect-item.js
var import_react25 = __toESM(require_react());
var MultiSelectItem = (_a, ref) => {
  var { option, highlighted, selected, filteringValue, hasCheckbox, virtualPosition, padBottom, isNextSelected, indeterminate, screenReaderContent, ariaPosinset, ariaSetsize, highlightType } = _a, restProps = __rest(_a, ["option", "highlighted", "selected", "filteringValue", "hasCheckbox", "virtualPosition", "padBottom", "isNextSelected", "indeterminate", "screenReaderContent", "ariaPosinset", "ariaSetsize", "highlightType"]);
  const baseProps = getBaseProps(restProps);
  const isParent = option.type === "parent";
  const isChild = option.type === "child";
  const wrappedOption = option.option;
  const disabled = option.disabled || wrappedOption.disabled;
  const className = clsx_m_default(styles_css_default8.item, {
    [styles_css_default8.disabled]: disabled
  });
  return import_react25.default.createElement(
    selectable_item_default,
    Object.assign({ ariaChecked: isParent && indeterminate ? "mixed" : Boolean(selected), selected, isNextSelected, highlighted, disabled, isParent, isChild, highlightType, ref, virtualPosition, padBottom, useInteractiveGroups: true, screenReaderContent, ariaPosinset, ariaSetsize }, baseProps),
    import_react25.default.createElement(
      "div",
      { className },
      hasCheckbox && import_react25.default.createElement(
        "div",
        { className: styles_css_default8.checkbox },
        import_react25.default.createElement(checkbox_icon_default, { checked: selected, indeterminate: isParent && indeterminate, disabled: option.disabled })
      ),
      import_react25.default.createElement(option_default, { option: Object.assign(Object.assign({}, wrappedOption), { disabled }), highlightedOption: highlighted, selectedOption: selected, highlightText: filteringValue, isGroupOption: isParent })
    )
  );
};
var multiselect_item_default = import_react25.default.memo(import_react25.default.forwardRef(MultiSelectItem));

// node_modules/@cloudscape-design/components/select/utils/get-item-props.js
var getItemProps = ({ option, index, getOptionProps: getOptionProps2, filteringValue, checkboxes = false }) => {
  const optionProps = getOptionProps2(option, index);
  optionProps.filteringValue = filteringValue;
  const { inGroupIndex, groupIndex, throughIndex } = getTestOptionIndexes(option) || {};
  return Object.assign(Object.assign({}, optionProps), { hasCheckbox: checkboxes, ["data-group-index"]: groupIndex, ["data-child-index"]: inGroupIndex, ["data-test-index"]: throughIndex });
};

// node_modules/@cloudscape-design/components/select/utils/render-options.js
var renderOptions = ({ options, getOptionProps: getOptionProps2, filteringValue, highlightType, checkboxes = false, hasDropdownStatus, virtualItems, useInteractiveGroups, screenReaderContent, ariaSetsize }) => {
  return options.map((option, index) => {
    const virtualItem = virtualItems && virtualItems[index];
    const globalIndex = virtualItem ? virtualItem.index : index;
    const props2 = getItemProps({
      option,
      index: globalIndex,
      getOptionProps: getOptionProps2,
      filteringValue,
      checkboxes
    });
    const isLastItem = index === options.length - 1;
    const padBottom = !hasDropdownStatus && isLastItem;
    const ListItem = useInteractiveGroups ? multiselect_item_default : item_default;
    return import_react26.default.createElement(ListItem, Object.assign({ key: globalIndex }, props2, { virtualPosition: virtualItem && virtualItem.start, ref: virtualItem && virtualItem.measureRef, padBottom, screenReaderContent, ariaPosinset: globalIndex + 1, ariaSetsize, highlightType }));
  });
};

// node_modules/@cloudscape-design/components/select/parts/plain-list.js
var PlainList = ({ menuProps, getOptionProps: getOptionProps2, filteredOptions, filteringValue, highlightType, checkboxes, hasDropdownStatus, listBottom, useInteractiveGroups, screenReaderContent }, ref) => {
  const menuRef = menuProps.ref;
  (0, import_react27.useImperativeHandle)(ref, () => (index) => {
    var _a;
    const item = (_a = menuRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-mouse-target="${index}"]`);
    if (highlightType === "keyboard" && item) {
      scrollElementIntoView(item);
    }
  }, [highlightType, menuRef]);
  return import_react27.default.createElement(
    options_list_default,
    Object.assign({}, menuProps),
    renderOptions({
      options: filteredOptions,
      getOptionProps: getOptionProps2,
      filteringValue,
      highlightType,
      checkboxes,
      hasDropdownStatus,
      useInteractiveGroups,
      screenReaderContent
    }),
    listBottom ? import_react27.default.createElement("li", { role: "option", className: styles_css_default8["list-bottom"] }, listBottom) : null
  );
};
var plain_list_default = (0, import_react27.forwardRef)(PlainList);

// node_modules/@cloudscape-design/components/select/parts/virtual-list.js
var import_react30 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-virtual/index.js
var import_react29 = __toESM(require_react());

// node_modules/@cloudscape-design/components/node_modules/react-virtual/dist/react-virtual.mjs
var import_react28 = __toESM(require_react(), 1);
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var props = ["bottom", "height", "left", "right", "top", "width"];
var rectChanged = function rectChanged2(a2, b) {
  if (a2 === void 0) {
    a2 = {};
  }
  if (b === void 0) {
    b = {};
  }
  return props.some(function(prop) {
    return a2[prop] !== b[prop];
  });
};
var observedNodes = /* @__PURE__ */ new Map();
var rafId;
var run = function run2() {
  var changedStates = [];
  observedNodes.forEach(function(state, node) {
    var newRect = node.getBoundingClientRect();
    if (rectChanged(newRect, state.rect)) {
      state.rect = newRect;
      changedStates.push(state);
    }
  });
  changedStates.forEach(function(state) {
    state.callbacks.forEach(function(cb) {
      return cb(state.rect);
    });
  });
  rafId = window.requestAnimationFrame(run2);
};
function observeRect(node, cb) {
  return {
    observe: function observe() {
      var wasEmpty = observedNodes.size === 0;
      if (observedNodes.has(node)) {
        observedNodes.get(node).callbacks.push(cb);
      } else {
        observedNodes.set(node, {
          rect: void 0,
          hasRectChanged: false,
          callbacks: [cb]
        });
      }
      if (wasEmpty)
        run();
    },
    unobserve: function unobserve() {
      var state = observedNodes.get(node);
      if (state) {
        var index = state.callbacks.indexOf(cb);
        if (index >= 0)
          state.callbacks.splice(index, 1);
        if (!state.callbacks.length)
          observedNodes["delete"](node);
        if (!observedNodes.size)
          cancelAnimationFrame(rafId);
      }
    }
  };
}
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? import_react28.default.useLayoutEffect : import_react28.default.useEffect;
function useRect(nodeRef, initialRect) {
  if (initialRect === void 0) {
    initialRect = {
      width: 0,
      height: 0
    };
  }
  var _React$useState = import_react28.default.useState(nodeRef.current), element = _React$useState[0], setElement = _React$useState[1];
  var _React$useReducer = import_react28.default.useReducer(rectReducer, initialRect), rect = _React$useReducer[0], dispatch = _React$useReducer[1];
  var initialRectSet = import_react28.default.useRef(false);
  useIsomorphicLayoutEffect(function() {
    if (nodeRef.current !== element) {
      setElement(nodeRef.current);
    }
  });
  useIsomorphicLayoutEffect(function() {
    if (element && !initialRectSet.current) {
      initialRectSet.current = true;
      var _rect = element.getBoundingClientRect();
      dispatch({
        rect: _rect
      });
    }
  }, [element]);
  import_react28.default.useEffect(function() {
    if (!element) {
      return;
    }
    var observer = observeRect(element, function(rect2) {
      dispatch({
        rect: rect2
      });
    });
    observer.observe();
    return function() {
      observer.unobserve();
    };
  }, [element]);
  return rect;
}
function rectReducer(state, action) {
  var rect = action.rect;
  if (state.height !== rect.height || state.width !== rect.width) {
    return rect;
  }
  return state;
}
var defaultEstimateSize = function defaultEstimateSize2() {
  return 50;
};
var defaultKeyExtractor = function defaultKeyExtractor2(index) {
  return index;
};
var defaultMeasureSize = function defaultMeasureSize2(el, horizontal) {
  var key = horizontal ? "offsetWidth" : "offsetHeight";
  return el[key];
};
var defaultRangeExtractor = function defaultRangeExtractor2(range2) {
  var start = Math.max(range2.start - range2.overscan, 0);
  var end = Math.min(range2.end + range2.overscan, range2.size - 1);
  var arr = [];
  for (var i = start; i <= end; i++) {
    arr.push(i);
  }
  return arr;
};
function useVirtual(_ref) {
  var _measurements;
  var _ref$size = _ref.size, size = _ref$size === void 0 ? 0 : _ref$size, _ref$estimateSize = _ref.estimateSize, estimateSize = _ref$estimateSize === void 0 ? defaultEstimateSize : _ref$estimateSize, _ref$overscan = _ref.overscan, overscan = _ref$overscan === void 0 ? 1 : _ref$overscan, _ref$paddingStart = _ref.paddingStart, paddingStart = _ref$paddingStart === void 0 ? 0 : _ref$paddingStart, _ref$paddingEnd = _ref.paddingEnd, paddingEnd = _ref$paddingEnd === void 0 ? 0 : _ref$paddingEnd, parentRef = _ref.parentRef, horizontal = _ref.horizontal, scrollToFn = _ref.scrollToFn, useObserver = _ref.useObserver, initialRect = _ref.initialRect, onScrollElement = _ref.onScrollElement, scrollOffsetFn = _ref.scrollOffsetFn, _ref$keyExtractor = _ref.keyExtractor, keyExtractor = _ref$keyExtractor === void 0 ? defaultKeyExtractor : _ref$keyExtractor, _ref$measureSize = _ref.measureSize, measureSize = _ref$measureSize === void 0 ? defaultMeasureSize : _ref$measureSize, _ref$rangeExtractor = _ref.rangeExtractor, rangeExtractor = _ref$rangeExtractor === void 0 ? defaultRangeExtractor : _ref$rangeExtractor;
  var sizeKey = horizontal ? "width" : "height";
  var scrollKey = horizontal ? "scrollLeft" : "scrollTop";
  var latestRef = import_react28.default.useRef({
    scrollOffset: 0,
    measurements: []
  });
  var _React$useState = import_react28.default.useState(0), scrollOffset = _React$useState[0], setScrollOffset = _React$useState[1];
  latestRef.current.scrollOffset = scrollOffset;
  var useMeasureParent = useObserver || useRect;
  var _useMeasureParent = useMeasureParent(parentRef, initialRect), outerSize = _useMeasureParent[sizeKey];
  latestRef.current.outerSize = outerSize;
  var defaultScrollToFn = import_react28.default.useCallback(function(offset) {
    if (parentRef.current) {
      parentRef.current[scrollKey] = offset;
    }
  }, [parentRef, scrollKey]);
  var resolvedScrollToFn = scrollToFn || defaultScrollToFn;
  scrollToFn = import_react28.default.useCallback(function(offset) {
    resolvedScrollToFn(offset, defaultScrollToFn);
  }, [defaultScrollToFn, resolvedScrollToFn]);
  var _React$useState2 = import_react28.default.useState({}), measuredCache = _React$useState2[0], setMeasuredCache = _React$useState2[1];
  var measure = import_react28.default.useCallback(function() {
    return setMeasuredCache({});
  }, []);
  var pendingMeasuredCacheIndexesRef = import_react28.default.useRef([]);
  var measurements = import_react28.default.useMemo(function() {
    var min3 = pendingMeasuredCacheIndexesRef.current.length > 0 ? Math.min.apply(Math, pendingMeasuredCacheIndexesRef.current) : 0;
    pendingMeasuredCacheIndexesRef.current = [];
    var measurements2 = latestRef.current.measurements.slice(0, min3);
    for (var i = min3; i < size; i++) {
      var key = keyExtractor(i);
      var measuredSize = measuredCache[key];
      var _start = measurements2[i - 1] ? measurements2[i - 1].end : paddingStart;
      var _size = typeof measuredSize === "number" ? measuredSize : estimateSize(i);
      var _end = _start + _size;
      measurements2[i] = {
        index: i,
        start: _start,
        size: _size,
        end: _end,
        key
      };
    }
    return measurements2;
  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor]);
  var totalSize = (((_measurements = measurements[size - 1]) == null ? void 0 : _measurements.end) || paddingStart) + paddingEnd;
  latestRef.current.measurements = measurements;
  latestRef.current.totalSize = totalSize;
  var element = onScrollElement ? onScrollElement.current : parentRef.current;
  var scrollOffsetFnRef = import_react28.default.useRef(scrollOffsetFn);
  scrollOffsetFnRef.current = scrollOffsetFn;
  useIsomorphicLayoutEffect(function() {
    if (!element) {
      setScrollOffset(0);
      return;
    }
    var onScroll = function onScroll2(event) {
      var offset = scrollOffsetFnRef.current ? scrollOffsetFnRef.current(event) : element[scrollKey];
      setScrollOffset(offset);
    };
    onScroll();
    element.addEventListener("scroll", onScroll, {
      capture: false,
      passive: true
    });
    return function() {
      element.removeEventListener("scroll", onScroll);
    };
  }, [element, scrollKey]);
  var _calculateRange = calculateRange(latestRef.current), start = _calculateRange.start, end = _calculateRange.end;
  var indexes = import_react28.default.useMemo(function() {
    return rangeExtractor({
      start,
      end,
      overscan,
      size: measurements.length
    });
  }, [start, end, overscan, measurements.length, rangeExtractor]);
  var measureSizeRef = import_react28.default.useRef(measureSize);
  measureSizeRef.current = measureSize;
  var virtualItems = import_react28.default.useMemo(function() {
    var virtualItems2 = [];
    var _loop = function _loop2(k3, len2) {
      var i = indexes[k3];
      var measurement = measurements[i];
      var item = _extends(_extends({}, measurement), {}, {
        measureRef: function measureRef(el) {
          if (el) {
            var measuredSize = measureSizeRef.current(el, horizontal);
            if (measuredSize !== item.size) {
              var _scrollOffset = latestRef.current.scrollOffset;
              if (item.start < _scrollOffset) {
                defaultScrollToFn(_scrollOffset + (measuredSize - item.size));
              }
              pendingMeasuredCacheIndexesRef.current.push(i);
              setMeasuredCache(function(old) {
                var _extends2;
                return _extends(_extends({}, old), {}, (_extends2 = {}, _extends2[item.key] = measuredSize, _extends2));
              });
            }
          }
        }
      });
      virtualItems2.push(item);
    };
    for (var k2 = 0, len = indexes.length; k2 < len; k2++) {
      _loop(k2);
    }
    return virtualItems2;
  }, [indexes, defaultScrollToFn, horizontal, measurements]);
  var mountedRef = import_react28.default.useRef(false);
  useIsomorphicLayoutEffect(function() {
    if (mountedRef.current) {
      setMeasuredCache({});
    }
    mountedRef.current = true;
  }, [estimateSize]);
  var scrollToOffset = import_react28.default.useCallback(function(toOffset, _temp) {
    var _ref2 = _temp === void 0 ? {} : _temp, _ref2$align = _ref2.align, align = _ref2$align === void 0 ? "start" : _ref2$align;
    var _latestRef$current = latestRef.current, scrollOffset2 = _latestRef$current.scrollOffset, outerSize2 = _latestRef$current.outerSize;
    if (align === "auto") {
      if (toOffset <= scrollOffset2) {
        align = "start";
      } else if (toOffset >= scrollOffset2 + outerSize2) {
        align = "end";
      } else {
        align = "start";
      }
    }
    if (align === "start") {
      scrollToFn(toOffset);
    } else if (align === "end") {
      scrollToFn(toOffset - outerSize2);
    } else if (align === "center") {
      scrollToFn(toOffset - outerSize2 / 2);
    }
  }, [scrollToFn]);
  var tryScrollToIndex = import_react28.default.useCallback(function(index, _temp2) {
    var _ref3 = _temp2 === void 0 ? {} : _temp2, _ref3$align = _ref3.align, align = _ref3$align === void 0 ? "auto" : _ref3$align, rest = _objectWithoutPropertiesLoose(_ref3, ["align"]);
    var _latestRef$current2 = latestRef.current, measurements2 = _latestRef$current2.measurements, scrollOffset2 = _latestRef$current2.scrollOffset, outerSize2 = _latestRef$current2.outerSize;
    var measurement = measurements2[Math.max(0, Math.min(index, size - 1))];
    if (!measurement) {
      return;
    }
    if (align === "auto") {
      if (measurement.end >= scrollOffset2 + outerSize2) {
        align = "end";
      } else if (measurement.start <= scrollOffset2) {
        align = "start";
      } else {
        return;
      }
    }
    var toOffset = align === "center" ? measurement.start + measurement.size / 2 : align === "end" ? measurement.end : measurement.start;
    scrollToOffset(toOffset, _extends({
      align
    }, rest));
  }, [scrollToOffset, size]);
  var scrollToIndex = import_react28.default.useCallback(function() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    tryScrollToIndex.apply(void 0, args);
    requestAnimationFrame(function() {
      tryScrollToIndex.apply(void 0, args);
    });
  }, [tryScrollToIndex]);
  return {
    virtualItems,
    totalSize,
    scrollToOffset,
    scrollToIndex,
    measure
  };
}
var findNearestBinarySearch = function findNearestBinarySearch2(low, high, getCurrentValue, value) {
  while (low <= high) {
    var middle = (low + high) / 2 | 0;
    var currentValue = getCurrentValue(middle);
    if (currentValue < value) {
      low = middle + 1;
    } else if (currentValue > value) {
      high = middle - 1;
    } else {
      return middle;
    }
  }
  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};
function calculateRange(_ref4) {
  var measurements = _ref4.measurements, outerSize = _ref4.outerSize, scrollOffset = _ref4.scrollOffset;
  var size = measurements.length - 1;
  var getOffset = function getOffset2(index) {
    return measurements[index].start;
  };
  var start = findNearestBinarySearch(0, size, getOffset, scrollOffset);
  var end = start;
  while (end < size && measurements[end].end < scrollOffset + outerSize) {
    end++;
  }
  return {
    start,
    end
  };
}

// node_modules/@cloudscape-design/components/internal/hooks/use-virtual/index.js
var MAX_ITEM_MOUNTS = 100;
function useVirtual2({ items, parentRef, estimateSize }) {
  const rowVirtualizer = useVirtual({ size: items.length, parentRef, estimateSize, overscan: 5 });
  const measuresCache = (0, import_react29.useRef)(/* @__PURE__ */ new WeakMap());
  const indicesKey = rowVirtualizer.virtualItems.map((item) => `${item.index}`).join(":");
  (0, import_react29.useEffect)(() => {
    measuresCache.current = /* @__PURE__ */ new WeakMap();
  }, [indicesKey, items, estimateSize]);
  const virtualItems = (0, import_react29.useMemo)(() => rowVirtualizer.virtualItems.map((virtualItem) => Object.assign(Object.assign({}, virtualItem), { measureRef: (node) => {
    var _a;
    const mountedCount = (_a = measuresCache.current.get(items[virtualItem.index])) !== null && _a !== void 0 ? _a : 0;
    if (mountedCount < MAX_ITEM_MOUNTS) {
      virtualItem.measureRef(node);
      measuresCache.current.set(items[virtualItem.index], mountedCount + 1);
    }
  } })), [items, rowVirtualizer.virtualItems]);
  return {
    virtualItems,
    totalSize: rowVirtualizer.totalSize,
    scrollToIndex: rowVirtualizer.scrollToIndex
  };
}

// node_modules/@cloudscape-design/components/select/parts/virtual-list.js
var VirtualList = (props2, ref) => {
  return props2.menuProps.open ? import_react30.default.createElement(VirtualListOpen, Object.assign({}, props2, { ref })) : import_react30.default.createElement(VirtualListClosed, Object.assign({}, props2, { ref }));
};
var VirtualListOpen = (0, import_react30.forwardRef)(({ menuProps, getOptionProps: getOptionProps2, filteredOptions, filteringValue, highlightType, checkboxes, hasDropdownStatus, listBottom, useInteractiveGroups, screenReaderContent }, ref) => {
  const [width, menuMeasureRef] = useContainerQuery((rect) => rect.width, []);
  const menuRefObject = (0, import_react30.useRef)(null);
  const menuRef = useMergeRefs(menuMeasureRef, menuRefObject, menuProps.ref);
  const { virtualItems, totalSize, scrollToIndex } = useVirtual2({
    items: filteredOptions,
    parentRef: menuRefObject,
    estimateSize: (0, import_react30.useCallback)(() => 31, [width, filteringValue])
  });
  (0, import_react30.useImperativeHandle)(ref, () => (index) => {
    if (highlightType === "keyboard") {
      scrollToIndex(index);
    }
  }, [highlightType, scrollToIndex]);
  const finalOptions = renderOptions({
    options: virtualItems.map(({ index }) => filteredOptions[index]),
    getOptionProps: getOptionProps2,
    filteringValue,
    highlightType,
    checkboxes,
    hasDropdownStatus,
    virtualItems,
    useInteractiveGroups,
    screenReaderContent,
    ariaSetsize: filteredOptions.length
  });
  return import_react30.default.createElement(
    options_list_default,
    Object.assign({}, menuProps, { ref: menuRef }),
    import_react30.default.createElement("div", { "aria-hidden": "true", key: "total-size", className: styles_css_default8["layout-strut"], style: { height: totalSize } }),
    finalOptions,
    listBottom ? import_react30.default.createElement("li", { role: "option", className: styles_css_default8["list-bottom"] }, listBottom) : null
  );
});
var VirtualListClosed = (0, import_react30.forwardRef)(({ menuProps, listBottom }, ref) => {
  (0, import_react30.useImperativeHandle)(ref, () => () => {
  }, []);
  return import_react30.default.createElement(options_list_default, Object.assign({}, menuProps, { ref: menuProps.ref }), listBottom ? import_react30.default.createElement("li", { role: "option", className: styles_css_default8["list-bottom"] }, listBottom) : null);
});
var virtual_list_default = (0, import_react30.forwardRef)(VirtualList);

// node_modules/@cloudscape-design/components/select/utils/check-option-value-field.js
function checkOptionValueField(componentName2, propertyName, propertyValue) {
  if (isDevelopment) {
    if (!propertyValue) {
      return;
    }
    const valuePropertyMissing = !propertyValue.every((element) => {
      return "options" in element || "value" in element;
    });
    if (valuePropertyMissing) {
      warnOnce(componentName2, `You provided an \`${propertyName}\` prop where at least one non-group array element is missing the \`value\` field. This field is required for all options without sub-items.`);
    }
  }
}

// node_modules/@cloudscape-design/components/select/parts/filter.js
var import_react33 = __toESM(require_react());

// node_modules/@cloudscape-design/components/input/internal.js
var import_react32 = __toESM(require_react());

// node_modules/@cloudscape-design/components/input/utils.js
var import_react31 = __toESM(require_react());
var useSearchProps = (type, disabled, readOnly, value, inputRef, onChange) => {
  const searchProps = {};
  const handleIconClick = (0, import_react31.useCallback)(() => {
    var _a;
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    onChange("");
  }, [inputRef, onChange]);
  if (type === "search" || type === "visualSearch") {
    searchProps.__leftIcon = "search";
    if (!disabled && !readOnly && value) {
      searchProps.__rightIcon = "close";
      searchProps.__onRightIconClick = handleIconClick;
    }
  }
  return searchProps;
};
var convertAutoComplete = (propertyValue = false) => {
  if (propertyValue === true) {
    return "on";
  }
  return propertyValue || "off";
};

// node_modules/@cloudscape-design/components/input/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/input/styles.scoped.css";
var styles_css_default11 = {
  "root": "awsui_root_2rhyz_19bat_93",
  "input": "awsui_input_2rhyz_19bat_97",
  "input-readonly": "awsui_input-readonly_2rhyz_19bat_120",
  "input-invalid": "awsui_input-invalid_2rhyz_19bat_181",
  "input-has-icon-left": "awsui_input-has-icon-left_2rhyz_19bat_192",
  "input-type-search": "awsui_input-type-search_2rhyz_19bat_197",
  "input-has-icon-right": "awsui_input-has-icon-right_2rhyz_19bat_213",
  "input-has-no-border-radius": "awsui_input-has-no-border-radius_2rhyz_19bat_216",
  "input-container": "awsui_input-container_2rhyz_19bat_220",
  "input-icon-left": "awsui_input-icon-left_2rhyz_19bat_225",
  "input-icon-right": "awsui_input-icon-right_2rhyz_19bat_232",
  "input-button-right": "awsui_input-button-right_2rhyz_19bat_238"
};

// node_modules/@cloudscape-design/components/input/internal.js
function InternalInput(_a, ref) {
  var { type = "text", step: step2, inputMode, autoComplete = true, ariaLabel, clearAriaLabel: clearAriaLabelOverride, name, value, placeholder, autoFocus, disabled, readOnly, disableBrowserAutocorrect, spellcheck, __noBorderRadius, __leftIcon, __leftIconVariant = "subtle", __onLeftIconClick, ariaRequired, __rightIcon, __onRightIconClick, onKeyDown, onKeyUp, onChange, __onDelayedInput, __onBlurWithDetail, onBlur, onFocus, __nativeAttributes, __internalRootRef, __inheritFormFieldProps } = _a, rest = __rest(_a, ["type", "step", "inputMode", "autoComplete", "ariaLabel", "clearAriaLabel", "name", "value", "placeholder", "autoFocus", "disabled", "readOnly", "disableBrowserAutocorrect", "spellcheck", "__noBorderRadius", "__leftIcon", "__leftIconVariant", "__onLeftIconClick", "ariaRequired", "__rightIcon", "__onRightIconClick", "onKeyDown", "onKeyUp", "onChange", "__onDelayedInput", "__onBlurWithDetail", "onBlur", "onFocus", "__nativeAttributes", "__internalRootRef", "__inheritFormFieldProps"]);
  const baseProps = getBaseProps(rest);
  const i18n = useInternalI18n("input");
  const fireDelayedInput = useDebounceCallback((value2) => fireNonCancelableEvent(__onDelayedInput, { value: value2 }));
  const handleChange = (value2) => {
    fireDelayedInput(value2);
    fireNonCancelableEvent(onChange, { value: value2 });
  };
  const inputRef = (0, import_react32.useRef)(null);
  const searchProps = useSearchProps(type, disabled, readOnly, value, inputRef, handleChange);
  __leftIcon = __leftIcon !== null && __leftIcon !== void 0 ? __leftIcon : searchProps.__leftIcon;
  __rightIcon = __rightIcon !== null && __rightIcon !== void 0 ? __rightIcon : searchProps.__rightIcon;
  __onRightIconClick = __onRightIconClick !== null && __onRightIconClick !== void 0 ? __onRightIconClick : searchProps.__onRightIconClick;
  const formFieldContext = useFormFieldContext(rest);
  const { ariaLabelledby, ariaDescribedby, controlId, invalid } = __inheritFormFieldProps ? formFieldContext : rest;
  const attributes = Object.assign({
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    "aria-describedby": ariaDescribedby,
    name,
    placeholder,
    autoFocus,
    id: controlId,
    className: clsx_m_default(styles_css_default11.input, type && styles_css_default11[`input-type-${type}`], __rightIcon && styles_css_default11["input-has-icon-right"], __leftIcon && styles_css_default11["input-has-icon-left"], __noBorderRadius && styles_css_default11["input-has-no-border-radius"], {
      [styles_css_default11["input-readonly"]]: readOnly,
      [styles_css_default11["input-invalid"]]: invalid
    }),
    autoComplete: convertAutoComplete(autoComplete),
    disabled,
    readOnly,
    type,
    step: step2,
    inputMode,
    spellCheck: spellcheck,
    onKeyDown: onKeyDown && ((event) => fireKeyboardEvent(onKeyDown, event)),
    onKeyUp: onKeyUp && ((event) => fireKeyboardEvent(onKeyUp, event)),
    value: value !== null && value !== void 0 ? value : "",
    onChange: onChange && ((event) => handleChange(event.target.value)),
    onBlur: (e) => {
      onBlur && fireNonCancelableEvent(onBlur);
      __onBlurWithDetail && fireNonCancelableEvent(__onBlurWithDetail, { relatedTarget: e.relatedTarget });
    },
    onFocus: onFocus && (() => fireNonCancelableEvent(onFocus))
  }, __nativeAttributes);
  if (type === "number") {
    attributes.onWheel = (event) => event.currentTarget.blur();
  }
  if (disableBrowserAutocorrect) {
    attributes.autoCorrect = "off";
    attributes.autoCapitalize = "off";
  }
  if (ariaRequired) {
    attributes["aria-required"] = "true";
  }
  if (invalid) {
    attributes["aria-invalid"] = "true";
  }
  const mergedRef = useMergeRefs(ref, inputRef);
  if (attributes.type === "visualSearch") {
    attributes.type = "text";
  }
  return import_react32.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default11["input-container"]), ref: __internalRootRef }),
    __leftIcon && import_react32.default.createElement(
      "span",
      { onClick: __onLeftIconClick, className: styles_css_default11["input-icon-left"] },
      import_react32.default.createElement(internal_default, { name: __leftIcon, variant: disabled ? "disabled" : __leftIconVariant })
    ),
    import_react32.default.createElement("input", Object.assign({ ref: mergedRef }, attributes)),
    __rightIcon && import_react32.default.createElement(
      "span",
      { className: styles_css_default11["input-icon-right"] },
      import_react32.default.createElement(
        internal_default2,
        {
          className: styles_css_default11["input-button-right"],
          variant: "inline-icon",
          formAction: "none",
          iconName: __rightIcon,
          onClick: __onRightIconClick,
          ariaLabel: i18n("clearAriaLabel", clearAriaLabelOverride),
          disabled
        }
      )
    )
  );
}
var internal_default10 = import_react32.default.forwardRef(InternalInput);

// node_modules/@cloudscape-design/components/select/parts/filter.js
var Filter = import_react33.default.forwardRef((_a, ref) => {
  var { filteringType } = _a, filterProps = __rest(_a, ["filteringType"]);
  if (filteringType === "none") {
    return null;
  }
  return import_react33.default.createElement(internal_default10, Object.assign({ ref, type: "visualSearch", className: styles_css_default8.filter, autoComplete: false, disableBrowserAutocorrect: true, invalid: false, __noBorderRadius: true }, filterProps, { __nativeAttributes: Object.assign({ "aria-expanded": true, "aria-haspopup": true, role: "combobox", autoCorrect: "off", autoCapitalize: "off" }, filterProps.__nativeAttributes) }));
});
var filter_default = Filter;

// node_modules/@cloudscape-design/components/select/parts/trigger.js
var import_react35 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/button-trigger/index.js
var import_react34 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/button-trigger/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/button-trigger/styles.scoped.css";
var styles_css_default12 = {
  "button-trigger": "awsui_button-trigger_18eso_jeche_97",
  "arrow": "awsui_arrow_18eso_jeche_97",
  "has-caret": "awsui_has-caret_18eso_jeche_137",
  "placeholder": "awsui_placeholder_18eso_jeche_140",
  "pressed": "awsui_pressed_18eso_jeche_153",
  "disabled": "awsui_disabled_18eso_jeche_156",
  "in-filtering-token": "awsui_in-filtering-token_18eso_jeche_165",
  "read-only": "awsui_read-only_18eso_jeche_171",
  "invalid": "awsui_invalid_18eso_jeche_188"
};

// node_modules/@cloudscape-design/components/internal/components/button-trigger/index.js
var ButtonTrigger = (_a, ref) => {
  var { children, pressed = false, hideCaret = false, disabled = false, readOnly = false, invalid = false, inFilteringToken, ariaHasPopup, ariaLabel, ariaLabelledby, ariaDescribedby, onKeyDown, onKeyUp, onMouseDown, onClick, onFocus, onBlur, autoFocus } = _a, restProps = __rest(_a, ["children", "pressed", "hideCaret", "disabled", "readOnly", "invalid", "inFilteringToken", "ariaHasPopup", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "onKeyDown", "onKeyUp", "onMouseDown", "onClick", "onFocus", "onBlur", "autoFocus"]);
  const baseProps = getBaseProps(restProps);
  const attributes = Object.assign(Object.assign({}, baseProps), { type: "button", className: clsx_m_default(styles_css_default12["button-trigger"], baseProps.className, pressed && styles_css_default12.pressed, disabled && styles_css_default12.disabled, invalid && styles_css_default12.invalid, !hideCaret && styles_css_default12["has-caret"], readOnly && styles_css_default12["read-only"], inFilteringToken && styles_css_default12["in-filtering-token"]), disabled: disabled || readOnly, "aria-expanded": pressed, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "aria-haspopup": ariaHasPopup !== null && ariaHasPopup !== void 0 ? ariaHasPopup : "listbox", onKeyDown: onKeyDown && ((event) => fireKeyboardEvent(onKeyDown, event)), onKeyUp: onKeyUp && ((event) => fireKeyboardEvent(onKeyUp, event)), onMouseDown: onMouseDown && ((event) => fireCancelableEvent(onMouseDown, {}, event)), onClick: onClick && ((event) => fireCancelableEvent(onClick, {}, event)), onFocus: onFocus && ((event) => fireCancelableEvent(onFocus, {}, event)), onBlur: onBlur && ((event) => fireCancelableEvent(onBlur, { relatedTarget: event.relatedTarget }, event)), autoFocus });
  if (invalid) {
    attributes["aria-invalid"] = invalid;
  }
  return import_react34.default.createElement(
    "button",
    Object.assign({ ref }, attributes),
    children,
    !hideCaret && import_react34.default.createElement(
      "span",
      { className: styles_css_default12.arrow },
      import_react34.default.createElement(internal_default, { name: "caret-down-filled", variant: disabled ? "disabled" : "normal" })
    )
  );
};
var button_trigger_default = import_react34.default.forwardRef(ButtonTrigger);

// node_modules/@cloudscape-design/components/select/parts/trigger.js
var Trigger = import_react35.default.forwardRef(({ ariaLabelledby, ariaDescribedby, controlId, invalid, triggerProps, selectedOption, triggerVariant, inFilteringToken, isOpen, placeholder, disabled }, ref) => {
  const generatedId = useUniqueId();
  const id = controlId !== null && controlId !== void 0 ? controlId : generatedId;
  const triggerContentId = useUniqueId("trigger-content-");
  let triggerContent = null;
  if (!selectedOption) {
    triggerContent = import_react35.default.createElement("span", { "aria-disabled": "true", className: clsx_m_default(styles_css_default8.placeholder, styles_css_default8.trigger), id: triggerContentId }, placeholder);
  } else if (triggerVariant === "option") {
    triggerContent = import_react35.default.createElement(option_default, { id: triggerContentId, option: Object.assign(Object.assign({}, selectedOption), { disabled }), triggerVariant: true });
  } else {
    triggerContent = import_react35.default.createElement("span", { id: triggerContentId, className: styles_css_default8.trigger }, selectedOption.label || selectedOption.value);
  }
  const mergedRef = useMergeRefs(triggerProps.ref, ref);
  return import_react35.default.createElement(button_trigger_default, Object.assign({}, triggerProps, { id, ref: mergedRef, pressed: isOpen, disabled, invalid, inFilteringToken, ariaDescribedby, ariaLabelledby: joinStrings(ariaLabelledby, triggerContentId) }), triggerContent);
});
var trigger_default = Trigger;

// node_modules/@cloudscape-design/components/token-group/internal.js
var import_react41 = __toESM(require_react());

// node_modules/@cloudscape-design/components/token-group/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/token-group/styles.scoped.css";
var styles_css_default13 = {
  "root": "awsui_root_dm8gx_nm1t1_97",
  "has-items": "awsui_has-items_dm8gx_nm1t1_109",
  "dismiss-button": "awsui_dismiss-button_dm8gx_nm1t1_113",
  "token": "awsui_token_dm8gx_nm1t1_147",
  "token-box": "awsui_token-box_dm8gx_nm1t1_154",
  "token-box-error": "awsui_token-box-error_dm8gx_nm1t1_166",
  "token-box-disabled": "awsui_token-box-disabled_dm8gx_nm1t1_177"
};

// node_modules/@cloudscape-design/components/internal/components/token-list/index.js
var import_react38 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/token-list/token-limit-toggle.js
var import_react36 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/token-list/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/token-list/styles.scoped.css";
var styles_css_default14 = {
  "root": "awsui_root_gfwv3_x9ohd_93",
  "horizontal": "awsui_horizontal_gfwv3_x9ohd_98",
  "vertical": "awsui_vertical_gfwv3_x9ohd_102",
  "list": "awsui_list_gfwv3_x9ohd_106",
  "list-item": "awsui_list-item_gfwv3_x9ohd_124",
  "toggle-container-inline": "awsui_toggle-container-inline_gfwv3_x9ohd_129",
  "toggle": "awsui_toggle_gfwv3_x9ohd_129",
  "description": "awsui_description_gfwv3_x9ohd_197",
  "separator": "awsui_separator_gfwv3_x9ohd_201"
};

// node_modules/@cloudscape-design/components/internal/components/token-list/token-limit-toggle.js
function TokenLimitToggle({ controlId, allHidden, expanded, numberOfHiddenOptions, onClick, i18nStrings = {} }) {
  const i18n = useInternalI18n("token-group");
  const numberOfHiddenOptionLabel = allHidden ? numberOfHiddenOptions : `+${numberOfHiddenOptions}`;
  const description = expanded ? i18n("i18nStrings.limitShowFewer", i18nStrings.limitShowFewer) : `${i18n("i18nStrings.limitShowMore", i18nStrings.limitShowMore) || ""} (${numberOfHiddenOptionLabel})`;
  const handleClick = (0, import_react36.useCallback)(() => {
    fireNonCancelableEvent(onClick, null);
  }, [onClick]);
  return import_react36.default.createElement(
    "button",
    { type: "button", className: styles_css_default14.toggle, onClick: handleClick, "aria-controls": controlId, "aria-expanded": expanded },
    import_react36.default.createElement(internal_default, { name: expanded ? "treeview-collapse" : "treeview-expand" }),
    import_react36.default.createElement("span", { className: styles_css_default14.description }, description)
  );
}

// node_modules/@cloudscape-design/components/internal/components/token-list/token-focus-controller.js
var import_react37 = __toESM(require_react());
var tokenSelector = `.${styles_css_default14["list-item"]}`;
var toggleButtonSelector = `.${styles_css_default14.toggle}`;
function useTokenFocusController({ removedItemIndex }) {
  const tokenListRef = (0, import_react37.useRef)(null);
  (0, import_react37.useEffect)(() => {
    var _a, _b;
    if (removedItemIndex === void 0 || removedItemIndex === null || tokenListRef.current === null) {
      return;
    }
    const tokenElements = tokenListRef.current.querySelectorAll(tokenSelector);
    const toggleButton = tokenListRef.current.querySelector(toggleButtonSelector);
    const activeItemIndices = [];
    for (let i = 0; i < tokenElements.length; i++) {
      if (!tokenElements[i].querySelector('[aria-disabled="true"]')) {
        activeItemIndices.push(i);
      }
    }
    let closestPrevIndex = Number.NEGATIVE_INFINITY;
    let closestNextIndex = Number.POSITIVE_INFINITY;
    for (const activeIndex of activeItemIndices) {
      if (activeIndex < removedItemIndex) {
        closestPrevIndex = removedItemIndex - activeIndex < removedItemIndex - closestPrevIndex ? activeIndex : closestPrevIndex;
      } else {
        closestNextIndex = activeIndex - removedItemIndex < closestNextIndex - removedItemIndex ? activeIndex : closestNextIndex;
      }
    }
    const nextElement = tokenElements[closestNextIndex];
    const prevElement = tokenElements[closestPrevIndex];
    if (nextElement instanceof HTMLElement) {
      (_a = getFirstFocusable(nextElement)) === null || _a === void 0 ? void 0 : _a.focus();
    } else if (prevElement instanceof HTMLElement) {
      (_b = getFirstFocusable(prevElement)) === null || _b === void 0 ? void 0 : _b.focus();
    } else if (toggleButton instanceof HTMLElement) {
      toggleButton.focus();
    }
  }, [removedItemIndex]);
  return tokenListRef;
}

// node_modules/@cloudscape-design/components/internal/components/token-list/index.js
function TokenList({ items, alignment, renderItem, limit, after, i18nStrings, removedItemIndex }) {
  const tokenListRef = useTokenFocusController({ removedItemIndex });
  const controlId = useUniqueId();
  const [expanded, setExpanded] = (0, import_react38.useState)(false);
  const hasItems = items.length > 0;
  const hasHiddenItems = hasItems && limit !== void 0 && items.length > limit;
  const visibleItems = hasHiddenItems && !expanded ? items.slice(0, limit) : items;
  const hasVisibleItems = visibleItems.length > 0;
  const toggle = hasHiddenItems ? import_react38.default.createElement(
    "div",
    { className: styles_css_default14[`toggle-container-${alignment}`] },
    import_react38.default.createElement(TokenLimitToggle, { controlId: hasVisibleItems ? controlId : void 0, allHidden: limit === 0, expanded, numberOfHiddenOptions: items.length - visibleItems.length, i18nStrings, onClick: () => setExpanded(!expanded) })
  ) : null;
  if (alignment === "inline") {
    return import_react38.default.createElement(
      "div",
      { ref: tokenListRef, className: clsx_m_default(styles_css_default14.root, styles_css_default14.horizontal) },
      hasItems && import_react38.default.createElement("ul", { id: controlId, className: styles_css_default14.list }, visibleItems.map((item, itemIndex) => import_react38.default.createElement("li", { key: itemIndex, className: styles_css_default14["list-item"], "aria-setsize": items.length, "aria-posinset": itemIndex + 1 }, renderItem(item, itemIndex)))),
      toggle,
      after && import_react38.default.createElement("div", { className: styles_css_default14.separator }),
      after
    );
  }
  return import_react38.default.createElement(
    "div",
    { ref: tokenListRef, className: clsx_m_default(styles_css_default14.root, styles_css_default14.vertical) },
    hasVisibleItems && import_react38.default.createElement("ul", { id: controlId, className: clsx_m_default(styles_css_default14.list, styles_css_default14[alignment]) }, visibleItems.map((item, itemIndex) => import_react38.default.createElement("li", { key: itemIndex, className: styles_css_default14["list-item"], "aria-setsize": items.length, "aria-posinset": itemIndex + 1 }, renderItem(item, itemIndex)))),
    toggle,
    after
  );
}

// node_modules/@cloudscape-design/components/token-group/token.js
var import_react40 = __toESM(require_react());

// node_modules/@cloudscape-design/components/token-group/dismiss-button.js
var import_react39 = __toESM(require_react());
var dismiss_button_default = (0, import_react39.forwardRef)(DismissButton);
function DismissButton({ disabled, dismissLabel, onDismiss }, ref) {
  return import_react39.default.createElement(
    "button",
    { ref, type: "button", className: clsx_m_default(styles_css_default13["dismiss-button"]), disabled, onClick: onDismiss, "aria-label": dismissLabel },
    import_react39.default.createElement(internal_default, { name: "close" })
  );
}

// node_modules/@cloudscape-design/components/token-group/token.js
function Token(_a) {
  var { ariaLabel, disabled, dismissLabel, onDismiss, children, errorText, errorIconAriaLabel } = _a, restProps = __rest(_a, ["ariaLabel", "disabled", "dismissLabel", "onDismiss", "children", "errorText", "errorIconAriaLabel"]);
  const errorId = useUniqueId("error");
  const baseProps = getBaseProps(restProps);
  return import_react40.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default13.token, baseProps.className), role: "group", "aria-label": ariaLabel, "aria-describedby": errorText ? errorId : void 0, "aria-disabled": disabled }),
    import_react40.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default13["token-box"], disabled && styles_css_default13["token-box-disabled"], errorText && styles_css_default13["token-box-error"]) },
      children,
      onDismiss && import_react40.default.createElement(dismiss_button_default, { disabled, dismissLabel, onDismiss })
    ),
    errorText && import_react40.default.createElement(FormFieldError, { id: errorId, errorIconAriaLabel }, errorText)
  );
}

// node_modules/@cloudscape-design/components/token-group/internal.js
function InternalTokenGroup(_a) {
  var { alignment, items, onDismiss, limit, i18nStrings, __internalRootRef } = _a, props2 = __rest(_a, ["alignment", "items", "onDismiss", "limit", "i18nStrings", "__internalRootRef"]);
  checkControlled("TokenGroup", "items", items, "onDismiss", onDismiss);
  const [removedItemIndex, setRemovedItemIndex] = (0, import_react41.useState)(null);
  const baseProps = getBaseProps(props2);
  const hasItems = items.length > 0;
  return import_react41.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default13.root, hasItems && styles_css_default13["has-items"]), ref: __internalRootRef }),
    import_react41.default.createElement(TokenList, { alignment, items, limit, renderItem: (item, itemIndex) => import_react41.default.createElement(
      Token,
      { ariaLabel: item.label, dismissLabel: item.dismissLabel, onDismiss: () => {
        fireNonCancelableEvent(onDismiss, { itemIndex });
        setRemovedItemIndex(itemIndex);
      }, disabled: item.disabled },
      import_react41.default.createElement(option_default, { option: item, isGenericGroup: false })
    ), i18nStrings, removedItemIndex })
  );
}

// node_modules/@cloudscape-design/components/multiselect/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/multiselect/styles.scoped.css";
var styles_css_default15 = {
  "root": "awsui_root_f8g6q_wi4df_93"
};

// node_modules/@cloudscape-design/components/multiselect/internal.js
var InternalMultiselect = import_react42.default.forwardRef((_a, externalRef) => {
  var _b;
  var { options = [], filteringType = "none", filteringPlaceholder, filteringAriaLabel, filteringClearAriaLabel, filteringResultsText, ariaRequired, placeholder, disabled, ariaLabel, statusType = "finished", empty, loadingText, finishedText, errorText, recoveryText, noMatch, selectedAriaLabel, renderHighlightedAriaLive, selectedOptions = [], deselectAriaLabel, keepOpen = true, tokenLimit, i18nStrings, onBlur, onFocus, onLoadItems, onChange, virtualScroll, hideTokens = false, expandToViewport, __internalRootRef = null, autoFocus } = _a, restProps = __rest(_a, ["options", "filteringType", "filteringPlaceholder", "filteringAriaLabel", "filteringClearAriaLabel", "filteringResultsText", "ariaRequired", "placeholder", "disabled", "ariaLabel", "statusType", "empty", "loadingText", "finishedText", "errorText", "recoveryText", "noMatch", "selectedAriaLabel", "renderHighlightedAriaLive", "selectedOptions", "deselectAriaLabel", "keepOpen", "tokenLimit", "i18nStrings", "onBlur", "onFocus", "onLoadItems", "onChange", "virtualScroll", "hideTokens", "expandToViewport", "__internalRootRef", "autoFocus"]);
  checkOptionValueField("Multiselect", "options", options);
  const baseProps = getBaseProps(restProps);
  const formFieldContext = useFormFieldContext(restProps);
  const i18n = useInternalI18n("multiselect");
  const { handleLoadMore, handleRecoveryClick, fireLoadItems } = useLoadItems({
    onLoadItems,
    options,
    statusType
  });
  const useInteractiveGroups = true;
  const [filteringValue, setFilteringValue] = (0, import_react42.useState)("");
  const { filteredOptions, parentMap, totalCount, matchesCount } = prepareOptions(options, filteringType, filteringValue);
  const updateSelectedOption = (0, import_react42.useCallback)((option) => {
    const filtered = filteredOptions.filter((item) => item.type !== "parent").map((item) => item.option);
    const isAllChildrenSelected = (optionsArray) => optionsArray.every((item) => findOptionIndex(selectedOptions, item) > -1 || item.disabled);
    const intersection = (visibleOptions, options2) => visibleOptions.filter((item) => findOptionIndex(options2, item) > -1 && !item.disabled);
    const union = (visibleOptions, options2) => visibleOptions.filter((item) => findOptionIndex(options2, item) === -1).concat(options2);
    const select = (options2, selectedOptions2) => {
      return union(selectedOptions2, options2);
    };
    const unselect = (options2, selectedOptions2) => {
      return selectedOptions2.filter((option2) => findOptionIndex(options2, option2) === -1);
    };
    let newSelectedOptions = [...selectedOptions];
    if (isGroup(option)) {
      const visibleOptions = intersection([...option.options], filtered);
      newSelectedOptions = isAllChildrenSelected(visibleOptions) ? unselect(visibleOptions, newSelectedOptions) : select(visibleOptions, newSelectedOptions);
    } else {
      newSelectedOptions = isAllChildrenSelected([option]) ? unselect([option], newSelectedOptions) : select([option], newSelectedOptions);
    }
    fireNonCancelableEvent(onChange, {
      selectedOptions: newSelectedOptions
    });
  }, [onChange, selectedOptions, filteredOptions]);
  const rootRef = (0, import_react42.useRef)(null);
  const selfControlId = useUniqueId("trigger");
  const controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;
  const multiSelectAriaLabelId = useUniqueId("multiselect-arialabel-");
  const footerId = useUniqueId("footer");
  const scrollToIndex = (0, import_react42.useRef)(null);
  const { isOpen, highlightType, highlightedOption, highlightedIndex, getTriggerProps, getDropdownProps, getFilterProps, getMenuProps, getOptionProps: getOptionProps2, highlightOption, announceSelected } = useSelect({
    selectedOptions,
    updateSelectedOption,
    options: filteredOptions,
    filteringType,
    onFocus,
    onBlur,
    externalRef,
    keepOpen,
    fireLoadItems,
    setFilteringValue,
    useInteractiveGroups,
    statusType
  });
  const handleNativeSearch = useNativeSearch({
    isEnabled: filteringType === "none" && isOpen,
    options: filteredOptions,
    highlightOption,
    highlightedOption: highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option,
    useInteractiveGroups
  });
  const isEmpty = !options || options.length === 0;
  const isNoMatch = filteredOptions && filteredOptions.length === 0;
  const isFiltered = filteringType !== "none" && filteringValue.length > 0 && filteredOptions && filteredOptions.length > 0;
  const filteredText = isFiltered ? filteringResultsText === null || filteringResultsText === void 0 ? void 0 : filteringResultsText(matchesCount, totalCount) : void 0;
  const dropdownStatus = useDropdownStatus({
    statusType,
    empty,
    loadingText,
    finishedText,
    errorText,
    recoveryText,
    isEmpty,
    isNoMatch,
    noMatch,
    isFiltered,
    filteringResultsText: filteredText,
    onRecoveryClick: handleRecoveryClick,
    errorIconAriaLabel: restProps.errorIconAriaLabel
  });
  const filter = import_react42.default.createElement(filter_default, Object.assign({ clearAriaLabel: filteringClearAriaLabel, filteringType, placeholder: filteringPlaceholder, ariaLabel: filteringAriaLabel, ariaRequired, value: filteringValue }, getFilterProps()));
  const trigger = import_react42.default.createElement(trigger_default, Object.assign({ placeholder, disabled, triggerProps: getTriggerProps(disabled, autoFocus), selectedOption: null, isOpen }, formFieldContext, { controlId, ariaLabelledby: joinStrings(formFieldContext.ariaLabelledby, multiSelectAriaLabelId) }));
  const menuProps = Object.assign(Object.assign({}, getMenuProps()), { onLoadMore: handleLoadMore, ariaLabelledby: joinStrings(multiSelectAriaLabelId, controlId), ariaDescribedby: dropdownStatus.content ? footerId : void 0 });
  const announcement = useAnnouncement({
    announceSelected,
    highlightedOption,
    getParent: (option) => {
      var _a2;
      return (_a2 = parentMap.get(option)) === null || _a2 === void 0 ? void 0 : _a2.option;
    },
    selectedAriaLabel,
    renderHighlightedAriaLive
  });
  const tokens = selectedOptions.map((option) => ({
    label: option.label,
    disabled: disabled || option.disabled,
    labelTag: option.labelTag,
    description: option.description,
    iconAlt: option.iconAlt,
    iconName: option.iconName,
    iconUrl: option.iconUrl,
    iconSvg: option.iconSvg,
    tags: option.tags,
    dismissLabel: i18n("deselectAriaLabel", deselectAriaLabel === null || deselectAriaLabel === void 0 ? void 0 : deselectAriaLabel(option), (format3) => {
      var _a2;
      return format3({ option__label: (_a2 = option.label) !== null && _a2 !== void 0 ? _a2 : "" });
    })
  }));
  (0, import_react42.useEffect)(() => {
    var _a2;
    (_a2 = scrollToIndex.current) === null || _a2 === void 0 ? void 0 : _a2.call(scrollToIndex, highlightedIndex);
  }, [highlightedIndex]);
  const ListComponent = virtualScroll ? virtual_list_default : plain_list_default;
  const handleMouseDown = (event) => {
    const target = event.target;
    if (target !== document.activeElement) {
      event.preventDefault();
    }
  };
  const showTokens = !hideTokens && tokens.length > 0;
  const handleTokenDismiss = ({ detail }) => {
    const optionToDeselect = selectedOptions[detail.itemIndex];
    updateSelectedOption(optionToDeselect);
    const targetRef = getTriggerProps().ref;
    if (targetRef.current) {
      targetRef.current.focus();
    }
  };
  const tokenGroupI18nStrings = {
    limitShowFewer: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tokenLimitShowFewer,
    limitShowMore: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tokenLimitShowMore
  };
  const mergedRef = useMergeRefs(rootRef, __internalRootRef);
  return import_react42.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: mergedRef, className: clsx_m_default(styles_css_default15.root, baseProps.className), onKeyPress: handleNativeSearch }),
    import_react42.default.createElement(
      dropdown_default,
      Object.assign({}, getDropdownProps(), { open: isOpen, trigger, header: filter, onMouseDown: handleMouseDown, footer: dropdownStatus.isSticky ? import_react42.default.createElement(dropdown_footer_default, { content: isOpen ? dropdownStatus.content : null, id: footerId }) : null, expandToViewport }),
      import_react42.default.createElement(ListComponent, { listBottom: !dropdownStatus.isSticky ? import_react42.default.createElement(dropdown_footer_default, { content: isOpen ? dropdownStatus.content : null, id: footerId }) : null, menuProps, getOptionProps: getOptionProps2, filteredOptions, filteringValue, ref: scrollToIndex, hasDropdownStatus: dropdownStatus.content !== null, checkboxes: true, useInteractiveGroups, screenReaderContent: announcement, highlightType })
    ),
    showTokens && import_react42.default.createElement(InternalTokenGroup, { alignment: "horizontal", limit: tokenLimit, items: tokens, onDismiss: handleTokenDismiss, i18nStrings: tokenGroupI18nStrings }),
    import_react42.default.createElement(ScreenreaderOnly, { id: multiSelectAriaLabelId }, ariaLabel)
  );
});
var internal_default11 = InternalMultiselect;

// node_modules/@cloudscape-design/components/internal/components/chart-series-marker/index.js
var import_react43 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-series-marker/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-series-marker/styles.scoped.css";
var styles_css_default16 = {
  "marker": "awsui_marker_1isd1_1r4od_93",
  "marker--line": "awsui_marker--line_1isd1_1r4od_111",
  "marker--rectangle": "awsui_marker--rectangle_1isd1_1r4od_115",
  "marker--hollow-rectangle": "awsui_marker--hollow-rectangle_1isd1_1r4od_119",
  "marker--dashed": "awsui_marker--dashed_1isd1_1r4od_131"
};

// node_modules/@cloudscape-design/components/internal/components/chart-series-marker/index.js
var chart_series_marker_default = (0, import_react43.memo)(ChartSeriesMarker);
function ChartSeriesMarker({ type = "line", color: color2 }) {
  return import_react43.default.createElement("span", { className: clsx_m_default(styles_css_default16.marker, styles_css_default16[`marker--${type}`]), style: { backgroundColor: color2 }, "aria-hidden": "true" });
}

// node_modules/@cloudscape-design/components/internal/components/chart-filter/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-filter/styles.scoped.css";
var styles_css_default17 = {
  "root": "awsui_root_1px7g_cxrz1_93",
  "chart-filter": "awsui_chart-filter_1px7g_cxrz1_106",
  "custom-icon-wrapper": "awsui_custom-icon-wrapper_1px7g_cxrz1_110"
};

// node_modules/@cloudscape-design/components/internal/components/chart-filter/index.js
var chart_filter_default = (0, import_react44.memo)(ChartFilter);
function ChartFilter(_a) {
  var { series, i18nStrings, selectedSeries, onChange } = _a, restProps = __rest(_a, ["series", "i18nStrings", "selectedSeries", "onChange"]);
  const baseProps = getBaseProps(restProps);
  const className = clsx_m_default(baseProps.className, styles_css_default17.root);
  const i18n = useInternalI18n("[charts]");
  const defaultOptions2 = series.map((d, i) => ({
    label: d.label,
    value: "" + i,
    datum: d.datum,
    __customIcon: import_react44.default.createElement(
      "span",
      { className: styles_css_default17["custom-icon-wrapper"] },
      import_react44.default.createElement(chart_series_marker_default, { color: d.color, type: d.type })
    )
  }));
  const selectedOptions = defaultOptions2.filter((option) => (selectedSeries === null || selectedSeries === void 0 ? void 0 : selectedSeries.indexOf(option.datum)) !== -1);
  const updateSelection = (0, import_react44.useCallback)(({ detail: { selectedOptions: selectedOptions2 } }) => {
    const selectedSeries2 = defaultOptions2.filter((option) => selectedOptions2.indexOf(option) !== -1).map((option) => option.datum);
    onChange(selectedSeries2);
  }, [onChange, defaultOptions2]);
  return import_react44.default.createElement(
    InternalFormField,
    Object.assign({}, baseProps, { label: i18n("i18nStrings.filterLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterLabel), className }),
    import_react44.default.createElement(internal_default11, { placeholder: i18n("i18nStrings.filterPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterPlaceholder), options: defaultOptions2, selectedOptions, onChange: updateSelection, className: styles_css_default17["chart-filter"], selectedAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterSelectedAriaLabel, hideTokens: true })
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/area-chart-filter.js
var area_chart_filter_default = (0, import_react45.memo)(AreaChartFilter);
function AreaChartFilter({ model, filterLabel, filterPlaceholder, filterSelectedAriaLabel }) {
  const filterItems = model.allSeries.map((s2) => {
    const { title, color: color2, markerType } = model.getInternalSeries(s2);
    return { label: title, color: color2, type: markerType, datum: s2 };
  });
  return import_react45.default.createElement(chart_filter_default, { series: filterItems, onChange: model.handlers.onFilterSeries, selectedSeries: model.series, i18nStrings: {
    filterLabel,
    filterPlaceholder,
    filterSelectedAriaLabel
  } });
}

// node_modules/@cloudscape-design/components/area-chart/elements/area-chart-legend.js
var import_react47 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-legend/index.js
var import_react46 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-legend/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-legend/styles.scoped.css";
var styles_css_default18 = {
  "marker": "awsui_marker_1kjc7_18vim_93",
  "root": "awsui_root_1kjc7_18vim_111",
  "title": "awsui_title_1kjc7_18vim_127",
  "list": "awsui_list_1kjc7_18vim_131",
  "marker--dimmed": "awsui_marker--dimmed_1kjc7_18vim_173",
  "marker--highlighted": "awsui_marker--highlighted_1kjc7_18vim_176"
};

// node_modules/@cloudscape-design/components/internal/components/chart-legend/index.js
var chart_legend_default = (0, import_react46.memo)(ChartLegend);
function ChartLegend({ series, onHighlightChange, highlightedSeries, legendTitle, ariaLabel, plotContainerRef }) {
  const i18n = useInternalI18n("[charts]");
  const containerRef = (0, import_react46.useRef)(null);
  const segmentsRef = (0, import_react46.useRef)([]);
  const highlightedSeriesIndex = findSeriesIndex(series, highlightedSeries);
  const highlightLeft = () => {
    var _a;
    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;
    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;
    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();
  };
  const highlightRight = () => {
    var _a;
    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;
    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;
    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();
  };
  const handleKeyPress = (event) => {
    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {
      event.preventDefault();
      switch (event.keyCode) {
        case KeyCode.left:
          return highlightLeft();
        case KeyCode.right:
          return highlightRight();
        default:
          return;
      }
    }
  };
  const handleSelection = (index) => {
    if (series[index].datum !== highlightedSeries) {
      onHighlightChange(series[index].datum);
    }
  };
  const handleBlur = (event) => {
    var _a;
    if (event.relatedTarget === null || containerRef.current && !containerRef.current.contains(event.relatedTarget) && !((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {
      onHighlightChange(null);
    }
  };
  const handleMouseOver = (s2) => {
    if (s2 !== highlightedSeries) {
      onHighlightChange(s2);
    }
  };
  const handleMouseLeave = () => {
    onHighlightChange(null);
  };
  return import_react46.default.createElement(
    import_react46.default.Fragment,
    null,
    import_react46.default.createElement(
      "div",
      { ref: containerRef, role: "toolbar", "aria-label": legendTitle || i18n("i18nStrings.legendAriaLabel", ariaLabel), className: styles_css_default18.root, onKeyDown: handleKeyPress, onBlur: handleBlur },
      legendTitle && import_react46.default.createElement(InternalBox, { fontWeight: "bold", className: styles_css_default18.title }, legendTitle),
      import_react46.default.createElement("div", { className: styles_css_default18.list }, series.map((s2, index) => {
        const someHighlighted = highlightedSeries !== null;
        const isHighlighted = highlightedSeries === s2.datum;
        const isDimmed = someHighlighted && !isHighlighted;
        return import_react46.default.createElement(
          "div",
          { role: "button", key: index, "aria-pressed": isHighlighted, className: clsx_m_default(styles_css_default18.marker, {
            [styles_css_default18["marker--dimmed"]]: isDimmed,
            [styles_css_default18["marker--highlighted"]]: isHighlighted
          }), ref: (elem) => {
            if (elem) {
              segmentsRef.current[index] = elem;
            } else {
              delete segmentsRef.current[index];
            }
          }, tabIndex: index === highlightedSeriesIndex || highlightedSeriesIndex === void 0 && index === 0 ? 0 : -1, onFocus: () => handleSelection(index), onClick: () => handleSelection(index), onMouseOver: () => handleMouseOver(s2.datum), onMouseLeave: handleMouseLeave },
          import_react46.default.createElement(chart_series_marker_default, { color: s2.color, type: s2.type }),
          " ",
          s2.label
        );
      }))
    )
  );
}
function findSeriesIndex(series, targetSeries) {
  for (let index = 0; index < series.length; index++) {
    if (series[index].datum === targetSeries) {
      return index;
    }
  }
  return void 0;
}

// node_modules/@cloudscape-design/components/area-chart/elements/area-chart-legend.js
var area_chart_legend_default = (0, import_react47.memo)(AreaChartLegend);
function AreaChartLegend({ model, legendTitle, ariaLabel, plotContainerRef }) {
  const legendItems = (0, import_react47.useMemo)(() => model.series.map((s2) => {
    const { title, color: color2, markerType } = model.getInternalSeries(s2);
    return { label: title, color: color2, type: markerType, datum: s2 };
  }), [model]);
  const legendSeries = useSelector(model.interactions, (state) => state.legendSeries);
  return import_react47.default.createElement(chart_legend_default, { series: legendItems, highlightedSeries: legendSeries, onHighlightChange: model.handlers.onLegendHighlight, legendTitle, ariaLabel, plotContainerRef });
}

// node_modules/@cloudscape-design/components/area-chart/chart-container.js
var import_react67 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-plot/index.js
var import_react50 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-plot/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-plot/styles.scoped.css";
var styles_css_default19 = {
  "root": "awsui_root_1fcus_1f1k0_93",
  "clickable": "awsui_clickable_1fcus_1f1k0_102",
  "precise": "awsui_precise_1fcus_1f1k0_106",
  "focus-outline": "awsui_focus-outline_1fcus_1f1k0_110",
  "application": "awsui_application_1fcus_1f1k0_119"
};

// node_modules/@cloudscape-design/components/internal/components/chart-plot/application-controller.js
var import_react48 = __toESM(require_react());
var application_controller_default = (0, import_react48.forwardRef)(ApplicationController);
function ApplicationController({ activeElementKey, activeElementRef, onFocus, onBlur, onKeyDown }, ref) {
  const containerRef = (0, import_react48.useRef)(null);
  const applicationRef = (0, import_react48.useRef)(null);
  const focusTransitionRef = (0, import_react48.useRef)(false);
  const [isFocused, setFocused] = (0, import_react48.useState)(false);
  const onApplicationFocus = (0, import_react48.useCallback)((event) => {
    if (focusTransitionRef.current === false) {
      setFocused(true);
      onFocus && onFocus(event);
    } else {
      focusTransitionRef.current = false;
    }
  }, [onFocus]);
  const onApplicationBlur = (0, import_react48.useCallback)((event) => {
    if (focusTransitionRef.current === false) {
      setFocused(false);
      onBlur && onBlur(event);
      muteApplication(applicationRef.current);
    }
  }, [onBlur]);
  const onApplicationKeyDown = onKeyDown;
  (0, import_react48.useImperativeHandle)(ref, () => ({
    focus: () => focusApplication(applicationRef.current, (activeElementRef === null || activeElementRef === void 0 ? void 0 : activeElementRef.current) || null)
  }), [activeElementRef]);
  (0, import_react48.useEffect)(() => {
    if (!isFocused || focusTransitionRef.current === true) {
      return;
    }
    const timeoutId = setTimeout(() => {
      focusTransitionRef.current = true;
      containerRef.current.removeChild(applicationRef.current);
      containerRef.current.appendChild(applicationRef.current);
      focusApplication(applicationRef.current, (activeElementRef === null || activeElementRef === void 0 ? void 0 : activeElementRef.current) || null);
    }, 0);
    return () => clearTimeout(timeoutId);
  }, [isFocused, activeElementKey, activeElementRef]);
  return import_react48.default.createElement(
    "g",
    { ref: containerRef },
    import_react48.default.createElement("g", { tabIndex: -1, ref: applicationRef, onFocus: onApplicationFocus, onBlur: onApplicationBlur, onKeyDown: onApplicationKeyDown, className: styles_css_default19.application })
  );
}
function focusApplication(app, target) {
  for (const attributeName of getAttributeNames(app)) {
    if (attributeName === "role" || attributeName.slice(0, 4) === "aria") {
      app.removeAttribute(attributeName);
    }
  }
  if (target) {
    for (const attributeName of getAttributeNames(target)) {
      if (attributeName === "role" || attributeName.slice(0, 4) === "aria") {
        const attributeValue = target.getAttribute(attributeName);
        attributeValue && app.setAttribute(attributeName, attributeValue);
      }
    }
  }
  app.tabIndex = 0;
  app.setAttribute("focusable", "true");
  app.setAttribute("aria-hidden", "false");
  app.focus({ preventScroll: true });
}
function muteApplication(app) {
  for (const attributeName of getAttributeNames(app)) {
    if (attributeName === "role" || attributeName.slice(0, 4) === "aria") {
      app.removeAttribute(attributeName);
    }
  }
  app.tabIndex = -1;
  app.setAttribute("focusable", "false");
  app.setAttribute("aria-hidden", "true");
}
function getAttributeNames(element) {
  const attributes = element.attributes;
  const result = new Array(attributes.length);
  for (let i = 0; i < attributes.length; i++) {
    result[i] = attributes[i].name;
  }
  return result;
}

// node_modules/@cloudscape-design/components/internal/components/chart-plot/focus-outline.js
var import_react49 = __toESM(require_react());
function useFocusVisibleState() {
  const [focusVisible, setFocusVisible] = (0, import_react49.useState)(false);
  (0, import_react49.useEffect)(() => {
    function handleMousedown() {
      return setFocusVisible(false);
    }
    function handleKeydown(event) {
      if (!isModifierKey(event)) {
        setFocusVisible(true);
      }
    }
    document.addEventListener("mousedown", handleMousedown);
    document.addEventListener("keydown", handleKeydown);
    return () => {
      document.removeEventListener("mousedown", handleMousedown);
      document.removeEventListener("keydown", handleKeydown);
    };
  });
  return focusVisible;
}
function FocusOutline({ elementKey, elementRef, offset = 0 }) {
  const ref = (0, import_react49.useRef)(null);
  const focusVisible = useFocusVisibleState();
  (0, import_react49.useEffect)(() => {
    if (!ref.current) {
      return;
    }
    if (focusVisible && elementKey && elementRef && elementRef.current && elementRef.current.getBBox) {
      const element = elementRef.current.getBBox();
      showOutline(ref.current, element, offset);
    } else {
      hideOutline(ref.current);
    }
  }, [focusVisible, elementKey, elementRef, offset]);
  return import_react49.default.createElement("rect", { ref, "aria-hidden": "true", className: styles_css_default19["focus-outline"], rx: "2" });
}
function showOutline(el, position, offset) {
  const offsetX = typeof offset === "number" ? offset : offset.x;
  const offsetY = typeof offset === "number" ? offset : offset.y;
  el.setAttribute("x", (position.x - offsetX).toString());
  el.setAttribute("y", (position.y - offsetY).toString());
  el.setAttribute("width", (position.width + 2 * offsetX).toString());
  el.setAttribute("height", (position.height + 2 * offsetY).toString());
  el.style.visibility = "visible";
}
function hideOutline(el) {
  el.style.visibility = "hidden";
  el.removeAttribute("x");
  el.removeAttribute("y");
  el.removeAttribute("width");
  el.removeAttribute("height");
}

// node_modules/@cloudscape-design/components/internal/components/chart-plot/index.js
var DEFAULT_PLOT_FOCUS_OFFSET = 3;
var DEFAULT_ELEMENT_FOCUS_OFFSET = 3;
var chart_plot_default = (0, import_react50.forwardRef)(ChartPlot);
function ChartPlot(_a, ref) {
  var { width, height, transform, offsetTop, offsetBottom, offsetLeft, offsetRight, ariaLabel, ariaLabelledby, ariaRoleDescription, ariaDescription, ariaDescribedby, activeElementKey, activeElementRef, ariaLiveRegion, isClickable, isPrecise, children, onMouseDown, onKeyDown, onFocus, onBlur, focusOffset = DEFAULT_PLOT_FOCUS_OFFSET, activeElementFocusOffset = DEFAULT_ELEMENT_FOCUS_OFFSET } = _a, restProps = __rest(_a, ["width", "height", "transform", "offsetTop", "offsetBottom", "offsetLeft", "offsetRight", "ariaLabel", "ariaLabelledby", "ariaRoleDescription", "ariaDescription", "ariaDescribedby", "activeElementKey", "activeElementRef", "ariaLiveRegion", "isClickable", "isPrecise", "children", "onMouseDown", "onKeyDown", "onFocus", "onBlur", "focusOffset", "activeElementFocusOffset"]);
  const i18n = useInternalI18n("[charts]");
  const svgRef = (0, import_react50.useRef)(null);
  const applicationRef = (0, import_react50.useRef)(null);
  const plotClickedRef = (0, import_react50.useRef)(false);
  const [isPlotFocused, setPlotFocused] = (0, import_react50.useState)(false);
  const [isApplicationFocused, setApplicationFocused] = (0, import_react50.useState)(false);
  const internalDescriptionId = useUniqueId("awsui-chart-plot__description");
  const ariaDescriptionId = [ariaDescription && internalDescriptionId, ariaDescribedby].filter(Boolean).join(" ");
  (0, import_react50.useImperativeHandle)(ref, () => ({
    svg: svgRef.current,
    focusPlot: () => svgRef.current.focus(),
    focusApplication: () => applicationRef.current.focus()
  }));
  const onPlotMouseDown = (event) => {
    onMouseDown && onMouseDown(event);
    plotClickedRef.current = true;
  };
  const onPlotFocus = (event) => {
    if (event.target === svgRef.current && !plotClickedRef.current) {
      setPlotFocused(true);
    } else if (plotClickedRef.current) {
      applicationRef.current.focus();
    }
  };
  const onPlotBlur = (event) => {
    if (event.target === svgRef.current) {
      setPlotFocused(false);
    }
  };
  const onPlotKeyDown = (event) => {
    if (isPlotFocused) {
      const codes = [KeyCode.space, KeyCode.enter, KeyCode.up, KeyCode.left, KeyCode.right, KeyCode.down];
      if (codes.indexOf(event.keyCode) !== -1) {
        applicationRef.current.focus();
      }
    }
  };
  const onApplicationFocus = (event) => {
    onFocus && onFocus(event, plotClickedRef.current ? "mouse" : "keyboard");
    plotClickedRef.current = false;
    setApplicationFocused(true);
  };
  const onApplicationBlur = (event) => {
    onBlur && onBlur(event);
    setApplicationFocused(false);
  };
  const onApplicationKeyDown = onKeyDown;
  const plotFocusable = !isApplicationFocused;
  const plotTabIndex = plotFocusable ? 0 : -1;
  const plotAria = !isApplicationFocused ? {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    "aria-describedby": ariaDescriptionId,
    "aria-roledescription": i18n("i18nStrings.chartAriaRoleDescription", ariaRoleDescription)
  } : {};
  return import_react50.default.createElement(
    import_react50.default.Fragment,
    null,
    import_react50.default.createElement(
      "svg",
      Object.assign({}, restProps, { focusable: plotFocusable, tabIndex: plotTabIndex, role: "application", "aria-hidden": "false" }, plotAria, { ref: svgRef, width, height, style: {
        marginTop: offsetTop,
        marginBottom: offsetBottom,
        marginLeft: offsetLeft,
        marginRight: offsetRight
      }, className: clsx_m_default(styles_css_default19.root, {
        [styles_css_default19.clickable]: isClickable,
        [styles_css_default19.precise]: isPrecise
      }), onMouseDown: onPlotMouseDown, onFocus: onPlotFocus, onBlur: onPlotBlur, onKeyDown: onPlotKeyDown }),
      import_react50.default.createElement(FocusOutline, { elementRef: svgRef, elementKey: isPlotFocused, offset: focusOffset }),
      import_react50.default.createElement(
        "g",
        { transform },
        import_react50.default.createElement(application_controller_default, { activeElementKey: activeElementKey || null, activeElementRef, ref: applicationRef, onFocus: onApplicationFocus, onBlur: onApplicationBlur, onKeyDown: onApplicationKeyDown }),
        ariaDescription && plotFocusable && import_react50.default.createElement("desc", { "aria-hidden": "true", id: internalDescriptionId }, ariaDescription),
        children,
        import_react50.default.createElement(FocusOutline, { elementRef: activeElementRef, elementKey: isApplicationFocused && activeElementKey, offset: activeElementFocusOffset })
      )
    ),
    import_react50.default.createElement(live_region_default, null, ariaLiveRegion)
  );
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/axis-label.js
var import_react51 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/cartesian-chart/styles.scoped.css";
var styles_css_default20 = {
  "axis": "awsui_axis_f0fot_pe91i_9",
  "vertical-marker": "awsui_vertical-marker_f0fot_pe91i_10",
  "axis--emphasized": "awsui_axis--emphasized_f0fot_pe91i_15",
  "axis-label": "awsui_axis-label_f0fot_pe91i_19",
  "axis-label--x": "awsui_axis-label--x_f0fot_pe91i_24",
  "axis-label--y": "awsui_axis-label--y_f0fot_pe91i_25",
  "grid": "awsui_grid_f0fot_pe91i_29",
  "ticks__line": "awsui_ticks__line_f0fot_pe91i_34",
  "ticks__text": "awsui_ticks__text_f0fot_pe91i_39",
  "ticks--y": "awsui_ticks--y_f0fot_pe91i_44",
  "ticks--x": "awsui_ticks--x_f0fot_pe91i_45",
  "ticks--bottom": "awsui_ticks--bottom_f0fot_pe91i_49",
  "labels-left": "awsui_labels-left_f0fot_pe91i_54",
  "ticks": "awsui_ticks_f0fot_pe91i_34",
  "labels-left__label": "awsui_labels-left__label_f0fot_pe91i_69",
  "labels-left--hidden": "awsui_labels-left--hidden_f0fot_pe91i_73",
  "labels-bottom": "awsui_labels-bottom_f0fot_pe91i_81",
  "vertical-marker-circle": "awsui_vertical-marker-circle_f0fot_pe91i_92",
  "vertical-marker-circle-active": "awsui_vertical-marker-circle-active_f0fot_pe91i_98",
  "focus-outline": "awsui_focus-outline_f0fot_pe91i_103",
  "chart-container": "awsui_chart-container_f0fot_pe91i_111",
  "chart-container__vertical": "awsui_chart-container__vertical_f0fot_pe91i_117",
  "chart-container__horizontal": "awsui_chart-container__horizontal_f0fot_pe91i_123"
};

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/axis-label.js
var axis_label_default = (0, import_react51.memo)(AxisLabel);
function AxisLabel({ title, axis, position }) {
  if (!title) {
    return null;
  }
  return import_react51.default.createElement(
    InternalBox,
    { className: clsx_m_default(styles_css_default20["axis-label"], axis === "x" ? styles_css_default20["axis-label--x"] : styles_css_default20["axis-label--y"]), fontWeight: "bold", textAlign: position === "left" ? "left" : "center", margin: { bottom: position === "left" ? "l" : "n" } },
    import_react51.default.createElement("span", { "aria-hidden": "true" }, title)
  );
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/labels-measure.js
var import_react52 = __toESM(require_react());
var labels_measure_default = (0, import_react52.memo)(LabelsMeasure);
function LabelsMeasure({ scale, ticks: ticks2, tickFormatter, autoWidth }) {
  const [width, ref] = useContainerQuery((rect) => rect.width);
  (0, import_react52.useEffect)(() => {
    autoWidth(width || 0);
  }, [autoWidth, width]);
  const labelMapper = (value) => {
    const scaledValue = scale.d3Scale(value);
    if (scaledValue === void 0 || !isFinite(scaledValue)) {
      return null;
    }
    return import_react52.default.createElement("div", { key: `${value}`, className: styles_css_default20["labels-left__label"], "aria-hidden": "true" }, tickFormatter ? tickFormatter(value) : value.toString());
  };
  return import_react52.default.createElement("div", { ref, className: clsx_m_default(styles_css_default20["labels-left"], styles_css_default20["labels-left--hidden"]) }, ticks2.map(labelMapper));
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/left-labels.js
var import_react53 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/constants.js
var TICK_LENGTH = 8;
var TICK_MARGIN = 4;
var TICK_LINE_HEIGHT = 16;
var X_TICK_COUNT_RATIO = 100;
var Y_TICK_COUNT_RATIO = 50;

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/label-utils.js
var SPACE_BETWEEN = 4;
function formatTicks({ ticks: ticks2, scale, getLabelSpace, tickFormatter }) {
  return ticks2.map((tick) => {
    var _a;
    const position = (_a = scale.d3Scale(tick)) !== null && _a !== void 0 ? _a : NaN;
    const label = tickFormatter ? tickFormatter(tick) : tick.toString();
    const lines = (label + "").split("\n");
    return { position, lines, space: Math.max(...lines.map(getLabelSpace)) };
  });
}
function getVisibleTicks(ticks2, from, until, balanceTicks = false) {
  ticks2 = getTicksInRange(ticks2, from, until);
  return balanceTicks ? getReducedTicks(ticks2) : removeIntersections(ticks2);
}
function getTicksInRange(ticks2, from, until) {
  return ticks2.filter((tick) => from <= tick.position - tick.space / 2 && tick.position + tick.space / 2 <= until);
}
function getReducedTicks(ticks2) {
  const reduceLabelRatio = findReduceLabelRatio(ticks2);
  const reducedTicks = [];
  for (let index = 0; index < ticks2.length; index += reduceLabelRatio) {
    reducedTicks.push(ticks2[index]);
  }
  return reducedTicks;
}
function findReduceLabelRatio(ticks2, ratio = 1) {
  if (ratio >= ticks2.length) {
    return ratio;
  }
  for (let i = ratio; i < ticks2.length; i += ratio) {
    if (hasIntersection(ticks2[i - ratio], ticks2[i])) {
      return findReduceLabelRatio(ticks2, ratio + 1);
    }
  }
  return ratio;
}
function removeIntersections(ticks2) {
  const visibleTicks = [];
  let prevTick = null;
  for (const tick of ticks2) {
    if (!prevTick || !hasIntersection(prevTick, tick)) {
      visibleTicks.push(tick);
      prevTick = tick;
    }
  }
  return visibleTicks;
}
function hasIntersection(a2, b) {
  const [left, right] = a2.position < b.position ? [a2, b] : [b, a2];
  const leftEdge = left.position + left.space / 2 + SPACE_BETWEEN;
  const rightEdge = right.position - right.space / 2;
  return leftEdge > rightEdge;
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/left-labels.js
var OFFSET_PX = 12;
var left_labels_default = (0, import_react53.memo)(LeftLabels);
function LeftLabels({ axis = "y", width, height, scale, ticks: ticks2, tickFormatter, title, ariaRoleDescription }) {
  const i18n = useInternalI18n("[charts]");
  const virtualTextRef = (0, import_react53.useRef)(null);
  const yOffset = axis === "x" && scale.isCategorical() ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;
  const cacheRef = (0, import_react53.useRef)({});
  const getLabelSpace = (label) => {
    if (cacheRef.current[label] !== void 0) {
      return cacheRef.current[label];
    }
    if (virtualTextRef.current && virtualTextRef.current.getBBox) {
      virtualTextRef.current.textContent = label;
      cacheRef.current[label] = virtualTextRef.current.getBBox().height;
      return cacheRef.current[label];
    }
    return 0;
  };
  const formattedTicks = formatTicks({ ticks: ticks2, scale, getLabelSpace, tickFormatter });
  if (virtualTextRef.current) {
    virtualTextRef.current.textContent = "";
  }
  const from = 0 - OFFSET_PX - yOffset;
  const until = height + OFFSET_PX - yOffset;
  const visibleTicks = getVisibleTicks(formattedTicks, from, until);
  return import_react53.default.createElement(
    "g",
    { className: clsx_m_default(styles_css_default20["labels-left"]), "aria-label": title, role: "list", "aria-roledescription": i18n("i18nStrings.chartAriaRoleDescription", ariaRoleDescription), "aria-hidden": true },
    visibleTicks.map(({ position, lines }, index) => isFinite(position) && import_react53.default.createElement(
      "g",
      { key: index, role: "listitem", transform: `translate(0,${position + yOffset})`, className: clsx_m_default(styles_css_default20.ticks, axis === "x" ? styles_css_default20["ticks--x"] : styles_css_default20["ticks--y"]) },
      axis === "y" && import_react53.default.createElement("line", { className: clsx_m_default(styles_css_default20.grid, styles_css_default20.ticks_line), x1: -TICK_LENGTH, y1: 0, x2: width, y2: 0, "aria-hidden": "true" }),
      import_react53.default.createElement("text", { className: styles_css_default20.ticks__text, x: -(TICK_LENGTH + TICK_MARGIN), y: 0 }, lines.join(" "))
    )),
    import_react53.default.createElement("text", { ref: virtualTextRef, x: 0, y: 0, style: { visibility: "hidden" }, "aria-hidden": "true" })
  );
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/bottom-labels.js
var import_react54 = __toESM(require_react());
var bottom_labels_default = (0, import_react54.memo)(BottomLabels);
function BottomLabels({ axis = "x", width, height, scale, ticks: ticks2, tickFormatter, title, ariaRoleDescription, autoHeight, offsetLeft = 0, offsetRight = 0 }) {
  const i18n = useInternalI18n("[charts]");
  const virtualTextRef = (0, import_react54.useRef)(null);
  const xOffset = scale.isCategorical() && axis === "x" ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;
  const cacheRef = (0, import_react54.useRef)({});
  const getLabelSpace = (label) => {
    if (cacheRef.current[label] !== void 0) {
      return cacheRef.current[label];
    }
    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {
      virtualTextRef.current.textContent = label;
      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();
      return cacheRef.current[label];
    }
    return 0;
  };
  const formattedTicks = formatTicks({ ticks: ticks2, scale, getLabelSpace, tickFormatter });
  if (virtualTextRef.current) {
    virtualTextRef.current.textContent = "";
  }
  const from = 0 - offsetLeft - xOffset;
  const until = width + offsetRight - xOffset;
  const balanceLabels = axis === "x" && scale.scaleType !== "log";
  const visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);
  let maxHeight = TICK_LENGTH + TICK_MARGIN;
  for (const { lines } of formattedTicks) {
    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);
  }
  (0, import_react54.useEffect)(() => {
    autoHeight(maxHeight);
  }, [autoHeight, maxHeight]);
  return import_react54.default.createElement(
    "g",
    { transform: `translate(0,${height})`, className: styles_css_default20["labels-bottom"], "aria-label": title, role: "list", "aria-roledescription": i18n("i18nStrings.chartAriaRoleDescription", ariaRoleDescription), "aria-hidden": true },
    visibleTicks.map(({ position, lines }, index) => isFinite(position) && import_react54.default.createElement(
      "g",
      { key: index, transform: `translate(${position + xOffset},0)`, className: clsx_m_default(styles_css_default20.ticks, styles_css_default20["ticks--bottom"], {
        [styles_css_default20["ticks--x"]]: axis === "x",
        [styles_css_default20["ticks--y"]]: axis === "y"
      }), role: "listitem", "aria-label": lines.join("\n") },
      import_react54.default.createElement("line", { className: styles_css_default20.ticks__line, x1: 0, x2: 0, y1: 0, y2: TICK_LENGTH, "aria-hidden": "true" }),
      lines.map((line, lineIndex) => import_react54.default.createElement("text", { className: styles_css_default20.ticks__text, key: lineIndex, x: 0, y: TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT }, line))
    )),
    import_react54.default.createElement("text", { ref: virtualTextRef, x: 0, y: 0, style: { visibility: "hidden" }, "aria-hidden": "true" })
  );
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/emphasized-baseline.js
var import_react55 = __toESM(require_react());
var emphasized_baseline_default = (0, import_react55.memo)(EmphasizedBaseline);
function EmphasizedBaseline({ axis = "x", width, height, scale }) {
  var _a;
  const baselineY = (_a = scale.d3Scale(0)) !== null && _a !== void 0 ? _a : NaN;
  const showYBaseline = axis === "x" && isFinite(baselineY) && baselineY <= height;
  if (showYBaseline) {
    return import_react55.default.createElement("line", { className: clsx_m_default(styles_css_default20.axis, styles_css_default20["axis--emphasized"]), x1: -TICK_MARGIN, x2: width, y1: baselineY, y2: baselineY, "aria-hidden": "true" });
  }
  if (axis === "y") {
    return import_react55.default.createElement("line", { className: clsx_m_default(styles_css_default20.axis, styles_css_default20["axis--emphasized"]), x1: 0, y1: 0, x2: 0, y2: height + TICK_LENGTH, "aria-hidden": "true" });
  }
  return null;
}

// node_modules/@cloudscape-design/components/area-chart/elements/data-series.js
var import_react58 = __toESM(require_react());

// node_modules/@cloudscape-design/components/area-chart/elements/area-series.js
var import_react56 = __toESM(require_react());

// node_modules/d3-path/src/path.js
var pi = Math.PI;
var tau = 2 * pi;
var epsilon = 1e-6;
var tauEpsilon = tau - epsilon;
function Path() {
  this._x0 = this._y0 = this._x1 = this._y1 = null;
  this._ = "";
}
function path() {
  return new Path();
}
Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x2, y2) {
    this._ += "M" + (this._x0 = this._x1 = +x2) + "," + (this._y0 = this._y1 = +y2);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x2, y2) {
    this._ += "L" + (this._x1 = +x2) + "," + (this._y1 = +y2);
  },
  quadraticCurveTo: function(x1, y1, x2, y2) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x2) + "," + (this._y1 = +y2);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else if (!(l01_2 > epsilon))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else {
      var x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }
      this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x2, y2, r, a0, a1, ccw) {
    x2 = +x2, y2 = +y2, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x2 + dx, y0 = y2 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
      this._ += "L" + x0 + "," + y0;
    }
    if (!r)
      return;
    if (da < 0)
      da = da % tau + tau;
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x2 - dx) + "," + (y2 - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } else if (da > epsilon) {
      this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x2 + r * Math.cos(a1)) + "," + (this._y1 = y2 + r * Math.sin(a1));
    }
  },
  rect: function(x2, y2, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x2) + "," + (this._y0 = this._y1 = +y2) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function() {
    return this._;
  }
};
var path_default = path;

// node_modules/d3-shape/src/constant.js
function constant_default(x2) {
  return function constant2() {
    return x2;
  };
}

// node_modules/d3-shape/src/math.js
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;
var epsilon2 = 1e-12;
var pi2 = Math.PI;
var halfPi = pi2 / 2;
var tau2 = 2 * pi2;
function acos(x2) {
  return x2 > 1 ? 0 : x2 < -1 ? pi2 : Math.acos(x2);
}
function asin(x2) {
  return x2 >= 1 ? halfPi : x2 <= -1 ? -halfPi : Math.asin(x2);
}

// node_modules/d3-shape/src/arc.js
function arcInnerRadius(d) {
  return d.innerRadius;
}
function arcOuterRadius(d) {
  return d.outerRadius;
}
function arcStartAngle(d) {
  return d.startAngle;
}
function arcEndAngle(d) {
  return d.endAngle;
}
function arcPadAngle(d) {
  return d && d.padAngle;
}
function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x2, y32 = y3 - y2, t = y32 * x10 - x32 * y10;
  if (t * t < epsilon2)
    return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
    cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}
function arc_default() {
  var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = constant_default(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
  function arc() {
    var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - halfPi, a1 = endAngle.apply(this, arguments) - halfPi, da = abs(a1 - a0), cw = a1 > a0;
    if (!context)
      context = buffer = path_default();
    if (r1 < r0)
      r = r1, r1 = r0, r0 = r;
    if (!(r1 > epsilon2))
      context.moveTo(0, 0);
    else if (da > tau2 - epsilon2) {
      context.moveTo(r1 * cos(a0), r1 * sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon2) {
        context.moveTo(r0 * cos(a1), r0 * sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    } else {
      var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > epsilon2 && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)), rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t02, t12;
      if (rp > epsilon2) {
        var p0 = asin(rp / r0 * sin(ap)), p1 = asin(rp / r1 * sin(ap));
        if ((da0 -= p0 * 2) > epsilon2)
          p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
        else
          da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon2)
          p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
        else
          da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }
      var x01 = r1 * cos(a01), y01 = r1 * sin(a01), x10 = r0 * cos(a10), y10 = r0 * sin(a10);
      if (rc > epsilon2) {
        var x11 = r1 * cos(a11), y11 = r1 * sin(a11), x00 = r0 * cos(a00), y00 = r0 * sin(a00), oc;
        if (da < pi2 && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2), lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = min(rc, (r0 - lc) / (kc - 1));
          rc1 = min(rc, (r1 - lc) / (kc + 1));
        }
      }
      if (!(da1 > epsilon2))
        context.moveTo(x01, y01);
      else if (rc1 > epsilon2) {
        t02 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t12 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
        context.moveTo(t02.cx + t02.x01, t02.cy + t02.y01);
        if (rc1 < rc)
          context.arc(t02.cx, t02.cy, rc1, atan2(t02.y01, t02.x01), atan2(t12.y01, t12.x01), !cw);
        else {
          context.arc(t02.cx, t02.cy, rc1, atan2(t02.y01, t02.x01), atan2(t02.y11, t02.x11), !cw);
          context.arc(0, 0, r1, atan2(t02.cy + t02.y11, t02.cx + t02.x11), atan2(t12.cy + t12.y11, t12.cx + t12.x11), !cw);
          context.arc(t12.cx, t12.cy, rc1, atan2(t12.y11, t12.x11), atan2(t12.y01, t12.x01), !cw);
        }
      } else
        context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
      if (!(r0 > epsilon2) || !(da0 > epsilon2))
        context.lineTo(x10, y10);
      else if (rc0 > epsilon2) {
        t02 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t12 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
        context.lineTo(t02.cx + t02.x01, t02.cy + t02.y01);
        if (rc0 < rc)
          context.arc(t02.cx, t02.cy, rc0, atan2(t02.y01, t02.x01), atan2(t12.y01, t12.x01), !cw);
        else {
          context.arc(t02.cx, t02.cy, rc0, atan2(t02.y01, t02.x01), atan2(t02.y11, t02.x11), !cw);
          context.arc(0, 0, r0, atan2(t02.cy + t02.y11, t02.cx + t02.x11), atan2(t12.cy + t12.y11, t12.cx + t12.x11), cw);
          context.arc(t12.cx, t12.cy, rc0, atan2(t12.y11, t12.x11), atan2(t12.y01, t12.x01), !cw);
        }
      } else
        context.arc(0, 0, r0, a10, a00, cw);
    }
    context.closePath();
    if (buffer)
      return context = null, buffer + "" || null;
  }
  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a2 = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi2 / 2;
    return [cos(a2) * r, sin(a2) * r];
  };
  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant_default(+_), arc) : innerRadius;
  };
  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant_default(+_), arc) : outerRadius;
  };
  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant_default(+_), arc) : cornerRadius;
  };
  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant_default(+_), arc) : padRadius;
  };
  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant_default(+_), arc) : startAngle;
  };
  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant_default(+_), arc) : endAngle;
  };
  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant_default(+_), arc) : padAngle;
  };
  arc.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };
  return arc;
}

// node_modules/d3-shape/src/curve/linear.js
function Linear(context) {
  this._context = context;
}
Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x2, y2);
        break;
    }
  }
};
function linear_default(context) {
  return new Linear(context);
}

// node_modules/d3-shape/src/point.js
function x(p) {
  return p[0];
}
function y(p) {
  return p[1];
}

// node_modules/d3-shape/src/line.js
function line_default() {
  var x2 = x, y2 = y, defined = constant_default(true), context = null, curve = linear_default, output = null;
  function line(data) {
    var i, n = data.length, d, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x2(d, i, data), +y2(d, i, data));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line.x = function(_) {
    return arguments.length ? (x2 = typeof _ === "function" ? _ : constant_default(+_), line) : x2;
  };
  line.y = function(_) {
    return arguments.length ? (y2 = typeof _ === "function" ? _ : constant_default(+_), line) : y2;
  };
  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default(!!_), line) : defined;
  };
  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };
  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };
  return line;
}

// node_modules/d3-shape/src/area.js
function area_default() {
  var x0 = x, x1 = null, y0 = constant_default(0), y1 = y, defined = constant_default(true), context = null, curve = linear_default, output = null;
  function area(data) {
    var i, j, k2, n = data.length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k2 = i - 1; k2 >= j; --k2) {
            output.point(x0z[k2], y0z[k2]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return line_default().defined(defined).curve(curve).context(context);
  }
  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant_default(+_), x1 = null, area) : x0;
  };
  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant_default(+_), area) : x0;
  };
  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant_default(+_), area) : x1;
  };
  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant_default(+_), y1 = null, area) : y0;
  };
  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant_default(+_), area) : y0;
  };
  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant_default(+_), area) : y1;
  };
  area.lineX0 = area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };
  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };
  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };
  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default(!!_), area) : defined;
  };
  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };
  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };
  return area;
}

// node_modules/d3-shape/src/descending.js
function descending_default(a2, b) {
  return b < a2 ? -1 : b > a2 ? 1 : b >= a2 ? 0 : NaN;
}

// node_modules/d3-shape/src/identity.js
function identity_default(d) {
  return d;
}

// node_modules/d3-shape/src/pie.js
function pie_default() {
  var value = identity_default, sortValues = descending_default, sort = null, startAngle = constant_default(0), endAngle = constant_default(tau2), padAngle = constant_default(0);
  function pie(data) {
    var i, n = data.length, j, k2, sum2 = 0, index = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(tau2, Math.max(-tau2, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum2 += v;
      }
    }
    if (sortValues != null)
      index.sort(function(i2, j2) {
        return sortValues(arcs[i2], arcs[j2]);
      });
    else if (sort != null)
      index.sort(function(i2, j2) {
        return sort(data[i2], data[j2]);
      });
    for (i = 0, k2 = sum2 ? (da - n * pa) / sum2 : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k2 : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }
    return arcs;
  }
  pie.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : constant_default(+_), pie) : value;
  };
  pie.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };
  pie.sort = function(_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };
  pie.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant_default(+_), pie) : startAngle;
  };
  pie.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant_default(+_), pie) : endAngle;
  };
  pie.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant_default(+_), pie) : padAngle;
  };
  return pie;
}

// node_modules/d3-shape/src/curve/radial.js
var curveRadialLinear = curveRadial(linear_default);
function Radial(curve) {
  this._curve = curve;
}
Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a2, r) {
    this._curve.point(r * Math.sin(a2), r * -Math.cos(a2));
  }
};
function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }
  radial._curve = curve;
  return radial;
}

// node_modules/d3-shape/src/array.js
var slice = Array.prototype.slice;

// node_modules/d3-shape/src/symbol/diamond.js
var tan30 = Math.sqrt(1 / 3);
var tan30_2 = tan30 * 2;

// node_modules/d3-shape/src/symbol/star.js
var kr = Math.sin(pi2 / 10) / Math.sin(7 * pi2 / 10);
var kx = Math.sin(tau2 / 10) * kr;
var ky = -Math.cos(tau2 / 10) * kr;

// node_modules/d3-shape/src/symbol/triangle.js
var sqrt3 = Math.sqrt(3);

// node_modules/d3-shape/src/symbol/wye.js
var s = Math.sqrt(3) / 2;
var k = 1 / Math.sqrt(12);
var a = (k / 2 + 1) * 3;

// node_modules/d3-shape/src/noop.js
function noop_default() {
}

// node_modules/d3-shape/src/curve/basis.js
function point(that, x2, y2) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x2) / 6,
    (that._y0 + 4 * that._y1 + y2) / 6
  );
}
function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/basisClosed.js
function BasisClosed(context) {
  this._context = context;
}
BasisClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x2, this._y2 = y2;
        break;
      case 1:
        this._point = 2;
        this._x3 = x2, this._y3 = y2;
        break;
      case 2:
        this._point = 3;
        this._x4 = x2, this._y4 = y2;
        this._context.moveTo((this._x0 + 4 * this._x1 + x2) / 6, (this._y0 + 4 * this._y1 + y2) / 6);
        break;
      default:
        point(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/basisOpen.js
function BasisOpen(context) {
  this._context = context;
}
BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x2) / 6, y0 = (this._y0 + 4 * this._y1 + y2) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;
      case 3:
        this._point = 4;
      default:
        point(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/bundle.js
function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}
Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, j = x2.length - 1;
    if (j > 0) {
      var x0 = x2[0], y0 = y2[0], dx = x2[j] - x0, dy = y2[j] - y0, i = -1, t;
      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x2[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y2[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
var bundle_default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }
  bundle.beta = function(beta2) {
    return custom(+beta2);
  };
  return bundle;
}(0.85);

// node_modules/d3-shape/src/curve/cardinal.js
function point2(that, x2, y2) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x2),
    that._y2 + that._k * (that._y1 - y2),
    that._x2,
    that._y2
  );
}
function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point2(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        this._x1 = x2, this._y1 = y2;
        break;
      case 2:
        this._point = 3;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinal_default = function custom2(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom2(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalClosed.js
function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x2, this._y3 = y2;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x2, this._y4 = y2);
        break;
      case 2:
        this._point = 3;
        this._x5 = x2, this._y5 = y2;
        break;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinalClosed_default = function custom3(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom3(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalOpen.js
function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinalOpen_default = function custom4(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom4(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/catmullRom.js
function point3(that, x2, y2) {
  var x1 = that._x1, y1 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon2) {
    var a2 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a2 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a2 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }
  if (that._l23_a > epsilon2) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b + that._x1 * that._l23_2a - x2 * that._l12_2a) / m;
    y22 = (y22 * b + that._y1 * that._l23_2a - y2 * that._l12_2a) / m;
  }
  that._context.bezierCurveTo(x1, y1, x22, y22, that._x2, that._y2);
}
function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point3(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRom_default = function custom5(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom5(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomClosed.js
function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x2, this._y3 = y2;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x2, this._y4 = y2);
        break;
      case 2:
        this._point = 3;
        this._x5 = x2, this._y5 = y2;
        break;
      default:
        point3(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRomClosed_default = function custom6(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom6(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomOpen.js
function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point3(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRomOpen_default = function custom7(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom7(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/linearClosed.js
function LinearClosed(context) {
  this._context = context;
}
LinearClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point)
      this._context.lineTo(x2, y2);
    else
      this._point = 1, this._context.moveTo(x2, y2);
  }
};

// node_modules/d3-shape/src/curve/monotone.js
function sign(x2) {
  return x2 < 0 ? -1 : 1;
}
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}
function point4(that, t02, t12) {
  var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t02, x1 - dx, y1 - dx * t12, x1, y1);
}
function MonotoneX(context) {
  this._context = context;
}
MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point4(this, this._t0, slope2(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    var t12 = NaN;
    x2 = +x2, y2 = +y2;
    if (x2 === this._x1 && y2 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point4(this, slope2(this, t12 = slope3(this, x2, y2)), t12);
        break;
      default:
        point4(this, this._t0, t12 = slope3(this, x2, y2));
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
    this._t0 = t12;
  }
};
function MonotoneY(context) {
  this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x2, y2) {
  MonotoneX.prototype.point.call(this, y2, x2);
};
function ReflectContext(context) {
  this._context = context;
}
ReflectContext.prototype = {
  moveTo: function(x2, y2) {
    this._context.moveTo(y2, x2);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x2, y2) {
    this._context.lineTo(y2, x2);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y3, x3);
  }
};

// node_modules/d3-shape/src/curve/natural.js
function Natural(context) {
  this._context = context;
}
Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, n = x2.length;
    if (n) {
      this._line ? this._context.lineTo(x2[0], y2[0]) : this._context.moveTo(x2[0], y2[0]);
      if (n === 2) {
        this._context.lineTo(x2[1], y2[1]);
      } else {
        var px = controlPoints(x2), py = controlPoints(y2);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x2[i1], y2[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
function controlPoints(x2) {
  var i, n = x2.length - 1, m, a2 = new Array(n), b = new Array(n), r = new Array(n);
  a2[0] = 0, b[0] = 2, r[0] = x2[0] + 2 * x2[1];
  for (i = 1; i < n - 1; ++i)
    a2[i] = 1, b[i] = 4, r[i] = 4 * x2[i] + 2 * x2[i + 1];
  a2[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x2[n - 1] + x2[n];
  for (i = 1; i < n; ++i)
    m = a2[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a2[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i)
    a2[i] = (r[i] - a2[i + 1]) / b[i];
  b[n - 1] = (x2[n] + a2[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i)
    b[i] = 2 * x2[i + 1] - a2[i + 1];
  return [a2, b];
}

// node_modules/d3-shape/src/curve/step.js
function Step(context, t) {
  this._context = context;
  this._t = t;
}
Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y2);
          this._context.lineTo(x2, y2);
        } else {
          var x1 = this._x * (1 - this._t) + x2 * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y2);
        }
        break;
      }
    }
    this._x = x2, this._y = y2;
  }
};

// node_modules/@cloudscape-design/components/area-chart/elements/area-series.js
var area_series_default = (0, import_react56.memo)(AreaSeries);
function AreaSeries({ data, color: color2, chartAreaClipPath }) {
  const areaGenerator = area_default().x((p) => p.scaled.x).y0((p) => p.scaled.y0).y1((p) => p.scaled.y1);
  const areaPath = areaGenerator(data) || "";
  const lineGenerator = line_default().x((p) => p.scaled.x).y((p) => p.scaled.y1);
  const linePath = lineGenerator(data) || "";
  return import_react56.default.createElement(
    import_react56.default.Fragment,
    null,
    import_react56.default.createElement("path", { "aria-hidden": true, fill: color2, stroke: color2, style: { opacity: 0.4 }, clipPath: `url(#${chartAreaClipPath})`, d: areaPath }),
    import_react56.default.createElement("path", { "aria-hidden": true, stroke: color2, clipPath: `url(#${chartAreaClipPath})`, d: linePath })
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/threshold-series.js
var import_react57 = __toESM(require_react());
var threshold_series_default = (0, import_react57.memo)(ThresholdSeries);
function ThresholdSeries({ data, xScale, color: color2, chartAreaClipPath }) {
  const range2 = xScale.d3Scale.range();
  const y2 = data[0].scaled.y0;
  const path2 = { x1: range2[0], x2: range2[1], y1: y2, y2 };
  return import_react57.default.createElement("line", Object.assign({ "aria-hidden": true, stroke: color2, clipPath: `url(#${chartAreaClipPath})` }, path2));
}

// node_modules/@cloudscape-design/components/area-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/area-chart/styles.scoped.css";
var styles_css_default21 = {
  "series": "awsui_series_y1yrh_1hj0b_93",
  "root": "awsui_root_y1yrh_1hj0b_111",
  "series--highlighted": "awsui_series--highlighted_y1yrh_1hj0b_123",
  "series--dimmed": "awsui_series--dimmed_y1yrh_1hj0b_127",
  "series--threshold": "awsui_series--threshold_y1yrh_1hj0b_131",
  "popover-divider": "awsui_popover-divider_y1yrh_1hj0b_136"
};

// node_modules/@cloudscape-design/components/area-chart/elements/data-series.js
var data_series_default = (0, import_react58.memo)(DataSeries);
function DataSeries({ model }) {
  const chartAreaClipPath = useUniqueId("awsui-area-chart__chart-area-");
  const highlightedX = useSelector(model.interactions, (state) => state.highlightedX);
  const highlightedSeries = useSelector(model.interactions, (state) => state.highlightedSeries);
  const useHighlightDimmed = !highlightedX;
  const seriesData = [];
  for (let seriesIndex = model.series.length - 1; seriesIndex >= 0; seriesIndex--) {
    if (model.computed.plot.sx[seriesIndex]) {
      seriesData.push([model.series[seriesIndex], model.computed.plot.sx[seriesIndex] || []]);
    }
  }
  return import_react58.default.createElement(
    import_react58.default.Fragment,
    null,
    import_react58.default.createElement(
      "defs",
      { "aria-hidden": "true" },
      import_react58.default.createElement(
        "clipPath",
        { id: chartAreaClipPath },
        import_react58.default.createElement("rect", { x: 0, y: 0, width: model.width, height: model.height })
      )
    ),
    import_react58.default.createElement("g", { role: "group" }, seriesData.map(([series, data]) => {
      const isHighlighted = series === highlightedSeries;
      const isDimmed = !!highlightedSeries && !isHighlighted;
      return import_react58.default.createElement("g", { key: series.title, role: "group", "aria-label": series.title, className: clsx_m_default(styles_css_default21.series, styles_css_default21[`series--${series.type}`], {
        [styles_css_default21["series--highlighted"]]: isHighlighted,
        [styles_css_default21["series--dimmed"]]: useHighlightDimmed && isDimmed
      }) }, series.type === "area" ? import_react58.default.createElement(area_series_default, { data, color: model.getInternalSeries(series).color, chartAreaClipPath }) : import_react58.default.createElement(threshold_series_default, { data, xScale: model.computed.xScale, color: model.getInternalSeries(series).color, chartAreaClipPath }));
    }))
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/chart-popover.js
var import_react61 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-popover/index.js
var import_react59 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-popover/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-popover/styles.scoped.css";
var styles_css_default22 = {
  "root": "awsui_root_1t44z_1qi46_93",
  "hover-area": "awsui_hover-area_1t44z_1qi46_107",
  "popover-body": "awsui_popover-body_1t44z_1qi46_113"
};

// node_modules/@cloudscape-design/components/internal/components/chart-popover/index.js
var chart_popover_default = import_react59.default.forwardRef(ChartPopover);
function ChartPopover(_a, ref) {
  var { position = "right", size = "medium", fixedWidth = false, dismissButton: dismissButton2 = false, dismissAriaLabel, children, title, trackRef, trackKey, onDismiss, container, onMouseEnter, onMouseLeave } = _a, restProps = __rest(_a, ["position", "size", "fixedWidth", "dismissButton", "dismissAriaLabel", "children", "title", "trackRef", "trackKey", "onDismiss", "container", "onMouseEnter", "onMouseLeave"]);
  const baseProps = getBaseProps(restProps);
  const popoverObjectRef = (0, import_react59.useRef)(null);
  const popoverRef = useMergeRefs(popoverObjectRef, ref);
  (0, import_react59.useEffect)(() => {
    const onDocumentClick = (event) => {
      if (event.target && !nodeBelongs(popoverObjectRef.current, event.target) && !nodeContains(container, event.target)) {
        onDismiss(true);
      }
    };
    document.addEventListener("mousedown", onDocumentClick, { capture: true });
    return () => {
      document.removeEventListener("mousedown", onDocumentClick, { capture: true });
    };
  }, [container, onDismiss]);
  return import_react59.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, styles_css_default22.root, baseProps.className, { [styles_css_default22.dismissable]: dismissButton2 }), ref: popoverRef, onMouseEnter, onMouseLeave }),
    import_react59.default.createElement(
      PopoverContainer,
      { size, fixedWidth, position, trackRef, trackKey, arrow: (position2) => import_react59.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default.arrow, styles_css_default[`arrow-position-${position2}`]) },
        import_react59.default.createElement("div", { className: styles_css_default["arrow-outer"] }),
        import_react59.default.createElement("div", { className: styles_css_default["arrow-inner"] })
      ) },
      import_react59.default.createElement(
        "div",
        { className: styles_css_default22["hover-area"] },
        import_react59.default.createElement(PopoverBody, { dismissButton: dismissButton2, dismissAriaLabel, header: title, onDismiss, overflowVisible: "content", className: styles_css_default22["popover-body"] }, children)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/internal/components/chart-series-details/index.js
var import_react60 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-series-details/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-series-details/styles.scoped.css";
var styles_css_default23 = {
  "dimmed": "awsui_dimmed_10ipo_1a267_93",
  "root": "awsui_root_10ipo_1a267_122",
  "list": "awsui_list_10ipo_1a267_135",
  "list-item": "awsui_list-item_10ipo_1a267_142",
  "key": "awsui_key_10ipo_1a267_147"
};

// node_modules/@cloudscape-design/components/internal/components/chart-series-details/index.js
var chart_series_details_default = (0, import_react60.memo)(ChartSeriesDetails);
function ChartSeriesDetails(_a) {
  var { details } = _a, restProps = __rest(_a, ["details"]);
  const baseProps = getBaseProps(restProps);
  const className = clsx_m_default(baseProps.className, styles_css_default23.root);
  return import_react60.default.createElement(
    "div",
    Object.assign({}, baseProps, { className }),
    import_react60.default.createElement("ul", { className: styles_css_default23.list }, details.map(({ key, value, markerType, color: color2, isDimmed }, index) => import_react60.default.createElement(
      "li",
      { key: index, className: clsx_m_default({
        [styles_css_default23.dimmed]: isDimmed,
        [styles_css_default23["list-item"]]: true
      }) },
      import_react60.default.createElement(
        "div",
        { className: styles_css_default23.key },
        markerType && color2 && import_react60.default.createElement(chart_series_marker_default, { type: markerType, color: color2 }),
        import_react60.default.createElement("span", null, key)
      ),
      import_react60.default.createElement(InternalBox, { textAlign: "right" }, value)
    )))
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/chart-popover.js
function AreaChartPopover({ model, highlightDetails, dismissAriaLabel, footer, size }) {
  if (!highlightDetails) {
    return null;
  }
  const popoverProps = {
    title: highlightDetails.formattedX,
    trackRef: model.refs.verticalMarker,
    trackKey: highlightDetails.highlightIndex,
    dismissButton: highlightDetails.isPopoverPinned,
    onDismiss: model.handlers.onPopoverDismiss,
    onMouseLeave: model.handlers.onPopoverLeave,
    ref: model.refs.popoverRef
  };
  return import_react61.default.createElement(
    chart_popover_default,
    Object.assign({}, popoverProps, { container: model.refs.container.current, dismissAriaLabel, size }),
    import_react61.default.createElement(chart_series_details_default, { details: highlightDetails.seriesDetails }),
    import_react61.default.createElement("div", { className: styles_css_default21["popover-divider"] }),
    import_react61.default.createElement(chart_series_details_default, { details: highlightDetails.totalDetails }),
    footer && import_react61.default.createElement(InternalBox, { margin: { top: "s" } }, footer)
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/highlighted-point.js
var import_react63 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/highlighted-point.js
var import_react62 = __toESM(require_react());
var highlighted_point_default = (0, import_react62.memo)((0, import_react62.forwardRef)(HighlightedPoint));
function HighlightedPoint({ point: point5, role = "group", ariaLabel, ariaHasPopup, ariaExpanded }, ref) {
  if (!point5) {
    return null;
  }
  return import_react62.default.createElement(
    "g",
    { ref, role, "aria-label": ariaLabel, "aria-haspopup": ariaHasPopup, "aria-expanded": ariaExpanded },
    import_react62.default.createElement("circle", { key: point5.key, "aria-hidden": "true", className: styles_css_default20["vertical-marker-circle-active"], cx: point5.x, cy: point5.y, r: 4, stroke: point5.color, fill: point5.color })
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/highlighted-point.js
var highlighted_point_default2 = (0, import_react63.memo)((0, import_react63.forwardRef)(AreaHighlightedPoint));
function AreaHighlightedPoint({ model, ariaLabel }, ref) {
  const highlightedPoint = useSelector(model.interactions, (state) => state.highlightedPoint);
  const isPopoverPinned = useSelector(model.interactions, (state) => state.isPopoverPinned);
  const point5 = highlightedPoint ? {
    key: `${highlightedPoint.index.x}:${highlightedPoint.index.s}`,
    x: highlightedPoint.scaled.x,
    y: highlightedPoint.scaled.y1,
    color: model.getInternalSeries(model.series[highlightedPoint.index.s]).color
  } : null;
  return import_react63.default.createElement(highlighted_point_default, { ref, point: point5, role: "button", ariaLabel, ariaHasPopup: true, ariaExpanded: isPopoverPinned });
}

// node_modules/@cloudscape-design/components/area-chart/elements/vertical-marker.js
var import_react65 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/vertical-marker.js
var import_react64 = __toESM(require_react());
var vertical_marker_default = (0, import_react64.memo)((0, import_react64.forwardRef)(VerticalMarker));
function VerticalMarker({ height, showPoints = true, showLine = true, points }, ref) {
  const [firstPoint] = points || [];
  return import_react64.default.createElement(
    "g",
    null,
    import_react64.default.createElement("line", { ref, "aria-hidden": "true", className: styles_css_default20["vertical-marker"], style: { visibility: showLine && firstPoint ? "visible" : "hidden" }, x1: firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.x, x2: firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.x, y1: 0, y2: height }),
    showPoints && points && points.map((point5) => import_react64.default.createElement("circle", { key: point5.key, "aria-hidden": "true", className: styles_css_default20["vertical-marker-circle"], cx: point5.x, cy: point5.y, r: 4, stroke: point5.color }))
  );
}

// node_modules/@cloudscape-design/components/area-chart/elements/vertical-marker.js
var vertical_marker_default2 = (0, import_react65.memo)(AreaVerticalMarker);
function AreaVerticalMarker({ model }) {
  const highlightedX = useSelector(model.interactions, (state) => state.highlightedX);
  const verticalMarker = (highlightedX || []).map((point5) => ({
    key: `${point5.index.x}:${point5.index.s}`,
    x: point5.scaled.x,
    y: point5.scaled.y1,
    color: model.getInternalSeries(model.series[point5.index.s]).color
  }));
  return import_react65.default.createElement(vertical_marker_default, { height: model.height, points: verticalMarker, ref: model.refs.verticalMarker });
}

// node_modules/@cloudscape-design/components/area-chart/elements/use-highlight-details.js
function useHighlightDetails({ model, xTickFormatter, yTickFormatter, detailTotalFormatter, detailTotalLabel }) {
  const i18n = useInternalI18n("area-chart");
  const hX = useSelector(model.interactions, (state) => state.highlightedX);
  const hPoint = useSelector(model.interactions, (state) => state.highlightedPoint);
  const isPopoverPinned = useSelector(model.interactions, (state) => state.isPopoverPinned);
  if (!hX) {
    return null;
  }
  const [firstPoint] = hX;
  const highlightIndex = firstPoint.index.x;
  const seriesPoints = [...model.computed.plot.xs[highlightIndex]];
  const detailsTotal = seriesPoints.reduce((total, point5) => total + point5.value, 0);
  const formattedX = xTickFormatter ? xTickFormatter(firstPoint.x) : firstPoint.x.toString();
  const seriesTitle = hPoint ? getInternalSeries(hPoint).title : "";
  const formattedY = hPoint ? getInternalSeries(hPoint).formatValue(hPoint.value, hPoint.x) : "";
  const seriesDetails = seriesPoints.map((point5) => {
    const { title, formatValue: formatValue2, color: color2, markerType } = getInternalSeries(point5);
    const isDimmed = Boolean(hPoint) && point5 !== hPoint;
    return { key: title, value: formatValue2(point5.value, point5.x), color: color2, markerType, isDimmed };
  });
  const totalDetails = [
    {
      key: i18n("i18nStrings.detailTotalLabel", detailTotalLabel) || "",
      value: detailTotalFormatter ? detailTotalFormatter(detailsTotal) : yTickFormatter ? yTickFormatter(detailsTotal) : detailsTotal
    }
  ];
  const pointDetails = hPoint ? seriesDetails[hPoint.index.s] : null;
  const activeLabel = `${seriesTitle} ${formattedX} ${formattedY}, ${totalDetails[0].key} ${totalDetails[0].value}`;
  return {
    isPopoverPinned,
    highlightIndex,
    formattedX,
    seriesTitle,
    formattedY,
    activeLabel,
    seriesDetails,
    totalDetails,
    pointDetails
  };
  function getInternalSeries(point5) {
    return model.getInternalSeries(model.series[point5.index.s]);
  }
}

// node_modules/@cloudscape-design/components/internal/utils/use-container-width.js
function useContainerWidth(defaultValue = 0, threshold = 1) {
  const [width, ref] = useContainerQuery((rect, prev) => {
    if (prev === null) {
      return rect.width;
    }
    return Math.abs(prev - rect.width) >= threshold ? rect.width : prev;
  });
  return [width !== null && width !== void 0 ? width : defaultValue, ref];
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/chart-container.js
var import_react66 = __toESM(require_react());
var CartesianChartContainer = (0, import_react66.forwardRef)(({ leftAxisLabel, leftAxisLabelMeasure, bottomAxisLabel, chartPlot, popover }, ref) => {
  return import_react66.default.createElement(
    "div",
    { className: styles_css_default20["chart-container"], ref },
    leftAxisLabel,
    import_react66.default.createElement(
      "div",
      { className: styles_css_default20["chart-container__horizontal"] },
      leftAxisLabelMeasure,
      import_react66.default.createElement(
        "div",
        { className: styles_css_default20["chart-container__vertical"] },
        chartPlot,
        bottomAxisLabel
      ),
      popover
    )
  );
});

// node_modules/@cloudscape-design/components/area-chart/chart-container.js
var DEFAULT_CHART_WIDTH = 500;
var LEFT_LABELS_MARGIN = 16;
var BOTTOM_LABELS_OFFSET = 12;
var chart_container_default = (0, import_react67.memo)(ChartContainer);
function ChartContainer({ model, autoWidth, xTitle, yTitle, detailPopoverSize, detailPopoverFooter, ariaLabel, ariaLabelledby, ariaDescription, i18nStrings: { xTickFormatter, yTickFormatter, detailTotalFormatter, detailTotalLabel, chartAriaRoleDescription, xAxisAriaRoleDescription, yAxisAriaRoleDescription, detailPopoverDismissAriaLabel } = {} }) {
  const [leftLabelsWidth, setLeftLabelsWidth] = (0, import_react67.useState)(0);
  const [bottomLabelsHeight, setBottomLabelsHeight] = (0, import_react67.useState)(0);
  const [containerWidth, containerWidthRef] = useContainerWidth(DEFAULT_CHART_WIDTH);
  const plotWidth = Math.max(0, containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN);
  (0, import_react67.useEffect)(() => {
    autoWidth(plotWidth);
  }, [autoWidth, plotWidth]);
  const highlightDetails = useHighlightDetails({
    model,
    xTickFormatter,
    yTickFormatter,
    detailTotalFormatter,
    detailTotalLabel
  });
  const highlightedPointRef = (0, import_react67.useRef)(null);
  const mergedRef = useMergeRefs(containerWidthRef, model.refs.container);
  const isPointHighlighted = model.interactions.get().highlightedPoint !== null;
  const highlightedX = useSelector(model.interactions, (state) => state.highlightedX);
  const detailPopoverFooterContent = (0, import_react67.useMemo)(() => detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX[0].x) : null, [detailPopoverFooter, highlightedX]);
  return import_react67.default.createElement(CartesianChartContainer, { ref: mergedRef, leftAxisLabel: import_react67.default.createElement(axis_label_default, { axis: "y", position: "left", title: yTitle }), leftAxisLabelMeasure: import_react67.default.createElement(labels_measure_default, { scale: model.computed.yScale, ticks: model.computed.yTicks, tickFormatter: yTickFormatter, autoWidth: setLeftLabelsWidth }), bottomAxisLabel: import_react67.default.createElement(axis_label_default, { axis: "x", position: "bottom", title: xTitle }), chartPlot: import_react67.default.createElement(
    chart_plot_default,
    { ref: model.refs.plot, width: model.width, height: model.height, offsetBottom: bottomLabelsHeight, ariaLabel, ariaLabelledby, ariaDescription, ariaRoleDescription: chartAriaRoleDescription, activeElementKey: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned) && (highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel), activeElementRef: isPointHighlighted ? highlightedPointRef : model.refs.verticalMarker, activeElementFocusOffset: isPointHighlighted ? 3 : { x: 8, y: 0 }, isClickable: !(highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.isPopoverPinned), onMouseMove: model.handlers.onSVGMouseMove, onMouseOut: model.handlers.onSVGMouseOut, onMouseDown: model.handlers.onSVGMouseDown, onKeyDown: model.handlers.onSVGKeyDown, onFocus: model.handlers.onSVGFocus, onBlur: model.handlers.onSVGBlur },
    import_react67.default.createElement(left_labels_default, { width: model.width, height: model.height, scale: model.computed.yScale, ticks: model.computed.yTicks, tickFormatter: yTickFormatter, title: yTitle, ariaRoleDescription: yAxisAriaRoleDescription }),
    import_react67.default.createElement(data_series_default, { model }),
    import_react67.default.createElement(bottom_labels_default, { width: model.width, height: model.height, scale: model.computed.xScale, ticks: model.computed.xTicks, tickFormatter: xTickFormatter, title: xTitle, ariaRoleDescription: xAxisAriaRoleDescription, autoHeight: setBottomLabelsHeight, offsetLeft: leftLabelsWidth + BOTTOM_LABELS_OFFSET, offsetRight: BOTTOM_LABELS_OFFSET }),
    import_react67.default.createElement(emphasized_baseline_default, { width: model.width, height: model.height, scale: model.computed.yScale }),
    import_react67.default.createElement(vertical_marker_default2, { model }),
    import_react67.default.createElement(highlighted_point_default2, { ref: highlightedPointRef, model, ariaLabel: highlightDetails === null || highlightDetails === void 0 ? void 0 : highlightDetails.activeLabel })
  ), popover: import_react67.default.createElement(AreaChartPopover, { model, highlightDetails, dismissAriaLabel: detailPopoverDismissAriaLabel, size: detailPopoverSize, footer: detailPopoverFooterContent }) });
}

// node_modules/@cloudscape-design/components/area-chart/model/use-chart-model.js
var import_react68 = __toESM(require_react());

// node_modules/@cloudscape-design/components/area-chart/model/utils.js
var EPSILON = 1e-13;
function computeDomainX(series) {
  const xValues = getXValues(series);
  if (xValues.length === 0) {
    return [];
  }
  if (typeof xValues[0] === "string") {
    return uniq(xValues);
  }
  return xValues.reduce(([min3, max3], x2) => [x2 < min3 ? x2 : min3, max3 < x2 ? x2 : max3], [xValues[0], xValues[0]]);
}
function computeDomainY(series, scaleType) {
  let min3 = Number.POSITIVE_INFINITY;
  let max3 = Number.NEGATIVE_INFINITY;
  series.forEach((s2) => {
    if (s2.type === "threshold") {
      min3 = Math.min(min3, s2.y);
      max3 = Math.max(max3, s2.y);
    }
  });
  getXValues(series).forEach((_, xIndex) => {
    var _a;
    let stackY = scaleType === "linear" ? 0 : EPSILON;
    for (const s2 of series) {
      if (s2.type === "area") {
        stackY = stackY + (((_a = s2.data[xIndex]) === null || _a === void 0 ? void 0 : _a.y) || 0);
        min3 = Math.min(min3, stackY);
        max3 = Math.max(max3, stackY);
      }
    }
  });
  if (min3 === Number.POSITIVE_INFINITY) {
    return [];
  }
  if (scaleType === "log" && min3 === 0 && max3 > 1) {
    return [1, max3];
  }
  return [min3, max3];
}
function computePlotPoints(series, xScale, yScale) {
  const xValues = getXValues(series);
  const xy = [];
  const xs = [];
  const sx = [];
  getVisibleData(xValues, xScale).forEach(({ x: x2, scaledX }, xIndex) => {
    let stackY = yScale.scaleType === "linear" ? 0 : EPSILON;
    const points = [];
    series.forEach((s2, sIndex) => {
      var _a;
      if (s2.type === "threshold") {
        const scaledY = yScale.d3Scale(s2.y) || 0;
        points.push({
          x: x2,
          y0: s2.y,
          y1: s2.y,
          scaled: { x: scaledX, y0: scaledY, y1: scaledY },
          index: { x: xIndex, s: sIndex, y: 0 },
          value: 0
        });
      } else {
        const value = ((_a = s2.data[xIndex]) === null || _a === void 0 ? void 0 : _a.y) || 0;
        const y0 = stackY;
        const y1 = stackY + value;
        points.push({
          x: x2,
          y0,
          y1,
          scaled: { x: scaledX, y0: yScale.d3Scale(y0) || 0, y1: yScale.d3Scale(y1) || 0 },
          index: { x: xIndex, s: sIndex, y: 0 },
          value
        });
        stackY = y1;
      }
    });
    points.sort((p1, p2) => p1.y1 - p2.y1).forEach((point5, index) => {
      point5.index.y = index;
      insertIntoMatrix(xy, point5.index.x, point5.index.y, point5);
      insertIntoMatrix(xs, point5.index.x, point5.index.s, point5);
      insertIntoMatrix(sx, point5.index.s, point5.index.x, point5);
    });
  });
  return { xy, xs, sx };
}
function findClosest(sortedArray, target, getter) {
  if (sortedArray.length === 0) {
    throw new Error("Invariant violation: array is empty.");
  }
  const isAscending = getter(sortedArray[0]) < getter(sortedArray[sortedArray.length - 1]);
  const compare = (x2) => isAscending ? getter(x2) < target : getter(x2) > target;
  const delta = (x2) => Math.abs(getter(x2) - target);
  let lo = 0;
  let hi = sortedArray.length - 1;
  while (hi - lo > 1) {
    const mid = Math.floor((lo + hi) / 2);
    if (compare(sortedArray[mid])) {
      lo = mid;
    } else {
      hi = mid;
    }
  }
  return delta(sortedArray[lo]) < delta(sortedArray[hi]) ? sortedArray[lo] : sortedArray[hi];
}
function circleIndex(index, [from, to]) {
  if (index < from) {
    return to;
  }
  if (index > to) {
    return from;
  }
  return index;
}
function isSeriesValid(series) {
  var _a;
  const sampleXValues = getXValues(series);
  for (const s2 of series) {
    if (s2.type === "area") {
      for (let i = 0; i < Math.max(s2.data.length, sampleXValues.length); i++) {
        if (((_a = s2.data[i]) === null || _a === void 0 ? void 0 : _a.x) !== sampleXValues[i]) {
          return false;
        }
      }
    }
  }
  return true;
}
function getXValues(series) {
  for (const s2 of series) {
    if (s2.type === "area") {
      return s2.data.map(({ x: x2 }) => x2);
    }
  }
  return [];
}
function getVisibleData(data, xScale) {
  const scaledOffsetX = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;
  const visibleData = [];
  for (const x2 of data) {
    const scaledX = xScale.d3Scale(x2);
    if (scaledX !== void 0) {
      visibleData.push({ x: x2, scaledX: scaledX + scaledOffsetX });
    }
  }
  return visibleData;
}
function insertIntoMatrix(matrix, row, col, value) {
  if (!matrix[row]) {
    matrix[row] = [];
  }
  matrix[row][col] = value;
}
function uniq(arr) {
  const set2 = /* @__PURE__ */ new Set();
  const uniqArray = [];
  for (const value of arr) {
    if (!set2.has(value)) {
      set2.add(value);
      uniqArray.push(value);
    }
  }
  return uniqArray;
}

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}

// node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }
  var number2 = Number(dirtyNumber);
  if (isNaN(number2)) {
    return number2;
  }
  return number2 < 0 ? Math.ceil(number2) : Math.floor(number2);
}

// node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required, args) {
  if (args.length < required) {
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
  }
}

// node_modules/date-fns/esm/toDate/index.js
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  if (argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]") {
    return new Date(argument.getTime());
  } else if (typeof argument === "number" || argStr === "[object Number]") {
    return new Date(argument);
  } else {
    if ((typeof argument === "string" || argStr === "[object String]") && typeof console !== "undefined") {
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments");
      console.warn(new Error().stack);
    }
    return new Date(NaN);
  }
}

// node_modules/date-fns/esm/addDays/index.js
function addDays(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date2 = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    return date2;
  }
  date2.setDate(date2.getDate() + amount);
  return date2;
}

// node_modules/date-fns/esm/addMonths/index.js
function addMonths(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var date2 = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  if (isNaN(amount)) {
    return new Date(NaN);
  }
  if (!amount) {
    return date2;
  }
  var dayOfMonth = date2.getDate();
  var endOfDesiredMonth = new Date(date2.getTime());
  endOfDesiredMonth.setMonth(date2.getMonth() + amount + 1, 0);
  var daysInMonth = endOfDesiredMonth.getDate();
  if (dayOfMonth >= daysInMonth) {
    return endOfDesiredMonth;
  } else {
    date2.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
    return date2;
  }
}

// node_modules/date-fns/esm/add/index.js
function add(dirtyDate, duration) {
  requiredArgs(2, arguments);
  if (!duration || _typeof(duration) !== "object")
    return new Date(NaN);
  var years = duration.years ? toInteger(duration.years) : 0;
  var months = duration.months ? toInteger(duration.months) : 0;
  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;
  var days = duration.days ? toInteger(duration.days) : 0;
  var hours = duration.hours ? toInteger(duration.hours) : 0;
  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;
  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;
  var date2 = toDate(dirtyDate);
  var dateWithMonths = months || years ? addMonths(date2, months + years * 12) : date2;
  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;
  var minutesToAdd = minutes + hours * 60;
  var secondsToAdd = seconds + minutesToAdd * 60;
  var msToAdd = secondsToAdd * 1e3;
  var finalDate = new Date(dateWithDays.getTime() + msToAdd);
  return finalDate;
}

// node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

// node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}

// node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
function getTimezoneOffsetInMilliseconds(date2) {
  var utcDate2 = new Date(Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours(), date2.getMinutes(), date2.getSeconds(), date2.getMilliseconds()));
  utcDate2.setUTCFullYear(date2.getFullYear());
  return date2.getTime() - utcDate2.getTime();
}

// node_modules/date-fns/esm/startOfDay/index.js
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  date2.setHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/differenceInCalendarDays/index.js
var MILLISECONDS_IN_DAY = 864e5;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

// node_modules/date-fns/esm/addMinutes/index.js
var MILLISECONDS_IN_MINUTE = 6e4;
function addMinutes(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
}

// node_modules/date-fns/esm/addWeeks/index.js
function addWeeks(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  var days = amount * 7;
  return addDays(dirtyDate, days);
}

// node_modules/date-fns/esm/max/index.js
function max2(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result < currentDate || isNaN(Number(currentDate))) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

// node_modules/date-fns/esm/min/index.js
function min2(dirtyDatesArray) {
  requiredArgs(1, arguments);
  var datesArray;
  if (dirtyDatesArray && typeof dirtyDatesArray.forEach === "function") {
    datesArray = dirtyDatesArray;
  } else if (_typeof(dirtyDatesArray) === "object" && dirtyDatesArray !== null) {
    datesArray = Array.prototype.slice.call(dirtyDatesArray);
  } else {
    return new Date(NaN);
  }
  var result;
  datesArray.forEach(function(dirtyDate) {
    var currentDate = toDate(dirtyDate);
    if (result === void 0 || result > currentDate || isNaN(currentDate.getDate())) {
      result = currentDate;
    }
  });
  return result || new Date(NaN);
}

// node_modules/date-fns/esm/compareAsc/index.js
function compareAsc(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();
  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
  } else {
    return diff;
  }
}

// node_modules/date-fns/esm/constants/index.js
var daysInYear = 365.2425;
var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3;
var millisecondsInMinute = 6e4;
var millisecondsInHour = 36e5;
var millisecondsInSecond = 1e3;
var minTime = -maxTime;
var secondsInHour = 3600;
var secondsInDay = secondsInHour * 24;
var secondsInWeek = secondsInDay * 7;
var secondsInYear = secondsInDay * daysInYear;
var secondsInMonth = secondsInYear / 12;
var secondsInQuarter = secondsInMonth * 3;

// node_modules/date-fns/esm/isSameDay/index.js
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);
  var dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// node_modules/date-fns/esm/differenceInCalendarYears/index.js
function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}

// node_modules/date-fns/esm/differenceInDays/index.js
function compareLocalAsc(dateLeft, dateRight) {
  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1;
  } else {
    return diff;
  }
}
function differenceInDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign2 = compareLocalAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));
  dateLeft.setDate(dateLeft.getDate() - sign2 * difference);
  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign2);
  var result = sign2 * (difference - isLastDayNotFull);
  return result === 0 ? 0 : result;
}

// node_modules/date-fns/esm/endOfDay/index.js
function endOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  date2.setHours(23, 59, 59, 999);
  return date2;
}

// node_modules/date-fns/esm/endOfMonth/index.js
function endOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  var month = date2.getMonth();
  date2.setFullYear(date2.getFullYear(), month + 1, 0);
  date2.setHours(23, 59, 59, 999);
  return date2;
}

// node_modules/date-fns/esm/isLastDayOfMonth/index.js
function isLastDayOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  return endOfDay(date2).getTime() === endOfMonth(date2).getTime();
}

// node_modules/date-fns/esm/differenceInYears/index.js
function differenceInYears(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign2 = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight));
  dateLeft.setFullYear(1584);
  dateRight.setFullYear(1584);
  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign2;
  var result = sign2 * (difference - Number(isLastYearNotFull));
  return result === 0 ? 0 : result;
}

// node_modules/date-fns/esm/startOfMonth/index.js
function startOfMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  date2.setDate(1);
  date2.setHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1;
  var date2 = toDate(dirtyDate);
  var day = date2.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date2.setUTCDate(date2.getUTCDate() - diff);
  date2.setUTCHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  var year = date2.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  if (date2.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date2.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date2 = startOfUTCISOWeek(fourthOfJanuary);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date2).getTime() - startOfUTCISOWeekYear(date2).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

// node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date2 = toDate(dirtyDate);
  var day = date2.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date2.setUTCDate(date2.getUTCDate() - diff);
  date2.setUTCHours(0, 0, 0, 0);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  var year = date2.getUTCFullYear();
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  }
  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  if (date2.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date2.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}

// node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions2 = getDefaultOptions();
  var firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  var year = getUTCWeekYear(dirtyDate, options);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date2 = startOfUTCWeek(firstWeek, options);
  return date2;
}

// node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  var diff = startOfUTCWeek(date2, options).getTime() - startOfUTCWeekYear(date2, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format3 = args.formats[width] || args.formats[args.defaultWidth];
    return format3;
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
};
var timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
};

// node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options !== null && options !== void 0 && options.context ? String(options.context) : "standalone";
    var valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options !== null && options !== void 0 && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;
      var _width = options !== null && options !== void 0 && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
};
var quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
};
var monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
};
var dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
};
var dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
};
var ordinalNumber = function ordinalNumber2(dirtyNumber, _options) {
  var number2 = Number(dirtyNumber);
  var rem100 = number2 % 100;
  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number2 + "st";
      case 2:
        return number2 + "nd";
      case 3:
        return number2 + "rd";
    }
  }
  return number2 + "th";
};
var localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function argumentCallback(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
};

// node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(string2) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string2.match(matchPattern);
    if (!matchResult) {
      return null;
    }
    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    });
    var value;
    value = args.valueCallback ? args.valueCallback(key) : key;
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string2.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object2, predicate) {
  for (var key in object2) {
    if (object2.hasOwnProperty(key) && predicate(object2[key])) {
      return key;
    }
  }
  return void 0;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
  return void 0;
}

// node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(string2) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var matchResult = string2.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0];
    var parseResult = string2.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string2.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}

// node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function valueCallback(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function valueCallback2(index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
};

// node_modules/date-fns/esm/formatDistanceStrict/index.js
var MILLISECONDS_IN_MINUTE2 = 1e3 * 60;
var MINUTES_IN_DAY = 60 * 24;
var MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;
var MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;

// node_modules/date-fns/esm/getDaysInMonth/index.js
function getDaysInMonth(dirtyDate) {
  requiredArgs(1, arguments);
  var date2 = toDate(dirtyDate);
  var year = date2.getFullYear();
  var monthIndex = date2.getMonth();
  var lastDayOfMonth2 = new Date(0);
  lastDayOfMonth2.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth2.setHours(0, 0, 0, 0);
  return lastDayOfMonth2.getDate();
}

// node_modules/date-fns/esm/getOverlappingDaysInIntervals/index.js
var MILLISECONDS_IN_DAY2 = 24 * 60 * 60 * 1e3;

// node_modules/date-fns/esm/isAfter/index.js
function isAfter(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date2 = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date2.getTime() > dateToCompare.getTime();
}

// node_modules/date-fns/esm/isBefore/index.js
function isBefore(dirtyDate, dirtyDateToCompare) {
  requiredArgs(2, arguments);
  var date2 = toDate(dirtyDate);
  var dateToCompare = toDate(dirtyDateToCompare);
  return date2.getTime() < dateToCompare.getTime();
}

// node_modules/@babel/runtime/helpers/esm/inherits.js
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass)
    _setPrototypeOf(subClass, superClass);
}

// node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
    return o2.__proto__ || Object.getPrototypeOf(o2);
  };
  return _getPrototypeOf(o);
}

// node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct)
    return false;
  if (Reflect.construct.sham)
    return false;
  if (typeof Proxy === "function")
    return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e) {
    return false;
  }
}

// node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return _assertThisInitialized(self);
}

// node_modules/@babel/runtime/helpers/esm/createSuper.js
function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived), result;
    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }
    return _possibleConstructorReturn(this, result);
  };
}

// node_modules/@babel/runtime/helpers/esm/classCallCheck.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}

// node_modules/@babel/runtime/helpers/esm/createClass.js
function _defineProperties(target, props2) {
  for (var i = 0; i < props2.length; i++) {
    var descriptor = props2[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

// node_modules/date-fns/esm/parse/_lib/Setter.js
var TIMEZONE_UNIT_PRIORITY = 10;
var Setter = function() {
  function Setter2() {
    _classCallCheck(this, Setter2);
    _defineProperty(this, "priority", void 0);
    _defineProperty(this, "subPriority", 0);
  }
  _createClass(Setter2, [{
    key: "validate",
    value: function validate3(_utcDate, _options) {
      return true;
    }
  }]);
  return Setter2;
}();
var ValueSetter = function(_Setter) {
  _inherits(ValueSetter2, _Setter);
  var _super = _createSuper(ValueSetter2);
  function ValueSetter2(value, validateValue, setValue, priority, subPriority) {
    var _this;
    _classCallCheck(this, ValueSetter2);
    _this = _super.call(this);
    _this.value = value;
    _this.validateValue = validateValue;
    _this.setValue = setValue;
    _this.priority = priority;
    if (subPriority) {
      _this.subPriority = subPriority;
    }
    return _this;
  }
  _createClass(ValueSetter2, [{
    key: "validate",
    value: function validate3(utcDate2, options) {
      return this.validateValue(utcDate2, this.value, options);
    }
  }, {
    key: "set",
    value: function set2(utcDate2, flags, options) {
      return this.setValue(utcDate2, flags, this.value, options);
    }
  }]);
  return ValueSetter2;
}(Setter);
var DateToSystemTimezoneSetter = function(_Setter2) {
  _inherits(DateToSystemTimezoneSetter2, _Setter2);
  var _super2 = _createSuper(DateToSystemTimezoneSetter2);
  function DateToSystemTimezoneSetter2() {
    var _this2;
    _classCallCheck(this, DateToSystemTimezoneSetter2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this2 = _super2.call.apply(_super2, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this2), "priority", TIMEZONE_UNIT_PRIORITY);
    _defineProperty(_assertThisInitialized(_this2), "subPriority", -1);
    return _this2;
  }
  _createClass(DateToSystemTimezoneSetter2, [{
    key: "set",
    value: function set2(date2, flags) {
      if (flags.timestampIsSet) {
        return date2;
      }
      var convertedDate = new Date(0);
      convertedDate.setFullYear(date2.getUTCFullYear(), date2.getUTCMonth(), date2.getUTCDate());
      convertedDate.setHours(date2.getUTCHours(), date2.getUTCMinutes(), date2.getUTCSeconds(), date2.getUTCMilliseconds());
      return convertedDate;
    }
  }]);
  return DateToSystemTimezoneSetter2;
}(Setter);

// node_modules/date-fns/esm/parse/_lib/Parser.js
var Parser = function() {
  function Parser2() {
    _classCallCheck(this, Parser2);
    _defineProperty(this, "incompatibleTokens", void 0);
    _defineProperty(this, "priority", void 0);
    _defineProperty(this, "subPriority", void 0);
  }
  _createClass(Parser2, [{
    key: "run",
    value: function run3(dateString, token, match2, options) {
      var result = this.parse(dateString, token, match2, options);
      if (!result) {
        return null;
      }
      return {
        setter: new ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority),
        rest: result.rest
      };
    }
  }, {
    key: "validate",
    value: function validate3(_utcDate, _value, _options) {
      return true;
    }
  }]);
  return Parser2;
}();

// node_modules/date-fns/esm/parse/_lib/parsers/EraParser.js
var EraParser = function(_Parser) {
  _inherits(EraParser2, _Parser);
  var _super = _createSuper(EraParser2);
  function EraParser2() {
    var _this;
    _classCallCheck(this, EraParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 140);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["R", "u", "t", "T"]);
    return _this;
  }
  _createClass(EraParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "G":
        case "GG":
        case "GGG":
          return match2.era(dateString, {
            width: "abbreviated"
          }) || match2.era(dateString, {
            width: "narrow"
          });
        case "GGGGG":
          return match2.era(dateString, {
            width: "narrow"
          });
        case "GGGG":
        default:
          return match2.era(dateString, {
            width: "wide"
          }) || match2.era(dateString, {
            width: "abbreviated"
          }) || match2.era(dateString, {
            width: "narrow"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date2, flags, value) {
      flags.era = value;
      date2.setUTCFullYear(value, 0, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return EraParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/constants.js
var numericPatterns = {
  month: /^(1[0-2]|0?\d)/,
  date: /^(3[0-1]|[0-2]?\d)/,
  dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
  week: /^(5[0-3]|[0-4]?\d)/,
  hour23h: /^(2[0-3]|[0-1]?\d)/,
  hour24h: /^(2[0-4]|[0-1]?\d)/,
  hour11h: /^(1[0-1]|0?\d)/,
  hour12h: /^(1[0-2]|0?\d)/,
  minute: /^[0-5]?\d/,
  second: /^[0-5]?\d/,
  singleDigit: /^\d/,
  twoDigits: /^\d{1,2}/,
  threeDigits: /^\d{1,3}/,
  fourDigits: /^\d{1,4}/,
  anyDigitsSigned: /^-?\d+/,
  singleDigitSigned: /^-?\d/,
  twoDigitsSigned: /^-?\d{1,2}/,
  threeDigitsSigned: /^-?\d{1,3}/,
  fourDigitsSigned: /^-?\d{1,4}/
};
var timezonePatterns = {
  basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
  basic: /^([+-])(\d{2})(\d{2})|Z/,
  basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
  extended: /^([+-])(\d{2}):(\d{2})|Z/,
  extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
};

// node_modules/date-fns/esm/parse/_lib/utils.js
function mapValue(parseFnResult, mapFn) {
  if (!parseFnResult) {
    return parseFnResult;
  }
  return {
    value: mapFn(parseFnResult.value),
    rest: parseFnResult.rest
  };
}
function parseNumericPattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  return {
    value: parseInt(matchResult[0], 10),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseTimezonePattern(pattern, dateString) {
  var matchResult = dateString.match(pattern);
  if (!matchResult) {
    return null;
  }
  if (matchResult[0] === "Z") {
    return {
      value: 0,
      rest: dateString.slice(1)
    };
  }
  var sign2 = matchResult[1] === "+" ? 1 : -1;
  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
  return {
    value: sign2 * (hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * millisecondsInSecond),
    rest: dateString.slice(matchResult[0].length)
  };
}
function parseAnyDigitsSigned(dateString) {
  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);
}
function parseNDigits(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigit, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigits, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigits, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigits, dateString);
    default:
      return parseNumericPattern(new RegExp("^\\d{1," + n + "}"), dateString);
  }
}
function parseNDigitsSigned(n, dateString) {
  switch (n) {
    case 1:
      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);
    case 2:
      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);
    case 3:
      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);
    case 4:
      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);
    default:
      return parseNumericPattern(new RegExp("^-?\\d{1," + n + "}"), dateString);
  }
}
function dayPeriodEnumToHours(dayPeriod) {
  switch (dayPeriod) {
    case "morning":
      return 4;
    case "evening":
      return 17;
    case "pm":
    case "noon":
    case "afternoon":
      return 12;
    case "am":
    case "midnight":
    case "night":
    default:
      return 0;
  }
}
function normalizeTwoDigitYear(twoDigitYear, currentYear) {
  var isCommonEra = currentYear > 0;
  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
  var result;
  if (absCurrentYear <= 50) {
    result = twoDigitYear || 100;
  } else {
    var rangeEnd = absCurrentYear + 50;
    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
  }
  return isCommonEra ? result : 1 - result;
}
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}

// node_modules/date-fns/esm/parse/_lib/parsers/YearParser.js
var YearParser = function(_Parser) {
  _inherits(YearParser2, _Parser);
  var _super = _createSuper(YearParser2);
  function YearParser2() {
    var _this;
    _classCallCheck(this, YearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(YearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(year) {
        return {
          year,
          isTwoDigitYear: token === "yy"
        };
      };
      switch (token) {
        case "y":
          return mapValue(parseNDigits(4, dateString), valueCallback3);
        case "yo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "year"
          }), valueCallback3);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set2(date2, flags, value) {
      var currentYear = date2.getUTCFullYear();
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date2.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
        date2.setUTCHours(0, 0, 0, 0);
        return date2;
      }
      var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date2.setUTCFullYear(year, 0, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return YearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekYearParser.js
var LocalWeekYearParser = function(_Parser) {
  _inherits(LocalWeekYearParser2, _Parser);
  var _super = _createSuper(LocalWeekYearParser2);
  function LocalWeekYearParser2() {
    var _this;
    _classCallCheck(this, LocalWeekYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]);
    return _this;
  }
  _createClass(LocalWeekYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(year) {
        return {
          year,
          isTwoDigitYear: token === "YY"
        };
      };
      switch (token) {
        case "Y":
          return mapValue(parseNDigits(4, dateString), valueCallback3);
        case "Yo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "year"
          }), valueCallback3);
        default:
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value.isTwoDigitYear || value.year > 0;
    }
  }, {
    key: "set",
    value: function set2(date2, flags, value, options) {
      var currentYear = getUTCWeekYear(date2, options);
      if (value.isTwoDigitYear) {
        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);
        date2.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);
        date2.setUTCHours(0, 0, 0, 0);
        return startOfUTCWeek(date2, options);
      }
      var year = !("era" in flags) || flags.era === 1 ? value.year : 1 - value.year;
      date2.setUTCFullYear(year, 0, options.firstWeekContainsDate);
      date2.setUTCHours(0, 0, 0, 0);
      return startOfUTCWeek(date2, options);
    }
  }]);
  return LocalWeekYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekYearParser.js
var ISOWeekYearParser = function(_Parser) {
  _inherits(ISOWeekYearParser2, _Parser);
  var _super = _createSuper(ISOWeekYearParser2);
  function ISOWeekYearParser2() {
    var _this;
    _classCallCheck(this, ISOWeekYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISOWeekYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      if (token === "R") {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set2(_date, _flags, value) {
      var firstWeekOfYear = new Date(0);
      firstWeekOfYear.setUTCFullYear(value, 0, 4);
      firstWeekOfYear.setUTCHours(0, 0, 0, 0);
      return startOfUTCISOWeek(firstWeekOfYear);
    }
  }]);
  return ISOWeekYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ExtendedYearParser.js
var ExtendedYearParser = function(_Parser) {
  _inherits(ExtendedYearParser2, _Parser);
  var _super = _createSuper(ExtendedYearParser2);
  function ExtendedYearParser2() {
    var _this;
    _classCallCheck(this, ExtendedYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 130);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ExtendedYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      if (token === "u") {
        return parseNDigitsSigned(4, dateString);
      }
      return parseNDigitsSigned(token.length, dateString);
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCFullYear(value, 0, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return ExtendedYearParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/QuarterParser.js
var QuarterParser = function(_Parser) {
  _inherits(QuarterParser2, _Parser);
  var _super = _createSuper(QuarterParser2);
  function QuarterParser2() {
    var _this;
    _classCallCheck(this, QuarterParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 120);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(QuarterParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "Q":
        case "QQ":
          return parseNDigits(token.length, dateString);
        case "Qo":
          return match2.ordinalNumber(dateString, {
            unit: "quarter"
          });
        case "QQQ":
          return match2.quarter(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQQ":
          return match2.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "QQQQ":
        default:
          return match2.quarter(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.quarter(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMonth((value - 1) * 3, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return QuarterParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneQuarterParser.js
var StandAloneQuarterParser = function(_Parser) {
  _inherits(StandAloneQuarterParser2, _Parser);
  var _super = _createSuper(StandAloneQuarterParser2);
  function StandAloneQuarterParser2() {
    var _this;
    _classCallCheck(this, StandAloneQuarterParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 120);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneQuarterParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "q":
        case "qq":
          return parseNDigits(token.length, dateString);
        case "qo":
          return match2.ordinalNumber(dateString, {
            unit: "quarter"
          });
        case "qqq":
          return match2.quarter(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqqq":
          return match2.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "qqqq":
        default:
          return match2.quarter(dateString, {
            width: "wide",
            context: "standalone"
          }) || match2.quarter(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.quarter(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 4;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMonth((value - 1) * 3, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return StandAloneQuarterParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/MonthParser.js
var MonthParser = function(_Parser) {
  _inherits(MonthParser2, _Parser);
  var _super = _createSuper(MonthParser2);
  function MonthParser2() {
    var _this;
    _classCallCheck(this, MonthParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"]);
    _defineProperty(_assertThisInitialized(_this), "priority", 110);
    return _this;
  }
  _createClass(MonthParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(value) {
        return value - 1;
      };
      switch (token) {
        case "M":
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback3);
        case "MM":
          return mapValue(parseNDigits(2, dateString), valueCallback3);
        case "Mo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "month"
          }), valueCallback3);
        case "MMM":
          return match2.month(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMMM":
          return match2.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "MMMM":
        default:
          return match2.month(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.month(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMonth(value, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return MonthParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneMonthParser.js
var StandAloneMonthParser = function(_Parser) {
  _inherits(StandAloneMonthParser2, _Parser);
  var _super = _createSuper(StandAloneMonthParser2);
  function StandAloneMonthParser2() {
    var _this;
    _classCallCheck(this, StandAloneMonthParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 110);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneMonthParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(value) {
        return value - 1;
      };
      switch (token) {
        case "L":
          return mapValue(parseNumericPattern(numericPatterns.month, dateString), valueCallback3);
        case "LL":
          return mapValue(parseNDigits(2, dateString), valueCallback3);
        case "Lo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "month"
          }), valueCallback3);
        case "LLL":
          return match2.month(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLLL":
          return match2.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "LLLL":
        default:
          return match2.month(dateString, {
            width: "wide",
            context: "standalone"
          }) || match2.month(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.month(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMonth(value, 1);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return StandAloneMonthParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCWeek/index.js
function setUTCWeek(dirtyDate, dirtyWeek, options) {
  requiredArgs(2, arguments);
  var date2 = toDate(dirtyDate);
  var week = toInteger(dirtyWeek);
  var diff = getUTCWeek(date2, options) - week;
  date2.setUTCDate(date2.getUTCDate() - diff * 7);
  return date2;
}

// node_modules/date-fns/esm/parse/_lib/parsers/LocalWeekParser.js
var LocalWeekParser = function(_Parser) {
  _inherits(LocalWeekParser2, _Parser);
  var _super = _createSuper(LocalWeekParser2);
  function LocalWeekParser2() {
    var _this;
    _classCallCheck(this, LocalWeekParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 100);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]);
    return _this;
  }
  _createClass(LocalWeekParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "w":
          return parseNumericPattern(numericPatterns.week, dateString);
        case "wo":
          return match2.ordinalNumber(dateString, {
            unit: "week"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value, options) {
      return startOfUTCWeek(setUTCWeek(date2, value, options), options);
    }
  }]);
  return LocalWeekParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js
function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
  requiredArgs(2, arguments);
  var date2 = toDate(dirtyDate);
  var isoWeek = toInteger(dirtyISOWeek);
  var diff = getUTCISOWeek(date2) - isoWeek;
  date2.setUTCDate(date2.getUTCDate() - diff * 7);
  return date2;
}

// node_modules/date-fns/esm/parse/_lib/parsers/ISOWeekParser.js
var ISOWeekParser = function(_Parser) {
  _inherits(ISOWeekParser2, _Parser);
  var _super = _createSuper(ISOWeekParser2);
  function ISOWeekParser2() {
    var _this;
    _classCallCheck(this, ISOWeekParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 100);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISOWeekParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "I":
          return parseNumericPattern(numericPatterns.week, dateString);
        case "Io":
          return match2.ordinalNumber(dateString, {
            unit: "week"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 53;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      return startOfUTCISOWeek(setUTCISOWeek(date2, value));
    }
  }]);
  return ISOWeekParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DateParser.js
var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var DateParser = function(_Parser) {
  _inherits(DateParser2, _Parser);
  var _super = _createSuper(DateParser2);
  function DateParser2() {
    var _this;
    _classCallCheck(this, DateParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "subPriority", 1);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DateParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "d":
          return parseNumericPattern(numericPatterns.date, dateString);
        case "do":
          return match2.ordinalNumber(dateString, {
            unit: "date"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(date2, value) {
      var year = date2.getUTCFullYear();
      var isLeapYear2 = isLeapYearIndex(year);
      var month = date2.getUTCMonth();
      if (isLeapYear2) {
        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
      } else {
        return value >= 1 && value <= DAYS_IN_MONTH[month];
      }
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCDate(value);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return DateParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DayOfYearParser.js
var DayOfYearParser = function(_Parser) {
  _inherits(DayOfYearParser2, _Parser);
  var _super = _createSuper(DayOfYearParser2);
  function DayOfYearParser2() {
    var _this;
    _classCallCheck(this, DayOfYearParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "subpriority", 1);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DayOfYearParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "D":
        case "DD":
          return parseNumericPattern(numericPatterns.dayOfYear, dateString);
        case "Do":
          return match2.ordinalNumber(dateString, {
            unit: "date"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(date2, value) {
      var year = date2.getUTCFullYear();
      var isLeapYear2 = isLeapYearIndex(year);
      if (isLeapYear2) {
        return value >= 1 && value <= 366;
      } else {
        return value >= 1 && value <= 365;
      }
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMonth(0, value);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return DayOfYearParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCDay/index.js
function setUTCDay(dirtyDate, dirtyDay, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(2, arguments);
  var defaultOptions2 = getDefaultOptions();
  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions2.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions2.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  }
  var date2 = toDate(dirtyDate);
  var day = toInteger(dirtyDay);
  var currentDay = date2.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date2.setUTCDate(date2.getUTCDate() + diff);
  return date2;
}

// node_modules/date-fns/esm/parse/_lib/parsers/DayParser.js
var DayParser = function(_Parser) {
  _inherits(DayParser2, _Parser);
  var _super = _createSuper(DayParser2);
  function DayParser2() {
    var _this;
    _classCallCheck(this, DayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["D", "i", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(DayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "E":
        case "EE":
        case "EEE":
          return match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEE":
          return match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEEEE":
          return match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "EEEE":
        default:
          return match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value, options) {
      date2 = setUTCDay(date2, value, options);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return DayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/LocalDayParser.js
var LocalDayParser = function(_Parser) {
  _inherits(LocalDayParser2, _Parser);
  var _super = _createSuper(LocalDayParser2);
  function LocalDayParser2() {
    var _this;
    _classCallCheck(this, LocalDayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]);
    return _this;
  }
  _createClass(LocalDayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2, options) {
      var valueCallback3 = function valueCallback4(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        case "e":
        case "ee":
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
        case "eo":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "day"
          }), valueCallback3);
        case "eee":
          return match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeee":
          return match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeeeee":
          return match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "eeee":
        default:
          return match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value, options) {
      date2 = setUTCDay(date2, value, options);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return LocalDayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/StandAloneLocalDayParser.js
var StandAloneLocalDayParser = function(_Parser) {
  _inherits(StandAloneLocalDayParser2, _Parser);
  var _super = _createSuper(StandAloneLocalDayParser2);
  function StandAloneLocalDayParser2() {
    var _this;
    _classCallCheck(this, StandAloneLocalDayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]);
    return _this;
  }
  _createClass(StandAloneLocalDayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2, options) {
      var valueCallback3 = function valueCallback4(value) {
        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;
      };
      switch (token) {
        case "c":
        case "cc":
          return mapValue(parseNDigits(token.length, dateString), valueCallback3);
        case "co":
          return mapValue(match2.ordinalNumber(dateString, {
            unit: "day"
          }), valueCallback3);
        case "ccc":
          return match2.day(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "ccccc":
          return match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "cccccc":
          return match2.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
        case "cccc":
        default:
          return match2.day(dateString, {
            width: "wide",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "short",
            context: "standalone"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "standalone"
          });
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 6;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value, options) {
      date2 = setUTCDay(date2, value, options);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return StandAloneLocalDayParser2;
}(Parser);

// node_modules/date-fns/esm/_lib/setUTCISODay/index.js
function setUTCISODay(dirtyDate, dirtyDay) {
  requiredArgs(2, arguments);
  var day = toInteger(dirtyDay);
  if (day % 7 === 0) {
    day = day - 7;
  }
  var weekStartsOn = 1;
  var date2 = toDate(dirtyDate);
  var currentDay = date2.getUTCDay();
  var remainder = day % 7;
  var dayIndex = (remainder + 7) % 7;
  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
  date2.setUTCDate(date2.getUTCDate() + diff);
  return date2;
}

// node_modules/date-fns/esm/parse/_lib/parsers/ISODayParser.js
var ISODayParser = function(_Parser) {
  _inherits(ISODayParser2, _Parser);
  var _super = _createSuper(ISODayParser2);
  function ISODayParser2() {
    var _this;
    _classCallCheck(this, ISODayParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 90);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]);
    return _this;
  }
  _createClass(ISODayParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      var valueCallback3 = function valueCallback4(value) {
        if (value === 0) {
          return 7;
        }
        return value;
      };
      switch (token) {
        case "i":
        case "ii":
          return parseNDigits(token.length, dateString);
        case "io":
          return match2.ordinalNumber(dateString, {
            unit: "day"
          });
        case "iii":
          return mapValue(match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
        case "iiiii":
          return mapValue(match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
        case "iiiiii":
          return mapValue(match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
        case "iiii":
        default:
          return mapValue(match2.day(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "short",
            context: "formatting"
          }) || match2.day(dateString, {
            width: "narrow",
            context: "formatting"
          }), valueCallback3);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 7;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2 = setUTCISODay(date2, value);
      date2.setUTCHours(0, 0, 0, 0);
      return date2;
    }
  }]);
  return ISODayParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/AMPMParser.js
var AMPMParser = function(_Parser) {
  _inherits(AMPMParser2, _Parser);
  var _super = _createSuper(AMPMParser2);
  function AMPMParser2() {
    var _this;
    _classCallCheck(this, AMPMParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["b", "B", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(AMPMParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "a":
        case "aa":
        case "aaa":
          return match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaaa":
          return match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "aaaa":
        default:
          return match2.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date2;
    }
  }]);
  return AMPMParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/AMPMMidnightParser.js
var AMPMMidnightParser = function(_Parser) {
  _inherits(AMPMMidnightParser2, _Parser);
  var _super = _createSuper(AMPMMidnightParser2);
  function AMPMMidnightParser2() {
    var _this;
    _classCallCheck(this, AMPMMidnightParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "B", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(AMPMMidnightParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "b":
        case "bb":
        case "bbb":
          return match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbbb":
          return match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "bbbb":
        default:
          return match2.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date2;
    }
  }]);
  return AMPMMidnightParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/DayPeriodParser.js
var DayPeriodParser = function(_Parser) {
  _inherits(DayPeriodParser2, _Parser);
  var _super = _createSuper(DayPeriodParser2);
  function DayPeriodParser2() {
    var _this;
    _classCallCheck(this, DayPeriodParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 80);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "t", "T"]);
    return _this;
  }
  _createClass(DayPeriodParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "B":
        case "BB":
        case "BBB":
          return match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBBB":
          return match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
        case "BBBB":
        default:
          return match2.dayPeriod(dateString, {
            width: "wide",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "abbreviated",
            context: "formatting"
          }) || match2.dayPeriod(dateString, {
            width: "narrow",
            context: "formatting"
          });
      }
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
      return date2;
    }
  }]);
  return DayPeriodParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour1to12Parser.js
var Hour1to12Parser = function(_Parser) {
  _inherits(Hour1to12Parser2, _Parser);
  var _super = _createSuper(Hour1to12Parser2);
  function Hour1to12Parser2() {
    var _this;
    _classCallCheck(this, Hour1to12Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["H", "K", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour1to12Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "h":
          return parseNumericPattern(numericPatterns.hour12h, dateString);
        case "ho":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 12;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      var isPM = date2.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date2.setUTCHours(value + 12, 0, 0, 0);
      } else if (!isPM && value === 12) {
        date2.setUTCHours(0, 0, 0, 0);
      } else {
        date2.setUTCHours(value, 0, 0, 0);
      }
      return date2;
    }
  }]);
  return Hour1to12Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour0to23Parser.js
var Hour0to23Parser = function(_Parser) {
  _inherits(Hour0to23Parser2, _Parser);
  var _super = _createSuper(Hour0to23Parser2);
  function Hour0to23Parser2() {
    var _this;
    _classCallCheck(this, Hour0to23Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "K", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour0to23Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "H":
          return parseNumericPattern(numericPatterns.hour23h, dateString);
        case "Ho":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 23;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCHours(value, 0, 0, 0);
      return date2;
    }
  }]);
  return Hour0to23Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour0To11Parser.js
var Hour0To11Parser = function(_Parser) {
  _inherits(Hour0To11Parser2, _Parser);
  var _super = _createSuper(Hour0To11Parser2);
  function Hour0To11Parser2() {
    var _this;
    _classCallCheck(this, Hour0To11Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["h", "H", "k", "t", "T"]);
    return _this;
  }
  _createClass(Hour0To11Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "K":
          return parseNumericPattern(numericPatterns.hour11h, dateString);
        case "Ko":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 11;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      var isPM = date2.getUTCHours() >= 12;
      if (isPM && value < 12) {
        date2.setUTCHours(value + 12, 0, 0, 0);
      } else {
        date2.setUTCHours(value, 0, 0, 0);
      }
      return date2;
    }
  }]);
  return Hour0To11Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/Hour1To24Parser.js
var Hour1To24Parser = function(_Parser) {
  _inherits(Hour1To24Parser2, _Parser);
  var _super = _createSuper(Hour1To24Parser2);
  function Hour1To24Parser2() {
    var _this;
    _classCallCheck(this, Hour1To24Parser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 70);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["a", "b", "h", "H", "K", "t", "T"]);
    return _this;
  }
  _createClass(Hour1To24Parser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "k":
          return parseNumericPattern(numericPatterns.hour24h, dateString);
        case "ko":
          return match2.ordinalNumber(dateString, {
            unit: "hour"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 1 && value <= 24;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      var hours = value <= 24 ? value % 24 : value;
      date2.setUTCHours(hours, 0, 0, 0);
      return date2;
    }
  }]);
  return Hour1To24Parser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/MinuteParser.js
var MinuteParser = function(_Parser) {
  _inherits(MinuteParser2, _Parser);
  var _super = _createSuper(MinuteParser2);
  function MinuteParser2() {
    var _this;
    _classCallCheck(this, MinuteParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 60);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(MinuteParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "m":
          return parseNumericPattern(numericPatterns.minute, dateString);
        case "mo":
          return match2.ordinalNumber(dateString, {
            unit: "minute"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMinutes(value, 0, 0);
      return date2;
    }
  }]);
  return MinuteParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/SecondParser.js
var SecondParser = function(_Parser) {
  _inherits(SecondParser2, _Parser);
  var _super = _createSuper(SecondParser2);
  function SecondParser2() {
    var _this;
    _classCallCheck(this, SecondParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 50);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(SecondParser2, [{
    key: "parse",
    value: function parse2(dateString, token, match2) {
      switch (token) {
        case "s":
          return parseNumericPattern(numericPatterns.second, dateString);
        case "so":
          return match2.ordinalNumber(dateString, {
            unit: "second"
          });
        default:
          return parseNDigits(token.length, dateString);
      }
    }
  }, {
    key: "validate",
    value: function validate3(_date, value) {
      return value >= 0 && value <= 59;
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCSeconds(value, 0);
      return date2;
    }
  }]);
  return SecondParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/FractionOfSecondParser.js
var FractionOfSecondParser = function(_Parser) {
  _inherits(FractionOfSecondParser2, _Parser);
  var _super = _createSuper(FractionOfSecondParser2);
  function FractionOfSecondParser2() {
    var _this;
    _classCallCheck(this, FractionOfSecondParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 30);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T"]);
    return _this;
  }
  _createClass(FractionOfSecondParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      var valueCallback3 = function valueCallback4(value) {
        return Math.floor(value * Math.pow(10, -token.length + 3));
      };
      return mapValue(parseNDigits(token.length, dateString), valueCallback3);
    }
  }, {
    key: "set",
    value: function set2(date2, _flags, value) {
      date2.setUTCMilliseconds(value);
      return date2;
    }
  }]);
  return FractionOfSecondParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneWithZParser.js
var ISOTimezoneWithZParser = function(_Parser) {
  _inherits(ISOTimezoneWithZParser2, _Parser);
  var _super = _createSuper(ISOTimezoneWithZParser2);
  function ISOTimezoneWithZParser2() {
    var _this;
    _classCallCheck(this, ISOTimezoneWithZParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 10);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "x"]);
    return _this;
  }
  _createClass(ISOTimezoneWithZParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      switch (token) {
        case "X":
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case "XX":
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case "XXXX":
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case "XXXXX":
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case "XXX":
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set2(date2, flags, value) {
      if (flags.timestampIsSet) {
        return date2;
      }
      return new Date(date2.getTime() - value);
    }
  }]);
  return ISOTimezoneWithZParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/ISOTimezoneParser.js
var ISOTimezoneParser = function(_Parser) {
  _inherits(ISOTimezoneParser2, _Parser);
  var _super = _createSuper(ISOTimezoneParser2);
  function ISOTimezoneParser2() {
    var _this;
    _classCallCheck(this, ISOTimezoneParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 10);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", ["t", "T", "X"]);
    return _this;
  }
  _createClass(ISOTimezoneParser2, [{
    key: "parse",
    value: function parse2(dateString, token) {
      switch (token) {
        case "x":
          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);
        case "xx":
          return parseTimezonePattern(timezonePatterns.basic, dateString);
        case "xxxx":
          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);
        case "xxxxx":
          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);
        case "xxx":
        default:
          return parseTimezonePattern(timezonePatterns.extended, dateString);
      }
    }
  }, {
    key: "set",
    value: function set2(date2, flags, value) {
      if (flags.timestampIsSet) {
        return date2;
      }
      return new Date(date2.getTime() - value);
    }
  }]);
  return ISOTimezoneParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/TimestampSecondsParser.js
var TimestampSecondsParser = function(_Parser) {
  _inherits(TimestampSecondsParser2, _Parser);
  var _super = _createSuper(TimestampSecondsParser2);
  function TimestampSecondsParser2() {
    var _this;
    _classCallCheck(this, TimestampSecondsParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 40);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*");
    return _this;
  }
  _createClass(TimestampSecondsParser2, [{
    key: "parse",
    value: function parse2(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set2(_date, _flags, value) {
      return [new Date(value * 1e3), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampSecondsParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/TimestampMillisecondsParser.js
var TimestampMillisecondsParser = function(_Parser) {
  _inherits(TimestampMillisecondsParser2, _Parser);
  var _super = _createSuper(TimestampMillisecondsParser2);
  function TimestampMillisecondsParser2() {
    var _this;
    _classCallCheck(this, TimestampMillisecondsParser2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "priority", 20);
    _defineProperty(_assertThisInitialized(_this), "incompatibleTokens", "*");
    return _this;
  }
  _createClass(TimestampMillisecondsParser2, [{
    key: "parse",
    value: function parse2(dateString) {
      return parseAnyDigitsSigned(dateString);
    }
  }, {
    key: "set",
    value: function set2(_date, _flags, value) {
      return [new Date(value), {
        timestampIsSet: true
      }];
    }
  }]);
  return TimestampMillisecondsParser2;
}(Parser);

// node_modules/date-fns/esm/parse/_lib/parsers/index.js
var parsers = {
  G: new EraParser(),
  y: new YearParser(),
  Y: new LocalWeekYearParser(),
  R: new ISOWeekYearParser(),
  u: new ExtendedYearParser(),
  Q: new QuarterParser(),
  q: new StandAloneQuarterParser(),
  M: new MonthParser(),
  L: new StandAloneMonthParser(),
  w: new LocalWeekParser(),
  I: new ISOWeekParser(),
  d: new DateParser(),
  D: new DayOfYearParser(),
  E: new DayParser(),
  e: new LocalDayParser(),
  c: new StandAloneLocalDayParser(),
  i: new ISODayParser(),
  a: new AMPMParser(),
  b: new AMPMMidnightParser(),
  B: new DayPeriodParser(),
  h: new Hour1to12Parser(),
  H: new Hour0to23Parser(),
  K: new Hour0To11Parser(),
  k: new Hour1To24Parser(),
  m: new MinuteParser(),
  s: new SecondParser(),
  S: new FractionOfSecondParser(),
  X: new ISOTimezoneWithZParser(),
  x: new ISOTimezoneParser(),
  t: new TimestampSecondsParser(),
  T: new TimestampMillisecondsParser()
};

// node_modules/date-fns/esm/isSameMonth/index.js
function isSameMonth(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();
}

// node_modules/date-fns/esm/isToday/index.js
function isToday(dirtyDate) {
  requiredArgs(1, arguments);
  return isSameDay(dirtyDate, Date.now());
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/ticks.js
function getXTickCount(width) {
  return Math.ceil(width / X_TICK_COUNT_RATIO);
}
function getYTickCount(height) {
  return Math.ceil(height / Y_TICK_COUNT_RATIO);
}
function createXTicks(scale, values) {
  if (scale.isNumeric()) {
    return scale.d3Scale.ticks(values);
  } else if (scale.isTime()) {
    const rawTicks = scale.d3Scale.ticks(values);
    const domain = scale.d3Scale.domain();
    return uniform(rawTicks, domain[domain.length - 1]);
  } else {
    return scale.d3Scale.domain();
  }
}
function createYTicks(scale, values) {
  const ticks2 = scale.d3Scale.ticks(values);
  if (scale.scaleType === "log" && ticks2.length > 10) {
    return scale.d3Scale.ticks(3);
  }
  return ticks2;
}
function uniform(ticks2, max3) {
  if (ticks2.length < 3 || !isMixedDayInterval(ticks2)) {
    return ticks2;
  }
  return createTwoDayInterval(ticks2[0], max3);
}
function isMixedDayInterval(ticks2) {
  let oneDayInterval = false;
  let twoDayInterval = false;
  for (let i = 1; i < ticks2.length; i++) {
    oneDayInterval = oneDayInterval || isDayInterval(ticks2[i - 1], ticks2[i], 1);
    twoDayInterval = twoDayInterval || isDayInterval(ticks2[i - 1], ticks2[i], 2);
  }
  return oneDayInterval && twoDayInterval;
}
function isDayInterval(a2, b, difference = 1) {
  return Math.abs(differenceInDays(a2, b)) === difference;
}
function createTwoDayInterval(start, max3) {
  const result = [];
  let curr = start;
  while (curr < max3) {
    result.push(curr);
    curr = add(curr, { days: 2 });
  }
  return result;
}

// node_modules/@cloudscape-design/components/internal/vendor/d3-scale.js
function ascending(a2, b) {
  return a2 == null || b == null ? NaN : a2 < b ? -1 : a2 > b ? 1 : a2 >= b ? 0 : NaN;
}
function descending(a2, b) {
  return a2 == null || b == null ? NaN : b < a2 ? -1 : b > a2 ? 1 : b >= a2 ? 0 : NaN;
}
function bisector(f) {
  let compare1, compare2, delta;
  if (f.length !== 2) {
    compare1 = ascending;
    compare2 = (d, x2) => ascending(f(d), x2);
    delta = (d, x2) => f(d) - x2;
  } else {
    compare1 = f === ascending || f === descending ? f : zero$1;
    compare2 = f;
    delta = f;
  }
  function left(a2, x2, lo = 0, hi = a2.length) {
    if (lo < hi) {
      if (compare1(x2, x2) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a2[mid], x2) < 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function right(a2, x2, lo = 0, hi = a2.length) {
    if (lo < hi) {
      if (compare1(x2, x2) !== 0)
        return hi;
      do {
        const mid = lo + hi >>> 1;
        if (compare2(a2[mid], x2) <= 0)
          lo = mid + 1;
        else
          hi = mid;
      } while (lo < hi);
    }
    return lo;
  }
  function center(a2, x2, lo = 0, hi = a2.length) {
    const i = left(a2, x2, lo, hi - 1);
    return i > lo && delta(a2[i - 1], x2) > -delta(a2[i], x2) ? i - 1 : i;
  }
  return { left, center, right };
}
function zero$1() {
  return 0;
}
function number$2(x2) {
  return x2 === null ? NaN : +x2;
}
var ascendingBisect = bisector(ascending);
var bisectRight = ascendingBisect.right;
bisector(number$2).center;
var bisect = bisectRight;
var InternMap = class extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, { _intern: { value: /* @__PURE__ */ new Map() }, _key: { value: key } });
    if (entries != null)
      for (const [key2, value] of entries)
        this.set(key2, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
};
function intern_get({ _intern, _key }, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}
function intern_set({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key))
    return _intern.get(key);
  _intern.set(key, value);
  return value;
}
function intern_delete({ _intern, _key }, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(key);
    _intern.delete(key);
  }
  return value;
}
function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}
var e10 = Math.sqrt(50);
var e5 = Math.sqrt(10);
var e2 = Math.sqrt(2);
function ticks(start, stop, count) {
  var reverse, i = -1, n, ticks2, step2;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0)
    return [start];
  if (reverse = stop < start)
    n = start, start = stop, stop = n;
  if ((step2 = tickIncrement(start, stop, count)) === 0 || !isFinite(step2))
    return [];
  if (step2 > 0) {
    let r0 = Math.round(start / step2), r1 = Math.round(stop / step2);
    if (r0 * step2 < start)
      ++r0;
    if (r1 * step2 > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) * step2;
  } else {
    step2 = -step2;
    let r0 = Math.round(start * step2), r1 = Math.round(stop * step2);
    if (r0 / step2 < start)
      ++r0;
    if (r1 / step2 > stop)
      --r1;
    ticks2 = new Array(n = r1 - r0 + 1);
    while (++i < n)
      ticks2[i] = (r0 + i) / step2;
  }
  if (reverse)
    ticks2.reverse();
  return ticks2;
}
function tickIncrement(start, stop, count) {
  var step2 = (stop - start) / Math.max(0, count), power = Math.floor(Math.log(step2) / Math.LN10), error = step2 / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}
function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e10)
    step1 *= 10;
  else if (error >= e5)
    step1 *= 5;
  else if (error >= e2)
    step1 *= 2;
  return stop < start ? -step1 : step1;
}
function range(start, stop, step2) {
  start = +start, stop = +stop, step2 = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step2;
  var i = -1, n = Math.max(0, Math.ceil((stop - start) / step2)) | 0, range2 = new Array(n);
  while (++i < n) {
    range2[i] = start + i * step2;
  }
  return range2;
}
function initRange(domain, range2) {
  switch (arguments.length) {
    case 0:
      break;
    case 1:
      this.range(domain);
      break;
    default:
      this.range(range2).domain(domain);
      break;
  }
  return this;
}
var implicit = Symbol("implicit");
function ordinal() {
  var index = new InternMap(), domain = [], range2 = [], unknown = implicit;
  function scale(d) {
    let i = index.get(d);
    if (i === void 0) {
      if (unknown !== implicit)
        return unknown;
      index.set(d, i = domain.push(d) - 1);
    }
    return range2[i % range2.length];
  }
  scale.domain = function(_) {
    if (!arguments.length)
      return domain.slice();
    domain = [], index = new InternMap();
    for (const value of _) {
      if (index.has(value))
        continue;
      index.set(value, domain.push(value) - 1);
    }
    return scale;
  };
  scale.range = function(_) {
    return arguments.length ? (range2 = Array.from(_), scale) : range2.slice();
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  scale.copy = function() {
    return ordinal(domain, range2).unknown(unknown);
  };
  initRange.apply(scale, arguments);
  return scale;
}
function band() {
  var scale = ordinal().unknown(void 0), domain = scale.domain, ordinalRange = scale.range, r0 = 0, r1 = 1, step2, bandwidth, round = false, paddingInner = 0, paddingOuter = 0, align = 0.5;
  delete scale.unknown;
  function rescale() {
    var n = domain().length, reverse = r1 < r0, start = reverse ? r1 : r0, stop = reverse ? r0 : r1;
    step2 = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round)
      step2 = Math.floor(step2);
    start += (stop - start - step2 * (n - paddingInner)) * align;
    bandwidth = step2 * (1 - paddingInner);
    if (round)
      start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = range(n).map(function(i) {
      return start + step2 * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }
  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };
  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };
  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };
  scale.bandwidth = function() {
    return bandwidth;
  };
  scale.step = function() {
    return step2;
  };
  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };
  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };
  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };
  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };
  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };
  scale.copy = function() {
    return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };
  return initRange.apply(rescale(), arguments);
}
function define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition)
    prototype[key] = definition[key];
  return prototype;
}
function Color() {
}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*";
var reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*";
var reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*";
var reHex = /^#([0-9a-f]{3,8})$/;
var reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`);
var reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`);
var reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`);
var reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`);
var reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`);
var reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
var named = {
  aliceblue: 15792383,
  antiquewhite: 16444375,
  aqua: 65535,
  aquamarine: 8388564,
  azure: 15794175,
  beige: 16119260,
  bisque: 16770244,
  black: 0,
  blanchedalmond: 16772045,
  blue: 255,
  blueviolet: 9055202,
  brown: 10824234,
  burlywood: 14596231,
  cadetblue: 6266528,
  chartreuse: 8388352,
  chocolate: 13789470,
  coral: 16744272,
  cornflowerblue: 6591981,
  cornsilk: 16775388,
  crimson: 14423100,
  cyan: 65535,
  darkblue: 139,
  darkcyan: 35723,
  darkgoldenrod: 12092939,
  darkgray: 11119017,
  darkgreen: 25600,
  darkgrey: 11119017,
  darkkhaki: 12433259,
  darkmagenta: 9109643,
  darkolivegreen: 5597999,
  darkorange: 16747520,
  darkorchid: 10040012,
  darkred: 9109504,
  darksalmon: 15308410,
  darkseagreen: 9419919,
  darkslateblue: 4734347,
  darkslategray: 3100495,
  darkslategrey: 3100495,
  darkturquoise: 52945,
  darkviolet: 9699539,
  deeppink: 16716947,
  deepskyblue: 49151,
  dimgray: 6908265,
  dimgrey: 6908265,
  dodgerblue: 2003199,
  firebrick: 11674146,
  floralwhite: 16775920,
  forestgreen: 2263842,
  fuchsia: 16711935,
  gainsboro: 14474460,
  ghostwhite: 16316671,
  gold: 16766720,
  goldenrod: 14329120,
  gray: 8421504,
  green: 32768,
  greenyellow: 11403055,
  grey: 8421504,
  honeydew: 15794160,
  hotpink: 16738740,
  indianred: 13458524,
  indigo: 4915330,
  ivory: 16777200,
  khaki: 15787660,
  lavender: 15132410,
  lavenderblush: 16773365,
  lawngreen: 8190976,
  lemonchiffon: 16775885,
  lightblue: 11393254,
  lightcoral: 15761536,
  lightcyan: 14745599,
  lightgoldenrodyellow: 16448210,
  lightgray: 13882323,
  lightgreen: 9498256,
  lightgrey: 13882323,
  lightpink: 16758465,
  lightsalmon: 16752762,
  lightseagreen: 2142890,
  lightskyblue: 8900346,
  lightslategray: 7833753,
  lightslategrey: 7833753,
  lightsteelblue: 11584734,
  lightyellow: 16777184,
  lime: 65280,
  limegreen: 3329330,
  linen: 16445670,
  magenta: 16711935,
  maroon: 8388608,
  mediumaquamarine: 6737322,
  mediumblue: 205,
  mediumorchid: 12211667,
  mediumpurple: 9662683,
  mediumseagreen: 3978097,
  mediumslateblue: 8087790,
  mediumspringgreen: 64154,
  mediumturquoise: 4772300,
  mediumvioletred: 13047173,
  midnightblue: 1644912,
  mintcream: 16121850,
  mistyrose: 16770273,
  moccasin: 16770229,
  navajowhite: 16768685,
  navy: 128,
  oldlace: 16643558,
  olive: 8421376,
  olivedrab: 7048739,
  orange: 16753920,
  orangered: 16729344,
  orchid: 14315734,
  palegoldenrod: 15657130,
  palegreen: 10025880,
  paleturquoise: 11529966,
  palevioletred: 14381203,
  papayawhip: 16773077,
  peachpuff: 16767673,
  peru: 13468991,
  pink: 16761035,
  plum: 14524637,
  powderblue: 11591910,
  purple: 8388736,
  rebeccapurple: 6697881,
  red: 16711680,
  rosybrown: 12357519,
  royalblue: 4286945,
  saddlebrown: 9127187,
  salmon: 16416882,
  sandybrown: 16032864,
  seagreen: 3050327,
  seashell: 16774638,
  sienna: 10506797,
  silver: 12632256,
  skyblue: 8900331,
  slateblue: 6970061,
  slategray: 7372944,
  slategrey: 7372944,
  snow: 16775930,
  springgreen: 65407,
  steelblue: 4620980,
  tan: 13808780,
  teal: 32896,
  thistle: 14204888,
  tomato: 16737095,
  turquoise: 4251856,
  violet: 15631086,
  wheat: 16113331,
  white: 16777215,
  whitesmoke: 16119285,
  yellow: 16776960,
  yellowgreen: 10145074
};
define(Color, color, {
  copy(channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable() {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  formatHex: color_formatHex,
  formatHex8: color_formatHex8,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});
function color_formatHex() {
  return this.rgb().formatHex();
}
function color_formatHex8() {
  return this.rgb().formatHex8();
}
function color_formatHsl() {
  return hslConvert(this).formatHsl();
}
function color_formatRgb() {
  return this.rgb().formatRgb();
}
function color(format3) {
  var m, l;
  format3 = (format3 + "").trim().toLowerCase();
  return (m = reHex.exec(format3)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) : l === 3 ? new Rgb(m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, (m & 15) << 4 | m & 15, 1) : l === 8 ? rgba(m >> 24 & 255, m >> 16 & 255, m >> 8 & 255, (m & 255) / 255) : l === 4 ? rgba(m >> 12 & 15 | m >> 8 & 240, m >> 8 & 15 | m >> 4 & 240, m >> 4 & 15 | m & 240, ((m & 15) << 4 | m & 15) / 255) : null) : (m = reRgbInteger.exec(format3)) ? new Rgb(m[1], m[2], m[3], 1) : (m = reRgbPercent.exec(format3)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) : (m = reRgbaInteger.exec(format3)) ? rgba(m[1], m[2], m[3], m[4]) : (m = reRgbaPercent.exec(format3)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) : (m = reHslPercent.exec(format3)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) : (m = reHslaPercent.exec(format3)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) : named.hasOwnProperty(format3) ? rgbn(named[format3]) : format3 === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}
function rgbn(n) {
  return new Rgb(n >> 16 & 255, n >> 8 & 255, n & 255, 1);
}
function rgba(r, g, b, a2) {
  if (a2 <= 0)
    r = g = b = NaN;
  return new Rgb(r, g, b, a2);
}
function rgbConvert(o) {
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb$1(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
define(Rgb, rgb$1, extend(Color, {
  brighter(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Rgb(this.r * k2, this.g * k2, this.b * k2, this.opacity);
  },
  rgb() {
    return this;
  },
  clamp() {
    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
  },
  displayable() {
    return -0.5 <= this.r && this.r < 255.5 && (-0.5 <= this.g && this.g < 255.5) && (-0.5 <= this.b && this.b < 255.5) && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex,
  formatHex: rgb_formatHex,
  formatHex8: rgb_formatHex8,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));
function rgb_formatHex() {
  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
}
function rgb_formatHex8() {
  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
}
function rgb_formatRgb() {
  const a2 = clampa(this.opacity);
  return `${a2 === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a2 === 1 ? ")" : `, ${a2})`}`;
}
function clampa(opacity) {
  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
}
function clampi(value) {
  return Math.max(0, Math.min(255, Math.round(value) || 0));
}
function hex(value) {
  value = clampi(value);
  return (value < 16 ? "0" : "") + value.toString(16);
}
function hsla(h, s2, l, a2) {
  if (a2 <= 0)
    h = s2 = l = NaN;
  else if (l <= 0 || l >= 1)
    h = s2 = NaN;
  else if (s2 <= 0)
    h = NaN;
  return new Hsl(h, s2, l, a2);
}
function hslConvert(o) {
  if (o instanceof Hsl)
    return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color))
    o = color(o);
  if (!o)
    return new Hsl();
  if (o instanceof Hsl)
    return o;
  o = o.rgb();
  var r = o.r / 255, g = o.g / 255, b = o.b / 255, min3 = Math.min(r, g, b), max3 = Math.max(r, g, b), h = NaN, s2 = max3 - min3, l = (max3 + min3) / 2;
  if (s2) {
    if (r === max3)
      h = (g - b) / s2 + (g < b) * 6;
    else if (g === max3)
      h = (b - r) / s2 + 2;
    else
      h = (r - g) / s2 + 4;
    s2 /= l < 0.5 ? max3 + min3 : 2 - max3 - min3;
    h *= 60;
  } else {
    s2 = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s2, l, o.opacity);
}
function hsl(h, s2, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s2, l, opacity == null ? 1 : opacity);
}
function Hsl(h, s2, l, opacity) {
  this.h = +h;
  this.s = +s2;
  this.l = +l;
  this.opacity = +opacity;
}
define(Hsl, hsl, extend(Color, {
  brighter(k2) {
    k2 = k2 == null ? brighter : Math.pow(brighter, k2);
    return new Hsl(this.h, this.s, this.l * k2, this.opacity);
  },
  darker(k2) {
    k2 = k2 == null ? darker : Math.pow(darker, k2);
    return new Hsl(this.h, this.s, this.l * k2, this.opacity);
  },
  rgb() {
    var h = this.h % 360 + (this.h < 0) * 360, s2 = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s2, m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  clamp() {
    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
  },
  displayable() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && (0 <= this.l && this.l <= 1) && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl() {
    const a2 = clampa(this.opacity);
    return `${a2 === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a2 === 1 ? ")" : `, ${a2})`}`;
  }
}));
function clamph(value) {
  value = (value || 0) % 360;
  return value < 0 ? value + 360 : value;
}
function clampt(value) {
  return Math.max(0, Math.min(1, value || 0));
}
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
var constant = (x2) => () => x2;
function linear$1(a2, d) {
  return function(t) {
    return a2 + t * d;
  };
}
function exponential(a2, b, y2) {
  return a2 = Math.pow(a2, y2), b = Math.pow(b, y2) - a2, y2 = 1 / y2, function(t) {
    return Math.pow(a2 + t * b, y2);
  };
}
function gamma(y2) {
  return (y2 = +y2) === 1 ? nogamma : function(a2, b) {
    return b - a2 ? exponential(a2, b, y2) : constant(isNaN(a2) ? b : a2);
  };
}
function nogamma(a2, b) {
  var d = b - a2;
  return d ? linear$1(a2, d) : constant(isNaN(a2) ? b : a2);
}
var rgb = function rgbGamma(y2) {
  var color2 = gamma(y2);
  function rgb2(start, end) {
    var r = color2((start = rgb$1(start)).r, (end = rgb$1(end)).r), g = color2(start.g, end.g), b = color2(start.b, end.b), opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
  rgb2.gamma = rgbGamma;
  return rgb2;
}(1);
function numberArray(a2, b) {
  if (!b)
    b = [];
  var n = a2 ? Math.min(b.length, a2.length) : 0, c = b.slice(), i;
  return function(t) {
    for (i = 0; i < n; ++i)
      c[i] = a2[i] * (1 - t) + b[i] * t;
    return c;
  };
}
function isNumberArray(x2) {
  return ArrayBuffer.isView(x2) && !(x2 instanceof DataView);
}
function genericArray(a2, b) {
  var nb = b ? b.length : 0, na = a2 ? Math.min(nb, a2.length) : 0, x2 = new Array(na), c = new Array(nb), i;
  for (i = 0; i < na; ++i)
    x2[i] = interpolate(a2[i], b[i]);
  for (; i < nb; ++i)
    c[i] = b[i];
  return function(t) {
    for (i = 0; i < na; ++i)
      c[i] = x2[i](t);
    return c;
  };
}
function date$1(a2, b) {
  var d = new Date();
  return a2 = +a2, b = +b, function(t) {
    return d.setTime(a2 * (1 - t) + b * t), d;
  };
}
function interpolateNumber(a2, b) {
  return a2 = +a2, b = +b, function(t) {
    return a2 * (1 - t) + b * t;
  };
}
function object(a2, b) {
  var i = {}, c = {}, k2;
  if (a2 === null || typeof a2 !== "object")
    a2 = {};
  if (b === null || typeof b !== "object")
    b = {};
  for (k2 in b) {
    if (k2 in a2) {
      i[k2] = interpolate(a2[k2], b[k2]);
    } else {
      c[k2] = b[k2];
    }
  }
  return function(t) {
    for (k2 in i)
      c[k2] = i[k2](t);
    return c;
  };
}
var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
var reB = new RegExp(reA.source, "g");
function zero(b) {
  return function() {
    return b;
  };
}
function one(b) {
  return function(t) {
    return b(t) + "";
  };
}
function string(a2, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, am, bm, bs, i = -1, s2 = [], q = [];
  a2 = a2 + "", b = b + "";
  while ((am = reA.exec(a2)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      bs = b.slice(bi, bs);
      if (s2[i])
        s2[i] += bs;
      else
        s2[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) {
      if (s2[i])
        s2[i] += bm;
      else
        s2[++i] = bm;
    } else {
      s2[++i] = null;
      q.push({ i, x: interpolateNumber(am, bm) });
    }
    bi = reB.lastIndex;
  }
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s2[i])
      s2[i] += bs;
    else
      s2[++i] = bs;
  }
  return s2.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function(t) {
    for (var i2 = 0, o; i2 < b; ++i2)
      s2[(o = q[i2]).i] = o.x(t);
    return s2.join("");
  });
}
function interpolate(a2, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? constant(b) : (t === "number" ? interpolateNumber : t === "string" ? (c = color(b)) ? (b = c, rgb) : string : b instanceof color ? rgb : b instanceof Date ? date$1 : isNumberArray(b) ? numberArray : Array.isArray(b) ? genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object : interpolateNumber)(a2, b);
}
function interpolateRound(a2, b) {
  return a2 = +a2, b = +b, function(t) {
    return Math.round(a2 * (1 - t) + b * t);
  };
}
function constants(x2) {
  return function() {
    return x2;
  };
}
function number$1(x2) {
  return +x2;
}
var unit = [0, 1];
function identity$1(x2) {
  return x2;
}
function normalize(a2, b) {
  return (b -= a2 = +a2) ? function(x2) {
    return (x2 - a2) / b;
  } : constants(isNaN(b) ? NaN : 0.5);
}
function clamper(a2, b) {
  var t;
  if (a2 > b)
    t = a2, a2 = b, b = t;
  return function(x2) {
    return Math.max(a2, Math.min(b, x2));
  };
}
function bimap(domain, range2, interpolate2) {
  var d0 = domain[0], d1 = domain[1], r0 = range2[0], r1 = range2[1];
  if (d1 < d0)
    d0 = normalize(d1, d0), r0 = interpolate2(r1, r0);
  else
    d0 = normalize(d0, d1), r0 = interpolate2(r0, r1);
  return function(x2) {
    return r0(d0(x2));
  };
}
function polymap(domain, range2, interpolate2) {
  var j = Math.min(domain.length, range2.length) - 1, d = new Array(j), r = new Array(j), i = -1;
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range2 = range2.slice().reverse();
  }
  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate2(range2[i], range2[i + 1]);
  }
  return function(x2) {
    var i2 = bisect(domain, x2, 1, j) - 1;
    return r[i2](d[i2](x2));
  };
}
function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}
function transformer() {
  var domain = unit, range2 = unit, interpolate$1 = interpolate, transform, untransform, unknown, clamp3 = identity$1, piecewise, output, input;
  function rescale() {
    var n = Math.min(domain.length, range2.length);
    if (clamp3 !== identity$1)
      clamp3 = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }
  function scale(x2) {
    return x2 == null || isNaN(x2 = +x2) ? unknown : (output || (output = piecewise(domain.map(transform), range2, interpolate$1)))(transform(clamp3(x2)));
  }
  scale.invert = function(y2) {
    return clamp3(untransform((input || (input = piecewise(range2, domain.map(transform), interpolateNumber)))(y2)));
  };
  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, number$1), rescale()) : domain.slice();
  };
  scale.range = function(_) {
    return arguments.length ? (range2 = Array.from(_), rescale()) : range2.slice();
  };
  scale.rangeRound = function(_) {
    return range2 = Array.from(_), interpolate$1 = interpolateRound, rescale();
  };
  scale.clamp = function(_) {
    return arguments.length ? (clamp3 = _ ? true : identity$1, rescale()) : clamp3 !== identity$1;
  };
  scale.interpolate = function(_) {
    return arguments.length ? (interpolate$1 = _, rescale()) : interpolate$1;
  };
  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };
  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}
function continuous() {
  return transformer()(identity$1, identity$1);
}
function formatDecimal(x2) {
  return Math.abs(x2 = Math.round(x2)) >= 1e21 ? x2.toLocaleString("en").replace(/,/g, "") : x2.toString(10);
}
function formatDecimalParts(x2, p) {
  if ((i = (x2 = p ? x2.toExponential(p - 1) : x2.toExponential()).indexOf("e")) < 0)
    return null;
  var i, coefficient = x2.slice(0, i);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x2.slice(i + 1)
  ];
}
function exponent(x2) {
  return x2 = formatDecimalParts(Math.abs(x2)), x2 ? x2[1] : NaN;
}
function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
    while (i > 0 && g > 0) {
      if (length + g + 1 > width)
        g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width)
        break;
      g = grouping[j = (j + 1) % grouping.length];
    }
    return t.reverse().join(thousands);
  };
}
function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match2 = re.exec(specifier)))
    throw new Error("invalid format: " + specifier);
  var match2;
  return new FormatSpecifier({
    fill: match2[1],
    align: match2[2],
    sign: match2[3],
    symbol: match2[4],
    zero: match2[5],
    width: match2[6],
    comma: match2[7],
    precision: match2[8] && match2[8].slice(1),
    trim: match2[9],
    type: match2[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype;
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
function formatTrim(s2) {
  out:
    for (var n = s2.length, i = 1, i0 = -1, i1; i < n; ++i) {
      switch (s2[i]) {
        case ".":
          i0 = i1 = i;
          break;
        case "0":
          if (i0 === 0)
            i0 = i;
          i1 = i;
          break;
        default:
          if (!+s2[i])
            break out;
          if (i0 > 0)
            i0 = 0;
          break;
      }
    }
  return i0 > 0 ? s2.slice(0, i0) + s2.slice(i1 + 1) : s2;
}
var prefixExponent;
function formatPrefixAuto(x2, p) {
  var d = formatDecimalParts(x2, p);
  if (!d)
    return x2 + "";
  var coefficient = d[0], exponent2 = d[1], i = exponent2 - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent2 / 3))) * 3) + 1, n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + formatDecimalParts(x2, Math.max(0, p + i - 1))[0];
}
function formatRounded(x2, p) {
  var d = formatDecimalParts(x2, p);
  if (!d)
    return x2 + "";
  var coefficient = d[0], exponent2 = d[1];
  return exponent2 < 0 ? "0." + new Array(-exponent2).join("0") + coefficient : coefficient.length > exponent2 + 1 ? coefficient.slice(0, exponent2 + 1) + "." + coefficient.slice(exponent2 + 1) : coefficient + new Array(exponent2 - coefficient.length + 2).join("0");
}
var formatTypes = {
  "%": (x2, p) => (x2 * 100).toFixed(p),
  "b": (x2) => Math.round(x2).toString(2),
  "c": (x2) => x2 + "",
  "d": formatDecimal,
  "e": (x2, p) => x2.toExponential(p),
  "f": (x2, p) => x2.toFixed(p),
  "g": (x2, p) => x2.toPrecision(p),
  "o": (x2) => Math.round(x2).toString(8),
  "p": (x2, p) => formatRounded(x2 * 100, p),
  "r": formatRounded,
  "s": formatPrefixAuto,
  "X": (x2) => Math.round(x2).toString(16).toUpperCase(),
  "x": (x2) => Math.round(x2).toString(16)
};
function identity(x2) {
  return x2;
}
var map = Array.prototype.map;
var prefixes = ["y", "z", "a", "f", "p", "n", "\xB5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function formatLocale$1(locale2) {
  var group = locale2.grouping === void 0 || locale2.thousands === void 0 ? identity : formatGroup(map.call(locale2.grouping, Number), locale2.thousands + ""), currencyPrefix = locale2.currency === void 0 ? "" : locale2.currency[0] + "", currencySuffix = locale2.currency === void 0 ? "" : locale2.currency[1] + "", decimal = locale2.decimal === void 0 ? "." : locale2.decimal + "", numerals = locale2.numerals === void 0 ? identity : formatNumerals(map.call(locale2.numerals, String)), percent = locale2.percent === void 0 ? "%" : locale2.percent + "", minus = locale2.minus === void 0 ? "\u2212" : locale2.minus + "", nan = locale2.nan === void 0 ? "NaN" : locale2.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign2 = specifier.sign, symbol = specifier.symbol, zero2 = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
    if (type === "n")
      comma = true, type = "g";
    else if (!formatTypes[type])
      precision === void 0 && (precision = 12), trim = true, type = "g";
    if (zero2 || fill === "0" && align === "=")
      zero2 = true, fill = "0", align = "=";
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
    var formatType = formatTypes[type], maybeSuffix = /[defgprs%]/.test(type);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format3(value) {
      var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;
        var valueNegative = value < 0 || 1 / value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
        if (trim)
          value = formatTrim(value);
        if (valueNegative && +value === 0 && sign2 !== "+")
          valueNegative = false;
        valuePrefix = (valueNegative ? sign2 === "(" ? sign2 : minus : sign2 === "-" || sign2 === "(" ? "" : sign2) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign2 === "(" ? ")" : "");
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }
      if (comma && !zero2)
        value = group(value, Infinity);
      var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma && zero2)
        value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;
        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;
        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;
        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }
      return numerals(value);
    }
    format3.toString = function() {
      return specifier + "";
    };
    return format3;
  }
  function formatPrefix2(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3, k2 = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
    return function(value2) {
      return f(k2 * value2) + prefix;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}
var locale$1;
var format2;
var formatPrefix;
defaultLocale$1({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale$1(definition) {
  locale$1 = formatLocale$1(definition);
  format2 = locale$1.format;
  formatPrefix = locale$1.formatPrefix;
  return locale$1;
}
function precisionFixed(step2) {
  return Math.max(0, -exponent(Math.abs(step2)));
}
function precisionPrefix(step2, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step2)));
}
function precisionRound(step2, max3) {
  step2 = Math.abs(step2), max3 = Math.abs(max3) - step2;
  return Math.max(0, exponent(max3) - exponent(step2)) + 1;
}
function tickFormat(start, stop, count, specifier) {
  var step2 = tickStep(start, stop, count), precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step2, value)))
        specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step2, Math.max(Math.abs(start), Math.abs(stop)))))
        specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step2)))
        specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format2(specifier);
}
function linearish(scale) {
  var domain = scale.domain;
  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };
  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };
  scale.nice = function(count) {
    if (count == null)
      count = 10;
    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step2;
    var maxIter = 10;
    if (stop < start) {
      step2 = start, start = stop, stop = step2;
      step2 = i0, i0 = i1, i1 = step2;
    }
    while (maxIter-- > 0) {
      step2 = tickIncrement(start, stop, count);
      if (step2 === prestep) {
        d[i0] = start;
        d[i1] = stop;
        return domain(d);
      } else if (step2 > 0) {
        start = Math.floor(start / step2) * step2;
        stop = Math.ceil(stop / step2) * step2;
      } else if (step2 < 0) {
        start = Math.ceil(start * step2) / step2;
        stop = Math.floor(stop * step2) / step2;
      } else {
        break;
      }
      prestep = step2;
    }
    return scale;
  };
  return scale;
}
function linear() {
  var scale = continuous();
  scale.copy = function() {
    return copy(scale, linear());
  };
  initRange.apply(scale, arguments);
  return linearish(scale);
}
function nice(domain, interval) {
  domain = domain.slice();
  var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], t;
  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }
  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
function transformLog(x2) {
  return Math.log(x2);
}
function transformExp(x2) {
  return Math.exp(x2);
}
function transformLogn(x2) {
  return -Math.log(-x2);
}
function transformExpn(x2) {
  return -Math.exp(-x2);
}
function pow10(x2) {
  return isFinite(x2) ? +("1e" + x2) : x2 < 0 ? 0 : x2;
}
function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : (x2) => Math.pow(base, x2);
}
function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), (x2) => Math.log(x2) / base);
}
function reflect(f) {
  return (x2, k2) => -f(-x2, k2);
}
function loggish(transform) {
  const scale = transform(transformLog, transformExp);
  const domain = scale.domain;
  let base = 10;
  let logs;
  let pows;
  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }
  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };
  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };
  scale.ticks = (count) => {
    const d = domain();
    let u = d[0];
    let v = d[d.length - 1];
    const r = v < u;
    if (r)
      [u, v] = [v, u];
    let i = logs(u);
    let j = logs(v);
    let k2;
    let t;
    const n = count == null ? 10 : +count;
    let z = [];
    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0)
        for (; i <= j; ++i) {
          for (k2 = 1; k2 < base; ++k2) {
            t = i < 0 ? k2 / pows(-i) : k2 * pows(i);
            if (t < u)
              continue;
            if (t > v)
              break;
            z.push(t);
          }
        }
      else
        for (; i <= j; ++i) {
          for (k2 = base - 1; k2 >= 1; --k2) {
            t = i > 0 ? k2 / pows(-i) : k2 * pows(i);
            if (t < u)
              continue;
            if (t > v)
              break;
            z.push(t);
          }
        }
      if (z.length * 2 < n)
        z = ticks(u, v, n);
    } else {
      z = ticks(i, j, Math.min(j - i, n)).map(pows);
    }
    return r ? z.reverse() : z;
  };
  scale.tickFormat = (count, specifier) => {
    if (count == null)
      count = 10;
    if (specifier == null)
      specifier = base === 10 ? "s" : ",";
    if (typeof specifier !== "function") {
      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null)
        specifier.trim = true;
      specifier = format2(specifier);
    }
    if (count === Infinity)
      return specifier;
    const k2 = Math.max(1, base * count / scale.ticks().length);
    return (d) => {
      let i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5)
        i *= base;
      return i <= k2 ? specifier(d) : "";
    };
  };
  scale.nice = () => {
    return domain(nice(domain(), {
      floor: (x2) => pows(Math.floor(logs(x2))),
      ceil: (x2) => pows(Math.ceil(logs(x2)))
    }));
  };
  return scale;
}
function log() {
  const scale = loggish(transformer()).domain([1, 10]);
  scale.copy = () => copy(scale, log()).base(scale.base());
  initRange.apply(scale, arguments);
  return scale;
}
var t0 = new Date();
var t1 = new Date();
function timeInterval(floori, offseti, count, field) {
  function interval(date2) {
    return floori(date2 = arguments.length === 0 ? new Date() : new Date(+date2)), date2;
  }
  interval.floor = (date2) => {
    return floori(date2 = new Date(+date2)), date2;
  };
  interval.ceil = (date2) => {
    return floori(date2 = new Date(date2 - 1)), offseti(date2, 1), floori(date2), date2;
  };
  interval.round = (date2) => {
    const d0 = interval(date2), d1 = interval.ceil(date2);
    return date2 - d0 < d1 - date2 ? d0 : d1;
  };
  interval.offset = (date2, step2) => {
    return offseti(date2 = new Date(+date2), step2 == null ? 1 : Math.floor(step2)), date2;
  };
  interval.range = (start, stop, step2) => {
    const range2 = [];
    start = interval.ceil(start);
    step2 = step2 == null ? 1 : Math.floor(step2);
    if (!(start < stop) || !(step2 > 0))
      return range2;
    let previous;
    do
      range2.push(previous = new Date(+start)), offseti(start, step2), floori(start);
    while (previous < start && start < stop);
    return range2;
  };
  interval.filter = (test) => {
    return timeInterval((date2) => {
      if (date2 >= date2)
        while (floori(date2), !test(date2))
          date2.setTime(date2 - 1);
    }, (date2, step2) => {
      if (date2 >= date2) {
        if (step2 < 0)
          while (++step2 <= 0) {
            while (offseti(date2, -1), !test(date2)) {
            }
          }
        else
          while (--step2 >= 0) {
            while (offseti(date2, 1), !test(date2)) {
            }
          }
      }
    });
  };
  if (count) {
    interval.count = (start, end) => {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };
    interval.every = (step2) => {
      step2 = Math.floor(step2);
      return !isFinite(step2) || !(step2 > 0) ? null : !(step2 > 1) ? interval : interval.filter(field ? (d) => field(d) % step2 === 0 : (d) => interval.count(0, d) % step2 === 0);
    };
  }
  return interval;
}
var millisecond = timeInterval(() => {
}, (date2, step2) => {
  date2.setTime(+date2 + step2);
}, (start, end) => {
  return end - start;
});
millisecond.every = (k2) => {
  k2 = Math.floor(k2);
  if (!isFinite(k2) || !(k2 > 0))
    return null;
  if (!(k2 > 1))
    return millisecond;
  return timeInterval((date2) => {
    date2.setTime(Math.floor(date2 / k2) * k2);
  }, (date2, step2) => {
    date2.setTime(+date2 + step2 * k2);
  }, (start, end) => {
    return (end - start) / k2;
  });
};
millisecond.range;
var durationSecond = 1e3;
var durationMinute = durationSecond * 60;
var durationHour = durationMinute * 60;
var durationDay = durationHour * 24;
var durationWeek = durationDay * 7;
var durationMonth = durationDay * 30;
var durationYear = durationDay * 365;
var second = timeInterval((date2) => {
  date2.setTime(date2 - date2.getMilliseconds());
}, (date2, step2) => {
  date2.setTime(+date2 + step2 * durationSecond);
}, (start, end) => {
  return (end - start) / durationSecond;
}, (date2) => {
  return date2.getUTCSeconds();
});
second.range;
var timeMinute = timeInterval((date2) => {
  date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond);
}, (date2, step2) => {
  date2.setTime(+date2 + step2 * durationMinute);
}, (start, end) => {
  return (end - start) / durationMinute;
}, (date2) => {
  return date2.getMinutes();
});
timeMinute.range;
var utcMinute = timeInterval((date2) => {
  date2.setUTCSeconds(0, 0);
}, (date2, step2) => {
  date2.setTime(+date2 + step2 * durationMinute);
}, (start, end) => {
  return (end - start) / durationMinute;
}, (date2) => {
  return date2.getUTCMinutes();
});
utcMinute.range;
var timeHour = timeInterval((date2) => {
  date2.setTime(date2 - date2.getMilliseconds() - date2.getSeconds() * durationSecond - date2.getMinutes() * durationMinute);
}, (date2, step2) => {
  date2.setTime(+date2 + step2 * durationHour);
}, (start, end) => {
  return (end - start) / durationHour;
}, (date2) => {
  return date2.getHours();
});
timeHour.range;
var utcHour = timeInterval((date2) => {
  date2.setUTCMinutes(0, 0, 0);
}, (date2, step2) => {
  date2.setTime(+date2 + step2 * durationHour);
}, (start, end) => {
  return (end - start) / durationHour;
}, (date2) => {
  return date2.getUTCHours();
});
utcHour.range;
var timeDay = timeInterval(
  (date2) => date2.setHours(0, 0, 0, 0),
  (date2, step2) => date2.setDate(date2.getDate() + step2),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,
  (date2) => date2.getDate() - 1
);
timeDay.range;
var utcDay = timeInterval((date2) => {
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step2) => {
  date2.setUTCDate(date2.getUTCDate() + step2);
}, (start, end) => {
  return (end - start) / durationDay;
}, (date2) => {
  return date2.getUTCDate() - 1;
});
utcDay.range;
var unixDay = timeInterval((date2) => {
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step2) => {
  date2.setUTCDate(date2.getUTCDate() + step2);
}, (start, end) => {
  return (end - start) / durationDay;
}, (date2) => {
  return Math.floor(date2 / durationDay);
});
unixDay.range;
function timeWeekday(i) {
  return timeInterval((date2) => {
    date2.setDate(date2.getDate() - (date2.getDay() + 7 - i) % 7);
    date2.setHours(0, 0, 0, 0);
  }, (date2, step2) => {
    date2.setDate(date2.getDate() + step2 * 7);
  }, (start, end) => {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
var timeSunday = timeWeekday(0);
var timeMonday = timeWeekday(1);
var timeTuesday = timeWeekday(2);
var timeWednesday = timeWeekday(3);
var timeThursday = timeWeekday(4);
var timeFriday = timeWeekday(5);
var timeSaturday = timeWeekday(6);
timeSunday.range;
timeMonday.range;
timeTuesday.range;
timeWednesday.range;
timeThursday.range;
timeFriday.range;
timeSaturday.range;
function utcWeekday(i) {
  return timeInterval((date2) => {
    date2.setUTCDate(date2.getUTCDate() - (date2.getUTCDay() + 7 - i) % 7);
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step2) => {
    date2.setUTCDate(date2.getUTCDate() + step2 * 7);
  }, (start, end) => {
    return (end - start) / durationWeek;
  });
}
var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
utcSunday.range;
utcMonday.range;
utcTuesday.range;
utcWednesday.range;
utcThursday.range;
utcFriday.range;
utcSaturday.range;
var timeMonth = timeInterval((date2) => {
  date2.setDate(1);
  date2.setHours(0, 0, 0, 0);
}, (date2, step2) => {
  date2.setMonth(date2.getMonth() + step2);
}, (start, end) => {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, (date2) => {
  return date2.getMonth();
});
timeMonth.range;
var utcMonth = timeInterval((date2) => {
  date2.setUTCDate(1);
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step2) => {
  date2.setUTCMonth(date2.getUTCMonth() + step2);
}, (start, end) => {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, (date2) => {
  return date2.getUTCMonth();
});
utcMonth.range;
var timeYear = timeInterval((date2) => {
  date2.setMonth(0, 1);
  date2.setHours(0, 0, 0, 0);
}, (date2, step2) => {
  date2.setFullYear(date2.getFullYear() + step2);
}, (start, end) => {
  return end.getFullYear() - start.getFullYear();
}, (date2) => {
  return date2.getFullYear();
});
timeYear.every = (k2) => {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date2) => {
    date2.setFullYear(Math.floor(date2.getFullYear() / k2) * k2);
    date2.setMonth(0, 1);
    date2.setHours(0, 0, 0, 0);
  }, (date2, step2) => {
    date2.setFullYear(date2.getFullYear() + step2 * k2);
  });
};
timeYear.range;
var utcYear = timeInterval((date2) => {
  date2.setUTCMonth(0, 1);
  date2.setUTCHours(0, 0, 0, 0);
}, (date2, step2) => {
  date2.setUTCFullYear(date2.getUTCFullYear() + step2);
}, (start, end) => {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, (date2) => {
  return date2.getUTCFullYear();
});
utcYear.every = (k2) => {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : timeInterval((date2) => {
    date2.setUTCFullYear(Math.floor(date2.getUTCFullYear() / k2) * k2);
    date2.setUTCMonth(0, 1);
    date2.setUTCHours(0, 0, 0, 0);
  }, (date2, step2) => {
    date2.setUTCFullYear(date2.getUTCFullYear() + step2 * k2);
  });
};
utcYear.range;
function ticker(year, month, week, day, hour, minute) {
  const tickIntervals = [
    [second, 1, durationSecond],
    [second, 5, 5 * durationSecond],
    [second, 15, 15 * durationSecond],
    [second, 30, 30 * durationSecond],
    [minute, 1, durationMinute],
    [minute, 5, 5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [hour, 1, durationHour],
    [hour, 3, 3 * durationHour],
    [hour, 6, 6 * durationHour],
    [hour, 12, 12 * durationHour],
    [day, 1, durationDay],
    [day, 2, 2 * durationDay],
    [week, 1, durationWeek],
    [month, 1, durationMonth],
    [month, 3, 3 * durationMonth],
    [year, 1, durationYear]
  ];
  function ticks2(start, stop, count) {
    const reverse = stop < start;
    if (reverse)
      [start, stop] = [stop, start];
    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
    const ticks3 = interval ? interval.range(start, +stop + 1) : [];
    return reverse ? ticks3.reverse() : ticks3;
  }
  function tickInterval(start, stop, count) {
    const target = Math.abs(stop - start) / count;
    const i = bisector(([, , step3]) => step3).right(tickIntervals, target);
    if (i === tickIntervals.length)
      return year.every(tickStep(start / durationYear, stop / durationYear, count));
    if (i === 0)
      return millisecond.every(Math.max(tickStep(start, stop, count), 1));
    const [t, step2] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step2);
  }
  return [ticks2, tickInterval];
}
ticker(utcYear, utcMonth, utcSunday, unixDay, utcHour, utcMinute);
var [timeTicks, timeTickInterval] = ticker(timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute);
function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date2 = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date2.setFullYear(d.y);
    return date2;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}
function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date2 = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date2.setUTCFullYear(d.y);
    return date2;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}
function newDate(y2, m, d) {
  return { y: y2, m, d, H: 0, M: 0, S: 0, L: 0 };
}
function formatLocale(locale2) {
  var locale_dateTime = locale2.dateTime, locale_date = locale2.date, locale_time = locale2.time, locale_periods = locale2.periods, locale_weekdays = locale2.days, locale_shortWeekdays = locale2.shortDays, locale_months = locale2.months, locale_shortMonths = locale2.shortMonths;
  var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date2) {
      var string2 = [], i = -1, j = 0, n = specifier.length, c, pad2, format3;
      if (!(date2 instanceof Date))
        date2 = new Date(+date2);
      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string2.push(specifier.slice(j, i));
          if ((pad2 = pads[c = specifier.charAt(++i)]) != null)
            c = specifier.charAt(++i);
          else
            pad2 = c === "e" ? " " : "0";
          if (format3 = formats2[c])
            c = format3(date2, pad2);
          string2.push(c);
          j = i + 1;
        }
      }
      string2.push(specifier.slice(j, i));
      return string2.join("");
    };
  }
  function newParse(specifier, Z) {
    return function(string2) {
      var d = newDate(1900, void 0, 1), i = parseSpecifier(d, specifier, string2 += "", 0), week, day;
      if (i != string2.length)
        return null;
      if ("Q" in d)
        return new Date(d.Q);
      if ("s" in d)
        return new Date(d.s * 1e3 + ("L" in d ? d.L : 0));
      if (Z && !("Z" in d))
        d.Z = 0;
      if ("p" in d)
        d.H = d.H % 12 + d.p * 12;
      if (d.m === void 0)
        d.m = "q" in d ? d.q : 0;
      if ("V" in d) {
        if (d.V < 1 || d.V > 53)
          return null;
        if (!("w" in d))
          d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);
          week = timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d))
          d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }
      return localDate(d);
    };
  }
  function parseSpecifier(d, specifier, string2, j) {
    var i = 0, n = specifier.length, m = string2.length, c, parse2;
    while (i < n) {
      if (j >= m)
        return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse2 = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse2 || (j = parse2(d, string2, j)) < 0)
          return -1;
      } else if (c != string2.charCodeAt(j++)) {
        return -1;
      }
    }
    return j;
  }
  function parsePeriod(d, string2, i) {
    var n = periodRe.exec(string2.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseShortWeekday(d, string2, i) {
    var n = shortWeekdayRe.exec(string2.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseWeekday(d, string2, i) {
    var n = weekdayRe.exec(string2.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseShortMonth(d, string2, i) {
    var n = shortMonthRe.exec(string2.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseMonth(d, string2, i) {
    var n = monthRe.exec(string2.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }
  function parseLocaleDateTime(d, string2, i) {
    return parseSpecifier(d, locale_dateTime, string2, i);
  }
  function parseLocaleDate(d, string2, i) {
    return parseSpecifier(d, locale_date, string2, i);
  }
  function parseLocaleTime(d, string2, i) {
    return parseSpecifier(d, locale_time, string2, i);
  }
  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }
  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }
  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }
  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }
  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }
  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }
  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }
  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }
  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }
  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }
  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() {
        return specifier;
      };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() {
        return specifier;
      };
      return p;
    }
  };
}
var pads = { "-": "", "_": " ", "0": "0" };
var numberRe = /^\s*\d+/;
var percentRe = /^%/;
var requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value, fill, width) {
  var sign2 = value < 0 ? "-" : "", string2 = (sign2 ? -value : value) + "", length = string2.length;
  return sign2 + (length < width ? new Array(width - length + 1).join(fill) + string2 : string2);
}
function requote(s2) {
  return s2.replace(requoteRe, "\\$&");
}
function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}
function parseWeekdayNumberSunday(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}
function parseWeekdayNumberMonday(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberSunday(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberISO(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}
function parseWeekNumberMonday(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}
function parseFullYear(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}
function parseYear(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2e3), i + n[0].length) : -1;
}
function parseZone(d, string2, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string2.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}
function parseQuarter(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}
function parseMonthNumber(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}
function parseDayOfMonth(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}
function parseDayOfYear(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}
function parseHour24(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}
function parseMinutes(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}
function parseSeconds(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}
function parseMilliseconds(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}
function parseMicroseconds(d, string2, i) {
  var n = numberRe.exec(string2.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1e3), i + n[0].length) : -1;
}
function parseLiteralPercent(d, string2, i) {
  var n = percentRe.exec(string2.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}
function parseUnixTimestamp(d, string2, i) {
  var n = numberRe.exec(string2.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}
function parseUnixTimestampSeconds(d, string2, i) {
  var n = numberRe.exec(string2.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}
function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}
function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}
function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}
function formatDayOfYear(d, p) {
  return pad(1 + timeDay.count(timeYear(d), d), p, 3);
}
function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}
function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}
function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}
function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}
function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}
function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}
function formatWeekNumberSunday(d, p) {
  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);
}
function dISO(d) {
  var day = d.getDay();
  return day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);
}
function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);
}
function formatWeekdayNumberSunday(d) {
  return d.getDay();
}
function formatWeekNumberMonday(d, p) {
  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);
}
function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}
function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}
function formatFullYear(d, p) {
  return pad(d.getFullYear() % 1e4, p, 4);
}
function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);
  return pad(d.getFullYear() % 1e4, p, 4);
}
function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}
function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}
function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}
function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}
function formatUTCDayOfYear(d, p) {
  return pad(1 + utcDay.count(utcYear(d), d), p, 3);
}
function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}
function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}
function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}
function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}
function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}
function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d, p) {
  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);
}
function UTCdISO(d) {
  var day = d.getUTCDay();
  return day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);
}
function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);
}
function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}
function formatUTCWeekNumberMonday(d, p) {
  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);
}
function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}
function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 1e4, p, 4);
}
function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);
  return pad(d.getUTCFullYear() % 1e4, p, 4);
}
function formatUTCZone() {
  return "+0000";
}
function formatLiteralPercent() {
  return "%";
}
function formatUnixTimestamp(d) {
  return +d;
}
function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1e3);
}
var locale;
var timeFormat;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale(definition) {
  locale = formatLocale(definition);
  timeFormat = locale.format;
  locale.parse;
  locale.utcFormat;
  locale.utcParse;
  return locale;
}
function date(t) {
  return new Date(t);
}
function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}
function calendar(ticks2, tickInterval, year, month, week, day, hour, minute, second2, format3) {
  var scale = continuous(), invert = scale.invert, domain = scale.domain;
  var formatMillisecond = format3(".%L"), formatSecond = format3(":%S"), formatMinute = format3("%I:%M"), formatHour = format3("%I %p"), formatDay = format3("%a %d"), formatWeek = format3("%b %d"), formatMonth = format3("%B"), formatYear2 = format3("%Y");
  function tickFormat2(date2) {
    return (second2(date2) < date2 ? formatMillisecond : minute(date2) < date2 ? formatSecond : hour(date2) < date2 ? formatMinute : day(date2) < date2 ? formatHour : month(date2) < date2 ? week(date2) < date2 ? formatDay : formatWeek : year(date2) < date2 ? formatMonth : formatYear2)(date2);
  }
  scale.invert = function(y2) {
    return new Date(invert(y2));
  };
  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);
  };
  scale.ticks = function(interval) {
    var d = domain();
    return ticks2(d[0], d[d.length - 1], interval == null ? 10 : interval);
  };
  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat2 : format3(specifier);
  };
  scale.nice = function(interval) {
    var d = domain();
    if (!interval || typeof interval.range !== "function")
      interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
    return interval ? domain(nice(d, interval)) : scale;
  };
  scale.copy = function() {
    return copy(scale, calendar(ticks2, tickInterval, year, month, week, day, hour, minute, second2, format3));
  };
  return scale;
}
function time() {
  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeSunday, timeDay, timeHour, timeMinute, second, timeFormat).domain([new Date(2e3, 0, 1), new Date(2e3, 0, 2)]), arguments);
}

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/scales.js
function isNumericDomain(domain) {
  return domain.length > 0 && typeof domain[0] === "number";
}
function isDateDomain(domain) {
  return domain.length > 0 && domain[0] instanceof Date;
}
function createNumericScale(type, domain) {
  let scale;
  switch (type) {
    case "log":
      scale = log();
      break;
    default:
      scale = linear();
  }
  if (isNumericDomain(domain)) {
    scale.domain(domain);
  }
  return scale;
}
function createTimeScale(domain) {
  const scale = time();
  if (isDateDomain(domain)) {
    scale.domain(domain);
  }
  return scale;
}
function createBandScale(domain) {
  const scale = band().padding(0.1);
  scale.domain(domain);
  return scale;
}
function createScale(type, domain, range2) {
  switch (type) {
    case "linear":
    case "log":
      return { type: "numeric", scale: createNumericScale(type, domain).range(range2) };
    case "time":
      return { type: "time", scale: createTimeScale(domain).range(range2) };
    case "categorical":
      return { type: "categorical", scale: createBandScale(domain).range(range2) };
  }
}
var ChartScale = class {
  constructor(scaleType, domain, range2, noCategoricalOuterPadding = false) {
    this.scaleType = scaleType;
    this.domain = domain;
    this.range = range2;
    this.scale = createScale(this.scaleType, this.domain, this.range);
    this.d3Scale = this.scale.scale;
    if (this.isCategorical()) {
      if (noCategoricalOuterPadding) {
        this.d3Scale.paddingInner(0.7);
        this.d3Scale.paddingOuter(0);
      } else {
        this.d3Scale.paddingInner(0.2);
        this.d3Scale.paddingOuter(0.05);
      }
    }
  }
  cloneScale(newScaleType, newDomain, newRange) {
    return new ChartScale(newScaleType || this.scaleType, newDomain || this.domain, newRange || this.range);
  }
  isNumeric() {
    return this.scale.type === "numeric";
  }
  isTime() {
    return this.scale.type === "time";
  }
  isCategorical() {
    return this.scale.type === "categorical";
  }
};
var NumericChartScale = class {
  constructor(scaleType, domain, range2, adjustDomain) {
    this.scaleType = scaleType;
    const scale = createNumericScale(scaleType, domain).range(range2);
    if (adjustDomain !== null) {
      scale.nice(adjustDomain);
    }
    this.scale = { type: "numeric", scale };
    this.d3Scale = this.scale.scale;
  }
  isCategorical() {
    return false;
  }
};

// node_modules/@cloudscape-design/components/area-chart/model/compute-chart-props.js
function computeChartProps({ series, xDomain: externalXDomain, yDomain: externalYDomain, xScaleType, yScaleType, height, width }) {
  const xDomain = externalXDomain || computeDomainX(series);
  const xTickCount = getXTickCount(width);
  const xScale = new ChartScale(xScaleType, xDomain, [0, width]);
  const xTicks = xScale.domain.length > 0 ? createXTicks(xScale, xTickCount) : [];
  const yDomain = externalYDomain || computeDomainY(series, yScaleType);
  const yTickCount = getYTickCount(height);
  const yScale = new NumericChartScale(yScaleType, yDomain, [height, 0], externalYDomain ? null : yTickCount);
  const yTicks = createYTicks(yScale, yTickCount);
  const plot = computePlotPoints(series, xScale, yScale);
  return { xDomain, yDomain, xScale, yScale, xTicks, yTicks, plot };
}

// node_modules/@cloudscape-design/components/internal/generated/styles/tokens.js
var colorChartsThresholdNeutral = "var(--color-charts-threshold-neutral-fe7vxm, #5f6b7a)";
var colorChartsPaletteCategorical1 = "var(--color-charts-palette-categorical-1-s02edj, #688ae8)";
var colorChartsPaletteCategorical2 = "var(--color-charts-palette-categorical-2-hd7uud, #c33d69)";
var colorChartsPaletteCategorical3 = "var(--color-charts-palette-categorical-3-tm6hrf, #2ea597)";
var colorChartsPaletteCategorical4 = "var(--color-charts-palette-categorical-4-fqnj32, #8456ce)";
var colorChartsPaletteCategorical5 = "var(--color-charts-palette-categorical-5-h9jmtt, #e07941)";
var colorChartsPaletteCategorical6 = "var(--color-charts-palette-categorical-6-z7e3fr, #3759ce)";
var colorChartsPaletteCategorical7 = "var(--color-charts-palette-categorical-7-4w1lrz, #962249)";
var colorChartsPaletteCategorical8 = "var(--color-charts-palette-categorical-8-xesix1, #096f64)";
var colorChartsPaletteCategorical9 = "var(--color-charts-palette-categorical-9-93ht36, #6237a7)";
var colorChartsPaletteCategorical10 = "var(--color-charts-palette-categorical-10-wus8nq, #a84401)";
var colorChartsPaletteCategorical11 = "var(--color-charts-palette-categorical-11-uh7roa, #273ea5)";
var colorChartsPaletteCategorical12 = "var(--color-charts-palette-categorical-12-ywqdlz, #780d35)";
var colorChartsPaletteCategorical13 = "var(--color-charts-palette-categorical-13-0aws3q, #03524a)";
var colorChartsPaletteCategorical14 = "var(--color-charts-palette-categorical-14-5l0pt5, #4a238b)";
var colorChartsPaletteCategorical15 = "var(--color-charts-palette-categorical-15-glpjzo, #7e3103)";
var colorChartsPaletteCategorical16 = "var(--color-charts-palette-categorical-16-73ijrp, #1b2b88)";
var colorChartsPaletteCategorical17 = "var(--color-charts-palette-categorical-17-ltabw6, #ce567c)";
var colorChartsPaletteCategorical18 = "var(--color-charts-palette-categorical-18-fog2ah, #003e38)";
var colorChartsPaletteCategorical19 = "var(--color-charts-palette-categorical-19-ig4cn5, #9469d6)";
var colorChartsPaletteCategorical20 = "var(--color-charts-palette-categorical-20-ta856w, #602400)";
var colorChartsPaletteCategorical21 = "var(--color-charts-palette-categorical-21-ta0h08, #4066df)";
var colorChartsPaletteCategorical22 = "var(--color-charts-palette-categorical-22-lj462v, #a32952)";
var colorChartsPaletteCategorical23 = "var(--color-charts-palette-categorical-23-35jyqu, #0d7d70)";
var colorChartsPaletteCategorical24 = "var(--color-charts-palette-categorical-24-eem6bw, #6b40b2)";
var colorChartsPaletteCategorical25 = "var(--color-charts-palette-categorical-25-w302xt, #bc4d01)";
var colorChartsPaletteCategorical26 = "var(--color-charts-palette-categorical-26-6ughlw, #2c46b1)";
var colorChartsPaletteCategorical27 = "var(--color-charts-palette-categorical-27-57l9xa, #81143b)";
var colorChartsPaletteCategorical28 = "var(--color-charts-palette-categorical-28-4q0mir, #045b52)";
var colorChartsPaletteCategorical29 = "var(--color-charts-palette-categorical-29-cnn7dg, #512994)";
var colorChartsPaletteCategorical30 = "var(--color-charts-palette-categorical-30-eix60t, #8a3603)";
var colorChartsPaletteCategorical31 = "var(--color-charts-palette-categorical-31-jthnv1, #1f3191)";
var colorChartsPaletteCategorical32 = "var(--color-charts-palette-categorical-32-h40wuu, #da7596)";
var colorChartsPaletteCategorical33 = "var(--color-charts-palette-categorical-33-1iyt0i, #01443e)";
var colorChartsPaletteCategorical34 = "var(--color-charts-palette-categorical-34-eut0yx, #a783e1)";
var colorChartsPaletteCategorical35 = "var(--color-charts-palette-categorical-35-utj4hw, #692801)";
var colorChartsPaletteCategorical36 = "var(--color-charts-palette-categorical-36-mjb3b0, #5978e3)";
var colorChartsPaletteCategorical37 = "var(--color-charts-palette-categorical-37-6rz96d, #b1325c)";
var colorChartsPaletteCategorical38 = "var(--color-charts-palette-categorical-38-s8j0ph, #1c8e81)";
var colorChartsPaletteCategorical39 = "var(--color-charts-palette-categorical-39-5l5hgh, #7749bf)";
var colorChartsPaletteCategorical40 = "var(--color-charts-palette-categorical-40-2i7lp3, #cc5f21)";
var colorChartsPaletteCategorical41 = "var(--color-charts-palette-categorical-41-lozcy4, #314fbf)";
var colorChartsPaletteCategorical42 = "var(--color-charts-palette-categorical-42-qzrtzy, #8b1b42)";
var colorChartsPaletteCategorical43 = "var(--color-charts-palette-categorical-43-sq9ksf, #06645a)";
var colorChartsPaletteCategorical44 = "var(--color-charts-palette-categorical-44-2mlngi, #59309d)";
var colorChartsPaletteCategorical45 = "var(--color-charts-palette-categorical-45-irkhaj, #983c02)";
var colorChartsPaletteCategorical46 = "var(--color-charts-palette-categorical-46-r0hukp, #23379b)";
var colorChartsPaletteCategorical47 = "var(--color-charts-palette-categorical-47-l2wh9o, #6f062f)";
var colorChartsPaletteCategorical48 = "var(--color-charts-palette-categorical-48-k8gno4, #014b44)";
var colorChartsPaletteCategorical49 = "var(--color-charts-palette-categorical-49-e507mj, #431d84)";
var colorChartsPaletteCategorical50 = "var(--color-charts-palette-categorical-50-hfws7f, #732c02)";

// node_modules/@cloudscape-design/components/internal/styles/colors.js
var categoryPalette = [
  colorChartsPaletteCategorical1,
  colorChartsPaletteCategorical2,
  colorChartsPaletteCategorical3,
  colorChartsPaletteCategorical4,
  colorChartsPaletteCategorical5,
  colorChartsPaletteCategorical6,
  colorChartsPaletteCategorical7,
  colorChartsPaletteCategorical8,
  colorChartsPaletteCategorical9,
  colorChartsPaletteCategorical10,
  colorChartsPaletteCategorical11,
  colorChartsPaletteCategorical12,
  colorChartsPaletteCategorical13,
  colorChartsPaletteCategorical14,
  colorChartsPaletteCategorical15,
  colorChartsPaletteCategorical16,
  colorChartsPaletteCategorical17,
  colorChartsPaletteCategorical18,
  colorChartsPaletteCategorical19,
  colorChartsPaletteCategorical20,
  colorChartsPaletteCategorical21,
  colorChartsPaletteCategorical22,
  colorChartsPaletteCategorical23,
  colorChartsPaletteCategorical24,
  colorChartsPaletteCategorical25,
  colorChartsPaletteCategorical26,
  colorChartsPaletteCategorical27,
  colorChartsPaletteCategorical28,
  colorChartsPaletteCategorical29,
  colorChartsPaletteCategorical30,
  colorChartsPaletteCategorical31,
  colorChartsPaletteCategorical32,
  colorChartsPaletteCategorical33,
  colorChartsPaletteCategorical34,
  colorChartsPaletteCategorical35,
  colorChartsPaletteCategorical36,
  colorChartsPaletteCategorical37,
  colorChartsPaletteCategorical38,
  colorChartsPaletteCategorical39,
  colorChartsPaletteCategorical40,
  colorChartsPaletteCategorical41,
  colorChartsPaletteCategorical42,
  colorChartsPaletteCategorical43,
  colorChartsPaletteCategorical44,
  colorChartsPaletteCategorical45,
  colorChartsPaletteCategorical46,
  colorChartsPaletteCategorical47,
  colorChartsPaletteCategorical48,
  colorChartsPaletteCategorical49,
  colorChartsPaletteCategorical50
];

// node_modules/@cloudscape-design/components/internal/utils/create-category-color-scale.js
function createCategoryColorScale(items, isThreshold = () => false, getOwnColor = () => null) {
  const colors = [];
  let categoryIndex = 0;
  for (const it of items) {
    const ownColor = getOwnColor(it);
    const defaultColor = isThreshold(it) ? colorChartsThresholdNeutral : categoryPalette[categoryIndex % categoryPalette.length];
    colors.push(parseCssVariable(ownColor || defaultColor));
    if (!isThreshold(it) && !ownColor) {
      categoryIndex++;
    }
  }
  return colors;
}

// node_modules/@cloudscape-design/components/area-chart/model/create-series-decorator.js
function createSeriesDecorator(externalSeries) {
  const colorScale = createCategoryColorScale(externalSeries, (s2) => s2.type === "threshold", (s2) => s2.color || null);
  const decorateSeries = (s2, index) => {
    const title = s2.title;
    const color2 = colorScale[index];
    const markerType = s2.type === "area" ? "hollow-rectangle" : "dashed";
    const formatValue2 = s2.type === "threshold" ? () => s2.valueFormatter ? s2.valueFormatter(s2.y) : s2.y : (y2, x2) => s2.valueFormatter ? s2.valueFormatter(y2, x2) : y2;
    return { series: s2, title, color: color2, markerType, formatValue: formatValue2 };
  };
  const mapping = externalSeries.reduce((map2, series, index) => {
    map2.set(series, decorateSeries(series, index));
    return map2;
  }, /* @__PURE__ */ new Map());
  const seriesDecorator = (series) => mapping.get(series) || decorateSeries(series, externalSeries.length);
  return seriesDecorator;
}

// node_modules/@cloudscape-design/components/area-chart/model/interactions-store.js
var initialState = Object.freeze({
  highlightedX: null,
  highlightedPoint: null,
  highlightedSeries: null,
  legendSeries: null,
  isPopoverPinned: false
});
var InteractionsStore = class extends AsyncStore {
  constructor(series, plot) {
    super(initialState);
    this.series = series;
    this.plot = plot;
  }
  highlightPoint(point5) {
    this.set((state) => Object.assign(Object.assign({}, state), { highlightedX: this.plot.xy[point5.index.x], highlightedPoint: point5, highlightedSeries: this.series[point5.index.s], legendSeries: this.series[point5.index.s] }));
  }
  highlightX(points) {
    this.set((state) => Object.assign(Object.assign({}, state), { highlightedX: points, highlightedPoint: null, highlightedSeries: null, legendSeries: null }));
  }
  highlightFirstPoint() {
    this.set((state) => {
      const series = state.legendSeries || state.highlightedSeries;
      const firstSeriesPoint = series && this._getFirstSeriesPoint(series);
      const point5 = state.highlightedPoint || firstSeriesPoint || this.plot.sx[0][0];
      return Object.assign(Object.assign({}, state), { highlightedX: this.plot.xy[point5.index.x], highlightedPoint: point5, highlightedSeries: this.series[point5.index.s], legendSeries: this.series[point5.index.s] });
    });
  }
  highlightSeries(s2) {
    this.set((state) => Object.assign(Object.assign({}, state), { highlightedSeries: s2, legendSeries: s2 }));
  }
  clearHighlight() {
    this.set((state) => Object.assign(Object.assign({}, state), { highlightedX: null, highlightedPoint: null, highlightedSeries: null }));
  }
  clearHighlightedLegend() {
    this.set((state) => Object.assign(Object.assign({}, state), { legendSeries: null }));
  }
  clearState() {
    this.set(() => initialState);
  }
  pinPopover() {
    this.set((state) => Object.assign(Object.assign({}, state), { isPopoverPinned: true }));
  }
  unpinPopover() {
    this.set((state) => Object.assign(Object.assign({}, state), { isPopoverPinned: false }));
  }
  togglePopoverPin() {
    this.set((state) => Object.assign(Object.assign({}, state), { isPopoverPinned: !state.isPopoverPinned }));
  }
  _getFirstSeriesPoint(s2) {
    const seriesIndex = this.series.indexOf(s2);
    const [firstSeriesPoint] = this.plot.sx[seriesIndex] || [];
    return firstSeriesPoint || null;
  }
};

// node_modules/@cloudscape-design/components/internal/utils/throttle.js
function throttle(func, delay, { trailing = true } = {}) {
  let pending = null;
  let lastInvokeTime = null;
  let timerId = null;
  function pendingFunc() {
    if (pending === null || lastInvokeTime === null) {
      return;
    }
    const invokeTime = Date.now();
    const shouldInvoke = invokeTime - lastInvokeTime >= delay;
    if (shouldInvoke) {
      func.apply(pending.this, pending.args);
      lastInvokeTime = invokeTime;
      pending = null;
      timerId = null;
    } else if (trailing) {
      startTimer();
    }
  }
  function startTimer() {
    if (timerId) {
      cancelAnimationFrame(timerId);
    }
    timerId = requestAnimationFrame(pendingFunc);
  }
  function throttled(...args) {
    if (lastInvokeTime === null) {
      lastInvokeTime = Date.now();
      func.apply(this, args);
    } else {
      pending = { this: this, args };
      startTimer();
    }
  }
  throttled.cancel = () => {
    if (timerId) {
      cancelAnimationFrame(timerId);
    }
    pending = null;
    lastInvokeTime = null;
    timerId = null;
  };
  return throttled;
}

// node_modules/@cloudscape-design/components/area-chart/model/use-chart-model.js
var MAX_HOVER_MARGIN = 6;
var SVG_HOVER_THROTTLE = 25;
var POPOVER_DEADZONE = 12;
function useChartModel({ externalSeries: allSeries, visibleSeries: series, setVisibleSeries, highlightedSeries, setHighlightedSeries, xDomain, yDomain, xScaleType, yScaleType, height, width, popoverRef }) {
  const plotRef = (0, import_react68.useRef)(null);
  const containerRef = (0, import_react68.useRef)(null);
  const verticalMarkerRef = (0, import_react68.useRef)(null);
  const stableSetVisibleSeries = useStableEventHandler(setVisibleSeries);
  const model = (0, import_react68.useMemo)(() => {
    const computed = computeChartProps({
      series,
      xDomain,
      yDomain,
      xScaleType,
      yScaleType,
      height,
      width
    });
    const interactions = new InteractionsStore(series, computed.plot);
    const containsMultipleSeries = interactions.series.length > 1;
    const getInternalSeries = createSeriesDecorator(allSeries);
    const isMouseOverPopover = (clientX, clientY) => {
      var _a;
      if ((_a = popoverRef.current) === null || _a === void 0 ? void 0 : _a.firstChild) {
        const popoverPosition = popoverRef.current.firstChild.getBoundingClientRect();
        if (clientX > popoverPosition.x - POPOVER_DEADZONE && clientX < popoverPosition.x + popoverPosition.width + POPOVER_DEADZONE && clientY > popoverPosition.y - POPOVER_DEADZONE && clientY < popoverPosition.y + popoverPosition.height + POPOVER_DEADZONE) {
          return true;
        }
      }
      return false;
    };
    const onSVGMouseMoveThrottled = throttle((clientX, clientY) => {
      if (interactions.get().isPopoverPinned || !plotRef.current || interactions.plot.xy.length === 0 || isMouseOverPopover(clientX, clientY)) {
        return;
      }
      const svgRect = plotRef.current.svg.getBoundingClientRect();
      const offsetX = clientX - svgRect.left;
      const offsetY = clientY - svgRect.top;
      const closestX = findClosest(interactions.plot.xy, offsetX, (xPoints) => xPoints[0].scaled.x);
      const closestPoint = findClosest(closestX, offsetY, (point5) => point5.scaled.y1);
      if (Math.abs(offsetX - closestPoint.scaled.x) < MAX_HOVER_MARGIN && Math.abs(offsetY - closestPoint.scaled.y1) < MAX_HOVER_MARGIN) {
        interactions.highlightPoint(closestPoint);
      } else {
        interactions.highlightX(closestX);
      }
    }, SVG_HOVER_THROTTLE);
    const onSVGMouseMove = ({ clientX, clientY }) => onSVGMouseMoveThrottled(clientX, clientY);
    const onSVGMouseOut = (event) => {
      onSVGMouseMoveThrottled.cancel();
      if (interactions.get().isPopoverPinned || isMouseOverPopover(event.clientX, event.clientY)) {
        return;
      }
      if (!nodeContains(plotRef.current.svg, event.relatedTarget)) {
        interactions.clearHighlightedLegend();
        interactions.clearHighlight();
      }
    };
    const onSVGMouseDown = (event) => {
      interactions.togglePopoverPin();
      event.preventDefault();
    };
    const moveWithinXAxis = (direction) => {
      if (interactions.get().highlightedPoint) {
        return moveWithinSeries(direction);
      } else if (containsMultipleSeries) {
        const { highlightedX } = interactions.get();
        if (highlightedX) {
          const currentXIndex = highlightedX[0].index.x;
          const nextXIndex = circleIndex(currentXIndex + direction, [0, interactions.plot.xy.length - 1]);
          interactions.highlightX(interactions.plot.xy[nextXIndex]);
        }
      }
    };
    const moveWithinSeries = (direction) => {
      const point5 = interactions.get().highlightedPoint;
      if (!point5) {
        return;
      }
      const sIndex = point5.index.s;
      const xIndex = circleIndex(point5.index.x + direction, [0, interactions.plot.xs.length - 1]);
      interactions.highlightPoint(interactions.plot.xs[xIndex][sIndex]);
    };
    const moveBetweenSeries = (direction) => {
      const point5 = interactions.get().highlightedPoint;
      if (!point5) {
        const { highlightedX } = interactions.get();
        if (highlightedX) {
          const xIndex2 = highlightedX[0].index.x;
          const points = interactions.plot.xy[xIndex2];
          const yIndex = direction === 1 ? 0 : points.length - 1;
          interactions.highlightPoint(points[yIndex]);
        }
        return;
      }
      const xIndex = point5.index.x;
      const currentYIndex = point5.index.y;
      if (containsMultipleSeries && (currentYIndex === 0 && direction === -1 || currentYIndex === interactions.plot.xy[xIndex].length - 1 && direction === 1)) {
        interactions.highlightX(interactions.plot.xy[xIndex]);
      } else {
        const nextYIndex = circleIndex(currentYIndex + direction, [0, interactions.plot.xy[xIndex].length - 1]);
        interactions.highlightPoint(interactions.plot.xy[xIndex][nextYIndex]);
      }
    };
    const onSVGKeyDown = (event) => {
      const keyCode = event.keyCode;
      if (keyCode !== KeyCode.up && keyCode !== KeyCode.right && keyCode !== KeyCode.down && keyCode !== KeyCode.left && keyCode !== KeyCode.space && keyCode !== KeyCode.enter) {
        return;
      }
      event.preventDefault();
      if (interactions.get().isPopoverPinned) {
        return;
      }
      if (keyCode === KeyCode.down || keyCode === KeyCode.up) {
        moveBetweenSeries(keyCode === KeyCode.down ? -1 : 1);
      } else if (keyCode === KeyCode.left || keyCode === KeyCode.right) {
        moveWithinXAxis(keyCode === KeyCode.right ? 1 : -1);
      } else if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
        interactions.pinPopover();
      }
    };
    const highlightFirstX = () => {
      interactions.highlightX(interactions.plot.xy[0]);
    };
    const onSVGFocus = (_event, trigger) => {
      if (trigger === "keyboard") {
        const { highlightedX, highlightedPoint, highlightedSeries: highlightedSeries2, legendSeries } = interactions.get();
        if (containsMultipleSeries && !highlightedX && !highlightedPoint && !highlightedSeries2 && !legendSeries) {
          highlightFirstX();
        } else if (!highlightedX) {
          interactions.highlightFirstPoint();
        }
      }
    };
    const onSVGBlur = () => {
      if (!interactions.get().isPopoverPinned) {
        interactions.clearHighlight();
      }
    };
    const onFilterSeries = (series2) => {
      stableSetVisibleSeries(series2);
    };
    const onLegendHighlight = (series2) => {
      interactions.highlightSeries(series2);
    };
    const onPopoverDismiss = (outsideClick) => {
      interactions.unpinPopover();
      if (!outsideClick) {
        setTimeout(() => {
          if (interactions.get().highlightedPoint || interactions.get().highlightedX) {
            plotRef.current.focusApplication();
          } else {
            interactions.clearHighlight();
            plotRef.current.focusPlot();
          }
        }, 0);
      }
    };
    const onContainerBlur = () => {
      interactions.clearState();
    };
    const onDocumentKeyDown = (event) => {
      if (event.key === "Escape") {
        interactions.clearHighlight();
        interactions.clearHighlightedLegend();
      }
    };
    const onPopoverLeave = (event) => {
      if (plotRef.current.svg.contains(event.relatedTarget) || interactions.get().isPopoverPinned) {
        return;
      }
      interactions.clearHighlight();
      interactions.clearHighlightedLegend();
    };
    return {
      width,
      height,
      series,
      allSeries,
      getInternalSeries,
      computed,
      interactions,
      handlers: {
        onSVGMouseMove,
        onSVGMouseOut,
        onSVGMouseDown,
        onSVGKeyDown,
        onSVGFocus,
        onSVGBlur,
        onFilterSeries,
        onLegendHighlight,
        onPopoverDismiss,
        onContainerBlur,
        onDocumentKeyDown,
        onPopoverLeave
      },
      refs: {
        plot: plotRef,
        container: containerRef,
        verticalMarker: verticalMarkerRef,
        popoverRef
      }
    };
  }, [allSeries, series, xDomain, yDomain, xScaleType, yScaleType, height, width, stableSetVisibleSeries, popoverRef]);
  useReaction(model.interactions, (state) => state.highlightedSeries, setHighlightedSeries);
  (0, import_react68.useEffect)(() => {
    if (highlightedSeries !== model.interactions.get().highlightedSeries) {
      model.interactions.highlightSeries(highlightedSeries);
    }
  }, [model, highlightedSeries]);
  return model;
}

// node_modules/@cloudscape-design/components/area-chart/model/use-filter-props.js
var import_react69 = __toESM(require_react());
function useFilterProps(series, controlledVisibleSeries, controlledOnVisibleChange) {
  const [visibleSeries = [], setVisibleSeriesState] = useControllable(controlledVisibleSeries, controlledOnVisibleChange, series, {
    componentName: "AreaChart",
    controlledProp: "visibleSeries",
    changeHandler: "onFilterChange"
  });
  const setVisibleSeries = (0, import_react69.useCallback)((selectedSeries) => {
    setVisibleSeriesState(selectedSeries);
    fireNonCancelableEvent(controlledOnVisibleChange, { visibleSeries: selectedSeries });
  }, [controlledOnVisibleChange, setVisibleSeriesState]);
  (0, import_react69.useEffect)(() => {
    const newVisibleSeries = visibleSeries.filter((s2) => series.indexOf(s2) !== -1);
    if (newVisibleSeries.length !== visibleSeries.length) {
      setVisibleSeries(newVisibleSeries);
    }
  }, [series, visibleSeries, setVisibleSeries]);
  return [visibleSeries, setVisibleSeries];
}

// node_modules/@cloudscape-design/components/area-chart/model/use-highlight-props.js
var import_react70 = __toESM(require_react());
function useHighlightProps(series, controlledHighlightedSeries, controlledOnHighlightChange) {
  const [highlightedSeries = null, setHighlightedSeries] = useControllable(controlledHighlightedSeries, controlledOnHighlightChange, null, {
    componentName: "AreaChart",
    controlledProp: "highlightedSeries",
    changeHandler: "onHighlightChange"
  });
  const notifyHighlightedSeries = (0, import_react70.useCallback)((s2) => {
    fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSeries: s2 });
  }, [controlledOnHighlightChange]);
  (0, import_react70.useEffect)(() => {
    if (controlledHighlightedSeries) {
      const highlightedSeriesIndex = series.indexOf(controlledHighlightedSeries);
      if (highlightedSeriesIndex === -1) {
        setHighlightedSeries(null);
        notifyHighlightedSeries(null);
      }
    }
  }, [series, controlledHighlightedSeries, setHighlightedSeries, notifyHighlightedSeries]);
  return [highlightedSeries, notifyHighlightedSeries];
}

// node_modules/@cloudscape-design/components/internal/components/chart-wrapper/index.js
var import_react71 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-wrapper/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/chart-wrapper/styles.scoped.css";
var styles_css_default24 = {
  "wrapper": "awsui_wrapper_z5mul_1gdaf_93",
  "has-default-filter": "awsui_has-default-filter_z5mul_1gdaf_108",
  "content": "awsui_content_z5mul_1gdaf_112",
  "content--reserve-filter": "awsui_content--reserve-filter_z5mul_1gdaf_119",
  "content--reserve-legend": "awsui_content--reserve-legend_z5mul_1gdaf_123",
  "filter-container": "awsui_filter-container_z5mul_1gdaf_127"
};

// node_modules/@cloudscape-design/components/internal/components/chart-wrapper/index.js
var ChartWrapper = (0, import_react71.forwardRef)((_a, ref) => {
  var { defaultFilter, additionalFilters, reserveFilterSpace, reserveLegendSpace, chartStatus, chart, legend, onBlur, contentClassName, contentMinHeight } = _a, props2 = __rest(_a, ["defaultFilter", "additionalFilters", "reserveFilterSpace", "reserveLegendSpace", "chartStatus", "chart", "legend", "onBlur", "contentClassName", "contentMinHeight"]);
  const baseProps = getBaseProps(props2);
  return import_react71.default.createElement(
    "div",
    Object.assign({ ref }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default24.wrapper), onBlur }),
    (defaultFilter || additionalFilters) && import_react71.default.createElement(
      InternalBox,
      { className: styles_css_default24["filter-container"], margin: { bottom: "l" } },
      import_react71.default.createElement(
        InternalSpaceBetween,
        { size: "l", direction: "horizontal", className: clsx_m_default({ [styles_css_default24["has-default-filter"]]: !!defaultFilter }) },
        defaultFilter,
        additionalFilters
      )
    ),
    import_react71.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default24.content, contentClassName, {
        [styles_css_default24["content--reserve-filter"]]: reserveFilterSpace,
        [styles_css_default24["content--reserve-legend"]]: reserveLegendSpace
      }), style: { minHeight: contentMinHeight } },
      chartStatus,
      chart
    ),
    legend && import_react71.default.createElement(InternalBox, { margin: { top: "m" } }, legend)
  );
});

// node_modules/@cloudscape-design/components/area-chart/internal.js
function InternalAreaChart(_a) {
  var { height, xScaleType, yScaleType, xDomain, yDomain, highlightedSeries: controlledHighlightedSeries, visibleSeries: controlledVisibleSeries, series: externalSeries, onFilterChange: controlledOnVisibleChange, onHighlightChange: controlledOnHighlightChange, i18nStrings, ariaLabel, ariaLabelledby, ariaDescription, xTitle, yTitle, hideFilter, additionalFilters, hideLegend, legendTitle, statusType, detailPopoverSize, detailPopoverFooter, empty, noMatch, errorText, loadingText, recoveryText, onRecoveryClick, __internalRootRef = null } = _a, props2 = __rest(_a, ["height", "xScaleType", "yScaleType", "xDomain", "yDomain", "highlightedSeries", "visibleSeries", "series", "onFilterChange", "onHighlightChange", "i18nStrings", "ariaLabel", "ariaLabelledby", "ariaDescription", "xTitle", "yTitle", "hideFilter", "additionalFilters", "hideLegend", "legendTitle", "statusType", "detailPopoverSize", "detailPopoverFooter", "empty", "noMatch", "errorText", "loadingText", "recoveryText", "onRecoveryClick", "__internalRootRef"]);
  const baseProps = getBaseProps(props2);
  const containerRef = (0, import_react72.useRef)(null);
  const popoverRef = (0, import_react72.useRef)(null);
  if (isDevelopment) {
    (0, import_react72.useEffect)(() => {
      if (!isSeriesValid(externalSeries)) {
        warnOnce("AreaChart", "The `series` property violates the component's constraints: all `area` series must have `data` arrays of the same length and with the same x-values.");
      }
    }, [externalSeries]);
  }
  const [width, setWidth] = (0, import_react72.useState)(0);
  const [visibleSeries, setVisibleSeries] = useFilterProps(externalSeries, controlledVisibleSeries, controlledOnVisibleChange);
  const [highlightedSeries, setHighlightedSeries] = useHighlightProps(externalSeries, controlledHighlightedSeries, controlledOnHighlightChange);
  const model = useChartModel({
    externalSeries,
    visibleSeries,
    setVisibleSeries,
    highlightedSeries,
    setHighlightedSeries,
    xDomain,
    yDomain,
    xScaleType,
    yScaleType,
    height,
    width,
    popoverRef
  });
  const { isEmpty, isNoMatch, showChart } = getChartStatus({
    externalData: externalSeries,
    visibleData: visibleSeries,
    statusType
  });
  const showFilters = statusType === "finished" && (!isEmpty || isNoMatch) && (additionalFilters || !hideFilter);
  const showLegend = !hideLegend && !isEmpty && statusType === "finished";
  const reserveLegendSpace = !showChart && !hideLegend;
  const reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);
  (0, import_react72.useEffect)(() => {
    const onKeyDown = model.handlers.onDocumentKeyDown;
    document.addEventListener("keydown", onKeyDown);
    return () => document.removeEventListener("keydown", onKeyDown);
  }, [model.handlers.onDocumentKeyDown]);
  const onBlur = (event) => {
    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {
      model.handlers.onContainerBlur();
    }
  };
  const mergedRef = useMergeRefs(containerRef, __internalRootRef);
  return import_react72.default.createElement(ChartWrapper, Object.assign({ ref: mergedRef }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default21.root), contentMinHeight: height, defaultFilter: showFilters && !hideFilter ? import_react72.default.createElement(area_chart_filter_default, { model, filterLabel: i18nStrings.filterLabel, filterPlaceholder: i18nStrings.filterPlaceholder, filterSelectedAriaLabel: i18nStrings.filterSelectedAriaLabel }) : null, additionalFilters: showFilters ? additionalFilters : null, reserveFilterSpace: !!reserveFilterSpace, reserveLegendSpace: !!reserveLegendSpace, chartStatus: import_react72.default.createElement(ChartStatusContainer, { isEmpty, isNoMatch, showChart, statusType, empty, noMatch, loadingText, errorText, recoveryText, onRecoveryClick }), chart: showChart ? import_react72.default.createElement(chart_container_default, { model, autoWidth: setWidth, detailPopoverSize, detailPopoverFooter, xTitle, yTitle, ariaLabel, ariaLabelledby, ariaDescription, i18nStrings }) : null, legend: showLegend ? import_react72.default.createElement(area_chart_legend_default, { plotContainerRef: containerRef, model, legendTitle, ariaLabel: i18nStrings.legendAriaLabel }) : null, onBlur }));
}

// node_modules/@cloudscape-design/components/area-chart/index.js
function AreaChart(_a) {
  var { height = 500, xScaleType = "linear", yScaleType = "linear", statusType = "finished", detailPopoverSize = "medium", i18nStrings = {} } = _a, props2 = __rest(_a, ["height", "xScaleType", "yScaleType", "statusType", "detailPopoverSize", "i18nStrings"]);
  const baseComponentProps = useBaseComponent("AreaChart");
  return import_react73.default.createElement(InternalAreaChart, Object.assign({ height, xScaleType, yScaleType, statusType, detailPopoverSize, i18nStrings }, props2, baseComponentProps));
}
applyDisplayName(AreaChart, "AreaChart");
var area_chart_default = AreaChart;

// node_modules/@cloudscape-design/components/attribute-editor/index.js
var import_react77 = __toESM(require_react());

// node_modules/@cloudscape-design/components/attribute-editor/internal.js
var import_react76 = __toESM(require_react());

// node_modules/@cloudscape-design/components/attribute-editor/additional-info.js
var import_react74 = __toESM(require_react());

// node_modules/@cloudscape-design/components/attribute-editor/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/attribute-editor/styles.scoped.css";
var styles_css_default25 = {
  "empty-appear": "awsui_empty-appear_n4qlp_1qdiz_93",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_n4qlp_1qdiz_1",
  "root": "awsui_root_n4qlp_1qdiz_119",
  "empty": "awsui_empty_n4qlp_1qdiz_93",
  "row": "awsui_row_n4qlp_1qdiz_139",
  "row-control": "awsui_row-control_n4qlp_1qdiz_143",
  "field": "awsui_field_n4qlp_1qdiz_147",
  "add-button": "awsui_add-button_n4qlp_1qdiz_151",
  "remove-button": "awsui_remove-button_n4qlp_1qdiz_155",
  "button-container-haslabel": "awsui_button-container-haslabel_n4qlp_1qdiz_159",
  "button-container-nolabel": "awsui_button-container-nolabel_n4qlp_1qdiz_163",
  "divider": "awsui_divider_n4qlp_1qdiz_167",
  "additional-info": "awsui_additional-info_n4qlp_1qdiz_171",
  "right-align": "awsui_right-align_n4qlp_1qdiz_217"
};

// node_modules/@cloudscape-design/components/attribute-editor/additional-info.js
var AdditionalInfo = ({ children, id }) => import_react74.default.createElement(
  live_region_default,
  { visible: true, tagName: "div", "data-testid": "info-live-region" },
  import_react74.default.createElement("div", { id, className: styles_css_default25["additional-info"] }, children)
);

// node_modules/@cloudscape-design/components/attribute-editor/row.js
var import_react75 = __toESM(require_react());
var Divider = () => import_react75.default.createElement(InternalBox, { className: styles_css_default25.divider, padding: { top: "l" } });
function render(item, itemIndex, slot) {
  return typeof slot === "function" ? slot(item, itemIndex) : slot;
}
var GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }];
var REMOVABLE_GRID_DEFINITION = [{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }];
var Row = import_react75.default.memo(({ breakpoint, item, definition, i18nStrings = {}, index, removable, removeButtonText, removeButtonRefs, onRemoveButtonClick }) => {
  var _a;
  const i18n = useInternalI18n("attribute-editor");
  const isNarrowViewport = breakpoint === "default" || breakpoint === "xxs";
  const isWideViewport = !isNarrowViewport;
  const handleRemoveClick = (0, import_react75.useCallback)(() => {
    fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });
  }, [onRemoveButtonClick, index]);
  const firstControlId = useUniqueId("first-control-id-");
  return import_react75.default.createElement(
    InternalBox,
    { className: styles_css_default25.row, margin: { bottom: "s" } },
    import_react75.default.createElement(
      "div",
      { role: "group", "aria-labelledby": `${firstControlId}-label ${firstControlId}` },
      import_react75.default.createElement(
        internal_default6,
        { __breakpoint: breakpoint, gridDefinition: removable ? REMOVABLE_GRID_DEFINITION : GRID_DEFINITION },
        import_react75.default.createElement(ColumnLayout, { className: styles_css_default25["row-control"], columns: definition.length, __breakpoint: breakpoint }, definition.map(({ info, label, constraintText, errorText, control }, defIndex) => import_react75.default.createElement(InternalFormField, { key: defIndex, className: styles_css_default25.field, label, info, constraintText: render(item, index, constraintText), errorText: render(item, index, errorText), stretch: true, i18nStrings: { errorIconAriaLabel: i18nStrings.errorIconAriaLabel }, __hideLabel: isWideViewport && index > 0, controlId: defIndex === 0 ? firstControlId : void 0 }, render(item, index, control)))),
        removable && import_react75.default.createElement(
          ButtonContainer,
          { index, isNarrowViewport, hasLabel: definition.some((row) => row.label) },
          import_react75.default.createElement(InternalButton, { className: styles_css_default25["remove-button"], formAction: "none", ref: (ref) => {
            removeButtonRefs[index] = ref !== null && ref !== void 0 ? ref : void 0;
          }, ariaLabel: (_a = i18nStrings.removeButtonAriaLabel) === null || _a === void 0 ? void 0 : _a.call(i18nStrings, item), onClick: handleRemoveClick }, i18n("removeButtonText", removeButtonText))
        )
      )
    ),
    isNarrowViewport && import_react75.default.createElement(Divider, null)
  );
});
var ButtonContainer = ({ index, children, isNarrowViewport, hasLabel }) => import_react75.default.createElement("div", { className: clsx_m_default({
  [styles_css_default25["button-container-haslabel"]]: !isNarrowViewport && index === 0 && hasLabel,
  [styles_css_default25["button-container-nolabel"]]: !isNarrowViewport && index === 0 && !hasLabel,
  [styles_css_default25["right-align"]]: isNarrowViewport
}) }, children);

// node_modules/@cloudscape-design/components/attribute-editor/internal.js
var InternalAttributeEditor = import_react76.default.forwardRef((_a, ref) => {
  var { additionalInfo, disableAddButton, definition, items, isItemRemovable: isItemRemovable2 = () => true, empty, addButtonText, removeButtonText, i18nStrings, onAddButtonClick, onRemoveButtonClick, __internalRootRef = null } = _a, props2 = __rest(_a, ["additionalInfo", "disableAddButton", "definition", "items", "isItemRemovable", "empty", "addButtonText", "removeButtonText", "i18nStrings", "onAddButtonClick", "onRemoveButtonClick", "__internalRootRef"]);
  const [breakpoint, breakpointRef] = useContainerBreakpoints(["default", "xxs", "xs"]);
  const removeButtonRefs = (0, import_react76.useRef)([]);
  const addButtonRef = (0, import_react76.useRef)(null);
  const wasNonEmpty = (0, import_react76.useRef)(false);
  const [removalAnnouncement, setRemovalAnnouncement] = (0, import_react76.useState)("");
  const baseProps = getBaseProps(props2);
  const isEmpty = items && items.length === 0;
  wasNonEmpty.current = wasNonEmpty.current || !isEmpty;
  (0, import_react76.useImperativeHandle)(ref, () => ({
    focusRemoveButton(rowIndex) {
      var _a2;
      (_a2 = removeButtonRefs.current[rowIndex]) === null || _a2 === void 0 ? void 0 : _a2.focus();
    },
    focusAddButton() {
      var _a2;
      (_a2 = addButtonRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  }));
  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
  const additionalInfoId = useUniqueId("attribute-editor-info");
  const infoAriaDescribedBy = additionalInfo ? additionalInfoId : void 0;
  const prevItemsLength = usePrevious(items.length);
  import_react76.default.useEffect(() => {
    if (prevItemsLength && prevItemsLength > items.length && (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive)) {
      setRemovalAnnouncement(i18nStrings.itemRemovedAriaLive);
    } else {
      setRemovalAnnouncement("");
    }
  }, [items, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive]);
  return import_react76.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: mergedRef, className: clsx_m_default(baseProps.className, styles_css_default25.root) }),
    import_react76.default.createElement(
      InternalBox,
      { margin: { bottom: "l" } },
      isEmpty && import_react76.default.createElement("div", { className: clsx_m_default(styles_css_default25.empty, wasNonEmpty.current && styles_css_default25["empty-appear"]) }, empty),
      items.map((item, index) => import_react76.default.createElement(Row, { key: index, index, breakpoint, item, definition, i18nStrings, removable: isItemRemovable2(item), removeButtonText, removeButtonRefs: removeButtonRefs.current, onRemoveButtonClick }))
    ),
    import_react76.default.createElement(InternalButton, { className: styles_css_default25["add-button"], disabled: disableAddButton, onClick: onAddButtonClick, formAction: "none", ref: addButtonRef, ariaDescribedby: infoAriaDescribedBy }, addButtonText),
    import_react76.default.createElement(live_region_default, { "data-testid": "removal-announcement", delay: 5, key: items.length }, removalAnnouncement),
    !!additionalInfo && import_react76.default.createElement(AdditionalInfo, { id: infoAriaDescribedBy }, additionalInfo)
  );
});
var internal_default12 = InternalAttributeEditor;

// node_modules/@cloudscape-design/components/attribute-editor/index.js
var AttributeEditor = import_react77.default.forwardRef((_a, ref) => {
  var { items = [], isItemRemovable: isItemRemovable2 = () => true } = _a, props2 = __rest(_a, ["items", "isItemRemovable"]);
  const baseComponentProps = useBaseComponent("AttributeEditor");
  return import_react77.default.createElement(internal_default12, Object.assign({ items, isItemRemovable: isItemRemovable2 }, props2, baseComponentProps, { ref }));
});
applyDisplayName(AttributeEditor, "AttributeEditor");
var attribute_editor_default = AttributeEditor;

// node_modules/@cloudscape-design/components/autosuggest/index.js
var import_react86 = __toESM(require_react());

// node_modules/@cloudscape-design/components/autosuggest/internal.js
var import_react85 = __toESM(require_react());

// node_modules/@cloudscape-design/components/autosuggest/options-controller.js
var import_react78 = __toESM(require_react());

// node_modules/@cloudscape-design/components/autosuggest/utils/utils.js
var isGroup2 = (option) => "type" in option && option.type === "parent";
var popLastGroup = (options) => {
  if (options.length) {
    const lastOption = options[options.length - 1];
    if (isGroup2(lastOption)) {
      options.pop();
    }
  }
};
var filterOptions2 = (options, text) => {
  const filteredOptions = options.reduce((filteredIn, option) => {
    if (isGroup2(option)) {
      popLastGroup(filteredIn);
      filteredIn.push(option);
    } else if (matchSingleOption(option, text)) {
      filteredIn.push(option);
    }
    return filteredIn;
  }, []);
  popLastGroup(filteredOptions);
  return filteredOptions;
};
var matchSingleOption = (option, text) => {
  const searchableFields2 = ["value", "label", "description", "labelTag"];
  const searchableTagFields = ["tags", "filteringTags"];
  const searchText = text.toLowerCase();
  const searchStrFieldsFn = (attr) => matchString(option[attr], searchText);
  const searchTagsFieldsFn = (attr) => {
    var _a;
    return (_a = option[attr]) === null || _a === void 0 ? void 0 : _a.some((value) => matchString(value, searchText));
  };
  return searchableFields2.some(searchStrFieldsFn) || searchableTagFields.some(searchTagsFieldsFn);
};
var matchString = (value, searchText) => {
  return value && value.toLowerCase().indexOf(searchText) !== -1;
};

// node_modules/@cloudscape-design/components/autosuggest/options-controller.js
var isHighlightable = (option) => {
  return !!option && option.type !== "parent";
};
var isInteractive2 = (option) => !!option && !option.disabled && option.type !== "parent";
var useAutosuggestItems = ({ options, filterValue, filterText, filteringType, hideEnteredTextLabel, onSelectItem }) => {
  const [showAll, setShowAll] = (0, import_react78.useState)(false);
  const { items, getItemGroup } = (0, import_react78.useMemo)(() => createItems(options), [options]);
  const filteredItems = (0, import_react78.useMemo)(() => {
    const filteredItems2 = filteringType === "auto" && !showAll ? filterOptions2(items, filterText) : [...items];
    if (filterValue && !hideEnteredTextLabel) {
      filteredItems2.unshift({ value: filterValue, type: "use-entered", option: { value: filterValue } });
    }
    generateTestIndexes(filteredItems2, getItemGroup);
    return filteredItems2;
  }, [items, getItemGroup, filterValue, filterText, filteringType, showAll, hideEnteredTextLabel]);
  const [highlightedOptionState, highlightedOptionHandlers] = useHighlightedOption({
    options: filteredItems,
    isHighlightable
  });
  const selectHighlightedOptionWithKeyboard = () => {
    if (highlightedOptionState.highlightedOption && isInteractive2(highlightedOptionState.highlightedOption)) {
      onSelectItem(highlightedOptionState.highlightedOption);
      return true;
    }
    return false;
  };
  const highlightVisibleOptionWithMouse = (index) => {
    if (filteredItems[index] && isHighlightable(filteredItems[index])) {
      highlightedOptionHandlers.setHighlightedIndexWithMouse(index);
    }
  };
  const selectVisibleOptionWithMouse = (index) => {
    if (filteredItems[index] && isInteractive2(filteredItems[index])) {
      onSelectItem(filteredItems[index]);
    }
  };
  return [
    Object.assign(Object.assign({}, highlightedOptionState), { items: filteredItems, showAll, getItemGroup }),
    Object.assign(Object.assign({}, highlightedOptionHandlers), {
      setShowAll,
      selectHighlightedOptionWithKeyboard,
      highlightVisibleOptionWithMouse,
      selectVisibleOptionWithMouse
    })
  ];
};
function createItems(options) {
  const items = [];
  const itemToGroup = /* @__PURE__ */ new WeakMap();
  const getItemGroup = (item) => itemToGroup.get(item);
  for (const option of options) {
    if (isGroup3(option)) {
      for (const item of flattenGroup(option)) {
        items.push(item);
      }
    } else {
      items.push(Object.assign(Object.assign({}, option), { option }));
    }
  }
  function flattenGroup(group) {
    const { options: options2 } = group, rest = __rest(group, ["options"]);
    let hasOnlyDisabledChildren = true;
    const items2 = [Object.assign(Object.assign({}, rest), { type: "parent", option: group })];
    for (const option of options2) {
      if (!option.disabled) {
        hasOnlyDisabledChildren = false;
      }
      const childOption = Object.assign(Object.assign({}, option), { type: "child", disabled: option.disabled || rest.disabled, option });
      items2.push(childOption);
      itemToGroup.set(childOption, group);
    }
    items2[0].disabled = items2[0].disabled || hasOnlyDisabledChildren;
    return items2;
  }
  return { items, getItemGroup };
}
function isGroup3(optionOrGroup) {
  return "options" in optionOrGroup;
}

// node_modules/@cloudscape-design/components/autosuggest/options-list.js
var import_react82 = __toESM(require_react());

// node_modules/@cloudscape-design/components/autosuggest/virtual-list.js
var import_react81 = __toESM(require_react());

// node_modules/@cloudscape-design/components/autosuggest/autosuggest-option.js
var import_react79 = __toESM(require_react());

// node_modules/@cloudscape-design/components/autosuggest/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/autosuggest/styles.scoped.css";
var styles_css_default26 = {
  "root": "awsui_root_12hwc_12ujv_5",
  "layout-strut": "awsui_layout-strut_12hwc_12ujv_9",
  "list-bottom": "awsui_list-bottom_12hwc_12ujv_15"
};

// node_modules/@cloudscape-design/components/autosuggest/autosuggest-option.js
var AutosuggestOption = (_a, ref) => {
  var { nativeAttributes = {}, highlightText, option, highlighted, highlightType, current, enteredTextLabel, virtualPosition, padBottom, screenReaderContent, ariaSetsize, ariaPosinset } = _a, rest = __rest(_a, ["nativeAttributes", "highlightText", "option", "highlighted", "highlightType", "current", "enteredTextLabel", "virtualPosition", "padBottom", "screenReaderContent", "ariaSetsize", "ariaPosinset"]);
  const baseProps = getBaseProps(rest);
  const i18n = useInternalI18n("autosuggest");
  const useEntered = "type" in option && option.type === "use-entered";
  const isParent = "type" in option && option.type === "parent";
  const isChild = "type" in option && option.type === "child";
  const { throughIndex, inGroupIndex, groupIndex } = getTestOptionIndexes(option) || {};
  let optionContent;
  if (useEntered) {
    optionContent = i18n("enteredTextLabel", enteredTextLabel === null || enteredTextLabel === void 0 ? void 0 : enteredTextLabel(option.value || ""), (format3) => format3({ value: option.value || "" }));
    screenReaderContent = void 0;
  } else if (isParent) {
    optionContent = option.label;
  } else {
    const a11yProperties = {};
    if (nativeAttributes["aria-label"]) {
      a11yProperties["aria-label"] = nativeAttributes["aria-label"];
    }
    optionContent = import_react79.default.createElement(
      "div",
      Object.assign({}, a11yProperties),
      import_react79.default.createElement(option_default, { option, highlightedOption: highlighted, highlightText })
    );
  }
  return import_react79.default.createElement(selectable_item_default, Object.assign({}, baseProps, { className: styles_css_default26.option, ariaSelected: current, highlighted, disabled: option.disabled, hasBackground: useEntered, isParent, isChild, virtualPosition, "data-test-index": throughIndex, "data-in-group-index": inGroupIndex, "data-group-index": groupIndex, ref, padBottom, screenReaderContent, ariaSetsize, ariaPosinset, highlightType }), optionContent);
};
var autosuggest_option_default = import_react79.default.memo(import_react79.default.forwardRef(AutosuggestOption));

// node_modules/@cloudscape-design/components/autosuggest/plain-list.js
var import_react80 = __toESM(require_react());
var getOptionProps = (index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus) => {
  const nativeAttributes = item === highlightedOption ? highlightedA11yProps : {};
  const baseOptionProps = getBaseProps(nativeAttributes);
  const isLastItem = index === filteredItems.length - 1;
  const isNotEnteredTextItem = filteredItems.length > 1;
  const padBottom = !hasDropdownStatus && isNotEnteredTextItem && isLastItem;
  return Object.assign({ nativeAttributes, padBottom }, baseOptionProps);
};
var PlainList2 = ({ autosuggestItemsState, handleLoadMore, menuProps, enteredTextLabel, highlightedA11yProps, hasDropdownStatus, highlightText, listBottom, screenReaderContent }) => {
  const listRef = (0, import_react80.useRef)(null);
  (0, import_react80.useEffect)(() => {
    var _a;
    const item = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-mouse-target="${autosuggestItemsState.highlightedIndex}"]`);
    if (autosuggestItemsState.highlightType === "keyboard" && item) {
      scrollElementIntoView(item);
    }
  }, [autosuggestItemsState.highlightType, autosuggestItemsState.highlightedIndex]);
  return import_react80.default.createElement(
    options_list_default,
    Object.assign({}, menuProps, {
      onLoadMore: handleLoadMore,
      open: true,
      ref: listRef,
      nativeAttributes: { unselectable: "on" }
    }),
    autosuggestItemsState.items.map((item, index) => {
      const optionProps = getOptionProps(index, item, autosuggestItemsState.items, highlightedA11yProps, autosuggestItemsState.highlightedOption, hasDropdownStatus);
      return import_react80.default.createElement(autosuggest_option_default, Object.assign({ highlightText, option: item, highlighted: item === autosuggestItemsState.highlightedOption, current: item.value === highlightText, key: index, "data-mouse-target": index, enteredTextLabel, screenReaderContent, highlightType: autosuggestItemsState.highlightType }, optionProps));
    }),
    listBottom ? import_react80.default.createElement("li", { role: "option", className: styles_css_default26["list-bottom"] }, listBottom) : null
  );
};
var plain_list_default2 = PlainList2;

// node_modules/@cloudscape-design/components/autosuggest/virtual-list.js
var VirtualList2 = ({ autosuggestItemsState, handleLoadMore, menuProps, enteredTextLabel, highlightedA11yProps, hasDropdownStatus, highlightText, listBottom, screenReaderContent }) => {
  const scrollRef = (0, import_react81.useRef)(null);
  const [width, strutRef] = useContainerQuery((rect) => rect.width, []);
  (0, import_react81.useImperativeHandle)(strutRef, () => scrollRef.current);
  const rowVirtualizer = useVirtual2({
    items: autosuggestItemsState.items,
    parentRef: scrollRef,
    estimateSize: (0, import_react81.useCallback)(() => 31, [width, highlightText])
  });
  (0, import_react81.useEffect)(() => {
    if (autosuggestItemsState.highlightType === "keyboard") {
      rowVirtualizer.scrollToIndex(autosuggestItemsState.highlightedIndex);
    }
  }, [autosuggestItemsState.highlightType, autosuggestItemsState.highlightedIndex, rowVirtualizer]);
  return import_react81.default.createElement(
    options_list_default,
    Object.assign({}, menuProps, {
      onLoadMore: handleLoadMore,
      ref: scrollRef,
      open: true,
      nativeAttributes: { unselectable: "on" }
    }),
    import_react81.default.createElement("div", { "aria-hidden": "true", key: "total-size", className: styles_css_default26["layout-strut"], style: { height: rowVirtualizer.totalSize + (autosuggestItemsState.items.length === 1 ? 1 : 0) } }),
    rowVirtualizer.virtualItems.map((virtualRow) => {
      const { index, start, measureRef } = virtualRow;
      const item = autosuggestItemsState.items[index];
      const optionProps = getOptionProps(index, item, autosuggestItemsState.items, highlightedA11yProps, autosuggestItemsState.highlightedOption, hasDropdownStatus);
      return import_react81.default.createElement(autosuggest_option_default, Object.assign({ key: index, ref: measureRef, highlightText, option: item, highlighted: item === autosuggestItemsState.highlightedOption, current: item.value === highlightText, "data-mouse-target": index, enteredTextLabel, virtualPosition: start + (index === 0 ? 1 : 0), screenReaderContent, ariaSetsize: autosuggestItemsState.items.length, ariaPosinset: index + 1, highlightType: autosuggestItemsState.highlightType }, optionProps));
    }),
    listBottom ? import_react81.default.createElement("li", { role: "option", className: styles_css_default26["list-bottom"] }, listBottom) : null
  );
};
var virtual_list_default2 = VirtualList2;

// node_modules/@cloudscape-design/components/autosuggest/options-list.js
var createMouseEventHandler = (handler) => (itemIndex) => {
  if (itemIndex > -1) {
    handler(itemIndex);
  }
};
function AutosuggestOptionsList({ statusType, autosuggestItemsState, autosuggestItemsHandlers, highlightedOptionId, highlightText, listId, controlId, enteredTextLabel, handleLoadMore, hasDropdownStatus, virtualScroll, selectedAriaLabel, renderHighlightedAriaLive, listBottom, ariaDescribedby }) {
  var _a;
  const handleMouseUp = createMouseEventHandler(autosuggestItemsHandlers.selectVisibleOptionWithMouse);
  const handleMouseMove = createMouseEventHandler(autosuggestItemsHandlers.highlightVisibleOptionWithMouse);
  const ListComponent = virtualScroll ? virtual_list_default2 : plain_list_default2;
  const announcement = useAnnouncement({
    announceSelected: ((_a = autosuggestItemsState.highlightedOption) === null || _a === void 0 ? void 0 : _a.value) === highlightText,
    highlightedOption: autosuggestItemsState.highlightedOption,
    getParent: (option) => autosuggestItemsState.getItemGroup(option),
    selectedAriaLabel,
    renderHighlightedAriaLive
  });
  return import_react82.default.createElement(ListComponent, { listBottom, handleLoadMore, autosuggestItemsState, highlightText, enteredTextLabel, highlightedA11yProps: highlightedOptionId ? { id: highlightedOptionId } : {}, hasDropdownStatus, menuProps: {
    id: listId,
    ariaLabelledby: controlId,
    onMouseUp: handleMouseUp,
    onMouseMove: handleMouseMove,
    ariaDescribedby,
    statusType
  }, screenReaderContent: announcement });
}

// node_modules/@cloudscape-design/components/autosuggest/load-more-controller.js
var import_react83 = __toESM(require_react());
var useAutosuggestLoadMore = ({ options = [], statusType, onLoadItems }) => {
  const lastFilteringText = (0, import_react83.useRef)(null);
  const fireLoadMore = ({ firstPage, samePage, filteringText }) => {
    var _a;
    if (filteringText === void 0 || lastFilteringText.current !== filteringText) {
      if (filteringText !== void 0) {
        lastFilteringText.current = filteringText;
      }
      onLoadItems({ filteringText: (_a = lastFilteringText.current) !== null && _a !== void 0 ? _a : "", firstPage, samePage });
    }
  };
  const fireLoadMoreOnScroll = () => {
    options.length > 0 && statusType === "pending" && fireLoadMore({ firstPage: false, samePage: false });
  };
  const fireLoadMoreOnRecoveryClick = () => fireLoadMore({ firstPage: false, samePage: true });
  const fireLoadMoreOnInputFocus = () => fireLoadMore({ firstPage: true, samePage: false, filteringText: "" });
  const fireLoadMoreOnInputChange = (filteringText) => fireLoadMore({ firstPage: true, samePage: false, filteringText });
  return { fireLoadMoreOnScroll, fireLoadMoreOnRecoveryClick, fireLoadMoreOnInputFocus, fireLoadMoreOnInputChange };
};

// node_modules/@cloudscape-design/components/internal/components/autosuggest-input/index.js
var import_react84 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/autosuggest-input/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/autosuggest-input/styles.scoped.css";
var styles_css_default27 = {
  "dropdown-footer": "awsui_dropdown-footer_vm8qf_jxdvh_5",
  "dropdown-content": "awsui_dropdown-content_vm8qf_jxdvh_10"
};

// node_modules/@cloudscape-design/components/internal/components/autosuggest-input/index.js
var AutosuggestInput = import_react84.default.forwardRef((_a, ref) => {
  var { value, onChange, onBlur, onFocus, onKeyUp, onKeyDown, name, placeholder, disabled, readOnly, autoFocus, ariaLabel, ariaRequired, disableBrowserAutocorrect = false, expandToViewport, ariaControls, ariaActivedescendant, clearAriaLabel, dropdownExpanded = true, dropdownContentKey, dropdownContentFocusable = false, dropdownContent = null, dropdownFooter = null, dropdownWidth, loopFocus, onCloseDropdown, onDelayedInput, onPressArrowDown, onPressArrowUp, onPressEnter, __internalRootRef } = _a, restProps = __rest(_a, ["value", "onChange", "onBlur", "onFocus", "onKeyUp", "onKeyDown", "name", "placeholder", "disabled", "readOnly", "autoFocus", "ariaLabel", "ariaRequired", "disableBrowserAutocorrect", "expandToViewport", "ariaControls", "ariaActivedescendant", "clearAriaLabel", "dropdownExpanded", "dropdownContentKey", "dropdownContentFocusable", "dropdownContent", "dropdownFooter", "dropdownWidth", "loopFocus", "onCloseDropdown", "onDelayedInput", "onPressArrowDown", "onPressArrowUp", "onPressEnter", "__internalRootRef"]);
  const baseProps = getBaseProps(restProps);
  const formFieldContext = useFormFieldContext(restProps);
  const inputRef = (0, import_react84.useRef)(null);
  const dropdownContentRef = (0, import_react84.useRef)(null);
  const dropdownFooterRef = (0, import_react84.useRef)(null);
  const preventOpenOnFocusRef = (0, import_react84.useRef)(false);
  const preventCloseOnBlurRef = (0, import_react84.useRef)(false);
  const [open, setOpen] = (0, import_react84.useState)(false);
  const openDropdown = () => !readOnly && setOpen(true);
  const closeDropdown = () => {
    setOpen(false);
    fireNonCancelableEvent(onCloseDropdown, null);
  };
  (0, import_react84.useImperativeHandle)(ref, () => ({
    focus(options) {
      var _a2;
      if (options === null || options === void 0 ? void 0 : options.preventDropdown) {
        preventOpenOnFocusRef.current = true;
      }
      (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    },
    select() {
      var _a2;
      (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.select();
    },
    open: openDropdown,
    close: closeDropdown
  }));
  const handleBlur = () => {
    if (!preventCloseOnBlurRef.current) {
      closeDropdown();
      fireNonCancelableEvent(onBlur, null);
    }
  };
  const handleFocus = () => {
    if (!preventOpenOnFocusRef.current) {
      openDropdown();
      fireNonCancelableEvent(onFocus, null);
    }
    preventOpenOnFocusRef.current = false;
  };
  const handleKeyDown = (e) => {
    switch (e.detail.keyCode) {
      case KeyCode.down: {
        onPressArrowDown === null || onPressArrowDown === void 0 ? void 0 : onPressArrowDown();
        openDropdown();
        e.preventDefault();
        break;
      }
      case KeyCode.up: {
        onPressArrowUp === null || onPressArrowUp === void 0 ? void 0 : onPressArrowUp();
        openDropdown();
        e.preventDefault();
        break;
      }
      case KeyCode.enter: {
        if (open) {
          if (!(onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter())) {
            closeDropdown();
          }
          e.preventDefault();
        }
        fireCancelableEvent(onKeyDown, e.detail);
        break;
      }
      case KeyCode.escape: {
        if (open) {
          closeDropdown();
        } else if (value) {
          fireNonCancelableEvent(onChange, { value: "" });
        }
        e.preventDefault();
        fireCancelableEvent(onKeyDown, e.detail);
        break;
      }
      default: {
        fireCancelableEvent(onKeyDown, e.detail);
      }
    }
  };
  const handleChange = (value2) => {
    openDropdown();
    fireNonCancelableEvent(onChange, { value: value2 });
  };
  const handleDelayedInput = (value2) => {
    fireNonCancelableEvent(onDelayedInput, { value: value2 });
  };
  const handleDropdownMouseDown = (event) => {
    if (!dropdownContentFocusable) {
      event.preventDefault();
    } else {
      preventCloseOnBlurRef.current = true;
      requestAnimationFrame(() => {
        preventCloseOnBlurRef.current = false;
      });
    }
  };
  const expanded = open && dropdownExpanded;
  const nativeAttributes = {
    name,
    placeholder,
    autoFocus,
    onClick: openDropdown,
    role: "combobox",
    "aria-autocomplete": "list",
    "aria-expanded": expanded,
    "aria-controls": open ? ariaControls : void 0,
    "aria-owns": open ? ariaControls : void 0,
    "aria-label": ariaLabel,
    "aria-activedescendant": ariaActivedescendant
  };
  (0, import_react84.useEffect)(() => {
    if (!open) {
      return;
    }
    const clickListener = (event) => {
      var _a2, _b, _c;
      if (!((_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(event.target)) && !((_b = dropdownContentRef.current) === null || _b === void 0 ? void 0 : _b.contains(event.target)) && !((_c = dropdownFooterRef.current) === null || _c === void 0 ? void 0 : _c.contains(event.target))) {
        closeDropdown();
      }
    };
    window.addEventListener("mousedown", clickListener);
    return () => {
      window.removeEventListener("mousedown", clickListener);
    };
  }, [open]);
  return import_react84.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default27.root), ref: __internalRootRef }),
    import_react84.default.createElement(dropdown_default, { minWidth: dropdownWidth, stretchWidth: !dropdownWidth, contentKey: dropdownContentKey, onFocus: handleFocus, onBlur: handleBlur, trigger: import_react84.default.createElement(internal_default10, Object.assign({ type: "visualSearch", value, onChange: (event) => handleChange(event.detail.value), __onDelayedInput: (event) => handleDelayedInput(event.detail.value), onKeyDown: handleKeyDown, onKeyUp, disabled, disableBrowserAutocorrect, readOnly, ariaRequired, clearAriaLabel, ref: inputRef, autoComplete: false, __nativeAttributes: nativeAttributes }, formFieldContext)), onMouseDown: handleDropdownMouseDown, open: open && !!dropdownContent, footer: dropdownFooterRef && import_react84.default.createElement("div", { ref: dropdownFooterRef, className: styles_css_default27["dropdown-footer"] }, dropdownFooter), expandToViewport, loopFocus }, open && dropdownContent ? import_react84.default.createElement("div", { ref: dropdownContentRef, className: styles_css_default27["dropdown-content"] }, dropdownContent) : null)
  );
});
var autosuggest_input_default = AutosuggestInput;

// node_modules/@cloudscape-design/components/autosuggest/internal.js
var InternalAutosuggest = import_react85.default.forwardRef((props2, ref) => {
  var _a, _b;
  const { value, onChange, onBlur, onFocus, onKeyUp, onLoadItems, options, filteringType = "auto", statusType = "finished", recoveryText, placeholder, clearAriaLabel, name, disabled, disableBrowserAutocorrect = false, autoFocus, readOnly, ariaLabel, ariaRequired, enteredTextLabel, filteringResultsText, onKeyDown, virtualScroll, expandToViewport, onSelect, renderHighlightedAriaLive, __internalRootRef } = props2, restProps = __rest(props2, ["value", "onChange", "onBlur", "onFocus", "onKeyUp", "onLoadItems", "options", "filteringType", "statusType", "recoveryText", "placeholder", "clearAriaLabel", "name", "disabled", "disableBrowserAutocorrect", "autoFocus", "readOnly", "ariaLabel", "ariaRequired", "enteredTextLabel", "filteringResultsText", "onKeyDown", "virtualScroll", "expandToViewport", "onSelect", "renderHighlightedAriaLive", "__internalRootRef"]);
  checkControlled("Autosuggest", "value", value, "onChange", onChange);
  checkOptionValueField("Autosuggest", "options", options);
  const autosuggestInputRef = (0, import_react85.useRef)(null);
  (0, import_react85.useImperativeHandle)(ref, () => ({
    focus: () => {
      var _a2;
      return (_a2 = autosuggestInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    },
    select: () => {
      var _a2;
      return (_a2 = autosuggestInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.select();
    }
  }), []);
  const i18n = useInternalI18n("autosuggest");
  const errorIconAriaLabel = i18n("errorIconAriaLabel", restProps.errorIconAriaLabel);
  const selectedAriaLabel = i18n("selectedAriaLabel", restProps.selectedAriaLabel);
  if (!enteredTextLabel) {
    warnOnce("Autosuggest", "A value for enteredTextLabel must be provided.");
  }
  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({
    options: options || [],
    filterValue: value,
    filterText: value,
    filteringType,
    hideEnteredTextLabel: false,
    onSelectItem: (option) => {
      var _a2;
      const value2 = option.value || "";
      fireNonCancelableEvent(onChange, { value: value2 });
      fireNonCancelableEvent(onSelect, {
        value: value2,
        selectedOption: option.type !== "use-entered" ? option.option : void 0
      });
      (_a2 = autosuggestInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.close();
    }
  });
  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({
    options,
    statusType,
    onLoadItems: (detail) => fireNonCancelableEvent(onLoadItems, detail)
  });
  const handleChange = (event) => {
    autosuggestItemsHandlers.setShowAll(false);
    autosuggestItemsHandlers.resetHighlightWithKeyboard();
    fireNonCancelableEvent(onChange, event.detail);
  };
  const handleDelayedInput = (event) => {
    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);
  };
  const handleBlur = () => {
    fireNonCancelableEvent(onBlur, null);
  };
  const handleFocus = () => {
    autosuggestItemsHandlers.setShowAll(true);
    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();
    fireNonCancelableEvent(onFocus, null);
  };
  const handleKeyUp = (e) => {
    fireCancelableEvent(onKeyUp, e.detail);
  };
  const handleKeyDown = (e) => {
    fireCancelableEvent(onKeyDown, e.detail);
  };
  const handlePressArrowDown = () => {
    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);
  };
  const handlePressArrowUp = () => {
    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);
  };
  const handlePressEnter = () => {
    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();
  };
  const handleCloseDropdown = () => {
    autosuggestItemsHandlers.resetHighlightWithKeyboard();
  };
  const handleRecoveryClick = () => {
    var _a2;
    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();
    (_a2 = autosuggestInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  };
  const formFieldContext = useFormFieldContext(restProps);
  const selfControlId = useUniqueId("input");
  const footerControlId = useUniqueId("footer");
  const controlId = (_a = formFieldContext.controlId) !== null && _a !== void 0 ? _a : selfControlId;
  const listId = useUniqueId("list");
  const highlightedOptionIdSource = useUniqueId();
  const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : void 0;
  const isEmpty = !value && !autosuggestItemsState.items.length;
  const isFiltered = !!value && value.length !== 0;
  const filteredText = isFiltered ? filteringResultsText === null || filteringResultsText === void 0 ? void 0 : filteringResultsText(autosuggestItemsState.items.length, (_b = options === null || options === void 0 ? void 0 : options.length) !== null && _b !== void 0 ? _b : 0) : void 0;
  const dropdownStatus = useDropdownStatus(Object.assign(Object.assign({}, props2), {
    isEmpty,
    isFiltered,
    recoveryText,
    errorIconAriaLabel,
    onRecoveryClick: handleRecoveryClick,
    filteringResultsText: filteredText
  }));
  return import_react85.default.createElement(autosuggest_input_default, Object.assign({}, restProps, { className: clsx_m_default(styles_css_default26.root, restProps.className), ref: autosuggestInputRef, __internalRootRef, value, onChange: handleChange, onBlur: handleBlur, onFocus: handleFocus, onKeyUp: handleKeyUp, onKeyDown: handleKeyDown, name, controlId, placeholder, disabled, readOnly, autoFocus, ariaLabel, ariaRequired, clearAriaLabel, disableBrowserAutocorrect, expandToViewport, ariaControls: listId, ariaActivedescendant: highlightedOptionId, dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null, dropdownContent: import_react85.default.createElement(AutosuggestOptionsList, { statusType, autosuggestItemsState, autosuggestItemsHandlers, highlightedOptionId, highlightText: value, listId, controlId, enteredTextLabel, handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll, hasDropdownStatus: dropdownStatus.content !== null, virtualScroll, selectedAriaLabel, renderHighlightedAriaLive, listBottom: !dropdownStatus.isSticky ? import_react85.default.createElement(dropdown_footer_default, { content: dropdownStatus.content, id: footerControlId }) : null, ariaDescribedby: dropdownStatus.content ? footerControlId : void 0 }), dropdownFooter: dropdownStatus.isSticky ? import_react85.default.createElement(dropdown_footer_default, { id: footerControlId, content: dropdownStatus.content, hasItems: autosuggestItemsState.items.length >= 1 }) : null, loopFocus: statusType === "error" && !!recoveryText, onCloseDropdown: handleCloseDropdown, onDelayedInput: handleDelayedInput, onPressArrowDown: handlePressArrowDown, onPressArrowUp: handlePressArrowUp, onPressEnter: handlePressEnter }));
});
var internal_default13 = InternalAutosuggest;

// node_modules/@cloudscape-design/components/internal/utils/external-props.js
var getExternalProps = (props2) => {
  const externalPropNames = Object.keys(props2).filter((propName) => propName.indexOf("__") !== 0);
  return externalPropNames.reduce((acc, propName) => {
    acc[propName] = props2[propName];
    return acc;
  }, {});
};

// node_modules/@cloudscape-design/components/autosuggest/index.js
var Autosuggest = import_react86.default.forwardRef((_a, ref) => {
  var { filteringType = "auto", statusType = "finished", disableBrowserAutocorrect = false } = _a, props2 = __rest(_a, ["filteringType", "statusType", "disableBrowserAutocorrect"]);
  const baseComponentProps = useBaseComponent("Autosuggest");
  const externalProps = getExternalProps(props2);
  return import_react86.default.createElement(internal_default13, Object.assign({ filteringType, statusType, disableBrowserAutocorrect }, externalProps, baseComponentProps, { ref }));
});
applyDisplayName(Autosuggest, "Autosuggest");
var autosuggest_default = Autosuggest;

// node_modules/@cloudscape-design/components/badge/index.js
var import_react87 = __toESM(require_react());

// node_modules/@cloudscape-design/components/badge/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/badge/styles.scoped.css";
var styles_css_default28 = {
  "badge": "awsui_badge_1yjyg_c5f33_93",
  "badge-color-grey": "awsui_badge-color-grey_1yjyg_c5f33_113",
  "badge-color-green": "awsui_badge-color-green_1yjyg_c5f33_116",
  "badge-color-blue": "awsui_badge-color-blue_1yjyg_c5f33_119",
  "badge-color-red": "awsui_badge-color-red_1yjyg_c5f33_122"
};

// node_modules/@cloudscape-design/components/badge/index.js
function Badge(_a) {
  var { color: color2 = "grey", children } = _a, rest = __rest(_a, ["color", "children"]);
  const { __internalRootRef } = useBaseComponent("Badge");
  const baseProps = getBaseProps(rest);
  const className = clsx_m_default(baseProps.className, styles_css_default28.badge, styles_css_default28[`badge-color-${color2}`]);
  return import_react87.default.createElement("span", Object.assign({}, baseProps, { className }, { ref: __internalRootRef }), children);
}
applyDisplayName(Badge, "Badge");

// node_modules/@cloudscape-design/components/bar-chart/index.js
var import_react99 = __toESM(require_react());

// node_modules/@cloudscape-design/components/bar-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/bar-chart/styles.scoped.css";
var styles_css_default29 = {
  "root": "awsui_root_1gfe1_7b6p8_9"
};

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/internal.js
var import_react98 = __toESM(require_react());

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/chart-legend.js
var import_react88 = __toESM(require_react());

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/utils.js
var chartLegendMap = {
  line: "line",
  bar: "rectangle",
  threshold: "dashed"
};
var nextValidDomainIndex = (nextGroupIndex, barGroups, direction = 1) => {
  let index = nextGroupIndex;
  if (index < 0 || index >= barGroups.length) {
    index = 0;
  }
  do {
    if (barGroups[index].isValid && barGroups[index].hasData) {
      return index;
    }
    index += direction;
    if (index >= barGroups.length) {
      index = 0;
    } else if (index < 0) {
      index = barGroups.length - 1;
    }
  } while (index !== nextGroupIndex);
  return 0;
};
function findNavigableSeries(series) {
  const navigableSeries = [];
  let navigableBarSeriesIndex = -1;
  series.forEach((internalSeries) => {
    if (internalSeries.series.type === "bar") {
      if (navigableBarSeriesIndex === -1) {
        navigableBarSeriesIndex = navigableSeries.length;
        navigableSeries.push(internalSeries.series);
      }
    } else {
      navigableSeries.push(internalSeries.series);
    }
  });
  return { navigableSeries, navigableBarSeriesIndex };
}
var matchesX = (x1, x2) => {
  if (x1 instanceof Date && x2 instanceof Date) {
    return x1.getTime() === x2.getTime();
  }
  return x1 === x2;
};
function calculateOffsetMaps(data) {
  return data.reduce((acc, curr, idx) => {
    if (idx === 0) {
      acc.push({ positiveOffsets: {}, negativeOffsets: {} });
    }
    const lastMap = acc[idx];
    const map2 = lastMap ? { positiveOffsets: Object.assign({}, lastMap.positiveOffsets), negativeOffsets: Object.assign({}, lastMap.negativeOffsets) } : { positiveOffsets: {}, negativeOffsets: {} };
    curr.forEach(({ x: x2, y: y2 }) => {
      const key = getKeyValue(x2);
      if (y2 < 0) {
        const lastValue = (lastMap === null || lastMap === void 0 ? void 0 : lastMap.negativeOffsets[key]) || 0;
        map2.negativeOffsets[key] = lastValue + y2;
      } else {
        const lastValue = (lastMap === null || lastMap === void 0 ? void 0 : lastMap.positiveOffsets[key]) || 0;
        map2.positiveOffsets[key] = lastValue + y2;
      }
    });
    if (idx < data.length - 1) {
      acc.push(map2);
    }
    return acc;
  }, []);
}
var getKeyValue = (key) => key instanceof Date ? key.getTime() : key;
function isYThreshold(series) {
  return series.type === "threshold" && "y" in series;
}
function isXThreshold(series) {
  return series.type === "threshold" && "x" in series;
}
function isDataSeries(series) {
  return series.type === "line" || series.type === "bar";
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/chart-legend.js
function InternalChartLegend({ series, visibleSeries, highlightedSeries, onHighlightChange, legendTitle, ariaLabel, plotContainerRef }) {
  const legendItems = (0, import_react88.useMemo)(() => {
    return series.filter((s2) => visibleSeries.indexOf(s2.series) !== -1).map(({ series: series2, color: color2 }) => ({
      label: series2.title,
      type: chartLegendMap[series2.type],
      color: color2,
      datum: series2
    }));
  }, [series, visibleSeries]);
  return import_react88.default.createElement(chart_legend_default, { series: legendItems, highlightedSeries: highlightedSeries || null, onHighlightChange, legendTitle, ariaLabel, plotContainerRef });
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/chart-container.js
var import_react97 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/cartesian-chart/vertical-grid-lines.js
var import_react89 = __toESM(require_react());
var vertical_grid_lines_default = (0, import_react89.memo)(VerticalGridLines);
function VerticalGridLines({ ticks: ticks2, scale, height }) {
  return import_react89.default.createElement("g", { "aria-hidden": "true" }, ticks2.map((tick) => {
    var _a;
    const x2 = (_a = scale.d3Scale(tick)) !== null && _a !== void 0 ? _a : NaN;
    return isFinite(x2) && import_react89.default.createElement("line", { key: tick, className: styles_css_default20.grid, x1: x2, y1: 0, x2, y2: height });
  }));
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/chart-popover.js
var import_react90 = __toESM(require_react());

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/mixed-line-bar-chart/styles.scoped.css";
var styles_css_default30 = {
  "series": "awsui_series_1yz9c_1gpid_93",
  "series--bar": "awsui_series--bar_1yz9c_1gpid_94",
  "series__rect": "awsui_series__rect_1yz9c_1gpid_94",
  "exiting": "awsui_exiting_1yz9c_1gpid_111",
  "awsui-motion-fade-out-0": "awsui_awsui-motion-fade-out-0_1yz9c_1gpid_1",
  "root": "awsui_root_1yz9c_1gpid_137",
  "series--highlighted": "awsui_series--highlighted_1yz9c_1gpid_150",
  "series__bar--highlighted": "awsui_series__bar--highlighted_1yz9c_1gpid_151",
  "series--dimmed": "awsui_series--dimmed_1yz9c_1gpid_155",
  "series--threshold": "awsui_series--threshold_1yz9c_1gpid_164",
  "bar-group": "awsui_bar-group_1yz9c_1gpid_169"
};

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/chart-popover.js
var chart_popover_default2 = import_react90.default.forwardRef(MixedChartPopover);
function MixedChartPopover({ containerRef, trackRef, isOpen, isPinned, highlightDetails, footer, onDismiss, size = "medium", dismissAriaLabel, onMouseEnter, onMouseLeave }, popoverRef) {
  return import_react90.default.createElement(Transition, { in: isOpen }, (state, ref) => import_react90.default.createElement("div", { ref, className: clsx_m_default(state === "exiting" && styles_css_default30.exiting) }, (isOpen || state !== "exited") && highlightDetails && import_react90.default.createElement(
    chart_popover_default,
    { ref: popoverRef, title: highlightDetails.position, trackRef, trackKey: highlightDetails.position, dismissButton: isPinned, dismissAriaLabel, onDismiss, container: containerRef.current, size, onMouseEnter, onMouseLeave },
    import_react90.default.createElement(chart_series_details_default, { details: highlightDetails.details }),
    footer && import_react90.default.createElement(InternalBox, { margin: { top: "s" } }, footer)
  )));
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/domain.js
function computeDomainX2(series, xScaleType) {
  if (xScaleType === "categorical") {
    return series.reduce((acc, s2) => {
      if (isDataSeries(s2.series)) {
        s2.series.data.forEach(({ x: x2 }) => {
          if (acc.indexOf(x2) === -1) {
            acc.push(x2);
          }
        });
      }
      if (isXThreshold(s2.series)) {
        if (acc.indexOf(s2.series.x) === -1) {
          acc.push(s2.series.x);
        }
      }
      return acc;
    }, []);
  }
  return series.reduce((acc, curr) => {
    if (isYThreshold(curr.series)) {
      return acc;
    }
    if (isXThreshold(curr.series)) {
      const [min3, max3] = acc;
      const newMin = min3 === void 0 || min3 === null || curr.series.x < min3 ? curr.series.x : min3;
      const newMax = max3 === void 0 || max3 === null || max3 < curr.series.x ? curr.series.x : max3;
      return [newMin, newMax];
    }
    if (isDataSeries(curr.series)) {
      return curr.series.data.reduce(([min3, max3], { x: x2 }) => {
        const newMin = min3 === void 0 || min3 === null || x2 < min3 ? x2 : min3;
        const newMax = max3 === void 0 || max3 === null || max3 < x2 ? x2 : max3;
        return [newMin, newMax];
      }, acc);
    }
    return acc;
  }, []);
}
function find(arr, func) {
  for (let i = 0; i < arr.length; i++) {
    const found = func(arr[i]);
    if (found) {
      return arr[i];
    }
  }
  return null;
}
function computeDomainY2(series, scaleType, stackedBars) {
  let _series = series;
  if (stackedBars) {
    const { positiveData, negativeData } = series.reduce((acc, curr) => {
      if (curr.series.type === "bar") {
        curr.series.data.forEach(({ x: x2, y: y2 }) => {
          const data = y2 < 0 ? acc.negativeData : acc.positiveData;
          const stackedDatum = find(data, (el) => matchesX(el.x, x2));
          if (stackedDatum) {
            stackedDatum.y += y2;
          } else {
            data.push({ x: x2, y: y2 });
          }
          return acc;
        });
      }
      return acc;
    }, {
      positiveData: [],
      negativeData: []
    });
    const stackedSeries = [
      {
        color: "",
        index: NaN,
        series: {
          type: "bar",
          title: "positive",
          data: positiveData
        }
      },
      {
        color: "",
        index: NaN,
        series: {
          type: "bar",
          title: "negative",
          data: negativeData
        }
      }
    ];
    _series = [...stackedSeries, ..._series.filter((s2) => s2.series.type !== "bar")];
  }
  const domain = _series.reduce((acc, curr) => {
    if (isYThreshold(curr.series)) {
      const [min3, max3] = acc;
      const newMin = min3 === void 0 || curr.series.y < min3 ? curr.series.y : min3;
      const newMax = max3 === void 0 || max3 < curr.series.y ? curr.series.y : max3;
      return [newMin, newMax];
    }
    if (isXThreshold(curr.series)) {
      return acc;
    }
    if (isDataSeries(curr.series)) {
      return curr.series.data.reduce(([min3, max3], { y: y2 }) => {
        const newMin = min3 === void 0 || y2 < min3 ? y2 : min3;
        const newMax = max3 === void 0 || max3 < y2 ? y2 : max3;
        return [newMin, newMax];
      }, acc);
    }
    return acc;
  }, [0, 0]);
  if (scaleType === "log" && domain[0] === 0 && domain[1] > 1) {
    return [1, domain[1]];
  }
  return domain;
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/make-scaled-series.js
function makeScaledSeries(allSeries, xScale, yScale) {
  const xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;
  const scaleX = (x2) => (xScale.d3Scale(x2) || 0) + xOffset;
  const scaleY = (y2) => yScale.d3Scale(y2) || 0;
  const allX = getAllX(allSeries);
  function mergeLineSeriesPointsWithXThresholds(scaledPoints, xThresholdSeries, xThresholdSeriesColor) {
    var _a, _b;
    const x2 = scaleX(xThresholdSeries.x);
    let bisectIndex = -1;
    for (let i = 0; i < scaledPoints.length - 1; i++) {
      if (scaledPoints[i].x < x2 && x2 < scaledPoints[i + 1].x) {
        bisectIndex = i;
        break;
      }
    }
    if (bisectIndex !== -1) {
      const prevY = ((_a = scaledPoints[bisectIndex].datum) === null || _a === void 0 ? void 0 : _a.y) || 0;
      const nextY = ((_b = scaledPoints[bisectIndex + 1].datum) === null || _b === void 0 ? void 0 : _b.y) || 0;
      const averageY = (prevY + nextY) / 2;
      scaledPoints.push({
        x: x2,
        y: scaleY(averageY),
        datum: { x: xThresholdSeries.x, y: NaN },
        series: scaledPoints[bisectIndex].series,
        color: xThresholdSeriesColor
      });
    }
  }
  const scaledSeriesX = allSeries.map(({ series, color: color2 }) => {
    const scaledPoints = [];
    if (series.type === "line") {
      for (const datum of series.data) {
        scaledPoints.push({ x: scaleX(datum.x), y: scaleY(datum.y), datum, series, color: color2 });
      }
      scaledPoints.sort((s1, s2) => s1.x - s2.x);
      for (const otherSeries of allSeries) {
        if (isXThreshold(otherSeries.series)) {
          mergeLineSeriesPointsWithXThresholds(scaledPoints, otherSeries.series, otherSeries.color);
        }
      }
    } else if (isYThreshold(series)) {
      for (const x2 of allX) {
        scaledPoints.push({ x: scaleX(x2), y: scaleY(series.y), datum: { x: x2, y: series.y }, series, color: color2 });
      }
      if (allX.length === 0) {
        scaledPoints.push({ x: NaN, y: scaleY(series.y), series, color: color2 });
      }
    } else if (isXThreshold(series)) {
      scaledPoints.push({ x: scaleX(series.x), y: NaN, datum: { x: series.x, y: NaN }, series, color: color2 });
    }
    return scaledPoints;
  });
  return flatten(scaledSeriesX).sort((s1, s2) => s1.x - s2.x);
}
function getAllX(series) {
  const addDataXSet = /* @__PURE__ */ new Set();
  for (const { series: s2 } of series) {
    switch (s2.type) {
      case "bar":
      case "line":
        for (const d of s2.data) {
          addDataXSet.add(d.x);
        }
        break;
      case "threshold":
        if (isXThreshold(s2)) {
          addDataXSet.add(s2.x);
        }
        break;
    }
  }
  const allDataX = [];
  addDataXSet.forEach((x2) => allDataX.push(x2));
  return allDataX;
}
function flatten(arrays) {
  const merged = [];
  for (const array of arrays) {
    for (const item of array) {
      merged.push(item);
    }
  }
  return merged;
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/make-scaled-bar-groups.js
function makeScaledBarGroups(series, xScale, plotWidth, plotHeight, axis) {
  if (!xScale.isCategorical()) {
    return [];
  }
  return xScale.domain.map((x2) => {
    const scaledX = xScale.d3Scale(x2);
    const isValid2 = typeof scaledX !== "undefined" && isFinite(scaledX);
    return {
      x: x2,
      isValid: isValid2,
      hasData: series.some(({ series: series2 }) => {
        if (isYThreshold(series2)) {
          return true;
        }
        if (isXThreshold(series2)) {
          return false;
        }
        if (isDataSeries(series2)) {
          return series2.data.some((datum) => matchesX(datum.x, x2));
        }
        return false;
      }),
      position: axis === "x" ? {
        x: 0,
        y: isValid2 ? scaledX || 0 : 0,
        width: plotWidth,
        height: xScale.d3Scale.bandwidth()
      } : {
        x: isValid2 ? scaledX || 0 : 0,
        y: 0,
        width: xScale.d3Scale.bandwidth(),
        height: plotHeight
      }
    };
  });
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/format-highlighted.js
function formatHighlighted(position, series, xTickFormatter) {
  const formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();
  const details = [];
  series.forEach((s2) => {
    const detail = getSeriesDetail(s2, position);
    if (detail) {
      details.push(detail);
    }
  });
  return { position: formattedPosition, details };
}
function getSeriesDetail(internalSeries, targetX) {
  const { series, color: color2 } = internalSeries;
  if (isXThreshold(series)) {
    return series.x === targetX ? {
      key: series.title,
      value: "",
      color: color2,
      markerType: "dashed"
    } : null;
  }
  if (isYThreshold(series)) {
    return {
      key: series.title,
      value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,
      color: color2,
      markerType: "dashed"
    };
  }
  if (isDataSeries(series)) {
    for (const datum of series.data) {
      if (matchesX(targetX, datum.x)) {
        return {
          key: series.title,
          value: series.valueFormatter ? series.valueFormatter(datum.y, targetX) : datum.y,
          color: color2,
          markerType: series.type === "line" ? "line" : "rectangle"
        };
      }
    }
  }
  return null;
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/data-series.js
var import_react93 = __toESM(require_react());

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/line-series.js
var import_react91 = __toESM(require_react());
function LineSeries({ axis, series, color: color2, xScale, yScale, chartAreaClipPath }) {
  var _a;
  const commonProps = { "aria-hidden": true, stroke: color2, clipPath: `url(#${chartAreaClipPath})` };
  if (series.type === "line") {
    const lineGenerator = line_default().x((d) => {
      let x2 = xScale.d3Scale(d.x) || 0;
      if (xScale.isCategorical()) {
        const offset = Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2;
        x2 += offset;
      }
      return x2;
    }).y((d) => yScale.d3Scale(d.y) || 0);
    const visibleData = series.data.filter(({ x: x2 }) => xScale.d3Scale(x2) !== void 0);
    return import_react91.default.createElement("path", Object.assign({}, commonProps, { d: lineGenerator(visibleData) || "" }));
  } else if (isYThreshold(series)) {
    const [x1, x2] = xScale.d3Scale.range();
    const y2 = yScale.d3Scale(series.y);
    const coordinates = axis === "x" ? { x1, x2, y1: y2, y2 } : { x1: y2, x2: y2, y1: x1, y2: x2 };
    return import_react91.default.createElement("line", Object.assign({}, commonProps, coordinates));
  } else if (isXThreshold(series)) {
    const [y1, y2] = yScale.d3Scale.range();
    const xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;
    const x2 = ((_a = xScale.d3Scale(series.x)) !== null && _a !== void 0 ? _a : NaN) + xOffset;
    const coordinates = axis === "x" ? { x1: x2, x2, y1, y2 } : { x1: y1, x2: y2, y1: x2, y2: x2 };
    return import_react91.default.createElement("line", Object.assign({}, commonProps, coordinates));
  } else {
    return null;
  }
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/bar-series.js
var import_react92 = __toESM(require_react());
function BarSeries({ axis, series, color: color2, xScale, yScale, highlighted, dimmed, highlightedGroupIndex, stackedBarOffsets, totalSeriesCount, seriesIndex, plotSize, chartAreaClipPath }) {
  const isRefresh = useVisualRefresh();
  const xCoordinates = (0, import_react92.useMemo)(() => {
    var _a;
    if (series.type !== "bar" || !xScale.isCategorical()) {
      return [];
    }
    const yContinuosScale = yScale.d3Scale;
    const xPoints = series.data.map(({ x: x2 }) => xScale.d3Scale(x2) || NaN);
    const zeroY = (_a = yScale.d3Scale(0)) !== null && _a !== void 0 ? _a : NaN;
    const baseY = isFinite(zeroY) ? Math.min(plotSize, zeroY) : plotSize;
    let barWidth = xScale.d3Scale.bandwidth();
    const PADDING = 4;
    const MINWIDTH = 4;
    if (!stackedBarOffsets && totalSeriesCount > 1) {
      barWidth = (barWidth - (totalSeriesCount - 1) * PADDING) / totalSeriesCount;
      barWidth = Math.max(barWidth, MINWIDTH);
    }
    return xPoints.map((x2, i) => {
      var _a2, _b;
      const d = series.data[i];
      let barX = x2;
      let yValue = d.y;
      if (stackedBarOffsets) {
        const offsetMap = d.y < 0 ? stackedBarOffsets.negativeOffsets : stackedBarOffsets.positiveOffsets;
        yValue = d.y + (offsetMap[getKeyValue(d.x)] || 0);
      } else if (totalSeriesCount > 1) {
        barX += seriesIndex * (barWidth + PADDING);
      }
      yValue = yValue < 0 ? yValue - d.y : yValue;
      return {
        x: barX,
        y: (_a2 = yContinuosScale(yValue)) !== null && _a2 !== void 0 ? _a2 : NaN,
        width: barWidth,
        height: Math.abs(((_b = yContinuosScale(d.y)) !== null && _b !== void 0 ? _b : NaN) - baseY)
      };
    });
  }, [series, xScale, yScale, plotSize, stackedBarOffsets, totalSeriesCount, seriesIndex]);
  const highlightedXValue = highlightedGroupIndex !== null ? xScale.domain[highlightedGroupIndex] : null;
  return import_react92.default.createElement("g", { "aria-label": series.title, clipPath: `url(#${chartAreaClipPath})`, className: clsx_m_default(styles_css_default30.series, styles_css_default30["series--bar"], {
    [styles_css_default30["series--highlighted"]]: highlighted,
    [styles_css_default30["series--dimmed"]]: dimmed
  }) }, xCoordinates.map(({ x: x2, y: y2, width, height }, i) => isFinite(x2) && isFinite(height) && import_react92.default.createElement("rect", { key: `bar-${i}`, fill: color2, x: axis === "x" ? x2 : y2 - height, y: axis === "x" ? y2 : x2, width: axis === "x" ? width : height, height: axis === "x" ? height : width, rx: isRefresh ? "4px" : "0px", className: clsx_m_default(styles_css_default30.series__rect, {
    [styles_css_default30["series--dimmed"]]: highlightedXValue !== null && !matchesX(highlightedXValue, series.data[i].x)
  }) })));
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/data-series.js
var STROKE_WIDTH = 2;
function DataSeries2({ axis, plotHeight, plotWidth, highlightedGroupIndex, highlightedSeries, stackedBars, isGroupNavigation, visibleSeries, xScale, yScale }) {
  const chartAreaClipPath = useUniqueId("awsui-mixed-line-bar-chart__chart-area-");
  const lineAreaClipPath = useUniqueId("awsui-line-chart__chart-area-");
  const stackedBarOffsetMaps = (0, import_react93.useMemo)(() => {
    if (!stackedBars) {
      return [];
    }
    const barData = [];
    visibleSeries.forEach(({ series }) => {
      if (series.type === "bar") {
        barData.push(series.data);
      }
    });
    return calculateOffsetMaps(barData);
  }, [visibleSeries, stackedBars]);
  return import_react93.default.createElement(
    import_react93.default.Fragment,
    null,
    import_react93.default.createElement(
      "defs",
      { "aria-hidden": "true" },
      import_react93.default.createElement(
        "clipPath",
        { id: chartAreaClipPath },
        import_react93.default.createElement("rect", { x: 0, y: 0, width: plotWidth, height: plotHeight })
      ),
      import_react93.default.createElement(
        "clipPath",
        { id: lineAreaClipPath },
        import_react93.default.createElement("rect", { x: 0, y: -STROKE_WIDTH / 2, width: plotWidth, height: plotHeight + STROKE_WIDTH })
      )
    ),
    import_react93.default.createElement("g", { "aria-hidden": isGroupNavigation ? true : void 0, role: "group" }, visibleSeries.map(({ series, color: color2 }, index) => {
      const isHighlighted = series === highlightedSeries;
      const isDimmed = !!highlightedSeries && !isHighlighted;
      switch (series.type) {
        case "line":
        case "threshold": {
          return import_react93.default.createElement(
            "g",
            { key: index, role: "group", "aria-label": series.title, className: clsx_m_default(styles_css_default30.series, styles_css_default30[`series--${series.type}`], {
              [styles_css_default30["series--highlighted"]]: isHighlighted,
              [styles_css_default30["series--dimmed"]]: isDimmed
            }) },
            import_react93.default.createElement(LineSeries, { axis, series, color: color2, xScale, yScale, chartAreaClipPath: lineAreaClipPath })
          );
        }
        case "bar":
          return import_react93.default.createElement(BarSeries, { key: index, axis, series, color: color2, totalSeriesCount: visibleSeries.filter((s2) => s2.series.type === "bar").length, seriesIndex: index, xScale, yScale, plotSize: axis === "y" ? plotWidth : plotHeight, highlighted: isHighlighted, dimmed: isDimmed, chartAreaClipPath, stackedBarOffsets: stackedBarOffsetMaps[index], highlightedGroupIndex });
      }
    }))
  );
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/bar-groups.js
var import_react94 = __toESM(require_react());
var OUTLINE_PADDING = 2;
function BarGroups({ ariaLabel, isRefresh, isPopoverPinned, barGroups, highlightedGroupIndex, highlightedGroupRef }) {
  return import_react94.default.createElement("g", { role: "group", "aria-hidden": "true" }, barGroups.map((group, index) => import_react94.default.createElement("rect", { key: index, x: Math.max(0, group.position.x - OUTLINE_PADDING), y: Math.max(0, group.position.y - OUTLINE_PADDING), width: group.position.width + 2 * OUTLINE_PADDING, height: group.position.height + 2 * OUTLINE_PADDING, ref: index === highlightedGroupIndex ? highlightedGroupRef : void 0, rx: isRefresh ? 4 : 2, role: "button", "aria-label": ariaLabel, "aria-haspopup": true, "aria-expanded": isPopoverPinned, fill: "none", className: styles_css_default30["bar-group"] })));
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/hooks/use-mouse-hover.js
var MAX_HOVER_MARGIN2 = 6;
var POPOVER_DEADZONE2 = 12;
function useMouseHover({ plotRef, popoverRef, scaledSeries, barGroups, highlightPoint, highlightGroup, clearHighlightedSeries, isGroupNavigation, isHandlersDisabled, highlightX }) {
  const isMouseOverPopover = (event) => {
    var _a;
    if ((_a = popoverRef.current) === null || _a === void 0 ? void 0 : _a.firstChild) {
      const popoverPosition = popoverRef.current.firstChild.getBoundingClientRect();
      if (event.clientX > popoverPosition.x - POPOVER_DEADZONE2 && event.clientX < popoverPosition.x + popoverPosition.width + POPOVER_DEADZONE2 && event.clientY > popoverPosition.y - POPOVER_DEADZONE2 && event.clientY < popoverPosition.y + popoverPosition.height + POPOVER_DEADZONE2) {
        return true;
      }
    }
    return false;
  };
  const onSeriesMouseMove = (event) => {
    var _a, _b;
    const svgRect = event.target.getBoundingClientRect();
    const offsetX = event.clientX - svgRect.left;
    const closestX = scaledSeries.map((v) => v.x).reduce((prev, curr) => Math.abs(curr - offsetX) < Math.abs(prev - offsetX) ? curr : prev, -Infinity);
    if (isFinite(closestX)) {
      const offsetY = event.clientY - svgRect.top;
      const closestY = scaledSeries.filter((v) => v.x === closestX || isYThreshold(v.series)).map((v) => v.y).reduce((prev, curr) => Math.abs(curr - offsetY) < Math.abs(prev - offsetY) ? curr : prev, -Infinity);
      if (isFinite(closestY) && Math.abs(offsetX - closestX) < MAX_HOVER_MARGIN2 && Math.abs(offsetY - closestY) < MAX_HOVER_MARGIN2) {
        const [{ color: color2, datum, series }] = scaledSeries.filter((s2) => (s2.x === closestX || isYThreshold(s2.series)) && s2.y === closestY);
        highlightPoint({ x: closestX, y: closestY, color: color2, datum, series });
      } else {
        let datumX = null;
        for (const point5 of scaledSeries) {
          if (point5.x === closestX) {
            datumX = (_b = (_a = point5.datum) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : null;
            break;
          }
        }
        highlightX({ scaledX: closestX, label: datumX });
      }
    }
  };
  const onGroupMouseMove = (event) => {
    const svgRect = event.target.getBoundingClientRect();
    const offsetX = event.clientX - svgRect.left;
    const offsetY = event.clientY - svgRect.top;
    for (let groupIndex = 0; groupIndex < barGroups.length; groupIndex++) {
      const { position: { x: x2, y: y2, width, height } } = barGroups[groupIndex];
      if (x2 <= offsetX && offsetX <= x2 + width && y2 <= offsetY && offsetY <= y2 + height) {
        highlightGroup(groupIndex);
        return;
      }
    }
    clearHighlightedSeries();
  };
  const onSVGMouseMove = (event) => {
    if (event.target === plotRef.current.svg && !isHandlersDisabled && !isMouseOverPopover(event)) {
      if (isGroupNavigation) {
        onGroupMouseMove(event);
      } else if (scaledSeries.length > 0) {
        onSeriesMouseMove(event);
      }
    }
  };
  const onSVGMouseOut = (event) => {
    if (isHandlersDisabled || isMouseOverPopover(event)) {
      return;
    }
    if (!nodeContains(plotRef.current.svg, event.relatedTarget) || event.relatedTarget && event.relatedTarget.classList.contains(styles_css_default30.series)) {
      highlightX(null);
      clearHighlightedSeries();
    }
  };
  const onPopoverLeave = (event) => {
    if (!plotRef.current.svg.contains(event.relatedTarget)) {
      highlightX(null);
      clearHighlightedSeries();
    }
  };
  return { onSVGMouseMove, onSVGMouseOut, onPopoverLeave };
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/hooks/use-navigation.js
var import_react95 = __toESM(require_react());
function useNavigation({ series, visibleSeries, scaledSeries, barGroups, xScale, yScale, highlightedPoint, highlightedGroupIndex, highlightedSeries, isHandlersDisabled, pinPopover, highlightSeries, highlightGroup, highlightPoint, highlightX, verticalMarkerX }) {
  const [targetX, setTargetX] = (0, import_react95.useState)(null);
  const [xIndex, setXIndex] = (0, import_react95.useState)(0);
  const isGroupNavigation = (0, import_react95.useMemo)(() => visibleSeries.some(({ series: series2 }) => series2.type === "bar"), [visibleSeries]);
  const { navigableSeries } = (0, import_react95.useMemo)(() => findNavigableSeries(visibleSeries), [visibleSeries]);
  const containsMultipleSeries = navigableSeries.length > 1;
  const onBarGroupFocus = () => {
    const groupIndex = highlightedGroupIndex !== null && highlightedGroupIndex !== void 0 ? highlightedGroupIndex : 0;
    setTargetX(xScale.domain[groupIndex]);
    highlightGroup(groupIndex);
  };
  const onLineFocus = () => {
    if (verticalMarkerX === null) {
      if (containsMultipleSeries) {
        moveToLineGroupIndex(0);
      } else {
        moveBetweenSeries(0);
      }
    }
  };
  const onFocus = () => {
    if (isGroupNavigation) {
      onBarGroupFocus();
    } else {
      onLineFocus();
    }
  };
  const allUniqueX = (0, import_react95.useMemo)(() => {
    const result = [];
    for (let i = 0; i < scaledSeries.length; i += 1) {
      const point5 = scaledSeries[i];
      if (point5 !== void 0 && (!result.length || result[result.length - 1].scaledX !== point5.x)) {
        result.push({ scaledX: point5.x, datum: point5.datum });
      }
    }
    return result;
  }, [scaledSeries]);
  const moveBetweenSeries = (0, import_react95.useCallback)((direction) => {
    var _a, _b, _c, _d;
    if (isGroupNavigation) {
      return;
    }
    const xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;
    const MAX_SERIES_INDEX = navigableSeries.length - 1;
    let previousSeriesIndex = -1;
    if (highlightedSeries) {
      previousSeriesIndex = navigableSeries.indexOf(highlightedSeries);
    }
    const firstPossibleIndex = containsMultipleSeries ? -1 : 0;
    let nextSeriesIndex = 0;
    if (previousSeriesIndex !== null) {
      nextSeriesIndex = previousSeriesIndex + direction;
      if (nextSeriesIndex > MAX_SERIES_INDEX) {
        nextSeriesIndex = firstPossibleIndex;
      } else if (nextSeriesIndex < firstPossibleIndex) {
        nextSeriesIndex = MAX_SERIES_INDEX;
      }
    }
    if (nextSeriesIndex === -1) {
      highlightSeries(null);
      highlightPoint(null);
      return;
    }
    const nextSeries = navigableSeries[nextSeriesIndex];
    const nextInternalSeries = series.filter(({ series: series2 }) => series2 === nextSeries)[0];
    let targetXPoint = ((_a = xScale.d3Scale(targetX)) !== null && _a !== void 0 ? _a : NaN) + xOffset;
    if (!isFinite(targetXPoint)) {
      targetXPoint = 0;
    }
    if (nextSeries.type === "line") {
      const nextScaledSeries = scaledSeries.filter((it) => it.series === nextSeries);
      const closestNextSeriesPoint = nextScaledSeries.reduce((prev, curr) => Math.abs(curr.x - targetXPoint) < Math.abs(prev.x - targetXPoint) ? curr : prev, { x: -Infinity, y: -Infinity });
      highlightPoint(Object.assign(Object.assign({}, closestNextSeriesPoint), { color: nextInternalSeries.color, series: nextSeries }));
    } else if (isYThreshold(nextSeries)) {
      const scaledTargetIndex = scaledSeries.map((it) => {
        var _a2;
        return ((_a2 = it.datum) === null || _a2 === void 0 ? void 0 : _a2.x) || null;
      }).indexOf(targetX);
      highlightPoint({
        x: targetXPoint,
        y: (_b = yScale.d3Scale(nextSeries.y)) !== null && _b !== void 0 ? _b : NaN,
        color: nextInternalSeries.color,
        series: nextSeries,
        datum: (_c = scaledSeries[scaledTargetIndex]) === null || _c === void 0 ? void 0 : _c.datum
      });
    } else if (isXThreshold(nextSeries)) {
      highlightPoint({
        x: (_d = xScale.d3Scale(nextSeries.x)) !== null && _d !== void 0 ? _d : NaN,
        y: yScale.d3Scale.range()[0],
        color: nextInternalSeries.color,
        series: nextSeries,
        datum: { x: nextSeries.x, y: NaN }
      });
    }
  }, [
    isGroupNavigation,
    xScale,
    navigableSeries,
    highlightedSeries,
    containsMultipleSeries,
    highlightSeries,
    highlightPoint,
    series,
    targetX,
    scaledSeries,
    yScale
  ]);
  const moveWithinSeries = (0, import_react95.useCallback)((direction) => {
    var _a;
    const series2 = highlightedSeries || visibleSeries[0].series;
    if (series2.type === "line" || isYThreshold(series2)) {
      const targetScaledSeries = scaledSeries.filter((it) => it.series === series2);
      const previousPoint = highlightedPoint || targetScaledSeries[0];
      const indexOfPreviousPoint = targetScaledSeries.map((it) => it.x).indexOf(previousPoint.x);
      const nextPointIndex = circleIndex2(indexOfPreviousPoint + direction, [0, targetScaledSeries.length - 1]);
      const nextPoint = targetScaledSeries[nextPointIndex];
      setTargetX(((_a = nextPoint.datum) === null || _a === void 0 ? void 0 : _a.x) || null);
      setXIndex(nextPointIndex);
      highlightPoint(nextPoint);
    } else if (series2.type === "bar") {
      const xDomain = xScale.domain;
      const MAX_GROUP_INDEX = xDomain.length - 1;
      let nextGroupIndex = 0;
      if (highlightedGroupIndex !== null) {
        nextGroupIndex = highlightedGroupIndex + direction;
        if (nextGroupIndex > MAX_GROUP_INDEX) {
          nextGroupIndex = 0;
        } else if (nextGroupIndex < 0) {
          nextGroupIndex = MAX_GROUP_INDEX;
        }
      }
      const nextDomainIndex = nextValidDomainIndex(nextGroupIndex, barGroups, direction);
      setTargetX(xDomain[nextDomainIndex]);
      highlightGroup(nextDomainIndex);
    }
  }, [
    highlightedSeries,
    visibleSeries,
    scaledSeries,
    highlightedPoint,
    highlightPoint,
    xScale.domain,
    highlightedGroupIndex,
    barGroups,
    highlightGroup
  ]);
  const moveToLineGroupIndex = (0, import_react95.useCallback)((index) => {
    var _a, _b, _c, _d;
    const point5 = allUniqueX[index];
    setXIndex(index);
    setTargetX(((_a = point5.datum) === null || _a === void 0 ? void 0 : _a.x) || null);
    highlightX({ scaledX: (_b = point5 === null || point5 === void 0 ? void 0 : point5.scaledX) !== null && _b !== void 0 ? _b : null, label: (_d = (_c = point5.datum) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : null });
  }, [allUniqueX, highlightX]);
  const moveWithinXAxis = (0, import_react95.useCallback)((direction) => {
    if (highlightedSeries || isGroupNavigation) {
      moveWithinSeries(direction);
    } else {
      const nextPointGroupIndex = circleIndex2(xIndex + direction, [0, allUniqueX.length - 1]);
      moveToLineGroupIndex(nextPointGroupIndex);
    }
  }, [highlightedSeries, isGroupNavigation, moveWithinSeries, xIndex, allUniqueX.length, moveToLineGroupIndex]);
  const onKeyDown = (0, import_react95.useCallback)((event) => {
    const keyCode = event.keyCode;
    if (keyCode !== KeyCode.up && keyCode !== KeyCode.right && keyCode !== KeyCode.down && keyCode !== KeyCode.left && keyCode !== KeyCode.space && keyCode !== KeyCode.enter) {
      return;
    }
    event.preventDefault();
    if (isHandlersDisabled) {
      return;
    }
    if (keyCode === KeyCode.down || keyCode === KeyCode.up) {
      moveBetweenSeries(keyCode === KeyCode.down ? 1 : -1);
    } else if (keyCode === KeyCode.left || keyCode === KeyCode.right) {
      moveWithinXAxis(keyCode === KeyCode.right ? 1 : -1);
    } else if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
      pinPopover();
    }
  }, [isHandlersDisabled, moveBetweenSeries, moveWithinXAxis, pinPopover]);
  return { isGroupNavigation, onFocus, onKeyDown, xIndex };
}
function circleIndex2(index, [from, to]) {
  if (index < from) {
    return to;
  }
  if (index > to) {
    return from;
  }
  return index;
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/hooks/use-popover.js
var import_react96 = __toESM(require_react());
function usePopover() {
  const [state, setState] = (0, import_react96.useState)("closed");
  const isPopoverOpen = state !== "closed";
  const isPopoverPinned = state === "pinned";
  const showPopover = (0, import_react96.useCallback)(() => setState("open"), []);
  const pinPopover = (0, import_react96.useCallback)(() => setState("pinned"), []);
  const dismissPopover = (0, import_react96.useCallback)(() => setState("closed"), []);
  return { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover };
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/chart-container.js
var LEFT_LABELS_MARGIN2 = 16;
var BOTTOM_LABELS_OFFSET2 = 12;
function ChartContainer2(_a) {
  var _b, _c;
  var { height: plotHeight, series, visibleSeries, highlightedSeries, onHighlightChange, highlightedPoint, setHighlightedPoint, highlightedGroupIndex, setHighlightedGroupIndex, detailPopoverFooter, detailPopoverSize = "medium", stackedBars = false, horizontalBars = false, xScaleType, yScaleType, xTickFormatter, yTickFormatter, emphasizeBaselineAxis, xTitle, yTitle, ariaLabel, ariaLabelledby, ariaDescription, i18nStrings = {}, plotContainerRef } = _a, props2 = __rest(_a, ["height", "series", "visibleSeries", "highlightedSeries", "onHighlightChange", "highlightedPoint", "setHighlightedPoint", "highlightedGroupIndex", "setHighlightedGroupIndex", "detailPopoverFooter", "detailPopoverSize", "stackedBars", "horizontalBars", "xScaleType", "yScaleType", "xTickFormatter", "yTickFormatter", "emphasizeBaselineAxis", "xTitle", "yTitle", "ariaLabel", "ariaLabelledby", "ariaDescription", "i18nStrings", "plotContainerRef"]);
  const plotRef = (0, import_react97.useRef)(null);
  const verticalMarkerRef = (0, import_react97.useRef)(null);
  const [leftLabelsWidth, setLeftLabelsWidth] = (0, import_react97.useState)(0);
  const [bottomLabelsHeight, setBottomLabelsHeight] = (0, import_react97.useState)(0);
  const [verticalMarkerX, setVerticalMarkerX] = (0, import_react97.useState)(null);
  const [containerWidth, containerMeasureRef] = useContainerWidth(500);
  const plotWidth = containerWidth ? containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN2 : 500;
  const containerRefObject = (0, import_react97.useRef)(null);
  const containerRef = useMergeRefs(containerMeasureRef, containerRefObject);
  const popoverRef = (0, import_react97.useRef)(null);
  const isRefresh = useVisualRefresh();
  const linesOnly = series.every(({ series: series2 }) => series2.type === "line" || series2.type === "threshold");
  const xDomain = props2.xDomain || computeDomainX2(series, xScaleType);
  const yDomain = props2.yDomain || computeDomainY2(series, yScaleType, stackedBars);
  const xTickCount = getXTickCount(plotWidth);
  const yTickCount = getYTickCount(plotHeight);
  const rangeBottomTop = [0, plotHeight];
  const rangeTopBottom = [plotHeight, 0];
  const rangeLeftRight = [0, plotWidth];
  const xScale = new ChartScale(xScaleType, xDomain, horizontalBars ? rangeBottomTop : rangeLeftRight, linesOnly);
  const yScale = new NumericChartScale(yScaleType, yDomain, horizontalBars ? rangeLeftRight : rangeTopBottom, props2.yDomain ? null : yTickCount);
  const xTicks = createXTicks(xScale, xTickCount);
  const yTicks = createYTicks(yScale, yTickCount);
  const highlightedPointRef = (0, import_react97.useRef)(null);
  const highlightedGroupRef = (0, import_react97.useRef)(null);
  const [isPlotFocused, setPlotFocused] = (0, import_react97.useState)(false);
  const x2 = !horizontalBars ? "x" : "y";
  const y2 = !horizontalBars ? "y" : "x";
  const xy = {
    ticks: { x: xTicks, y: yTicks },
    scale: { x: xScale, y: yScale },
    tickFormatter: { x: xTickFormatter, y: yTickFormatter },
    title: { x: xTitle, y: yTitle },
    ariaRoleDescription: { x: i18nStrings.xAxisAriaRoleDescription, y: i18nStrings.yAxisAriaRoleDescription }
  };
  const scaledSeries = makeScaledSeries(visibleSeries, xScale, yScale);
  const barGroups = makeScaledBarGroups(visibleSeries, xScale, plotWidth, plotHeight, y2);
  const { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover } = usePopover();
  const [isHandlersDisabled, setHandlersDisabled] = (0, import_react97.useState)(!isPopoverPinned);
  (0, import_react97.useEffect)(() => {
    if (isPopoverPinned) {
      setHandlersDisabled(true);
    } else {
      const timeoutId = setTimeout(() => setHandlersDisabled(false), 25);
      return () => clearTimeout(timeoutId);
    }
  }, [isPopoverPinned]);
  const highlightSeries = (0, import_react97.useCallback)((series2) => {
    if (series2 !== highlightedSeries) {
      onHighlightChange(series2);
    }
  }, [highlightedSeries, onHighlightChange]);
  const highlightPoint = (0, import_react97.useCallback)((point6) => {
    var _a2, _b2;
    setHighlightedGroupIndex(null);
    setHighlightedPoint(point6);
    if (point6) {
      highlightSeries(point6.series);
      setVerticalMarkerX({
        scaledX: point6.x,
        label: (_b2 = (_a2 = point6.datum) === null || _a2 === void 0 ? void 0 : _a2.x) !== null && _b2 !== void 0 ? _b2 : null
      });
    }
  }, [setHighlightedGroupIndex, setHighlightedPoint, highlightSeries]);
  const clearAllHighlights = (0, import_react97.useCallback)(() => {
    setHighlightedPoint(null);
    highlightSeries(null);
    setHighlightedGroupIndex(null);
  }, [highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);
  const highlightX = (0, import_react97.useCallback)((marker) => {
    if (marker) {
      clearAllHighlights();
    }
    setVerticalMarkerX(marker);
  }, [clearAllHighlights]);
  const highlightGroup = (0, import_react97.useCallback)((groupIndex) => {
    highlightSeries(null);
    setHighlightedPoint(null);
    setHighlightedGroupIndex(groupIndex);
  }, [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]);
  const clearHighlightedSeries = (0, import_react97.useCallback)(() => {
    clearAllHighlights();
    dismissPopover();
  }, [dismissPopover, clearAllHighlights]);
  const _d = useNavigation({
    series,
    visibleSeries,
    scaledSeries,
    barGroups,
    xScale,
    yScale,
    highlightedPoint,
    highlightedGroupIndex,
    highlightedSeries,
    isHandlersDisabled,
    pinPopover,
    highlightSeries,
    highlightGroup,
    highlightPoint,
    highlightX,
    clearHighlightedSeries,
    verticalMarkerX
  }), { isGroupNavigation } = _d, handlers = __rest(_d, ["isGroupNavigation"]);
  const { onSVGMouseMove, onSVGMouseOut, onPopoverLeave } = useMouseHover({
    scaledSeries,
    barGroups,
    plotRef,
    popoverRef,
    highlightPoint,
    highlightGroup,
    clearHighlightedSeries,
    isGroupNavigation,
    isHandlersDisabled,
    highlightX
  });
  const highlightedX = (0, import_react97.useMemo)(() => {
    var _a2, _b2;
    if (highlightedGroupIndex !== null) {
      return barGroups[highlightedGroupIndex].x;
    }
    if (verticalMarkerX !== null) {
      return verticalMarkerX.label;
    }
    return (_b2 = (_a2 = highlightedPoint === null || highlightedPoint === void 0 ? void 0 : highlightedPoint.datum) === null || _a2 === void 0 ? void 0 : _a2.x) !== null && _b2 !== void 0 ? _b2 : null;
  }, [highlightedPoint, verticalMarkerX, highlightedGroupIndex, barGroups]);
  (0, import_react97.useEffect)(() => {
    const onKeyDown = (event) => {
      if (event.key === "Escape") {
        dismissPopover();
      }
    };
    document.addEventListener("keydown", onKeyDown);
    return () => document.removeEventListener("keydown", onKeyDown);
  }, [dismissPopover]);
  (0, import_react97.useLayoutEffect)(() => {
    if (highlightedX !== null || highlightedPoint !== null) {
      showPopover();
    }
  }, [highlightedX, highlightedPoint, showPopover]);
  const onPopoverDismiss = (outsideClick) => {
    dismissPopover();
    if (!outsideClick) {
      setTimeout(() => {
        var _a2, _b2;
        const isSomeInnerElementFocused = highlightedPoint || highlightedGroupIndex !== null || verticalMarkerX;
        if (isSomeInnerElementFocused) {
          (_a2 = plotRef.current) === null || _a2 === void 0 ? void 0 : _a2.focusApplication();
        } else {
          (_b2 = plotRef.current) === null || _b2 === void 0 ? void 0 : _b2.focusPlot();
        }
      }, 0);
    } else {
      clearAllHighlights();
      setVerticalMarkerX(null);
    }
  };
  const onSVGMouseDown = (e) => {
    if (isPopoverOpen) {
      if (isPopoverPinned) {
        dismissPopover();
      } else {
        pinPopover();
        e.preventDefault();
      }
    } else {
      showPopover();
    }
  };
  const onSVGFocus = (event, trigger) => {
    setPlotFocused(true);
    if (trigger === "keyboard") {
      handlers.onFocus();
    } else {
    }
  };
  const onSVGBlur = (event) => {
    var _a2;
    setPlotFocused(false);
    const blurTarget = event.relatedTarget || event.target;
    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRefObject.current, blurTarget)) {
      setHighlightedPoint(null);
      setVerticalMarkerX(null);
      if (!((_a2 = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(blurTarget))) {
        clearHighlightedSeries();
      }
      if (isPopoverOpen && !isPopoverPinned) {
        dismissPopover();
      }
    }
  };
  const onSVGKeyDown = handlers.onKeyDown;
  const xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;
  let verticalLineX = null;
  if (verticalMarkerX !== null) {
    verticalLineX = verticalMarkerX.scaledX;
  } else if (isGroupNavigation && highlightedGroupIndex !== null) {
    const x3 = (_b = xScale.d3Scale(barGroups[highlightedGroupIndex].x)) !== null && _b !== void 0 ? _b : null;
    if (x3 !== null) {
      verticalLineX = xOffset + x3;
    }
  }
  const point5 = (0, import_react97.useMemo)(() => highlightedPoint ? {
    key: `${highlightedPoint.x}-${highlightedPoint.y}`,
    x: highlightedPoint.x,
    y: highlightedPoint.y,
    color: highlightedPoint.color
  } : null, [highlightedPoint]);
  const verticalMarkers = (0, import_react97.useMemo)(() => verticalLineX !== null ? scaledSeries.filter(({ x: x3, y: y3 }) => (x3 === verticalLineX || isNaN(x3)) && !isNaN(y3)).map(({ x: x3, y: y3, color: color2 }, index) => ({
    key: `${index}-${x3}-${y3}`,
    x: !horizontalBars ? verticalLineX || 0 : y3,
    y: !horizontalBars ? y3 : verticalLineX || 0,
    color: color2
  })) : [], [scaledSeries, verticalLineX, horizontalBars]);
  const highlightedElementRef = isGroupNavigation ? highlightedGroupRef : highlightedPoint ? highlightedPointRef : verticalMarkerRef;
  const highlightDetails = (0, import_react97.useMemo)(() => {
    if (highlightedX === null) {
      return null;
    }
    if (highlightedPoint) {
      const seriesToShow = visibleSeries.filter((series2) => series2.series === (highlightedPoint === null || highlightedPoint === void 0 ? void 0 : highlightedPoint.series) || isXThreshold(series2.series));
      return formatHighlighted(highlightedX, seriesToShow, xTickFormatter);
    }
    return formatHighlighted(highlightedX, visibleSeries, xTickFormatter);
  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter]);
  const detailPopoverFooterContent = (0, import_react97.useMemo)(() => detailPopoverFooter && highlightedX ? detailPopoverFooter(highlightedX) : null, [detailPopoverFooter, highlightedX]);
  const activeAriaLabel = (0, import_react97.useMemo)(() => highlightDetails ? `${highlightDetails.position}, ${highlightDetails.details.map((d) => d.key + " " + d.value).join(",")}` : "", [highlightDetails]);
  const activeLiveRegion = activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : "";
  const isLineXKeyboardFocused = isPlotFocused && !highlightedPoint && verticalMarkerX;
  return import_react97.default.createElement(CartesianChartContainer, { ref: containerRef, leftAxisLabel: import_react97.default.createElement(axis_label_default, { axis: y2, position: "left", title: xy.title[y2] }), leftAxisLabelMeasure: import_react97.default.createElement(labels_measure_default, { ticks: xy.ticks[y2], scale: xy.scale[y2], tickFormatter: xy.tickFormatter[y2], autoWidth: setLeftLabelsWidth }), bottomAxisLabel: import_react97.default.createElement(axis_label_default, { axis: x2, position: "bottom", title: xy.title[x2] }), chartPlot: import_react97.default.createElement(
    chart_plot_default,
    { ref: plotRef, width: plotWidth, height: plotHeight, offsetBottom: bottomLabelsHeight, isClickable: isPopoverOpen && !isPopoverPinned, ariaLabel, ariaLabelledby, ariaDescription, ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription, ariaLiveRegion: activeLiveRegion, activeElementRef: highlightedElementRef, activeElementKey: isPlotFocused && ((_c = highlightedGroupIndex === null || highlightedGroupIndex === void 0 ? void 0 : highlightedGroupIndex.toString()) !== null && _c !== void 0 ? _c : isLineXKeyboardFocused ? `point-index-${handlers.xIndex}` : point5 === null || point5 === void 0 ? void 0 : point5.key), activeElementFocusOffset: isGroupNavigation ? 0 : isLineXKeyboardFocused ? { x: 8, y: 0 } : 3, onMouseMove: onSVGMouseMove, onMouseOut: onSVGMouseOut, onMouseDown: onSVGMouseDown, onFocus: onSVGFocus, onBlur: onSVGBlur, onKeyDown: onSVGKeyDown },
    import_react97.default.createElement(left_labels_default, { axis: y2, ticks: xy.ticks[y2], scale: xy.scale[y2], tickFormatter: xy.tickFormatter[y2], title: xy.title[y2], ariaRoleDescription: xy.ariaRoleDescription[y2], width: plotWidth, height: plotHeight }),
    horizontalBars && import_react97.default.createElement(vertical_grid_lines_default, { scale: yScale, ticks: yTicks, height: plotHeight }),
    emphasizeBaselineAxis && linesOnly && import_react97.default.createElement(emphasized_baseline_default, { axis: x2, scale: yScale, width: plotWidth, height: plotHeight }),
    import_react97.default.createElement(DataSeries2, { axis: x2, plotWidth, plotHeight, highlightedSeries: highlightedSeries !== null && highlightedSeries !== void 0 ? highlightedSeries : null, highlightedGroupIndex, stackedBars, isGroupNavigation, visibleSeries, xScale, yScale }),
    emphasizeBaselineAxis && !linesOnly && import_react97.default.createElement(emphasized_baseline_default, { axis: x2, scale: yScale, width: plotWidth, height: plotHeight }),
    import_react97.default.createElement(vertical_marker_default, { key: verticalLineX || "", height: plotHeight, showPoints: highlightedPoint === null, showLine: !isGroupNavigation, points: verticalMarkers, ref: verticalMarkerRef }),
    highlightedPoint && import_react97.default.createElement(highlighted_point_default, { ref: highlightedPointRef, point: point5, role: "button", ariaLabel: activeAriaLabel, ariaHasPopup: true, ariaExpanded: isPopoverPinned }),
    isGroupNavigation && xScale.isCategorical() && import_react97.default.createElement(BarGroups, { ariaLabel: activeAriaLabel, isRefresh, isPopoverPinned, barGroups, highlightedGroupIndex, highlightedGroupRef }),
    import_react97.default.createElement(bottom_labels_default, { axis: x2, ticks: xy.ticks[x2], scale: xy.scale[x2], tickFormatter: xy.tickFormatter[x2], title: xy.title[x2], ariaRoleDescription: xy.ariaRoleDescription[x2], height: plotHeight, width: plotWidth, offsetLeft: leftLabelsWidth + BOTTOM_LABELS_OFFSET2, offsetRight: BOTTOM_LABELS_OFFSET2, autoHeight: setBottomLabelsHeight })
  ), popover: import_react97.default.createElement(chart_popover_default2, { ref: popoverRef, containerRef: containerRefObject, trackRef: highlightedElementRef, isOpen: isPopoverOpen, isPinned: isPopoverPinned, highlightDetails, onDismiss: onPopoverDismiss, size: detailPopoverSize, footer: detailPopoverFooterContent, dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel, onMouseLeave: onPopoverLeave }) });
}

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/internal.js
function InternalMixedLineBarChart(_a) {
  var { height, xScaleType, yScaleType, xDomain, yDomain, highlightedSeries: controlledHighlightedSeries, visibleSeries: controlledVisibleSeries, series: externalSeries, onFilterChange, onHighlightChange: controlledOnHighlightChange, i18nStrings, ariaLabel, ariaLabelledby, ariaDescription, xTitle, yTitle, stackedBars, horizontalBars, hideFilter, additionalFilters, hideLegend, legendTitle, statusType, detailPopoverSize, detailPopoverFooter, emphasizeBaselineAxis, empty, noMatch, errorText, loadingText, recoveryText, onRecoveryClick, __internalRootRef = null } = _a, props2 = __rest(_a, ["height", "xScaleType", "yScaleType", "xDomain", "yDomain", "highlightedSeries", "visibleSeries", "series", "onFilterChange", "onHighlightChange", "i18nStrings", "ariaLabel", "ariaLabelledby", "ariaDescription", "xTitle", "yTitle", "stackedBars", "horizontalBars", "hideFilter", "additionalFilters", "hideLegend", "legendTitle", "statusType", "detailPopoverSize", "detailPopoverFooter", "emphasizeBaselineAxis", "empty", "noMatch", "errorText", "loadingText", "recoveryText", "onRecoveryClick", "__internalRootRef"]);
  const baseProps = getBaseProps(props2);
  const containerRef = (0, import_react98.useRef)(null);
  (0, import_react98.useEffect)(() => {
    const gotBarSeries = externalSeries.some((s2) => s2.type === "bar");
    const gotLineSeries = externalSeries.some((s2) => s2.type === "line");
    if (xScaleType !== "categorical" && gotBarSeries) {
      warnOnce("MixedLineBarChart", `Bar series cannot be used with a ${xScaleType} scale. Use a categorical x axis instead.`);
    }
    if (horizontalBars && gotLineSeries) {
      warnOnce("MixedLineBarChart", `Property horizontalBars can only be used with charts that contain only bar or threshold series.`);
    }
    for (const s2 of externalSeries) {
      if (s2.type === "threshold" && s2.x !== void 0 && s2.y !== void 0) {
        warnOnce("MixedLineBarChart", `Series of type "threshold" must contain either x or y property.`);
      }
      if (s2.type === "threshold" && s2.x === void 0 && s2.y === void 0) {
        warnOnce("MixedLineBarChart", `Series of type "threshold" must contain either x or y property.`);
      }
    }
  }, [xScaleType, horizontalBars, externalSeries]);
  const series = (0, import_react98.useMemo)(() => {
    const colors = createCategoryColorScale(externalSeries, (it) => isYThreshold(it) || isXThreshold(it), (it) => it.color || null);
    return externalSeries.map((s2, i) => ({ index: i, color: colors[i], series: s2 }));
  }, [externalSeries]);
  const [highlightedPoint, setHighlightedPoint] = (0, import_react98.useState)(null);
  const [highlightedGroupIndex, setHighlightedGroupIndex] = (0, import_react98.useState)(null);
  const [highlightedSeries = null, setHighlightedSeries] = useControllable(controlledHighlightedSeries, controlledOnHighlightChange, null, {
    componentName: "MixedLineBarChart",
    controlledProp: "highlightedSeries",
    changeHandler: "onHighlightChange"
  });
  const [legendSeries, setLegendSeries] = (0, import_react98.useState)(highlightedSeries);
  (0, import_react98.useEffect)(() => {
    setLegendSeries(controlledHighlightedSeries || null);
  }, [controlledHighlightedSeries]);
  const [externalVisibleSeries, setExternalVisibleSeries] = useControllable(controlledVisibleSeries, onFilterChange, externalSeries, {
    componentName: "MixedLineBarChart",
    controlledProp: "visibleSeries",
    changeHandler: "onFilterChange"
  });
  if (isDevelopment) {
    const previousSeries = usePrevious(externalSeries);
    const hasPrevious = !!(previousSeries && previousSeries.length);
    const hasCurrent = !!externalSeries.length;
    if (hasPrevious && hasCurrent && externalSeries !== previousSeries && !controlledVisibleSeries && !hideFilter) {
      warnOnce("MixedLineBarChart", "The `series` value passed into the component changed. This may cause problems with filtering - we recommend that you make the `series` value constant, or provide a `visibleSeries` value that derives from the current `series` value.");
    }
  }
  const visibleSeries = (0, import_react98.useMemo)(() => series.filter((s2) => (externalVisibleSeries === null || externalVisibleSeries === void 0 ? void 0 : externalVisibleSeries.indexOf(s2.series)) !== -1), [series, externalVisibleSeries]);
  const filterChange = (selectedSeries) => {
    setExternalVisibleSeries(selectedSeries);
    fireNonCancelableEvent(onFilterChange, {
      visibleSeries: selectedSeries
    });
  };
  const onHighlightChange = (series2) => {
    setHighlightedSeries(series2);
    fireNonCancelableEvent(controlledOnHighlightChange, {
      highlightedSeries: series2
    });
    setLegendSeries(series2);
  };
  const onBlur = (event) => {
    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {
      highlightedSeries && onHighlightChange(highlightedSeries);
      setHighlightedPoint(null);
      setHighlightedGroupIndex(null);
      setLegendSeries(null);
    }
  };
  const { isEmpty, isNoMatch, showChart } = getChartStatus({
    externalData: externalSeries,
    visibleData: visibleSeries || [],
    statusType
  });
  const showFilters = statusType === "finished" && (!isEmpty || isNoMatch) && (additionalFilters || !hideFilter);
  const showLegend = !hideLegend && !isEmpty && statusType === "finished";
  const reserveLegendSpace = !showChart && !hideLegend;
  const reserveFilterSpace = !showChart && !isNoMatch && (!hideFilter || additionalFilters);
  const mergedRef = useMergeRefs(containerRef, __internalRootRef);
  const filterItems = series.map(({ series: series2, color: color2 }) => ({
    label: series2.title,
    type: chartLegendMap[series2.type],
    color: color2,
    datum: series2
  }));
  return import_react98.default.createElement(ChartWrapper, Object.assign({ ref: mergedRef }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default30.root), contentMinHeight: height, defaultFilter: showFilters && !hideFilter ? import_react98.default.createElement(chart_filter_default, { series: filterItems, onChange: filterChange, selectedSeries: externalVisibleSeries || [], i18nStrings }) : null, additionalFilters: showFilters ? additionalFilters : null, reserveFilterSpace: !!reserveFilterSpace, reserveLegendSpace: !!reserveLegendSpace, chartStatus: import_react98.default.createElement(ChartStatusContainer, { isEmpty, isNoMatch, showChart, statusType, empty, noMatch, loadingText, errorText, recoveryText, onRecoveryClick }), chart: showChart ? import_react98.default.createElement(ChartContainer2, { height, xScaleType, yScaleType, xDomain, yDomain, xTickFormatter: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.xTickFormatter, yTickFormatter: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.yTickFormatter, emphasizeBaselineAxis, stackedBars, horizontalBars, series, visibleSeries, highlightedSeries, onHighlightChange, highlightedPoint, setHighlightedPoint, highlightedGroupIndex, setHighlightedGroupIndex, detailPopoverSize, detailPopoverFooter, xTitle, yTitle, ariaLabel, ariaLabelledby, ariaDescription, i18nStrings, plotContainerRef: containerRef }) : null, legend: showLegend ? import_react98.default.createElement(InternalChartLegend, { series, visibleSeries: externalVisibleSeries || [], highlightedSeries: legendSeries, onHighlightChange, legendTitle, ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel, plotContainerRef: containerRef }) : null, onBlur }));
}

// node_modules/@cloudscape-design/components/bar-chart/index.js
function BarChart(_a) {
  var { series = [], height = 500, xScaleType = "categorical", yScaleType = "linear", stackedBars = false, horizontalBars = false, detailPopoverSize = "medium", statusType = "finished", emphasizeBaselineAxis = true } = _a, props2 = __rest(_a, ["series", "height", "xScaleType", "yScaleType", "stackedBars", "horizontalBars", "detailPopoverSize", "statusType", "emphasizeBaselineAxis"]);
  const baseComponentProps = useBaseComponent("BarChart");
  const baseProps = getBaseProps(props2);
  const className = clsx_m_default(baseProps.className, styles_css_default29.root);
  return import_react99.default.createElement(InternalMixedLineBarChart, Object.assign({}, props2, baseComponentProps, { className, height, xScaleType, yScaleType, stackedBars, horizontalBars, series, detailPopoverSize, statusType, emphasizeBaselineAxis }));
}
applyDisplayName(BarChart, "BarChart");
var bar_chart_default = BarChart;

// node_modules/@cloudscape-design/components/button-dropdown/index.js
var import_react100 = __toESM(require_react());
var ButtonDropdown = import_react100.default.forwardRef((_a, ref) => {
  var { items, variant = "normal", loading = false, loadingText, disabled = false, expandableGroups = false, expandToViewport = false, ariaLabel, children, onItemClick, onItemFollow } = _a, props2 = __rest(_a, ["items", "variant", "loading", "loadingText", "disabled", "expandableGroups", "expandToViewport", "ariaLabel", "children", "onItemClick", "onItemFollow"]);
  const baseComponentProps = useBaseComponent("ButtonDropdown");
  const baseProps = getBaseProps(props2);
  return import_react100.default.createElement(internal_default3, Object.assign({}, baseProps, baseComponentProps, { ref, items, variant, loading, loadingText, disabled, expandableGroups, expandToViewport, ariaLabel, onItemClick, onItemFollow }), children);
});
applyDisplayName(ButtonDropdown, "ButtonDropdown");
var button_dropdown_default = ButtonDropdown;

// node_modules/@cloudscape-design/components/calendar/index.js
var import_react106 = __toESM(require_react());

// node_modules/@cloudscape-design/components/calendar/internal.js
var import_react105 = __toESM(require_react());

// node_modules/@cloudscape-design/components/calendar/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/calendar/styles.scoped.css";
var styles_css_default31 = {
  "calendar": "awsui_calendar_1ykar_1keiv_93",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_1ykar_1keiv_1",
  "root": "awsui_root_1ykar_1keiv_124",
  "calendar-inner": "awsui_calendar-inner_1ykar_1keiv_143",
  "calendar-header": "awsui_calendar-header_1ykar_1keiv_146",
  "calendar-header-month": "awsui_calendar-header-month_1ykar_1keiv_151",
  "calendar-next-month-btn": "awsui_calendar-next-month-btn_1ykar_1keiv_158",
  "calendar-prev-month-btn": "awsui_calendar-prev-month-btn_1ykar_1keiv_161",
  "calendar-grid": "awsui_calendar-grid_1ykar_1keiv_164",
  "calendar-grid-cell": "awsui_calendar-grid-cell_1ykar_1keiv_168",
  "calendar-day-header": "awsui_calendar-day-header_1ykar_1keiv_174",
  "calendar-day": "awsui_calendar-day_1ykar_1keiv_174",
  "calendar-day-enabled": "awsui_calendar-day-enabled_1ykar_1keiv_191",
  "calendar-day-current-month": "awsui_calendar-day-current-month_1ykar_1keiv_198",
  "calendar-day-selected": "awsui_calendar-day-selected_1ykar_1keiv_205",
  "calendar-day-today": "awsui_calendar-day-today_1ykar_1keiv_208",
  "day-inner": "awsui_day-inner_1ykar_1keiv_223",
  "calendar-week": "awsui_calendar-week_1ykar_1keiv_288"
};

// node_modules/@cloudscape-design/components/calendar/header/index.js
var import_react102 = __toESM(require_react());

// node_modules/@cloudscape-design/components/calendar/utils/intl.js
function setDayIndex(date2, dayIndex) {
  const diff = dayIndex - date2.getDay();
  date2.setDate(date2.getDate() + diff);
}
function renderDayName(locale2, dayIndex, mode) {
  const tempDate = new Date();
  setDayIndex(tempDate, dayIndex);
  return tempDate.toLocaleDateString(locale2, { weekday: mode });
}
function renderMonthAndYear(locale2, baseDate) {
  const result = baseDate.toLocaleDateString(locale2, {
    year: "numeric",
    month: "long"
  });
  return result;
}
var dayLabelCache = /* @__PURE__ */ new Map();
function getDateLabel(locale2, date2, mode = "full") {
  const cacheKey = locale2 + date2.getTime() + mode;
  const cachedValue = dayLabelCache.get(cacheKey);
  if (cachedValue) {
    return cachedValue;
  }
  const value = date2.toLocaleDateString(locale2, {
    weekday: mode === "full" ? "long" : void 0,
    month: "long",
    day: "numeric",
    year: "numeric"
  });
  dayLabelCache.set(cacheKey, value);
  return value;
}
function renderTimeLabel(locale2, date2, format3) {
  let options = {};
  if (format3 === "hh") {
    options = { hour: "2-digit" };
  }
  if (format3 === "hh:mm") {
    options = { hour: "2-digit", minute: "2-digit" };
  }
  const value = date2.toLocaleTimeString(locale2, options);
  return value;
}

// node_modules/@cloudscape-design/components/calendar/header/header-button.js
var import_react101 = __toESM(require_react());
function PrevMonthButton({ ariaLabel, baseDate, onChangeMonth }) {
  return import_react101.default.createElement(InternalButton, { iconName: "angle-left", ariaLabel, variant: "icon", onClick: () => onChangeMonth(addMonths(baseDate, -1)), formAction: "none", className: styles_css_default31["calendar-prev-month-btn"] });
}
function NextMonthButton({ ariaLabel, baseDate, onChangeMonth }) {
  return import_react101.default.createElement(InternalButton, { iconName: "angle-right", ariaLabel, variant: "icon", onClick: () => onChangeMonth(addMonths(baseDate, 1)), formAction: "none", className: styles_css_default31["calendar-next-month-btn"] });
}

// node_modules/@cloudscape-design/components/calendar/header/index.js
var CalendarHeader = ({ baseDate, locale: locale2, onChangeMonth, previousMonthLabel, nextMonthLabel, headingId }) => {
  return import_react102.default.createElement(
    "div",
    { className: styles_css_default31["calendar-header"] },
    import_react102.default.createElement(PrevMonthButton, { ariaLabel: previousMonthLabel, baseDate, onChangeMonth }),
    import_react102.default.createElement("h2", { className: styles_css_default31["calendar-header-month"], id: headingId }, renderMonthAndYear(locale2, baseDate)),
    import_react102.default.createElement(NextMonthButton, { ariaLabel: nextMonthLabel, baseDate, onChangeMonth })
  );
};
var header_default = CalendarHeader;

// node_modules/@cloudscape-design/components/calendar/grid/index.js
var import_react103 = __toESM(require_react());

// node_modules/mnth/web/add-days.js
var addDays2 = function addDays3(date2, days) {
  var result = new Date(date2);
  result.setDate(result.getDate() + days);
  return result;
};

// node_modules/mnth/web/set-date.js
var setDate2 = function setDate3(date2, day) {
  var result = new Date(date2);
  result.setDate(day);
  return result;
};

// node_modules/mnth/web/index.js
function ownKeys(object2, enumerableOnly) {
  var keys = Object.keys(object2);
  if (Object.getOwnPropertySymbols) {
    var symbols2 = Object.getOwnPropertySymbols(object2);
    if (enumerableOnly)
      symbols2 = symbols2.filter(function(sym) {
        return Object.getOwnPropertyDescriptor(object2, sym).enumerable;
      });
    keys.push.apply(keys, symbols2);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function(key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }
  return target;
}
var DAYS_IN_WEEK = 7;
var getCalendarMonth = function getCalendarMonth2(date2, options) {
  var _firstDayOfWeek$optio = _objectSpread({
    firstDayOfWeek: 1
  }, options), firstDayOfWeek = _firstDayOfWeek$optio.firstDayOfWeek;
  var firstDateOfMonth = new Date(date2.getFullYear(), date2.getMonth(), 1);
  var lastDateOfMonth = new Date(date2.getFullYear(), date2.getMonth() + 1, 0);
  var firstWeekdayOfMonth = firstDateOfMonth.getDay();
  var lastWeekdayOfMonth = lastDateOfMonth.getDay();
  var daysInMonth = lastDateOfMonth.getDate();
  var daysToPrepend = (firstWeekdayOfMonth - firstDayOfWeek + DAYS_IN_WEEK) % DAYS_IN_WEEK;
  var daysToAppend = (DAYS_IN_WEEK - 1 - lastWeekdayOfMonth + firstDayOfWeek) % DAYS_IN_WEEK;
  var month = [];
  var week = [];
  for (var i = 1 - daysToPrepend; i <= daysInMonth + daysToAppend + 1; i++) {
    if (i <= 0) {
      week.push(addDays2(firstDateOfMonth, i - 1));
    } else if (i > daysInMonth) {
      week.push(addDays2(lastDateOfMonth, i - daysInMonth));
    } else {
      week.push(setDate2(date2, i));
    }
    if (week.length === 7) {
      month.push(week);
      week = [];
    }
  }
  return month;
};

// node_modules/@cloudscape-design/components/calendar/utils/navigation.js
function moveNextDay(startDate, isDateEnabled) {
  return moveDate(startDate, isDateEnabled, 1);
}
function movePrevDay(startDate, isDateEnabled) {
  return moveDate(startDate, isDateEnabled, -1);
}
function moveNextWeek(startDate, isDateEnabled) {
  return moveDate(startDate, isDateEnabled, 7);
}
function movePrevWeek(startDate, isDateEnabled) {
  return moveDate(startDate, isDateEnabled, -7);
}
function getBaseDate(date2, isDateEnabled) {
  const startDate = startOfMonth(date2);
  if (isDateEnabled(startDate)) {
    return startDate;
  }
  const firstEnabledDate = moveDate(startDate, isDateEnabled, 1);
  return isSameMonth(startDate, firstEnabledDate) ? firstEnabledDate : startDate;
}
function moveDate(startDate, isDateEnabled, step2) {
  let current = addDays(startDate, step2);
  while (!isDateEnabled(current)) {
    if (Math.abs(differenceInYears(startDate, current)) > 1) {
      return startDate;
    }
    current = addDays(current, step2);
  }
  return current;
}

// node_modules/@cloudscape-design/components/calendar/grid/index.js
function Grid({ locale: locale2, baseDate, isDateEnabled, focusedDate, focusableDate, onSelectDate, onFocusDate, onChangeMonth, startOfWeek: startOfWeek2, todayAriaLabel, selectedDate, ariaLabelledby }) {
  const focusedDateRef = (0, import_react103.useRef)(null);
  const onGridKeyDownHandler = (event) => {
    let updatedFocusDate;
    if (focusableDate === null) {
      return;
    }
    switch (event.keyCode) {
      case KeyCode.space:
      case KeyCode.enter:
        event.preventDefault();
        if (focusableDate) {
          onFocusDate(null);
          onSelectDate(focusableDate);
        }
        return;
      case KeyCode.right:
        event.preventDefault();
        updatedFocusDate = moveNextDay(focusableDate, isDateEnabled);
        break;
      case KeyCode.left:
        event.preventDefault();
        updatedFocusDate = movePrevDay(focusableDate, isDateEnabled);
        break;
      case KeyCode.up:
        event.preventDefault();
        updatedFocusDate = movePrevWeek(focusableDate, isDateEnabled);
        break;
      case KeyCode.down:
        event.preventDefault();
        updatedFocusDate = moveNextWeek(focusableDate, isDateEnabled);
        break;
      default:
        return;
    }
    if (!isSameMonth(updatedFocusDate, baseDate)) {
      onChangeMonth(updatedFocusDate);
    }
    onFocusDate(updatedFocusDate);
  };
  useEffectOnUpdate(() => {
    if (focusedDate && focusedDateRef.current) {
      focusedDateRef.current.focus();
    }
  }, [focusedDate]);
  const weeks = (0, import_react103.useMemo)(() => getCalendarMonth(baseDate, { firstDayOfWeek: startOfWeek2 }), [baseDate, startOfWeek2]);
  const weekdays = weeks[0].map((date2) => date2.getDay());
  return import_react103.default.createElement(
    "table",
    { role: "grid", className: styles_css_default31["calendar-grid"], "aria-labelledby": ariaLabelledby },
    import_react103.default.createElement(
      "thead",
      null,
      import_react103.default.createElement("tr", null, weekdays.map((dayIndex) => import_react103.default.createElement(
        "th",
        { key: dayIndex, scope: "col", className: clsx_m_default(styles_css_default31["calendar-grid-cell"], styles_css_default31["calendar-day-header"]) },
        import_react103.default.createElement("span", { "aria-hidden": "true" }, renderDayName(locale2, dayIndex, "short")),
        import_react103.default.createElement(ScreenreaderOnly, null, renderDayName(locale2, dayIndex, "long"))
      )))
    ),
    import_react103.default.createElement("tbody", { onKeyDown: onGridKeyDownHandler }, weeks.map((week, weekIndex) => import_react103.default.createElement("tr", { key: weekIndex, className: styles_css_default31["calendar-week"] }, week.map((date2, dateIndex) => {
      const isFocusable = !!focusableDate && isSameDay(date2, focusableDate);
      const isSelected = !!selectedDate && isSameDay(date2, selectedDate);
      const isEnabled = !isDateEnabled || isDateEnabled(date2);
      const isDateOnSameDay = isSameDay(date2, new Date());
      let tabIndex = void 0;
      if (isFocusable && isEnabled) {
        tabIndex = 0;
      } else if (isEnabled) {
        tabIndex = -1;
      }
      let dayAnnouncement = getDateLabel(locale2, date2, "short");
      if (isDateOnSameDay) {
        dayAnnouncement += ". " + todayAriaLabel;
      }
      return import_react103.default.createElement(
        "td",
        {
          key: `${weekIndex}:${dateIndex}`,
          ref: tabIndex === 0 ? focusedDateRef : void 0,
          tabIndex,
          "aria-current": isDateOnSameDay ? "date" : void 0,
          "aria-selected": isEnabled ? isSelected : void 0,
          "aria-disabled": !isEnabled,
          onClick: isEnabled ? () => onSelectDate(date2) : void 0,
          className: clsx_m_default(styles_css_default31["calendar-grid-cell"], styles_css_default31["calendar-day"], {
            [styles_css_default31["calendar-day-current-month"]]: isSameMonth(date2, baseDate),
            [styles_css_default31["calendar-day-enabled"]]: isEnabled,
            [styles_css_default31["calendar-day-selected"]]: isSelected,
            [styles_css_default31["calendar-day-today"]]: isDateOnSameDay
          })
        },
        import_react103.default.createElement("span", { className: styles_css_default31["day-inner"], "aria-hidden": "true" }, date2.getDate()),
        import_react103.default.createElement(ScreenreaderOnly, null, dayAnnouncement)
      );
    }))))
  );
}

// node_modules/@cloudscape-design/components/internal/utils/locale/merge-locales.js
function mergeLocales(locale2, fullLocale) {
  const isShort = locale2.length === 2;
  if (isShort && fullLocale.indexOf(locale2) === 0) {
    return fullLocale;
  }
  return locale2;
}

// node_modules/@cloudscape-design/components/internal/utils/locale/normalize-locale.js
function normalizeLocale(component, locale2) {
  var _a;
  locale2 = checkLocale(component, locale2);
  const browserLocale = getBrowserLocale();
  if (locale2) {
    return mergeLocales(locale2, browserLocale);
  }
  const htmlLocale = checkLocale(component, (_a = getHtmlElement()) === null || _a === void 0 ? void 0 : _a.getAttribute("lang"));
  if (htmlLocale) {
    return mergeLocales(htmlLocale, browserLocale);
  }
  return browserLocale;
}
function checkLocale(component, locale2) {
  if (!locale2 || locale2 === "") {
    return "";
  }
  locale2 = locale2 && locale2.replace(/^([a-z]{2})_/, "$1-");
  if (locale2 && !locale2.match(/^[a-z]{2}(-[A-Z]{2})?$/)) {
    warnOnce(component, `Invalid locale provided: ${locale2}. Falling back to default`);
    locale2 = "";
  }
  return locale2;
}
function getHtmlElement() {
  return typeof document !== "undefined" ? document.querySelector("html") : null;
}
function getBrowserLocale() {
  return new Intl.DateTimeFormat().resolvedOptions().locale;
}

// node_modules/weekstart/dist/es-module/api.js
function getWeekStartByRegion(regionCode, regionDayMap2) {
  var code = regionDayMap2[typeof regionCode === "string" ? regionCode.toUpperCase() : regionCode];
  return typeof code === "number" ? code : 1;
}
function getWeekStartByLocale(locale2, langRegionMap2, regionDayMap2) {
  if (locale2) {
    var data = locale2.toLowerCase().split(/[-_]/);
    var language = data[0];
    var country;
    if (data[1] && data[1].length === 4) {
      language += "_" + data[1];
      country = data[2];
    } else {
      country = data[1];
    }
    if (!country) {
      country = langRegionMap2[language];
    }
    if (country) {
      return getWeekStartByRegion(country.match(/^\d+$/) ? Number(country) : country, regionDayMap2);
    }
  }
  return 1;
}

// node_modules/weekstart/dist/es-module/langRegionMap.js
var langRegionMap = {
  en: "US",
  zh: "CN",
  zh_hans: "CN",
  hans: "CN",
  wuu: "CN",
  hsn: "CN",
  hak: "CN",
  nan: "CN",
  gan: "CN",
  hi: "IN",
  te: "IN",
  mr: "IN",
  ta: "IN",
  gu: "IN",
  kn: "IN",
  or: "IN",
  ml: "IN",
  pa_guru: "IN",
  bho: "IN",
  awa: "IN",
  as: "IN",
  mwr: "IN",
  mai: "IN",
  mag: "IN",
  bgc: "IN",
  hne: "IN",
  dcc: "IN",
  dz: "BT",
  tn: "BW",
  am: "ET",
  om: "ET",
  quc: "GT",
  id: "ID",
  jv: "ID",
  su: "ID",
  mad: "ID",
  ms_arab: "ID",
  ga: "IE",
  he: "IL",
  jam: "JM",
  ja: "JP",
  km: "KH",
  ko: "KR",
  lo: "LA",
  mh: "MH",
  my: "MM",
  mt: "MT",
  ne: "NP",
  fil: "PH",
  ceb: "PH",
  ilo: "PH",
  ur: "PK",
  pa: "PK",
  pa_arab: "PK",
  arab: "PK",
  lah: "PK",
  ps: "PK",
  sd: "PK",
  sd_arab: "PK",
  skr: "PK",
  gn: "PY",
  th: "TH",
  tts: "TH",
  aeb: "TN",
  zh_hant: "TW",
  hant: "TW",
  sm: "WS",
  zu: "ZA",
  sn: "ZW",
  arq: "DZ",
  ar: "EG",
  arz: "EG",
  fa: "IR",
  az_arab: "IR",
  ary: "MA",
  bn: "BD",
  rkt: "BD",
  dv: "MV"
};
var langRegionMap_default = langRegionMap;

// node_modules/weekstart/dist/es-module/regionDayMap.js
var regionDayMap = {
  AG: 0,
  ATG: 0,
  28: 0,
  AR: 0,
  ARG: 0,
  32: 0,
  AS: 0,
  ASM: 0,
  16: 0,
  AU: 0,
  AUS: 0,
  36: 0,
  BR: 0,
  BRA: 0,
  76: 0,
  BS: 0,
  BHS: 0,
  44: 0,
  BT: 0,
  BTN: 0,
  64: 0,
  BW: 0,
  BWA: 0,
  72: 0,
  BZ: 0,
  BLZ: 0,
  84: 0,
  CA: 0,
  CAN: 0,
  124: 0,
  CN: 0,
  CHN: 0,
  156: 0,
  CO: 0,
  COL: 0,
  170: 0,
  DM: 0,
  DMA: 0,
  212: 0,
  DO: 0,
  DOM: 0,
  214: 0,
  ET: 0,
  ETH: 0,
  231: 0,
  GT: 0,
  GTM: 0,
  320: 0,
  GU: 0,
  GUM: 0,
  316: 0,
  HK: 0,
  HKG: 0,
  344: 0,
  HN: 0,
  HND: 0,
  340: 0,
  ID: 0,
  IDN: 0,
  360: 0,
  IE: 0,
  IRL: 0,
  372: 0,
  IL: 0,
  ISR: 0,
  376: 0,
  IN: 0,
  IND: 0,
  356: 0,
  JM: 0,
  JAM: 0,
  388: 0,
  JP: 0,
  JPN: 0,
  392: 0,
  KE: 0,
  KEN: 0,
  404: 0,
  KH: 0,
  KHM: 0,
  116: 0,
  KR: 0,
  KOR: 0,
  410: 0,
  LA: 0,
  LA0: 0,
  418: 0,
  MH: 0,
  MHL: 0,
  584: 0,
  MM: 0,
  MMR: 0,
  104: 0,
  MO: 0,
  MAC: 0,
  446: 0,
  MT: 0,
  MLT: 0,
  470: 0,
  MX: 0,
  MEX: 0,
  484: 0,
  MZ: 0,
  MOZ: 0,
  508: 0,
  NI: 0,
  NIC: 0,
  558: 0,
  NP: 0,
  NPL: 0,
  524: 0,
  NZ: 0,
  NZL: 0,
  554: 0,
  PA: 0,
  PAN: 0,
  591: 0,
  PE: 0,
  PER: 0,
  604: 0,
  PH: 0,
  PHL: 0,
  608: 0,
  PK: 0,
  PAK: 0,
  586: 0,
  PR: 0,
  PRI: 0,
  630: 0,
  PY: 0,
  PRY: 0,
  600: 0,
  SA: 0,
  SAU: 0,
  682: 0,
  SG: 0,
  SGP: 0,
  702: 0,
  SV: 0,
  SLV: 0,
  222: 0,
  TH: 0,
  THA: 0,
  764: 0,
  TN: 0,
  TUN: 0,
  788: 0,
  TT: 0,
  TTO: 0,
  780: 0,
  TW: 0,
  TWN: 0,
  158: 0,
  UM: 0,
  UMI: 0,
  581: 0,
  US: 0,
  USA: 0,
  840: 0,
  VE: 0,
  VEN: 0,
  862: 0,
  VI: 0,
  VIR: 0,
  850: 0,
  WS: 0,
  WSM: 0,
  882: 0,
  YE: 0,
  YEM: 0,
  887: 0,
  ZA: 0,
  ZAF: 0,
  710: 0,
  ZW: 0,
  ZWE: 0,
  716: 0,
  AE: 6,
  ARE: 6,
  784: 6,
  AF: 6,
  AFG: 6,
  4: 6,
  BH: 6,
  BHR: 6,
  48: 6,
  DJ: 6,
  DJI: 6,
  262: 6,
  DZ: 6,
  DZA: 6,
  12: 6,
  EG: 6,
  EGY: 6,
  818: 6,
  IQ: 6,
  IRQ: 6,
  368: 6,
  IR: 6,
  IRN: 6,
  364: 6,
  JO: 6,
  JOR: 6,
  400: 6,
  KW: 6,
  KWT: 6,
  414: 6,
  LY: 6,
  LBY: 6,
  434: 6,
  MA: 6,
  MAR: 6,
  504: 6,
  OM: 6,
  OMN: 6,
  512: 6,
  QA: 6,
  QAT: 6,
  634: 6,
  SD: 6,
  SDN: 6,
  729: 6,
  SY: 6,
  SYR: 6,
  760: 6,
  BD: 5,
  BGD: 5,
  50: 5,
  MV: 5,
  MDV: 5,
  462: 5
};
var regionDayMap_default = regionDayMap;

// node_modules/weekstart/dist/es-module/main.js
function getWeekStartByLocale$1(locale2) {
  return getWeekStartByLocale(locale2, langRegionMap_default, regionDayMap_default);
}

// node_modules/@cloudscape-design/components/internal/utils/locale/normalize-start-of-week.js
function normalizeStartOfWeek(startOfWeek2, locale2) {
  return typeof startOfWeek2 === "number" ? startOfWeek2 % 7 : getWeekStartByLocale$1(locale2);
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/display-format.js
function isoToDisplay(value) {
  return value.replace(/-/g, "/");
}
function displayToIso(value) {
  return value.replace(/\//g, "-");
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/format-timezone-offset.js
function formatTimezoneOffset(isoDate, offsetInMinutes) {
  offsetInMinutes = offsetInMinutes !== null && offsetInMinutes !== void 0 ? offsetInMinutes : 0 - new Date(isoDate).getTimezoneOffset();
  const hoursOffset = padLeftZeros(Math.floor(Math.abs(offsetInMinutes) / 60).toFixed(0), 2);
  const minuteOffset = padLeftZeros(Math.abs(offsetInMinutes % 60).toFixed(0), 2);
  const sign2 = offsetInMinutes < 0 ? "-" : "+";
  const formattedOffset = `${sign2}${hoursOffset}:${minuteOffset}`;
  return formattedOffset;
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/is-iso-date-only.js
var dateRegex = /^\d{4}-\d{2}-\d{2}$/;
function isIsoDateOnly(dateString) {
  return dateRegex.test(dateString);
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/format-date-range.js
function formatDateRange(startDate, endDate, timeOffset) {
  const isDateOnly2 = isIsoDateOnly(startDate) && isIsoDateOnly(endDate);
  const formattedStartOffset = isDateOnly2 ? "" : formatTimezoneOffset(startDate, timeOffset.startDate);
  const formattedEndOffset = isDateOnly2 ? "" : formatTimezoneOffset(endDate, timeOffset.endDate);
  return startDate + formattedStartOffset + " \u2014 " + endDate + formattedEndOffset;
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/format-date.js
function formatDate(value) {
  const year = value.getFullYear();
  const month = padLeftZeros(`${value.getMonth() + 1}`, 2);
  const date2 = padLeftZeros(`${value.getDate()}`, 2);
  return `${year}-${month}-${date2}`;
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/format-time.js
var formatTime = (value) => {
  const hours = padLeftZeros(`${value.getHours()}`, 2);
  const minutes = padLeftZeros(`${value.getMinutes()}`, 2);
  const seconds = padLeftZeros(`${value.getSeconds()}`, 2);
  return `${hours}:${minutes}:${seconds}`;
};

// node_modules/@cloudscape-design/components/internal/utils/date-time/format-date-time.js
function formatDateTime(date2) {
  return formatDate(date2) + "T" + formatTime(date2);
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/join-date-time.js
function joinDateTime(dateString, timeString) {
  return `${dateString}T${timeString}`;
}
function splitDateTime(dateStr) {
  const [date2 = "", time2 = ""] = dateStr.split("T");
  return { date: date2, time: time2 };
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/parse-date.js
function parseDate(value, strict = false) {
  const [yearString, monthString, dayString] = value.split("-");
  const year = Number(yearString);
  const month = Number(monthString);
  const day = Number(dayString);
  if (strict) {
    if (isNaN(year) || isNaN(month) || isNaN(day)) {
      return null;
    }
  }
  return new Date(year, (month || 1) - 1, day || 1);
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/parse-timezone-offset.js
function parseTimezoneOffset(isoDate) {
  const [, time2 = ""] = isoDate.split("T");
  const [, signCharacter, offsetPart] = time2.split(/(-|\+)/);
  if (signCharacter && offsetPart) {
    const [offsetHours, offsetMinutes] = offsetPart.split(":");
    return Number(signCharacter + "1") * (Number(offsetHours) * 60 + Number(offsetMinutes));
  }
  const utcTimezoneIndicator = isoDate.indexOf("Z");
  if (utcTimezoneIndicator !== -1) {
    return 0;
  }
  const date2 = new Date(isoDate);
  return 0 - date2.getTimezoneOffset();
}

// node_modules/@cloudscape-design/components/internal/utils/date-time/shift-timezone-offset.js
function shiftTimezoneOffset(dateString, targetTimezoneOffset) {
  const [datePart, timeAndOffsetPart = ""] = dateString.split("T");
  const [timePart] = timeAndOffsetPart.split(/-|\+|Z/);
  const valueWithoutOffset = joinDateTime(datePart, timePart);
  const originalTimezoneOffset = parseTimezoneOffset(dateString);
  const date2 = new Date(valueWithoutOffset);
  targetTimezoneOffset = targetTimezoneOffset !== null && targetTimezoneOffset !== void 0 ? targetTimezoneOffset : 0 - date2.getTimezoneOffset();
  const adjustedDate = addMinutes(date2, targetTimezoneOffset - originalTimezoneOffset);
  return joinDateTime(formatDate(adjustedDate), formatTime(adjustedDate));
}

// node_modules/@cloudscape-design/components/internal/hooks/use-date-cache/index.js
var import_react104 = __toESM(require_react());
function useDateCache() {
  const cacheRef = (0, import_react104.useRef)({});
  return (date2) => {
    if (cacheRef.current[date2.getTime()]) {
      return cacheRef.current[date2.getTime()];
    }
    cacheRef.current[date2.getTime()] = date2;
    return date2;
  };
}

// node_modules/@cloudscape-design/components/calendar/internal.js
function Calendar(_a) {
  var { value, locale: locale2 = "", startOfWeek: startOfWeek2, isDateEnabled = () => true, ariaLabel, ariaLabelledby, ariaDescribedby, onChange, __internalRootRef } = _a, rest = __rest(_a, ["value", "locale", "startOfWeek", "isDateEnabled", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "onChange", "__internalRootRef"]);
  checkControlled("Calendar", "value", value, "onChange", onChange);
  const baseProps = getBaseProps(rest);
  const normalizedLocale = normalizeLocale("Calendar", locale2);
  const normalizedStartOfWeek = normalizeStartOfWeek(startOfWeek2, normalizedLocale);
  const gridWrapperRef = (0, import_react105.useRef)(null);
  const [focusedDate, setFocusedDate] = (0, import_react105.useState)(null);
  const valueDateCache = useDateCache();
  const focusedDateCache = useDateCache();
  const parsedValue = value && value.length >= 4 ? parseDate(value) : null;
  const memoizedValue = parsedValue ? valueDateCache(parsedValue) : null;
  const defaultDisplayedDate = memoizedValue !== null && memoizedValue !== void 0 ? memoizedValue : new Date();
  const [displayedDate, setDisplayedDate] = (0, import_react105.useState)(defaultDisplayedDate);
  const headingId = useUniqueId("calendar-heading");
  const i18n = useInternalI18n("calendar");
  const nextMonthAriaLabel = i18n("nextMonthAriaLabel", rest.nextMonthAriaLabel);
  const previousMonthAriaLabel = i18n("previousMonthAriaLabel", rest.previousMonthAriaLabel);
  const todayAriaLabel = i18n("todayAriaLabel", rest.todayAriaLabel);
  (0, import_react105.useEffect)(() => {
    memoizedValue && setDisplayedDate((prev) => prev.getTime() !== memoizedValue.getTime() ? memoizedValue : prev);
  }, [memoizedValue]);
  const selectFocusedDate = (selected, baseDate2) => {
    if (selected && isDateEnabled(selected) && isSameMonth(selected, baseDate2)) {
      return selected;
    }
    const today = new Date();
    if (isDateEnabled(today) && isSameMonth(today, baseDate2)) {
      return today;
    }
    if (isDateEnabled(baseDate2)) {
      return baseDate2;
    }
    return null;
  };
  const baseDate = getBaseDate(displayedDate, isDateEnabled);
  const focusableDate = focusedDate || selectFocusedDate(memoizedValue, baseDate);
  const onHeaderChangeMonthHandler = (date2) => {
    setDisplayedDate(date2);
    setFocusedDate(null);
  };
  const onGridChangeMonthHandler = (newMonth) => {
    setDisplayedDate(newMonth);
    setFocusedDate(null);
  };
  const onGridFocusDateHandler = (date2) => {
    if (date2) {
      setFocusedDate(date2 ? focusedDateCache(date2) : null);
    }
  };
  const onGridSelectDateHandler = (date2) => {
    fireNonCancelableEvent(onChange, { value: formatDate(date2) });
    setFocusedDate(null);
  };
  const onGridBlur = (event) => {
    var _a2;
    const newFocusTargetIsInGrid = event.relatedTarget && ((_a2 = gridWrapperRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(event.relatedTarget));
    if (!newFocusTargetIsInGrid) {
      setFocusedDate(null);
    }
  };
  return import_react105.default.createElement(
    "div",
    Object.assign({ ref: __internalRootRef }, baseProps, { role: "group", "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, className: clsx_m_default(styles_css_default31.root, styles_css_default31.calendar, baseProps.className) }),
    import_react105.default.createElement(
      "div",
      { className: styles_css_default31["calendar-inner"] },
      import_react105.default.createElement(header_default, { baseDate, locale: normalizedLocale, onChangeMonth: onHeaderChangeMonthHandler, previousMonthLabel: previousMonthAriaLabel, nextMonthLabel: nextMonthAriaLabel, headingId }),
      import_react105.default.createElement(
        "div",
        { onBlur: onGridBlur, ref: gridWrapperRef },
        import_react105.default.createElement(Grid, { locale: normalizedLocale, baseDate, isDateEnabled, focusedDate, focusableDate, onSelectDate: onGridSelectDateHandler, onFocusDate: onGridFocusDateHandler, onChangeMonth: onGridChangeMonthHandler, startOfWeek: normalizedStartOfWeek, todayAriaLabel, selectedDate: memoizedValue, ariaLabelledby: headingId })
      )
    )
  );
}

// node_modules/@cloudscape-design/components/calendar/index.js
function Calendar2(_a) {
  var { locale: locale2 = "", isDateEnabled = () => true } = _a, props2 = __rest(_a, ["locale", "isDateEnabled"]);
  const baseComponentProps = useBaseComponent("Calendar");
  return import_react106.default.createElement(Calendar, Object.assign({}, props2, baseComponentProps, { locale: locale2, isDateEnabled }));
}
applyDisplayName(Calendar2, "Calendar");

// node_modules/@cloudscape-design/components/cards/index.js
var import_react107 = __toESM(require_react());

// node_modules/@cloudscape-design/components/cards/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/cards/styles.scoped.css";
var styles_css_default32 = {
  "card-inner": "awsui_card-inner_p8a6i_13les_97",
  "root": "awsui_root_p8a6i_13les_133",
  "header-variant-full-page": "awsui_header-variant-full-page_p8a6i_13les_153",
  "header-refresh": "awsui_header-refresh_p8a6i_13les_153",
  "list": "awsui_list_p8a6i_13les_196",
  "list-grid-1": "awsui_list-grid-1_p8a6i_13les_204",
  "card": "awsui_card_p8a6i_13les_97",
  "list-grid-2": "awsui_list-grid-2_p8a6i_13les_207",
  "list-grid-3": "awsui_list-grid-3_p8a6i_13les_210",
  "list-grid-4": "awsui_list-grid-4_p8a6i_13les_213",
  "list-grid-5": "awsui_list-grid-5_p8a6i_13les_216",
  "list-grid-6": "awsui_list-grid-6_p8a6i_13les_219",
  "list-grid-7": "awsui_list-grid-7_p8a6i_13les_222",
  "list-grid-8": "awsui_list-grid-8_p8a6i_13les_225",
  "list-grid-9": "awsui_list-grid-9_p8a6i_13les_228",
  "list-grid-10": "awsui_list-grid-10_p8a6i_13les_231",
  "list-grid-11": "awsui_list-grid-11_p8a6i_13les_234",
  "list-grid-12": "awsui_list-grid-12_p8a6i_13les_237",
  "list-grid-13": "awsui_list-grid-13_p8a6i_13les_240",
  "list-grid-14": "awsui_list-grid-14_p8a6i_13les_243",
  "list-grid-15": "awsui_list-grid-15_p8a6i_13les_246",
  "list-grid-16": "awsui_list-grid-16_p8a6i_13les_249",
  "list-grid-17": "awsui_list-grid-17_p8a6i_13les_252",
  "list-grid-18": "awsui_list-grid-18_p8a6i_13les_255",
  "list-grid-19": "awsui_list-grid-19_p8a6i_13les_258",
  "list-grid-20": "awsui_list-grid-20_p8a6i_13les_261",
  "selection-control": "awsui_selection-control_p8a6i_13les_265",
  "loading": "awsui_loading_p8a6i_13les_274",
  "empty": "awsui_empty_p8a6i_13les_275",
  "has-header": "awsui_has-header_p8a6i_13les_282",
  "card-header": "awsui_card-header_p8a6i_13les_343",
  "card-header-inner": "awsui_card-header-inner_p8a6i_13les_351",
  "card-selectable": "awsui_card-selectable_p8a6i_13les_355",
  "card-selected": "awsui_card-selected_p8a6i_13les_358",
  "section": "awsui_section_p8a6i_13les_365",
  "section-header": "awsui_section-header_p8a6i_13les_371",
  "section-content": "awsui_section-content_p8a6i_13les_377",
  "footer-pagination": "awsui_footer-pagination_p8a6i_13les_385"
};

// node_modules/@cloudscape-design/components/cards/cards-layout-helper.js
var WIDTHS = [1920, 1400, 1200, 992, 768];
var defaultCardsPerRow = WIDTHS.map((value, index, widths) => ({
  minWidth: value,
  cards: widths.length + 1 - index
}));
var getCardsPerRow = (width, config) => {
  if (config.length === 0) {
    config = defaultCardsPerRow;
  }
  let cardsPerRow = 1;
  const sortedConfig = config.slice().map((value) => ({
    minWidth: value.minWidth || 0,
    cards: value.cards
  })).sort((a2, b) => b.minWidth - a2.minWidth);
  sortedConfig.some((layout) => {
    if (width >= layout.minWidth) {
      cardsPerRow = layout.cards;
      return true;
    }
  });
  return cardsPerRow;
};

// node_modules/@cloudscape-design/components/cards/index.js
var Cards = import_react107.default.forwardRef(function(_a, ref) {
  var { items = [], cardDefinition, cardsPerRow = [], header, filter, pagination, preferences, empty, loading, loadingText, trackBy, selectedItems, selectionType, isItemDisabled, onSelectionChange, ariaLabels, visibleSections, stickyHeader, stickyHeaderVerticalOffset, variant = "container", renderAriaLive, firstIndex, totalItemsCount } = _a, rest = __rest(_a, ["items", "cardDefinition", "cardsPerRow", "header", "filter", "pagination", "preferences", "empty", "loading", "loadingText", "trackBy", "selectedItems", "selectionType", "isItemDisabled", "onSelectionChange", "ariaLabels", "visibleSections", "stickyHeader", "stickyHeaderVerticalOffset", "variant", "renderAriaLive", "firstIndex", "totalItemsCount"]);
  const { __internalRootRef } = useBaseComponent("Cards");
  const baseProps = getBaseProps(rest);
  const isRefresh = useVisualRefresh();
  const computedVariant = isRefresh ? variant : "container";
  const instanceUniqueId = useUniqueId("cards");
  const cardsId = (baseProps === null || baseProps === void 0 ? void 0 : baseProps.id) || instanceUniqueId;
  const cardsHeaderId = header ? `${cardsId}-header` : void 0;
  const [columns, measureRef] = useContainerQuery(({ width }) => getCardsPerRow(width, cardsPerRow), [cardsPerRow]);
  const refObject = (0, import_react107.useRef)(null);
  const mergedRef = useMergeRefs(measureRef, refObject, __internalRootRef);
  const getMouseDownTarget = useMouseDownTarget();
  const i18n = useInternalI18n("cards");
  const { isItemSelected, getItemSelectionProps, updateShiftToggle } = useSelection({
    items,
    trackBy,
    selectedItems,
    selectionType,
    isItemDisabled,
    onSelectionChange,
    ariaLabels: {
      itemSelectionLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.itemSelectionLabel,
      selectionGroupLabel: i18n("ariaLabels.selectionGroupLabel", ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel)
    }
  });
  const hasToolsHeader = header || filter || pagination || preferences;
  const headerRef = (0, import_react107.useRef)(null);
  const isMobile = useMobile();
  const { scrollToTop, scrollToItem } = stickyScrolling(refObject, headerRef);
  stickyHeader = supportsStickyPosition() && !isMobile && stickyHeader;
  const onCardFocus = (event) => {
    if (stickyHeader && !event.currentTarget.contains(getMouseDownTarget())) {
      scrollToItem(event.currentTarget);
    }
  };
  (0, import_react107.useImperativeHandle)(ref, () => ({
    scrollToTop: () => {
      if (stickyHeader) {
        scrollToTop();
      }
    }
  }), [stickyHeader, scrollToTop]);
  let status;
  if (loading) {
    status = import_react107.default.createElement(
      "div",
      { className: styles_css_default32.loading },
      import_react107.default.createElement(
        StatusIndicator,
        { type: "loading" },
        import_react107.default.createElement(live_region_default, { visible: true }, loadingText)
      )
    );
  } else if (empty && !items.length) {
    status = import_react107.default.createElement("div", { className: styles_css_default32.empty }, empty);
  }
  return import_react107.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default32.root), ref: mergedRef }),
    import_react107.default.createElement(
      InternalContainer,
      { header: hasToolsHeader && import_react107.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default32.header, isRefresh && styles_css_default32["header-refresh"], styles_css_default32[`header-variant-${computedVariant}`]) },
        import_react107.default.createElement(ToolsHeader, { header, filter, pagination, preferences })
      ), footer: variant === "full-page" && !!pagination && import_react107.default.createElement("div", { className: styles_css_default32["footer-pagination"] }, pagination), disableContentPaddings: true, disableHeaderPaddings: computedVariant === "full-page", variant: computedVariant === "container" ? "cards" : computedVariant, __stickyHeader: stickyHeader, __stickyOffset: stickyHeaderVerticalOffset, __headerRef: headerRef, __headerId: cardsHeaderId, __darkHeader: computedVariant === "full-page", __disableFooterDivider: true },
      import_react107.default.createElement(
        "div",
        { className: clsx_m_default(hasToolsHeader && styles_css_default32["has-header"]) },
        !!renderAriaLive && !!firstIndex && import_react107.default.createElement(
          live_region_default,
          null,
          import_react107.default.createElement("span", null, renderAriaLive({ totalItemsCount, firstIndex, lastIndex: firstIndex + items.length - 1 }))
        ),
        status !== null && status !== void 0 ? status : import_react107.default.createElement(CardsList, { items, cardDefinition, trackBy, selectionType, columns, isItemSelected, getItemSelectionProps, visibleSections, updateShiftToggle, onFocus: onCardFocus, ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel, ariaLabelledby: (ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.cardsLabel) ? void 0 : cardsHeaderId })
      )
    )
  );
});
var cards_default = Cards;
var CardsList = ({ items, cardDefinition, trackBy, selectionType, columns, isItemSelected, getItemSelectionProps, visibleSections, updateShiftToggle, onFocus, ariaLabelledby, ariaLabel }) => {
  const selectable = !!selectionType;
  const { moveFocusDown, moveFocusUp } = useFocusMove(selectionType, items.length);
  let visibleSectionsDefinition = cardDefinition.sections || [];
  visibleSectionsDefinition = visibleSections ? visibleSectionsDefinition.filter((section) => section.id && visibleSections.indexOf(section.id) !== -1) : visibleSectionsDefinition;
  let listRole = void 0;
  let listItemRole = void 0;
  if (selectable) {
    listRole = "group";
    listItemRole = "presentation";
  }
  return import_react107.default.createElement("ol", Object.assign({ className: clsx_m_default(styles_css_default32.list, styles_css_default32[`list-grid-${columns || 1}`]), role: listRole, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel }, focusMarkers && focusMarkers.root), items.map((item, index) => import_react107.default.createElement(
    "li",
    Object.assign({ className: clsx_m_default(styles_css_default32.card, {
      [styles_css_default32["card-selectable"]]: selectable,
      [styles_css_default32["card-selected"]]: selectable && isItemSelected(item)
    }), key: getItemKey(trackBy, item, index), onFocus }, focusMarkers && focusMarkers.item, { role: listItemRole }),
    import_react107.default.createElement(
      "div",
      { className: styles_css_default32["card-inner"] },
      import_react107.default.createElement(
        "div",
        { className: styles_css_default32["card-header"] },
        import_react107.default.createElement("div", { className: styles_css_default32["card-header-inner"] }, cardDefinition.header ? cardDefinition.header(item) : ""),
        selectable && import_react107.default.createElement(
          "div",
          { className: styles_css_default32["selection-control"] },
          import_react107.default.createElement(SelectionControl, Object.assign({ onFocusDown: moveFocusDown, onFocusUp: moveFocusUp, onShiftToggle: updateShiftToggle }, getItemSelectionProps(item)))
        )
      ),
      visibleSectionsDefinition.map(({ width = 100, header, content, id }, index2) => import_react107.default.createElement(
        "div",
        { key: id || index2, className: styles_css_default32.section, style: { width: `${width}%` } },
        header ? import_react107.default.createElement("div", { className: styles_css_default32["section-header"] }, header) : "",
        content ? import_react107.default.createElement("div", { className: styles_css_default32["section-content"] }, content(item)) : ""
      ))
    )
  )));
};
applyDisplayName(Cards, "Cards");

// node_modules/@cloudscape-design/components/checkbox/index.js
var import_react108 = __toESM(require_react());
var Checkbox = import_react108.default.forwardRef((_a, ref) => {
  var props2 = __rest(_a, []);
  const baseComponentProps = useBaseComponent("Checkbox");
  return import_react108.default.createElement(internal_default5, Object.assign({}, props2, baseComponentProps, { ref }));
});
applyDisplayName(Checkbox, "Checkbox");
var checkbox_default = Checkbox;

// node_modules/@cloudscape-design/components/code-editor/index.js
var import_react118 = __toESM(require_react());

// node_modules/@cloudscape-design/components/code-editor/pane.js
var import_react110 = __toESM(require_react());

// node_modules/@cloudscape-design/components/code-editor/resizable-box/index.js
var import_react109 = __toESM(require_react());

// node_modules/@cloudscape-design/components/code-editor/resizable-box/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/code-editor/resizable-box/styles.scoped.css";
var styles_css_default33 = {
  "resizable-box": "awsui_resizable-box_cufu9_1cdr5_17",
  "resizable-box-handle": "awsui_resizable-box-handle_cufu9_1cdr5_22",
  "resize-active": "awsui_resize-active_cufu9_1cdr5_49"
};

// node_modules/@cloudscape-design/components/code-editor/resizable-box/index.js
function ResizableBox({ children, height, minHeight, onResize }) {
  const [dragOffset, setDragOffset] = (0, import_react109.useState)(null);
  const onResizeStable = useStableEventHandler(onResize);
  const containerRef = (0, import_react109.useRef)(null);
  const onMouseDown = (event) => {
    if (event.button !== 0 || !containerRef.current) {
      return;
    }
    const containerBottom = containerRef.current.getBoundingClientRect().bottom;
    setDragOffset(containerBottom - event.clientY);
  };
  (0, import_react109.useEffect)(() => {
    if (dragOffset === null || !containerRef.current) {
      return;
    }
    const container = containerRef.current;
    const onMouseMove = (event) => {
      const { top } = container.getBoundingClientRect();
      const cursor = event.clientY;
      onResizeStable(Math.max(cursor + dragOffset - top, minHeight));
    };
    const onMouseUp = () => {
      setDragOffset(null);
    };
    document.body.classList.add(styles_css_default33["resize-active"]);
    document.addEventListener("mousemove", onMouseMove);
    document.addEventListener("mouseup", onMouseUp);
    return () => {
      document.removeEventListener("mousemove", onMouseMove);
      document.removeEventListener("mouseup", onMouseUp);
      document.body.classList.remove(styles_css_default33["resize-active"]);
    };
  }, [dragOffset, minHeight, onResizeStable]);
  return import_react109.default.createElement(
    "div",
    { ref: containerRef, className: styles_css_default33["resizable-box"], style: { height } },
    children,
    import_react109.default.createElement("span", { className: styles_css_default33["resizable-box-handle"], onMouseDown })
  );
}

// node_modules/@cloudscape-design/components/code-editor/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/code-editor/styles.scoped.css";
var styles_css_default34 = {
  "code-editor-refresh": "awsui_code-editor-refresh_1gl9c_14jnd_98",
  "code-editor": "awsui_code-editor_1gl9c_14jnd_98",
  "pane": "awsui_pane_1gl9c_14jnd_438",
  "pane__close-container": "awsui_pane__close-container_1gl9c_14jnd_449",
  "pane__list": "awsui_pane__list_1gl9c_14jnd_454",
  "pane__table": "awsui_pane__table_1gl9c_14jnd_461",
  "pane__item": "awsui_pane__item_1gl9c_14jnd_466",
  "pane__cell": "awsui_pane__cell_1gl9c_14jnd_466",
  "pane__item--highlighted": "awsui_pane__item--highlighted_1gl9c_14jnd_480",
  "pane__location": "awsui_pane__location_1gl9c_14jnd_501",
  "pane__description": "awsui_pane__description_1gl9c_14jnd_501",
  "focus-lock": "awsui_focus-lock_1gl9c_14jnd_516",
  "editor": "awsui_editor_1gl9c_14jnd_541",
  "editor-refresh": "awsui_editor-refresh_1gl9c_14jnd_569",
  "status-bar": "awsui_status-bar_1gl9c_14jnd_574",
  "status-bar-with-hidden-pane": "awsui_status-bar-with-hidden-pane_1gl9c_14jnd_583",
  "status-bar__left": "awsui_status-bar__left_1gl9c_14jnd_587",
  "status-bar__left-virtual": "awsui_status-bar__left-virtual_1gl9c_14jnd_594",
  "status-bar__right": "awsui_status-bar__right_1gl9c_14jnd_598",
  "status-bar__language-mode": "awsui_status-bar__language-mode_1gl9c_14jnd_602",
  "status-bar__cursor-position": "awsui_status-bar__cursor-position_1gl9c_14jnd_602",
  "status-bar__cog-button": "awsui_status-bar__cog-button_1gl9c_14jnd_607",
  "status-bar-virtual": "awsui_status-bar-virtual_1gl9c_14jnd_611",
  "tab-button": "awsui_tab-button_1gl9c_14jnd_617",
  "tab-button--refresh": "awsui_tab-button--refresh_1gl9c_14jnd_630",
  "tab-button--active": "awsui_tab-button--active_1gl9c_14jnd_644",
  "tab-button--disabled": "awsui_tab-button--disabled_1gl9c_14jnd_664",
  "tab-button--divider": "awsui_tab-button--divider_1gl9c_14jnd_694",
  "tab-button--errors": "awsui_tab-button--errors_1gl9c_14jnd_701",
  "tab-button--warnings": "awsui_tab-button--warnings_1gl9c_14jnd_701",
  "loading-screen": "awsui_loading-screen_1gl9c_14jnd_705",
  "error-screen": "awsui_error-screen_1gl9c_14jnd_706"
};

// node_modules/@cloudscape-design/components/code-editor/pane.js
var ANNOTATION_ITEM_HEIGHT = 31;
var PANE_ANNOTATIONS_PADDING = 12;
var MIN_HEIGHT = 3 * ANNOTATION_ITEM_HEIGHT + 2 * PANE_ANNOTATIONS_PADDING;
var Pane = ({ id, visible, annotations, highlighted, onClose, onAnnotationClick, onAnnotationClear, cursorPositionLabel, closeButtonAriaLabel }) => {
  const [paneHeight, setPaneHeight] = (0, import_react110.useState)(MIN_HEIGHT);
  const listRef = (0, import_react110.useRef)(null);
  (0, import_react110.useEffect)(() => {
    var _a;
    if (!highlighted) {
      return;
    }
    const { row, column } = highlighted;
    const highlightedAnnotationIndex = annotations.indexOf(annotations.filter((a2) => a2.row === row && a2.column === column)[0]);
    if (highlightedAnnotationIndex > -1) {
      const errorItem = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.children[highlightedAnnotationIndex];
      errorItem === null || errorItem === void 0 ? void 0 : errorItem.focus();
    }
  }, [highlighted, annotations]);
  const onItemClick = (annotation) => {
    onAnnotationClick(annotation);
  };
  const onItemKeyDown = (annotation, event) => {
    if (event.keyCode === KeyCode.enter || event.keyCode === KeyCode.space) {
      event.preventDefault();
      onAnnotationClick(annotation);
    }
  };
  const onEscKeyDown = (event) => {
    if (event.keyCode === KeyCode.escape) {
      event.preventDefault();
      onClose();
    }
  };
  if (!visible) {
    return null;
  }
  return import_react110.default.createElement(
    "div",
    { id, className: styles_css_default34.pane, onKeyDown: onEscKeyDown, role: "tabpanel" },
    import_react110.default.createElement(
      ResizableBox,
      { height: paneHeight, minHeight: MIN_HEIGHT, onResize: (newHeight) => setPaneHeight(newHeight) },
      import_react110.default.createElement(
        focus_lock_default,
        { className: styles_css_default34["focus-lock"], autoFocus: true, restoreFocus: true },
        import_react110.default.createElement(
          "div",
          { className: styles_css_default34.pane__list, tabIndex: -1 },
          import_react110.default.createElement(
            "table",
            { className: styles_css_default34.pane__table, role: "presentation" },
            import_react110.default.createElement(
              "colgroup",
              null,
              import_react110.default.createElement("col", { style: { width: 1 } }),
              import_react110.default.createElement("col", { style: { width: "auto" } })
            ),
            import_react110.default.createElement("tbody", { ref: listRef }, annotations.map((annotation, i) => {
              var _a;
              return import_react110.default.createElement(
                "tr",
                { key: i, role: "link", className: styles_css_default34.pane__item, onMouseOver: onAnnotationClear, onClick: onItemClick.bind(null, annotation), onKeyDown: onItemKeyDown.bind(null, annotation), tabIndex: 0 },
                import_react110.default.createElement("td", { className: clsx_m_default(styles_css_default34.pane__location, styles_css_default34.pane__cell), tabIndex: -1 }, (_a = cursorPositionLabel === null || cursorPositionLabel === void 0 ? void 0 : cursorPositionLabel((annotation.row || 0) + 1, (annotation.column || 0) + 1)) !== null && _a !== void 0 ? _a : ""),
                import_react110.default.createElement("td", { className: clsx_m_default(styles_css_default34.pane__description, styles_css_default34.pane__cell), tabIndex: -1 }, annotation.text)
              );
            }))
          )
        ),
        import_react110.default.createElement(
          "div",
          { className: styles_css_default34["pane__close-container"] },
          import_react110.default.createElement(InternalButton, { formAction: "none", variant: "icon", iconName: "close", onClick: onClose, ariaLabel: closeButtonAriaLabel })
        )
      )
    )
  );
};

// node_modules/@cloudscape-design/components/code-editor/listeners.js
var import_react111 = __toESM(require_react());
function useChangeEffect(editor, onChange, onDelayedChange) {
  const debouncedChangeHandler = useDebounceCallback((detail) => {
    fireNonCancelableEvent(onDelayedChange, detail);
  }, 0);
  const handleChange = useStableEventHandler(() => {
    const changeDetail = { value: (editor === null || editor === void 0 ? void 0 : editor.getValue()) || "" };
    fireNonCancelableEvent(onChange, changeDetail);
    debouncedChangeHandler(changeDetail);
  });
  (0, import_react111.useEffect)(() => {
    if (!editor) {
      return;
    }
    editor.on("change", handleChange);
    return () => editor.off("change", handleChange);
  }, [editor, handleChange]);
}

// node_modules/@cloudscape-design/components/code-editor/ace-modes.js
var AceModes = [
  { value: "abap", label: "ABAP" },
  { value: "abc", label: "ABC" },
  { value: "actionscript", label: "ActionScript" },
  { value: "ada", label: "ADA" },
  { value: "alda", label: "Alda" },
  { value: "apache_conf", label: "Apache Conf" },
  { value: "apex", label: "Apex" },
  { value: "aql", label: "AQL" },
  { value: "asciidoc", label: "AsciiDoc" },
  { value: "asl", label: "ASL" },
  { value: "assembly_x86", label: "Assembly x86" },
  { value: "autohotkey", label: "AutoHotkey/AutoIt" },
  { value: "batchfile", label: "BatchFile" },
  { value: "c_cpp", label: "C/C++" },
  { value: "c9search", label: "C9Search" },
  { value: "cirru", label: "Cirru" },
  { value: "clojure", label: "Clojure" },
  { value: "cobol", label: "Cobol" },
  { value: "coffee", label: "CoffeeScript" },
  { value: "coldfusion", label: "ColdFusion" },
  { value: "crystal", label: "Crystal" },
  { value: "csharp", label: "C#" },
  { value: "csound_document", label: "Csound Document" },
  { value: "csound_orchestra", label: "Csound" },
  { value: "csound_score", label: "Csound Score" },
  { value: "css", label: "CSS" },
  { value: "curly", label: "Curly" },
  { value: "d", label: "D" },
  { value: "dart", label: "Dart" },
  { value: "diff", label: "Diff" },
  { value: "django", label: "Django" },
  { value: "dockerfile", label: "Dockerfile" },
  { value: "dot", label: "Dot" },
  { value: "drools", label: "Drools" },
  { value: "edifact", label: "Edifact" },
  { value: "eiffel", label: "Eiffel" },
  { value: "ejs", label: "EJS" },
  { value: "elixir", label: "Elixir" },
  { value: "elm", label: "Elm" },
  { value: "erlang", label: "Erlang" },
  { value: "forth", label: "Forth" },
  { value: "fortran", label: "Fortran" },
  { value: "fsharp", label: "FSharp" },
  { value: "fsl", label: "FSL" },
  { value: "ftl", label: "FreeMarker" },
  { value: "gcode", label: "Gcode" },
  { value: "gherkin", label: "Gherkin" },
  { value: "gitignore", label: "Gitignore" },
  { value: "glsl", label: "Glsl" },
  { value: "gobstones", label: "Gobstones" },
  { value: "golang", label: "Go" },
  { value: "graphqlschema", label: "GraphQLSchema" },
  { value: "groovy", label: "Groovy" },
  { value: "haml", label: "HAML" },
  { value: "handlebars", label: "Handlebars" },
  { value: "haskell", label: "Haskell" },
  { value: "haskell_cabal", label: "Haskell Cabal" },
  { value: "haxe", label: "haXe" },
  { value: "hjson", label: "Hjson" },
  { value: "html", label: "HTML" },
  { value: "html_elixir", label: "HTML (Elixir)" },
  { value: "html_ruby", label: "HTML (Ruby)" },
  { value: "ini", label: "INI" },
  { value: "io", label: "Io" },
  { value: "jack", label: "Jack" },
  { value: "jade", label: "Jade" },
  { value: "java", label: "Java" },
  { value: "javascript", label: "JavaScript" },
  { value: "json", label: "JSON" },
  { value: "json5", label: "JSON5" },
  { value: "jsoniq", label: "JSONiq" },
  { value: "jsp", label: "JSP" },
  { value: "jssm", label: "JSSM" },
  { value: "jsx", label: "JSX" },
  { value: "julia", label: "Julia" },
  { value: "kotlin", label: "Kotlin" },
  { value: "latex", label: "LaTeX" },
  { value: "less", label: "LESS" },
  { value: "liquid", label: "Liquid" },
  { value: "lisp", label: "Lisp" },
  { value: "livescript", label: "LiveScript" },
  { value: "logiql", label: "LogiQL" },
  { value: "lsl", label: "LSL" },
  { value: "lua", label: "Lua" },
  { value: "luapage", label: "LuaPage" },
  { value: "lucene", label: "Lucene" },
  { value: "makefile", label: "Makefile" },
  { value: "markdown", label: "Markdown" },
  { value: "mask", label: "Mask" },
  { value: "matlab", label: "MATLAB" },
  { value: "maze", label: "Maze" },
  { value: "mediawiki", label: "MediaWiki" },
  { value: "mel", label: "MEL" },
  { value: "mixal", label: "MIXAL" },
  { value: "mushcode", label: "MUSHCode" },
  { value: "mysql", label: "MySQL" },
  { value: "nginx", label: "Nginx" },
  { value: "nim", label: "Nim" },
  { value: "nix", label: "Nix" },
  { value: "nsis", label: "NSIS" },
  { value: "nunjucks", label: "Nunjucks" },
  { value: "objectivec", label: "Objective-C" },
  { value: "ocaml", label: "OCaml" },
  { value: "pascal", label: "Pascal" },
  { value: "perl", label: "Perl" },
  { value: "perl6", label: "Perl 6" },
  { value: "pgsql", label: "pgSQL" },
  { value: "php", label: "PHP" },
  { value: "php_laravel_blade", label: "PHP (Blade Template)" },
  { value: "pig", label: "Pig" },
  { value: "powershell", label: "Powershell" },
  { value: "praat", label: "Praat" },
  { value: "prisma", label: "Prisma" },
  { value: "prolog", label: "Prolog" },
  { value: "properties", label: "Properties" },
  { value: "protobuf", label: "Protobuf" },
  { value: "puppet", label: "Puppet" },
  { value: "python", label: "Python" },
  { value: "qml", label: "QML" },
  { value: "r", label: "R" },
  { value: "razor", label: "Razor" },
  { value: "rdoc", label: "RDoc" },
  { value: "red", label: "Red" },
  { value: "rhtml", label: "RHTML" },
  { value: "rst", label: "RST" },
  { value: "ruby", label: "Ruby" },
  { value: "rust", label: "Rust" },
  { value: "sass", label: "SASS" },
  { value: "scad", label: "SCAD" },
  { value: "scala", label: "Scala" },
  { value: "scheme", label: "Scheme" },
  { value: "scss", label: "SCSS" },
  { value: "sh", label: "SH" },
  { value: "sjs", label: "SJS" },
  { value: "slim", label: "Slim" },
  { value: "smarty", label: "Smarty" },
  { value: "snippets", label: "snippets" },
  { value: "soy_template", label: "Soy Template" },
  { value: "space", label: "Space" },
  { value: "sql", label: "SQL" },
  { value: "sqlserver", label: "SQLServer" },
  { value: "stylus", label: "Stylus" },
  { value: "svg", label: "SVG" },
  { value: "swift", label: "Swift" },
  { value: "tcl", label: "Tcl" },
  { value: "terraform", label: "Terraform" },
  { value: "tex", label: "Tex" },
  { value: "text", label: "Text" },
  { value: "textile", label: "Textile" },
  { value: "toml", label: "Toml" },
  { value: "tsx", label: "TSX" },
  { value: "twig", label: "Twig" },
  { value: "typescript", label: "TypeScript" },
  { value: "vala", label: "Vala" },
  { value: "vbscript", label: "VBScript" },
  { value: "velocity", label: "Velocity" },
  { value: "verilog", label: "Verilog" },
  { value: "vhdl", label: "VHDL" },
  { value: "visualforce", label: "Visualforce" },
  { value: "wollok", label: "Wollok" },
  { value: "xml", label: "XML" },
  { value: "xquery", label: "XQuery" },
  { value: "yaml", label: "YAML" },
  { value: "zeek", label: "Zeek" }
];

// node_modules/@cloudscape-design/components/code-editor/util.js
var DEFAULT_LIGHT_THEME = "dawn";
var DEFAULT_DARK_THEME = "tomorrow_night_bright";
var KEYBOARD_ACCESSIBILITY_MIN_ACE_VERSION = [1, 23];
function supportsKeyboardAccessibility(ace) {
  var _a;
  const semanticVersion = (_a = ace === null || ace === void 0 ? void 0 : ace.version) === null || _a === void 0 ? void 0 : _a.split(".").map((part) => {
    const parsed = parseInt(part);
    return Number.isNaN(parsed) ? part : parsed;
  });
  return !!semanticVersion && typeof semanticVersion[0] === "number" && semanticVersion[0] >= KEYBOARD_ACCESSIBILITY_MIN_ACE_VERSION[0] && typeof semanticVersion[1] === "number" && semanticVersion[1] >= KEYBOARD_ACCESSIBILITY_MIN_ACE_VERSION[1];
}
function getDefaultConfig(ace) {
  return Object.assign({ behavioursEnabled: true }, supportsKeyboardAccessibility(ace) ? { enableKeyboardAccessibility: true } : {});
}
function getDefaultTheme(element) {
  const isDarkMode = !!findUpUntil(element, (node) => node.classList.contains("awsui-polaris-dark-mode") || node.classList.contains("awsui-dark-mode"));
  return isDarkMode ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;
}
function getAceTheme(theme) {
  return `ace/theme/${theme}`;
}
function getLanguageLabel(language) {
  var _a;
  return ((_a = AceModes.filter((mode) => mode.value === language)[0]) === null || _a === void 0 ? void 0 : _a.label) || language;
}

// node_modules/@cloudscape-design/components/code-editor/setup-editor.js
function setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus) {
  ace.config.loadModule("ace/ext/language_tools", function() {
    editor.setOptions({
      displayIndentGuides: false,
      enableSnippets: true,
      enableBasicAutocompletion: true
    });
  });
  editor.setAutoScrollEditorIntoView(true);
  editor.session.selection.on("changeCursor", () => {
    setCursorPosition(editor.getCursorPosition());
  });
  editor.session.on("changeAnnotation", () => {
    const editorAnnotations = editor.session.getAnnotations();
    const newAnnotations = editorAnnotations.filter((a2) => a2.type !== "info");
    if (editorAnnotations.length !== newAnnotations.length) {
      editor.session.setAnnotations(newAnnotations);
    }
    setAnnotations(newAnnotations);
  });
  if (!supportsKeyboardAccessibility(ace)) {
    editor.commands.addCommand({
      name: "exitCodeEditor",
      bindKey: "Esc",
      exec: () => {
        editor.container.focus();
      }
    });
  }
  editor.on("focus", () => {
    editor.textInput.getElement().setAttribute("tabindex", 0);
  });
  editor.on("blur", () => {
    editor.textInput.getElement().setAttribute("tabindex", -1);
  });
  editor.textInput.getElement().setAttribute("tabindex", -1);
  editor.commands.removeCommand("showSettingsMenu", false);
  editor.on("guttermousedown", (e) => {
    e.stop();
  });
  const moveCursorToAnnotation = (a2) => {
    if (typeof a2.row === "number") {
      editor.gotoLine(a2.row + 1, a2.column || 0, false);
    }
  };
  const openAnnotation = (row) => {
    const currentAnnotations = editor.session.getAnnotations().filter((a2) => a2.row === row && a2.type !== "info");
    const errors = currentAnnotations.filter((a2) => a2.type === "error");
    if (errors.length > 0) {
      setHighlightedAnnotation(errors[0]);
      setPaneStatus("error");
      moveCursorToAnnotation(errors[0]);
    } else if (currentAnnotations.length > 0) {
      setHighlightedAnnotation(currentAnnotations[0]);
      setPaneStatus("warning");
      moveCursorToAnnotation(currentAnnotations[0]);
    } else {
      setHighlightedAnnotation(void 0);
      setPaneStatus("hidden");
      editor.gotoLine(row + 1, 0, false);
    }
  };
  editor.on("gutterclick", (e) => {
    const { row } = e.getDocumentPosition();
    openAnnotation(row);
  });
  editor.on("gutterkeydown", (e) => {
    if (e.isInAnnotationLane() && (e.getKey() === "space" || e.getKey() === "return")) {
      const row = e.getRow();
      openAnnotation(row);
    }
  });
  editor.setHighlightActiveLine(false);
  editor.$updateHighlightActiveLine = function() {
    const session = this.getSession();
    let highlight;
    if (this.$highlightActiveLine) {
      if (this.$selectionStyle !== "line" || !this.selection.isMultiLine()) {
        highlight = this.getCursorPosition();
      }
      if (this.renderer.$maxLines && this.session.getLength() === 1 && !(this.renderer.$minLines > 1)) {
        highlight = false;
      }
    }
    if (session.$highlightLineMarker && !highlight) {
      session.removeMarker(session.$highlightLineMarker.id);
      session.$highlightLineMarker = null;
    } else if (!session.$highlightLineMarker && highlight) {
      const range2 = new ace.Range(highlight.row, 0, highlight.row, Infinity);
      range2.id = session.addMarker(range2, "ace_active-line", "fullLine");
      session.$highlightLineMarker = range2;
    } else if (highlight) {
      session.$highlightLineMarker.start.row = highlight.row;
      session.$highlightLineMarker.end.row = highlight.row;
      session.$highlightLineMarker.start.column = 0;
      session._signal("changeBackMarker");
    }
  };
  editor.setHighlightActiveLine(true);
  editor.on("change", () => {
    if (editor.getValue().length === 0) {
      editor.session.clearAnnotations();
    }
  });
  editor.on("showGutterTooltip", (tooltip) => {
    tooltip.hide();
  });
}

// node_modules/@cloudscape-design/components/code-editor/preferences-modal.js
var import_react113 = __toESM(require_react());

// node_modules/@cloudscape-design/components/select/internal.js
var import_react112 = __toESM(require_react());

// node_modules/@cloudscape-design/components/select/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/select/styles.scoped.css";
var styles_css_default35 = {
  "root": "awsui_root_r2vco_wi4df_93"
};

// node_modules/@cloudscape-design/components/select/internal.js
var InternalSelect = import_react112.default.forwardRef((_a, externalRef) => {
  var _b;
  var { options, filteringType = "none", filteringPlaceholder, filteringAriaLabel, filteringClearAriaLabel, filteringResultsText, ariaRequired, placeholder, disabled, ariaLabel, statusType = "finished", empty, loadingText, finishedText, errorText, recoveryText, noMatch, triggerVariant = "label", renderHighlightedAriaLive, selectedOption, onBlur, onFocus, onLoadItems, onChange, virtualScroll, expandToViewport, autoFocus, __inFilteringToken, __internalRootRef = null } = _a, restProps = __rest(_a, ["options", "filteringType", "filteringPlaceholder", "filteringAriaLabel", "filteringClearAriaLabel", "filteringResultsText", "ariaRequired", "placeholder", "disabled", "ariaLabel", "statusType", "empty", "loadingText", "finishedText", "errorText", "recoveryText", "noMatch", "triggerVariant", "renderHighlightedAriaLive", "selectedOption", "onBlur", "onFocus", "onLoadItems", "onChange", "virtualScroll", "expandToViewport", "autoFocus", "__inFilteringToken", "__internalRootRef"]);
  const baseProps = getBaseProps(restProps);
  const formFieldContext = useFormFieldContext(restProps);
  const i18n = useInternalI18n("select");
  const errorIconAriaLabel = i18n("errorIconAriaLabel", restProps.errorIconAriaLabel);
  const selectedAriaLabel = i18n("selectedAriaLabel", restProps.selectedAriaLabel);
  const { handleLoadMore, handleRecoveryClick, fireLoadItems } = useLoadItems({
    onLoadItems,
    options,
    statusType
  });
  checkControlled("Select", "selectedOption", selectedOption, "onChange", onChange);
  checkOptionValueField("Select", "options", options);
  const [filteringValue, setFilteringValue] = (0, import_react112.useState)("");
  const { filteredOptions, parentMap, totalCount, matchesCount } = prepareOptions(options, filteringType, filteringValue);
  const rootRef = (0, import_react112.useRef)(null);
  const triggerRef = (0, import_react112.useRef)(null);
  const selfControlId = useUniqueId("trigger");
  const controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;
  const scrollToIndex = (0, import_react112.useRef)(null);
  const { isOpen, highlightType, highlightedOption, highlightedIndex, getTriggerProps, getDropdownProps, getFilterProps, getMenuProps, getOptionProps: getOptionProps2, highlightOption, selectOption, announceSelected } = useSelect({
    selectedOptions: selectedOption ? [selectedOption] : [],
    updateSelectedOption: (option) => fireNonCancelableEvent(onChange, { selectedOption: option }),
    options: filteredOptions,
    filteringType,
    onBlur,
    onFocus,
    externalRef,
    fireLoadItems,
    setFilteringValue,
    statusType
  });
  const handleNativeSearch = useNativeSearch({
    isEnabled: filteringType === "none",
    options: filteredOptions,
    highlightOption: !isOpen ? selectOption : highlightOption,
    highlightedOption: !isOpen ? selectedOption : highlightedOption === null || highlightedOption === void 0 ? void 0 : highlightedOption.option
  });
  const selectAriaLabelId = useUniqueId("select-arialabel-");
  const footerId = useUniqueId("footer");
  (0, import_react112.useEffect)(() => {
    var _a2;
    (_a2 = scrollToIndex.current) === null || _a2 === void 0 ? void 0 : _a2.call(scrollToIndex, highlightedIndex);
  }, [highlightedIndex]);
  const filter = import_react112.default.createElement(filter_default, Object.assign({ clearAriaLabel: filteringClearAriaLabel, filteringType, placeholder: filteringPlaceholder, ariaLabel: filteringAriaLabel, ariaRequired, value: filteringValue }, getFilterProps()));
  const trigger = import_react112.default.createElement(trigger_default, Object.assign({ ref: triggerRef, placeholder, disabled, triggerVariant, triggerProps: getTriggerProps(disabled, autoFocus), selectedOption, isOpen, inFilteringToken: __inFilteringToken }, formFieldContext, { controlId, ariaLabelledby: joinStrings(formFieldContext.ariaLabelledby, selectAriaLabelId) }));
  const isEmpty = !options || options.length === 0;
  const isNoMatch = filteredOptions && filteredOptions.length === 0;
  const isFiltered = filteringType !== "none" && filteringValue.length > 0 && filteredOptions && filteredOptions.length > 0;
  const filteredText = isFiltered ? filteringResultsText === null || filteringResultsText === void 0 ? void 0 : filteringResultsText(matchesCount, totalCount) : void 0;
  const dropdownStatus = useDropdownStatus({
    statusType,
    empty,
    loadingText,
    finishedText,
    errorText,
    recoveryText,
    isEmpty,
    isNoMatch,
    noMatch,
    isFiltered,
    filteringResultsText: filteredText,
    errorIconAriaLabel,
    onRecoveryClick: handleRecoveryClick
  });
  const menuProps = Object.assign(Object.assign({}, getMenuProps()), { onLoadMore: handleLoadMore, ariaLabelledby: joinStrings(selectAriaLabelId, controlId), ariaDescribedby: dropdownStatus.content ? footerId : void 0 });
  const announcement = useAnnouncement({
    announceSelected,
    highlightedOption,
    getParent: (option) => {
      var _a2;
      return (_a2 = parentMap.get(option)) === null || _a2 === void 0 ? void 0 : _a2.option;
    },
    selectedAriaLabel,
    renderHighlightedAriaLive
  });
  const ListComponent = virtualScroll ? virtual_list_default : plain_list_default;
  const handleMouseDown = (event) => {
    const target = event.target;
    if (target !== document.activeElement) {
      event.preventDefault();
    }
  };
  const mergedRef = useMergeRefs(rootRef, __internalRootRef);
  return import_react112.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: mergedRef, className: clsx_m_default(styles_css_default35.root, baseProps.className), onKeyPress: handleNativeSearch }),
    import_react112.default.createElement(
      dropdown_default,
      Object.assign({}, getDropdownProps(), { open: isOpen, stretchTriggerHeight: __inFilteringToken, trigger, header: filter, onMouseDown: handleMouseDown, footer: dropdownStatus.isSticky ? import_react112.default.createElement(dropdown_footer_default, { content: isOpen ? dropdownStatus.content : null, id: footerId }) : null, expandToViewport }),
      import_react112.default.createElement(ListComponent, { listBottom: !dropdownStatus.isSticky ? import_react112.default.createElement(dropdown_footer_default, { content: isOpen ? dropdownStatus.content : null, id: footerId }) : null, menuProps, getOptionProps: getOptionProps2, filteredOptions, filteringValue, ref: scrollToIndex, hasDropdownStatus: dropdownStatus.content !== null, screenReaderContent: announcement, highlightType })
    ),
    import_react112.default.createElement(ScreenreaderOnly, { id: selectAriaLabelId }, ariaLabel)
  );
});
var internal_default14 = InternalSelect;

// node_modules/@cloudscape-design/components/code-editor/ace-themes.js
var LightThemes = [
  { value: "chrome", label: "Chrome" },
  { value: "clouds", label: "Clouds" },
  { value: "crimson_editor", label: "Crimson Editor" },
  { value: "dawn", label: "Dawn" },
  { value: "dreamweaver", label: "Dreamweaver" },
  { value: "eclipse", label: "Eclipse" },
  { value: "github", label: "GitHub" },
  { value: "iplastic", label: "IPlastic" },
  { value: "solarized_light", label: "Solarized Light" },
  { value: "textmate", label: "TextMate" },
  { value: "tomorrow", label: "Tomorrow" },
  { value: "xcode", label: "Xcode" },
  { value: "kuroir", label: "Kuroir" },
  { value: "katzenmilch", label: "KatzenMilch" },
  { value: "sqlserver", label: "SQL Server" }
];
var DarkThemes = [
  { value: "ambiance", label: "Ambiance" },
  { value: "chaos", label: "Chaos" },
  { value: "clouds_midnight", label: "Clouds Midnight" },
  { value: "dracula", label: "Dracula" },
  { value: "cobalt", label: "Cobalt" },
  { value: "gruvbox", label: "Gruvbox" },
  { value: "gob", label: "Green on Black" },
  { value: "idle_fingers", label: "idle Fingers" },
  { value: "kr_theme", label: "krTheme" },
  { value: "merbivore", label: "Merbivore" },
  { value: "merbivore_soft", label: "Merbivore Soft" },
  { value: "mono_industrial", label: "Mono Industrial" },
  { value: "monokai", label: "Monokai" },
  { value: "nord_dark", label: "Nord Dark" },
  { value: "pastel_on_dark", label: "Pastel on dark" },
  { value: "solarized_dark", label: "Solarized Dark" },
  { value: "terminal", label: "Terminal" },
  { value: "tomorrow_night", label: "Tomorrow Night" },
  { value: "tomorrow_night_blue", label: "Tomorrow Night Blue" },
  { value: "tomorrow_night_bright", label: "Tomorrow Night Bright" },
  { value: "tomorrow_night_eighties", label: "Tomorrow Night 80s" },
  { value: "twilight", label: "Twilight" },
  { value: "vibrant_ink", label: "Vibrant Ink" }
];

// node_modules/@cloudscape-design/components/code-editor/preferences-modal.js
function filterThemes(allThemes, available) {
  if (!available) {
    return allThemes;
  }
  return allThemes.filter((theme) => available.indexOf(theme.value) > -1);
}
var preferences_modal_default = (props2) => {
  var _a, _b, _c, _d, _e, _f;
  const [wrapLines, setWrapLines] = (0, import_react113.useState)((_b = (_a = props2.preferences) === null || _a === void 0 ? void 0 : _a.wrapLines) !== null && _b !== void 0 ? _b : true);
  const [theme, setTheme] = (0, import_react113.useState)((_d = (_c = props2.preferences) === null || _c === void 0 ? void 0 : _c.theme) !== null && _d !== void 0 ? _d : props2.defaultTheme);
  const themeOptions = [
    {
      label: props2.i18nStrings.lightThemes,
      options: filterThemes(LightThemes, (_e = props2.themes) === null || _e === void 0 ? void 0 : _e.light)
    },
    {
      label: props2.i18nStrings.darkThemes,
      options: filterThemes(DarkThemes, (_f = props2.themes) === null || _f === void 0 ? void 0 : _f.dark)
    }
  ];
  const [selectedThemeOption, setSelectedThemeOption] = (0, import_react113.useState)(() => [...LightThemes, ...DarkThemes].filter((t) => t.value === theme)[0]);
  const onThemeSelected = (e) => {
    setTheme(e.detail.selectedOption.value);
    setSelectedThemeOption(e.detail.selectedOption);
  };
  return import_react113.default.createElement(
    InternalModal,
    { size: "medium", visible: true, onDismiss: props2.onDismiss, header: props2.i18nStrings.header, closeAriaLabel: props2.i18nStrings.cancel, footer: import_react113.default.createElement(
      InternalBox,
      { float: "right" },
      import_react113.default.createElement(
        InternalSpaceBetween,
        { direction: "horizontal", size: "xs" },
        import_react113.default.createElement(InternalButton, { onClick: props2.onDismiss }, props2.i18nStrings.cancel),
        import_react113.default.createElement(InternalButton, { onClick: () => props2.onConfirm({ wrapLines, theme }), variant: "primary" }, props2.i18nStrings.confirm)
      )
    ) },
    import_react113.default.createElement(
      ColumnLayout,
      { columns: 2, variant: "text-grid" },
      import_react113.default.createElement(
        "div",
        null,
        import_react113.default.createElement(internal_default5, { checked: wrapLines, onChange: (e) => setWrapLines(e.detail.checked) }, props2.i18nStrings.wrapLines)
      ),
      import_react113.default.createElement(
        "div",
        null,
        import_react113.default.createElement(
          InternalFormField,
          { label: props2.i18nStrings.theme },
          import_react113.default.createElement(internal_default14, { selectedOption: selectedThemeOption, onChange: onThemeSelected, options: themeOptions, filteringType: "auto", filteringAriaLabel: props2.i18nStrings.themeFilteringAriaLabel, filteringClearAriaLabel: props2.i18nStrings.themeFilteringClearAriaLabel, filteringPlaceholder: props2.i18nStrings.themeFilteringPlaceholder })
        )
      )
    )
  );
};

// node_modules/@cloudscape-design/components/code-editor/loading-screen.js
var import_react114 = __toESM(require_react());
var loading_screen_default = (props2) => import_react114.default.createElement(
  "div",
  { className: styles_css_default34["loading-screen"] },
  import_react114.default.createElement(InternalSpinner, { size: "normal", variant: "normal" }),
  "\xA0",
  props2.children
);

// node_modules/@cloudscape-design/components/code-editor/error-screen.js
var import_react115 = __toESM(require_react());
var error_screen_default = ({ children, recoveryText, onRecoveryClick }) => {
  const onFollow = (0, import_react115.useCallback)(() => fireNonCancelableEvent(onRecoveryClick), [onRecoveryClick]);
  return import_react115.default.createElement(
    "div",
    { className: styles_css_default34["error-screen"] },
    import_react115.default.createElement(internal_default, { name: "status-negative", variant: "error" }),
    "\xA0",
    children,
    "\xA0",
    import_react115.default.createElement(internal_default4, { variant: "recovery", onFollow }, recoveryText)
  );
};

// node_modules/@cloudscape-design/components/code-editor/status-bar.js
var import_react117 = __toESM(require_react());

// node_modules/@cloudscape-design/components/code-editor/tab-button.js
var import_react116 = __toESM(require_react());
var TabButton = import_react116.default.forwardRef(({ active, disabled, iconName, onClick, onFocus, onBlur, tabIndex, ariaHidden, ariaLabel, paneId, isRefresh, text, className }, ref) => {
  return import_react116.default.createElement(
    "button",
    { className: clsx_m_default([styles_css_default34["tab-button"], className], {
      [styles_css_default34["tab-button--active"]]: active,
      [styles_css_default34["tab-button--disabled"]]: disabled,
      [styles_css_default34["tab-button--refresh"]]: isRefresh
    }), type: "button", onClick, onFocus, onBlur, disabled, ref, tabIndex, role: "tab", "aria-selected": active, "aria-controls": paneId, "aria-hidden": ariaHidden, "aria-label": ariaLabel },
    import_react116.default.createElement(internal_default, { name: iconName }),
    " ",
    text
  );
});

// node_modules/@cloudscape-design/components/code-editor/status-bar.js
function InternalStatusBar({ languageLabel, cursorPosition, paneStatus, onErrorPaneToggle, onWarningPaneToggle, onTabFocus, onTabBlur, errorsTabRef, warningsTabRef, isTabFocused, paneId, onPreferencesOpen, i18nStrings, errorCount, warningCount, leftBarRef, isVirtual, minifyCounters, isRefresh }) {
  const i18n = useInternalI18n("code-editor");
  const errorText = `${i18n("i18nStrings.errorsTab", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorsTab)}: ${errorCount}`;
  const warningText = `${i18n("i18nStrings.warningsTab", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.warningsTab)}: ${warningCount}`;
  return import_react117.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default34["status-bar"], {
      [styles_css_default34["status-bar-with-hidden-pane"]]: paneStatus === "hidden",
      [styles_css_default34["status-bar-virtual"]]: isVirtual
    }), "aria-hidden": isVirtual },
    import_react117.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default34["status-bar__left"], {
        [styles_css_default34["status-bar__left-virtual"]]: isVirtual
      }), ref: leftBarRef },
      import_react117.default.createElement("span", { className: styles_css_default34["status-bar__language-mode"] }, languageLabel),
      import_react117.default.createElement("span", { className: styles_css_default34["status-bar__cursor-position"] }, cursorPosition),
      import_react117.default.createElement(
        "div",
        { role: "tablist" },
        import_react117.default.createElement(TabButton, { text: minifyCounters ? ` ${errorCount}` : errorText, className: styles_css_default34["tab-button--errors"], iconName: "status-negative", disabled: errorCount === 0 || isVirtual, active: paneStatus === "error", onClick: onErrorPaneToggle, onFocus: onTabFocus, onBlur: onTabBlur, ref: errorsTabRef, ariaLabel: errorText, paneId, isRefresh }),
        import_react117.default.createElement("span", { className: styles_css_default34["tab-button--divider"] }),
        import_react117.default.createElement(TabButton, { text: minifyCounters ? ` ${warningCount}` : warningText, className: styles_css_default34["tab-button--warnings"], iconName: "status-warning", disabled: warningCount === 0 || isVirtual, active: paneStatus === "warning", onClick: onWarningPaneToggle, onFocus: onTabFocus, onBlur: onTabBlur, ref: warningsTabRef, tabIndex: paneStatus === "error" && isTabFocused ? -1 : void 0, ariaHidden: paneStatus === "error" && isTabFocused ? true : void 0, ariaLabel: warningText, paneId, isRefresh })
      ),
      import_react117.default.createElement(
        live_region_default,
        { assertive: true },
        import_react117.default.createElement(
          "span",
          null,
          errorText,
          " "
        ),
        import_react117.default.createElement("span", null, warningText)
      )
    ),
    import_react117.default.createElement(
      "div",
      { className: styles_css_default34["status-bar__right"] },
      import_react117.default.createElement(
        "div",
        { className: styles_css_default34["status-bar__cog-button"] },
        import_react117.default.createElement(InternalButton, { disabled: isVirtual, formAction: "none", variant: "icon", iconName: "settings", iconAlt: "Settings", ariaLabel: i18n("i18nStrings.preferencesButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesButtonAriaLabel), onClick: onPreferencesOpen, __nativeAttributes: {
          tabIndex: paneStatus !== "hidden" && isTabFocused ? -1 : void 0,
          "aria-hidden": paneStatus !== "hidden" && isTabFocused ? true : void 0
        } })
      )
    )
  );
}
var StatusBar = (_a) => {
  var { errorsTabRef, warningsTabRef } = _a, restProps = __rest(_a, ["errorsTabRef", "warningsTabRef"]);
  const [realWidth, statusLeftBarRef] = useContainerQuery((rect) => rect.width);
  const [virtualWidth, virtualStatusLeftBarRef] = useContainerQuery((rect) => rect.width);
  const minifyCounters = virtualWidth !== null && realWidth !== null && virtualWidth > realWidth;
  return import_react117.default.createElement(
    import_react117.default.Fragment,
    null,
    import_react117.default.createElement(InternalStatusBar, Object.assign({}, restProps, { isVirtual: false, leftBarRef: statusLeftBarRef, errorsTabRef, warningsTabRef, minifyCounters })),
    import_react117.default.createElement(InternalStatusBar, Object.assign({}, restProps, { isVirtual: true, leftBarRef: virtualStatusLeftBarRef, minifyCounters: false }))
  );
};

// node_modules/@cloudscape-design/components/code-editor/index.js
var CodeEditor = (0, import_react118.forwardRef)((props2, ref) => {
  const codeEditorRef = (0, import_react118.useRef)(null);
  const { __internalRootRef } = useBaseComponent("CodeEditor");
  const { controlId, ariaLabelledby, ariaDescribedby } = useFormFieldContext(props2);
  const { ace, value, language, i18nStrings, editorContentHeight, onEditorContentResize, ariaLabel, languageLabel: customLanguageLabel } = props2, rest = __rest(props2, ["ace", "value", "language", "i18nStrings", "editorContentHeight", "onEditorContentResize", "ariaLabel", "languageLabel"]);
  const [editorHeight = 480, setEditorHeight] = useControllable(editorContentHeight, onEditorContentResize, 480, {
    componentName: "code-editor",
    changeHandler: "onEditorContentResize",
    controlledProp: "editorContentHeight"
  });
  const baseProps = getBaseProps(rest);
  const i18n = useInternalI18n("code-editor");
  const [editor, setEditor] = (0, import_react118.useState)();
  const mode = useCurrentMode(__internalRootRef);
  const defaultTheme = mode === "dark" ? DEFAULT_DARK_THEME : DEFAULT_LIGHT_THEME;
  (0, import_react118.useEffect)(() => {
    if (!editor) {
      return;
    }
    const { textarea } = editor.renderer;
    if (!textarea) {
      return;
    }
    const updateAttribute = (attribute, value2) => value2 ? textarea.setAttribute(attribute, value2) : textarea.removeAttribute(attribute);
    updateAttribute("id", controlId);
    updateAttribute("aria-label", ariaLabel);
    updateAttribute("aria-labelledby", ariaLabelledby);
    updateAttribute("aria-describedby", ariaDescribedby);
  }, [ariaLabel, ariaDescribedby, ariaLabelledby, controlId, editor]);
  const [paneStatus, setPaneStatus] = (0, import_react118.useState)("hidden");
  const [annotations, setAnnotations] = (0, import_react118.useState)([]);
  const [highlightedAnnotation, setHighlightedAnnotation] = (0, import_react118.useState)();
  const [cursorPosition, setCursorPosition] = (0, import_react118.useState)({ row: 0, column: 0 });
  const [isTabFocused, setTabFocused] = (0, import_react118.useState)(false);
  const errorsTabRef = (0, import_react118.useRef)(null);
  const warningsTabRef = (0, import_react118.useRef)(null);
  (0, import_react118.useEffect)(() => {
    const elem = codeEditorRef.current;
    if (!ace || !elem) {
      return;
    }
    const config = getDefaultConfig(ace);
    setEditor(ace.edit(elem, Object.assign(Object.assign({}, config), { theme: getAceTheme(getDefaultTheme(elem)) })));
  }, [ace, props2.loading]);
  const [codeEditorWidth, codeEditorMeasureRef] = useContainerQuery((rect) => rect.width);
  const mergedRef = useMergeRefs(codeEditorMeasureRef, __internalRootRef);
  useForwardFocus(ref, codeEditorRef);
  const isRefresh = useVisualRefresh();
  (0, import_react118.useEffect)(() => {
    editor === null || editor === void 0 ? void 0 : editor.resize();
  }, [editor, editorContentHeight, codeEditorWidth]);
  const paneId = useUniqueId("code-editor-pane");
  (0, import_react118.useEffect)(() => {
    if (!ace || !editor) {
      return;
    }
    setupEditor(ace, editor, setAnnotations, setCursorPosition, setHighlightedAnnotation, setPaneStatus);
    return () => {
      editor === null || editor === void 0 ? void 0 : editor.destroy();
    };
  }, [ace, editor, __internalRootRef]);
  (0, import_react118.useEffect)(() => {
    if (!editor) {
      return;
    }
    if (value === editor.getValue()) {
      return;
    }
    const pos = editor.session.selection.toJSON();
    editor.setValue(value, -1);
    editor.session.selection.fromJSON(pos);
  }, [editor, value]);
  (0, import_react118.useEffect)(() => {
    editor === null || editor === void 0 ? void 0 : editor.session.setMode(`ace/mode/${language}`);
  }, [editor, language]);
  (0, import_react118.useEffect)(() => {
    var _a, _b, _c, _d;
    if (!editor) {
      return;
    }
    const theme = (_b = (_a = props2.preferences) === null || _a === void 0 ? void 0 : _a.theme) !== null && _b !== void 0 ? _b : defaultTheme;
    editor.setTheme(getAceTheme(theme));
    editor.session.setUseWrapMode((_d = (_c = props2.preferences) === null || _c === void 0 ? void 0 : _c.wrapLines) !== null && _d !== void 0 ? _d : true);
  }, [editor, defaultTheme, props2.preferences]);
  useChangeEffect(editor, props2.onChange, props2.onDelayedChange);
  (0, import_react118.useEffect)(() => {
    if (annotations.length === 0) {
      setPaneStatus("hidden");
    }
    if (props2.onValidate) {
      fireNonCancelableEvent(props2.onValidate, { annotations });
    }
  }, [annotations, props2.onValidate]);
  const languageLabel = customLanguageLabel !== null && customLanguageLabel !== void 0 ? customLanguageLabel : getLanguageLabel(language);
  const errorCount = annotations.filter((a2) => a2.type === "error").length;
  const warningCount = annotations.filter((a2) => a2.type === "warning").length;
  const currentAnnotations = (0, import_react118.useMemo)(() => annotations.filter((a2) => a2.type === paneStatus), [annotations, paneStatus]);
  const onEditorKeydown = (0, import_react118.useCallback)((e) => {
    if (editor && e.target === editor.container && e.keyCode === KeyCode.enter) {
      e.stopPropagation();
      e.preventDefault();
      editor.focus();
    }
  }, [editor]);
  const onTabFocus = (0, import_react118.useCallback)(() => setTabFocused(true), []);
  const onTabBlur = (0, import_react118.useCallback)(() => setTabFocused(false), []);
  const onResize = (0, import_react118.useCallback)(() => {
    editor === null || editor === void 0 ? void 0 : editor.resize();
  }, [editor]);
  const onErrorPaneToggle = (0, import_react118.useCallback)(() => {
    setPaneStatus(paneStatus !== "error" ? "error" : "hidden");
  }, [paneStatus]);
  const onWarningPaneToggle = (0, import_react118.useCallback)(() => {
    setPaneStatus(paneStatus !== "warning" ? "warning" : "hidden");
  }, [paneStatus]);
  const onPaneClose = () => {
    setPaneStatus("hidden");
  };
  const onAnnotationClick = ({ row = 0, column = 0 }) => {
    if (!editor) {
      return;
    }
    editor.focus();
    editor.gotoLine(row + 1, column, false);
    setHighlightedAnnotation(void 0);
  };
  const onAnnotationClear = (0, import_react118.useCallback)(() => {
    setHighlightedAnnotation(void 0);
  }, []);
  const [isPreferencesModalVisible, setPreferencesModalVisible] = (0, import_react118.useState)(false);
  const onPreferencesOpen = () => setPreferencesModalVisible(true);
  const onPreferencesConfirm = (p) => {
    fireNonCancelableEvent(props2.onPreferencesChange, p);
    setPreferencesModalVisible(false);
  };
  const onPreferencesDismiss = () => setPreferencesModalVisible(false);
  const isPaneVisible = paneStatus !== "hidden";
  return import_react118.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default34["code-editor"], baseProps.className, { [styles_css_default34["code-editor-refresh"]]: isRefresh }), ref: mergedRef }),
    props2.loading && import_react118.default.createElement(
      loading_screen_default,
      null,
      import_react118.default.createElement(live_region_default, { visible: true }, i18n("i18nStrings.loadingState", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.loadingState))
    ),
    !ace && !props2.loading && import_react118.default.createElement(error_screen_default, { recoveryText: i18n("i18nStrings.errorStateRecovery", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorStateRecovery), onRecoveryClick: props2.onRecoveryClick }, i18n("i18nStrings.errorState", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorState)),
    ace && !props2.loading && import_react118.default.createElement(
      import_react118.default.Fragment,
      null,
      import_react118.default.createElement(
        ResizableBox,
        { height: Math.max(editorHeight, 20), minHeight: 20, onResize: (height) => {
          setEditorHeight(height);
          onResize();
          fireNonCancelableEvent(onEditorContentResize, { height });
        } },
        import_react118.default.createElement("div", { ref: codeEditorRef, className: clsx_m_default(styles_css_default34.editor, styles_css_default34.ace, isRefresh && styles_css_default34["editor-refresh"]), onKeyDown: onEditorKeydown, tabIndex: 0, role: "group", "aria-label": i18n("i18nStrings.editorGroupAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.editorGroupAriaLabel) })
      ),
      import_react118.default.createElement(
        "div",
        { role: "group", "aria-label": i18n("i18nStrings.statusBarGroupAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.statusBarGroupAriaLabel) },
        import_react118.default.createElement(StatusBar, { languageLabel, cursorPosition: i18n("i18nStrings.cursorPosition", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cursorPosition(cursorPosition.row + 1, cursorPosition.column + 1), (format3) => format3({ row: cursorPosition.row + 1, column: cursorPosition.column + 1 })), errorCount, warningCount, paneStatus, onErrorPaneToggle, onWarningPaneToggle, onTabFocus, onTabBlur, errorsTabRef, warningsTabRef, i18nStrings, isTabFocused, paneId: isPaneVisible ? paneId : void 0, onPreferencesOpen, isRefresh }),
        import_react118.default.createElement(Pane, { id: paneId, visible: isPaneVisible, annotations: currentAnnotations, highlighted: highlightedAnnotation, onAnnotationClick, onAnnotationClear, onClose: onPaneClose, cursorPositionLabel: i18n("i18nStrings.cursorPosition", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cursorPosition, (format3) => (row, column) => format3({ row, column })), closeButtonAriaLabel: i18n("i18nStrings.paneCloseButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.paneCloseButtonAriaLabel) })
      ),
      isPreferencesModalVisible && import_react118.default.createElement(preferences_modal_default, { onConfirm: onPreferencesConfirm, onDismiss: onPreferencesDismiss, themes: props2.themes, preferences: props2.preferences, defaultTheme, i18nStrings: {
        header: i18n("i18nStrings.preferencesModalHeader", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalHeader),
        cancel: i18n("i18nStrings.preferencesModalCancel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalCancel),
        confirm: i18n("i18nStrings.preferencesModalConfirm", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalConfirm),
        wrapLines: i18n("i18nStrings.preferencesModalWrapLines", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalWrapLines),
        theme: i18n("i18nStrings.preferencesModalTheme", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalTheme),
        lightThemes: i18n("i18nStrings.preferencesModalLightThemes", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalLightThemes),
        darkThemes: i18n("i18nStrings.preferencesModalDarkThemes", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalDarkThemes),
        themeFilteringAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringAriaLabel,
        themeFilteringClearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringClearAriaLabel,
        themeFilteringPlaceholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesModalThemeFilteringPlaceholder
      } })
    )
  );
});
applyDisplayName(CodeEditor, "CodeEditor");
var code_editor_default = CodeEditor;

// node_modules/@cloudscape-design/components/column-layout/index.js
var import_react119 = __toESM(require_react());
function ColumnLayout2(_a) {
  var { columns = 1, variant = "default", borders = "none", disableGutters = false } = _a, props2 = __rest(_a, ["columns", "variant", "borders", "disableGutters"]);
  const baseComponentProps = useBaseComponent("ColumnLayout");
  const externalProps = getExternalProps(props2);
  return import_react119.default.createElement(ColumnLayout, Object.assign({ columns, variant, borders, disableGutters }, externalProps, baseComponentProps));
}
applyDisplayName(ColumnLayout2, "ColumnLayout");

// node_modules/@cloudscape-design/components/container/index.js
var import_react121 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/analytics/components/analytics-funnel.js
var import_react120 = __toESM(require_react());
var FUNNEL_VERSION = "1.0";
var AnalyticsFunnel = (_a) => {
  var { children } = _a, props2 = __rest(_a, ["children"]);
  const [funnelInteractionId, setFunnelInteractionId] = (0, import_react120.useState)("");
  const [submissionAttempt, setSubmissionAttempt] = (0, import_react120.useState)(0);
  const isVisualRefresh = useVisualRefresh();
  const funnelState = (0, import_react120.useRef)("default");
  const errorCount = (0, import_react120.useRef)(0);
  const loadingButtonCount = (0, import_react120.useRef)(0);
  (0, import_react120.useEffect)(() => {
    funnelState.current = "default";
    const funnelInteractionId2 = FunnelMetrics.funnelStart({
      funnelNameSelector: getFunnelNameSelector(),
      optionalStepNumbers: props2.optionalStepNumbers,
      funnelType: props2.funnelType,
      totalFunnelSteps: props2.totalFunnelSteps,
      componentVersion: PACKAGE_VERSION,
      theme: isVisualRefresh ? "vr" : "classic",
      funnelVersion: FUNNEL_VERSION
    });
    setFunnelInteractionId(funnelInteractionId2);
    return () => {
      if (funnelState.current === "validating") {
        FunnelMetrics.funnelComplete({ funnelInteractionId: funnelInteractionId2 });
        funnelState.current = "complete";
      }
      if (funnelState.current === "complete") {
        FunnelMetrics.funnelSuccessful({ funnelInteractionId: funnelInteractionId2 });
      } else {
        FunnelMetrics.funnelCancelled({ funnelInteractionId: funnelInteractionId2 });
        funnelState.current === "cancelled";
      }
    };
  }, []);
  const funnelSubmit = () => {
    funnelState.current = "validating";
    const VALIDATION_WAIT_DELAY = 50;
    const LOADING_WAIT_DELAY = 100;
    const checkForCompleteness = () => {
      if (funnelState.current === "complete") {
        return;
      }
      if (loadingButtonCount.current > 0) {
        setTimeout(checkForCompleteness, LOADING_WAIT_DELAY);
        return;
      }
      if (errorCount.current === 0) {
        FunnelMetrics.funnelComplete({ funnelInteractionId });
        funnelState.current = "complete";
      } else {
        funnelState.current = "default";
      }
    };
    setTimeout(checkForCompleteness, VALIDATION_WAIT_DELAY);
  };
  const funnelNextOrSubmitAttempt = () => setSubmissionAttempt((i) => i + 1);
  const funnelCancel = () => {
  };
  const funnelContextValue = {
    funnelInteractionId,
    setFunnelInteractionId,
    funnelType: props2.funnelType,
    optionalStepNumbers: props2.optionalStepNumbers,
    totalFunnelSteps: props2.totalFunnelSteps,
    funnelSubmit,
    funnelCancel,
    submissionAttempt,
    funnelNextOrSubmitAttempt,
    funnelState,
    errorCount,
    loadingButtonCount
  };
  return import_react120.default.createElement(FunnelContext.Provider, { value: funnelContextValue }, children);
};
var AnalyticsFunnelStep = ({ children, stepNumber, stepNameSelector }) => {
  const { funnelInteractionId, funnelState } = useFunnel();
  const funnelStepProps = { [DATA_ATTR_FUNNEL_STEP]: stepNumber };
  (0, import_react120.useEffect)(() => {
    const stepName = getNameFromSelector(stepNameSelector);
    if (funnelInteractionId && funnelState.current === "default") {
      FunnelMetrics.funnelStepStart({
        funnelInteractionId,
        stepNumber,
        stepName,
        stepNameSelector,
        subStepAllSelector: getSubStepAllSelector()
      });
    }
    return () => {
      if (funnelInteractionId && funnelState.current === "default") {
        FunnelMetrics.funnelStepComplete({
          funnelInteractionId,
          stepNumber,
          stepName,
          stepNameSelector,
          subStepAllSelector: getSubStepAllSelector()
        });
      }
    };
  }, [funnelInteractionId, stepNumber, stepNameSelector]);
  const contextValue = { funnelInteractionId, stepNumber, stepNameSelector, funnelStepProps };
  return import_react120.default.createElement(FunnelStepContext.Provider, { value: contextValue }, typeof children === "function" ? children(contextValue) : children);
};
var AnalyticsFunnelSubStep = ({ children }) => {
  const { funnelInteractionId } = useFunnel();
  const { stepNumber, stepNameSelector } = useFunnelStep();
  const subStepId = useUniqueId("substep");
  const subStepSelector = getSubStepSelector(subStepId);
  const subStepNameSelector = getSubStepNameSelector(subStepId);
  return import_react120.default.createElement(FunnelSubStepContext.Provider, { value: {
    funnelInteractionId,
    stepNumber,
    stepNameSelector,
    subStepSelector,
    subStepNameSelector,
    subStepId
  } }, children);
};

// node_modules/@cloudscape-design/components/container/index.js
function Container(_a) {
  var { variant = "default", disableHeaderPaddings = false, disableContentPaddings = false } = _a, props2 = __rest(_a, ["variant", "disableHeaderPaddings", "disableContentPaddings"]);
  const baseComponentProps = useBaseComponent("Container");
  const externalProps = getExternalProps(props2);
  return import_react121.default.createElement(
    AnalyticsFunnelSubStep,
    null,
    import_react121.default.createElement(InternalContainer, Object.assign({ variant, disableHeaderPaddings, disableContentPaddings }, externalProps, baseComponentProps))
  );
}
applyDisplayName(Container, "Container");

// node_modules/@cloudscape-design/components/content-layout/index.js
var import_react123 = __toESM(require_react());

// node_modules/@cloudscape-design/components/content-layout/internal.js
var import_react122 = __toESM(require_react());

// node_modules/@cloudscape-design/components/content-layout/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/content-layout/styles.scoped.css";
var styles_css_default36 = {
  "layout": "awsui_layout_5gtk3_p744v_99",
  "is-visual-refresh": "awsui_is-visual-refresh_5gtk3_p744v_99",
  "background": "awsui_background_5gtk3_p744v_102",
  "header": "awsui_header_5gtk3_p744v_105",
  "is-overlap-disabled": "awsui_is-overlap-disabled_5gtk3_p744v_121",
  "content": "awsui_content_5gtk3_p744v_129",
  "has-header": "awsui_has-header_5gtk3_p744v_133"
};

// node_modules/@cloudscape-design/components/content-layout/internal.js
function InternalContentLayout(_a) {
  var { children, disableOverlap, header, __internalRootRef } = _a, rest = __rest(_a, ["children", "disableOverlap", "header", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const rootElement = (0, import_react122.useRef)(null);
  const mergedRef = useMergeRefs(rootElement, __internalRootRef);
  const isVisualRefresh = useVisualRefresh();
  const overlapElement = useDynamicOverlap();
  const isOverlapDisabled = !children || disableOverlap;
  return import_react122.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default36.layout, {
      [styles_css_default36["is-overlap-disabled"]]: isOverlapDisabled,
      [styles_css_default36["is-visual-refresh"]]: isVisualRefresh,
      [styles_css_default36["has-header"]]: !!header
    }), ref: mergedRef }),
    import_react122.default.createElement("div", { className: clsx_m_default(styles_css_default36.background, { [styles_css_default36["is-overlap-disabled"]]: isOverlapDisabled }, "awsui-context-content-header"), ref: overlapElement }),
    header && import_react122.default.createElement("div", { className: clsx_m_default(styles_css_default36.header, "awsui-context-content-header") }, header),
    import_react122.default.createElement("div", { className: styles_css_default36.content }, children)
  );
}

// node_modules/@cloudscape-design/components/content-layout/index.js
function ContentLayout(props2) {
  const baseComponentProps = useBaseComponent("ContentLayout");
  return import_react123.default.createElement(InternalContentLayout, Object.assign({}, props2, baseComponentProps));
}
applyDisplayName(ContentLayout, "ContentLayout");

// node_modules/@cloudscape-design/components/date-input/index.js
var import_react126 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-input/internal.js
var import_react125 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/masked-input/index.js
var import_react124 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/masked-input/utils/keys.js
var isSpecialCommand = (keyCode) => {
  return keyCode > 7 && keyCode < 47 && keyCode !== KeyCode.space;
};
var isClipboardCommand = (ctrlKey, metaKey) => ctrlKey || metaKey;
var isCommand = (keyCode, ctrlKey, metaKey) => isSpecialCommand(keyCode) || isClipboardCommand(ctrlKey, metaKey);
var isDigit = (char) => !isNaN(parseInt(char, 10));

// node_modules/@cloudscape-design/components/internal/components/masked-input/keyboard-handler.js
var backspaceHandler = (initialValue, format3, selectionStart, selectionEnd) => {
  const multiCharDelete = selectionStart !== selectionEnd;
  if (multiCharDelete) {
    const isCursorAtEnd = selectionEnd === initialValue.length;
    if (!isCursorAtEnd) {
      return format3.replaceDigitsWithZeroes(initialValue, selectionStart, selectionEnd);
    }
    return {
      value: initialValue.slice(0, selectionStart),
      position: selectionStart
    };
  }
  const isSeparator = format3.isSegmentStart(selectionStart);
  const atEnd = selectionStart === initialValue.length;
  if (!atEnd) {
    if (isSeparator) {
      return format3.deleteSeparator(initialValue, selectionStart);
    } else {
      return format3.deleteDigit(initialValue, selectionStart);
    }
  }
  if (isSeparator) {
    return {
      value: initialValue.slice(0, selectionStart - 2),
      position: selectionStart - 2
    };
  }
  return {
    value: initialValue.slice(0, selectionStart - 1),
    position: selectionStart - 1
  };
};
var keyHandler = (initialValue, key, format3, selectionStart, selectionEnd) => {
  let value = initialValue;
  const position = selectionStart;
  if (selectionStart === value.length && value.length === format3.getMaxLength()) {
    return { value, position };
  }
  if (selectionStart !== value.length && selectionEnd === value.length) {
    const sliceEnd = format3.isCursorAtSeparator(selectionStart) ? selectionStart + 1 : selectionStart;
    value = initialValue.slice(0, sliceEnd);
  }
  if (format3.isCursorAtSeparator(position)) {
    return { value, position: position + 1 };
  }
  return format3.processKey(value, key, position);
};
var enterHandler = (value, format3) => {
  const autoCompletedValue = format3.autoComplete(value);
  const position = autoCompletedValue.length;
  return { value: autoCompletedValue, position };
};

// node_modules/@cloudscape-design/components/internal/components/masked-input/use-mask.js
var onAutoComplete = (value, onChange, maskFormat) => {
  if (!value) {
    return;
  }
  const autoCompletedValue = maskFormat.autoComplete(value);
  if (autoCompletedValue !== value) {
    onChange(autoCompletedValue);
  }
};
var preventDefault = (event, result) => result && event.preventDefault();
var useMask = ({ value = "", onBlur, onChange, onKeyDown, format: format3, inputRef, autofix = false, disableAutocompleteOnBlur = false, setPosition }) => {
  if (!format3.isValid(value)) {
    warnOnce("useMask", `Invalid string "${value}" provided`);
  }
  const onMaskChange = (updatedValue) => {
    const autofixedUpdatedValue = autofix ? format3.correctMinMaxValues(updatedValue) : updatedValue;
    if (autofixedUpdatedValue === value || !format3.isValid(autofixedUpdatedValue)) {
      return;
    }
    onChange(autofixedUpdatedValue);
  };
  const initialValue = autofix ? format3.correctMinMaxValues(value) : value;
  const maskedValue = format3.getValidValue(initialValue);
  return {
    value: maskedValue,
    onKeyDown: (event) => {
      var _a, _b;
      const selectionStart = ((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.selectionStart) || 0;
      const selectionEnd = ((_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.selectionEnd) || 0;
      let result;
      const { keyCode, key, ctrlKey, metaKey } = event.detail;
      if (isDigit(key) || format3.isSeparator(key)) {
        result = keyHandler(maskedValue, key, format3, selectionStart, selectionEnd);
        preventDefault(event, result);
      } else if (keyCode === KeyCode.backspace) {
        result = backspaceHandler(maskedValue, format3, selectionStart, selectionEnd);
        preventDefault(event, result);
      } else if (keyCode === KeyCode.enter) {
        result = enterHandler(maskedValue, format3);
      } else if (!isCommand(keyCode, ctrlKey, metaKey)) {
        event.preventDefault();
      }
      if (result) {
        const { value: value2, position } = result;
        onMaskChange(value2);
        setPosition(position);
      }
      onKeyDown && onKeyDown(event);
    },
    onChange: ({ detail }) => onMaskChange(detail.value),
    onBlur: () => {
      if (!disableAutocompleteOnBlur) {
        onAutoComplete(maskedValue, onChange, format3);
      }
      onBlur && onBlur();
    },
    onPaste: (event) => {
      var _a, _b;
      const text = (event.clipboardData || window.clipboardData).getData("text");
      const selectionStart = ((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.selectionStart) || 0;
      const selectionEnd = ((_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.selectionEnd) || 0;
      const formattedText = format3.formatPastedText(text, maskedValue, selectionStart, selectionEnd);
      onMaskChange(formattedText);
    }
  };
};
var use_mask_default = useMask;

// node_modules/@cloudscape-design/components/internal/components/masked-input/utils/strings.js
var insertAt = (text, toInsert, start, end = start) => text.slice(0, start) + toInsert + text.slice(end);

// node_modules/@cloudscape-design/components/internal/components/masked-input/utils/mask-format.js
var MaskFormat = class {
  constructor({ separator, inputSeparators = [], segments }) {
    this.positionFormats = {};
    this.segments = [];
    this.separator = separator;
    this.inputSeparators = [...inputSeparators, separator];
    this.enrichSegmentDefinitions(segments);
  }
  tryAppendSeparator(value) {
    const withSeparator = `${value}${this.separator}`;
    return this.isValid(withSeparator) ? withSeparator : value;
  }
  isSeparator(key) {
    return this.inputSeparators.indexOf(key) !== -1;
  }
  isValid(value) {
    const inputSegments = value.split(this.separator);
    if (inputSegments.length > this.segments.length) {
      return false;
    }
    return inputSegments.every((segmentValue, i) => {
      const segment = this.segments[i];
      if (segmentValue === "") {
        if (i === inputSegments.length - 1) {
          return true;
        } else {
          return false;
        }
      }
      if (!segmentValue.match(/^\d+$/)) {
        return false;
      }
      if (segmentValue.length < segment.length && i !== inputSegments.length - 1) {
        return false;
      }
      const intValue = parseInt(segmentValue, 10);
      if (segmentValue.length > segment.length) {
        return false;
      }
      if (intValue < segment.min || intValue > segment.max(value)) {
        if (i === inputSegments.length - 1 && segmentValue.length < segment.length) {
          return true;
        }
        return false;
      }
      return true;
    });
  }
  getValidValue(value) {
    let validValue = value;
    do {
      if (this.isValid(validValue)) {
        return this.tryAppendSeparator(validValue);
      }
      validValue = validValue.substring(0, validValue.length - 1);
    } while (validValue.length > 0);
    return "";
  }
  autoComplete(value) {
    const [lastSegmentValue, ...completeSegmentValues] = value.split(this.separator).reverse();
    const lastSegment = this.segments[completeSegmentValues.length];
    const paddedLastSegmentValue = this.padWithDefaultValue(lastSegmentValue, lastSegment);
    const partial = [...completeSegmentValues.reverse(), paddedLastSegmentValue];
    while (partial.length < this.segments.length) {
      const nextSegment = this.segments[partial.length];
      const segmentValue = this.padWithDefaultValue("", nextSegment);
      partial.push(segmentValue);
    }
    value = partial.join(this.separator);
    value = this.correctMinMaxValues(value);
    return value;
  }
  getSegmentValueWithAddition(position, value, enteredDigit) {
    const segment = this.positionFormats[position];
    const segmentValue = value.substr(segment.start, segment.length);
    const segmentPosition = position - segment.start;
    const newValue = insertAt(segmentValue, enteredDigit, segmentPosition, segmentPosition + 1);
    return parseInt(newValue, 10);
  }
  replaceDigitsWithZeroes(value, cursorStart, cursorEnd) {
    const position = this.isCursorAtSeparator(cursorStart) ? cursorStart + 1 : cursorStart;
    if (this.isCursorAtSeparator(cursorStart)) {
      cursorStart++;
    }
    if (!this.isSegmentStart(cursorStart)) {
      const segment = this.positionFormats[cursorStart];
      value = insertAt(value, padLeftZeros("", segment.end - cursorStart), cursorStart, segment.end);
      cursorStart = segment.end + 1;
    }
    let currentSegment;
    while (cursorStart < cursorEnd && (currentSegment = this.positionFormats[cursorStart + 1])) {
      const insertionEnd = Math.min(cursorEnd, currentSegment.end);
      value = insertAt(value, padLeftZeros("", insertionEnd - currentSegment.start), currentSegment.start, insertionEnd);
      cursorStart = insertionEnd + 1;
    }
    value = this.correctMinMaxValues(value);
    return {
      value,
      position
    };
  }
  handleSeparatorInput(value, position) {
    if (position === value.length && !this.isSegmentStart(position)) {
      const segment = this.positionFormats[position];
      let segmentValue = value.substr(segment.start, segment.length);
      segmentValue = this.padWithDefaultValue(segmentValue, segment);
      value = insertAt(value, segmentValue, segment.start, segment.end);
      value = this.correctMinMaxValues(value);
      return {
        value,
        position: value.length
      };
    }
  }
  isCursorAtSeparator(position) {
    return 0 < position && position < this.getMaxLength() && this.positionFormats[position] === void 0;
  }
  isSegmentStart(position) {
    return position === 0 || this.isCursorAtSeparator(position - 1);
  }
  getSegmentMaxValue(value, position) {
    return this.positionFormats[position].max(value);
  }
  getSegmentMinValue(value, position) {
    return this.positionFormats[position].min;
  }
  getMaxLength() {
    const last = this.segments[this.segments.length - 1];
    return last.start + last.length;
  }
  deleteSeparator(value, position) {
    value = insertAt(value, "0", position - 2, position - 1);
    return {
      value: this.correctMinMaxValues(value),
      position: position - 2
    };
  }
  deleteDigit(value, position) {
    value = insertAt(value, "0", position - 1, position);
    const length = value.length;
    if (value.slice(length - 2) === "0:") {
      value = value.slice(0, length - 2);
    }
    return {
      value: this.correctMinMaxValues(value),
      position: position - 1
    };
  }
  correctMinMaxValues(value) {
    let segment = this.positionFormats[0];
    while (segment && value.length >= segment.end) {
      const segmentValue = parseInt(value.substr(segment.start, segment.length), 10);
      const segmentMax = segment.max(value);
      if (segmentValue < segment.min) {
        let toInsert = segment.min.toFixed();
        toInsert = padLeftZeros(toInsert, segment.length);
        value = insertAt(value, toInsert, segment.start, segment.end);
      }
      if (segmentValue > segmentMax) {
        value = insertAt(value, segmentMax.toFixed(), segment.start, segment.end);
      }
      segment = this.positionFormats[segment.end + 1];
    }
    return value.substr(0, this.segments[this.segments.length - 1].end);
  }
  formatPastedText(text, value, cursorStart, cursorEnd) {
    const keyArr = text.trim().split("");
    let position = cursorStart;
    let formattedValue = value;
    if (cursorEnd > cursorStart && cursorEnd === value.length) {
      formattedValue = value.slice(0, cursorStart);
    }
    for (const key of keyArr) {
      if (position >= this.getMaxLength()) {
        break;
      }
      const result = this.processKey(formattedValue, key, position);
      formattedValue = result.value;
      position = result.position;
    }
    return this.tryAppendSeparator(formattedValue);
  }
  processKey(initialValue, key, initialPosition) {
    let value = initialValue;
    let position = initialPosition;
    if (this.isSeparator(key)) {
      const result = this.handleSeparatorInput(value, position);
      if (result) {
        value = result.value;
        position = result.position;
      }
    } else {
      const isCursorAtEnd = position === value.length;
      const segmentValue = this.getSegmentValueWithAddition(position, value, key);
      const segmentMaxValue = this.getSegmentMaxValue(value, position);
      const segmentMinValue = this.getSegmentMinValue(value, position);
      const firstDigitGreater = parseInt(key, 10) > parseInt(segmentMaxValue.toFixed()[0], 10);
      const isValidPosition = isCursorAtEnd || segmentValue.toFixed().length === 1;
      const exceedsMaxAtSegmentStart = this.isSegmentStart(position) && isValidPosition && firstDigitGreater;
      if (exceedsMaxAtSegmentStart) {
        value = insertAt(value, `0${key}`, position, position + 2);
        position += 2;
      } else if (segmentValue > segmentMaxValue && this.isSegmentStart(position)) {
        value = insertAt(value, segmentMaxValue.toFixed(), position, position + segmentMaxValue.toFixed().length);
        position += segmentMaxValue.toFixed().length;
      } else if (segmentValue > segmentMaxValue) {
        value = insertAt(value, segmentMaxValue.toFixed(), position - 1, position + 1);
        position += 1;
      } else if (segmentValue < segmentMinValue && !this.isSegmentStart(position)) {
        value = insertAt(value, segmentMinValue.toFixed(), position, position + 1);
        position += 1;
      } else {
        value = insertAt(value, key, position, position + 1);
        position += 1;
      }
    }
    value = this.tryAppendSeparator(value);
    if (this.isCursorAtSeparator(position)) {
      position++;
    }
    return { value, position };
  }
  padWithDefaultValue(segmentValue, segment) {
    let defaultValue = (segment.default || segment.min).toFixed();
    defaultValue = padLeftZeros(defaultValue, segment.length);
    return insertAt(defaultValue, segmentValue, segment.length - segmentValue.length, segment.length);
  }
  enrichSegmentDefinitions(segments) {
    this.positionFormats = {};
    this.segments = [];
    let position = 0;
    for (const segment of segments) {
      const max3 = segment.max;
      const fullSegment = Object.assign(Object.assign({}, segment), { max: typeof max3 === "number" ? () => max3 : max3, start: position, end: position + segment.length });
      this.segments.push(fullSegment);
      for (let j = 0; j < fullSegment.length; j++) {
        this.positionFormats[position++] = fullSegment;
      }
      position++;
    }
  }
};
var mask_format_default = MaskFormat;

// node_modules/@cloudscape-design/components/internal/components/masked-input/index.js
var MaskedInput = import_react124.default.forwardRef((_a, ref) => {
  var { value, onBlur, onChange, onKeyDown, mask, autofix = false, disableAutocompleteOnBlur = false } = _a, rest = __rest(_a, ["value", "onBlur", "onChange", "onKeyDown", "mask", "autofix", "disableAutocompleteOnBlur"]);
  const baseProps = getBaseProps(rest);
  const formFieldContext = useFormFieldContext(rest);
  const inputRef = import_react124.default.useRef(null);
  const [cursorPosition, setCursorPosition] = (0, import_react124.useState)(null);
  (0, import_react124.useLayoutEffect)(() => {
    var _a2;
    if (cursorPosition !== null) {
      (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.setSelectionRange(cursorPosition, cursorPosition);
    }
  }, [cursorPosition, inputRef]);
  const _b = use_mask_default({
    format: new mask_format_default(mask),
    value,
    inputRef,
    autofix,
    disableAutocompleteOnBlur,
    onChange: (value2) => !rest.readOnly && fireNonCancelableEvent(onChange, { value: value2 }),
    onKeyDown: (event) => !rest.readOnly && onKeyDown && fireCancelableEvent(onKeyDown, event.detail, event),
    onBlur: () => fireNonCancelableEvent(onBlur),
    setPosition: setCursorPosition
  }), { onPaste } = _b, maskProps = __rest(_b, ["onPaste"]);
  const inputProps = Object.assign(Object.assign(Object.assign(Object.assign({}, rest), baseProps), formFieldContext), maskProps);
  const mergedRef = useMergeRefs(ref, inputRef);
  return import_react124.default.createElement(internal_default10, Object.assign({}, inputProps, { ref: mergedRef, __nativeAttributes: {
    onPaste
  } }));
});
var masked_input_default = MaskedInput;

// node_modules/@cloudscape-design/components/date-input/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/date-input/styles.scoped.css";
var styles_css_default37 = {
  "root": "awsui_root_yodkx_im8v7_5"
};

// node_modules/@cloudscape-design/components/date-input/internal.js
function daysMax(value) {
  const baseDate = displayToIso(value).substring(0, 7);
  return getDaysInMonth(parseDate(baseDate));
}
var maskArgs = {
  separator: "/",
  inputSeparators: ["-", ".", " "],
  segments: [
    { min: 0, max: 9999, default: 2e3, length: 4 },
    { min: 1, max: 12, length: 2 },
    { min: 1, max: daysMax, length: 2 }
  ]
};
var InternalDateInput = import_react125.default.forwardRef((_a, ref) => {
  var { value, onChange, __internalRootRef = null } = _a, props2 = __rest(_a, ["value", "onChange", "__internalRootRef"]);
  return import_react125.default.createElement(masked_input_default, Object.assign({ ref }, props2, { value: isoToDisplay(value || ""), onChange: (event) => fireNonCancelableEvent(onChange, { value: displayToIso(event.detail.value) }), className: clsx_m_default(styles_css_default37.root, props2.className), mask: maskArgs, autofix: true, autoComplete: false, disableAutocompleteOnBlur: false, disableBrowserAutocorrect: true, __internalRootRef }));
});
var internal_default15 = InternalDateInput;

// node_modules/@cloudscape-design/components/date-input/index.js
var DateInput = import_react126.default.forwardRef((props2, ref) => {
  const baseComponentProps = useBaseComponent("DateInput");
  return import_react126.default.createElement(internal_default15, Object.assign({}, props2, baseComponentProps, { ref }));
});
applyDisplayName(DateInput, "DateInput");
var date_input_default = DateInput;

// node_modules/@cloudscape-design/components/date-picker/index.js
var import_react128 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-picker/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/date-picker/styles.scoped.css";
var styles_css_default38 = {
  "root": "awsui_root_145pa_emdqk_93",
  "focus-lock": "awsui_focus-lock_145pa_emdqk_106",
  "calendar": "awsui_calendar_145pa_emdqk_110",
  "date-picker-container": "awsui_date-picker-container_145pa_emdqk_123",
  "date-picker-trigger": "awsui_date-picker-trigger_145pa_emdqk_128",
  "date-picker-input": "awsui_date-picker-input_145pa_emdqk_132",
  "open-calendar-button": "awsui_open-calendar-button_145pa_emdqk_137"
};

// node_modules/@cloudscape-design/components/internal/hooks/use-focus-tracker.js
var import_react127 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/focus-tracker.js
var FocusTracker = class {
  constructor(node, { onFocusEnter, onFocusLeave }, viewportId = "") {
    this.node = node;
    this.currentlyFocused = false;
    this.focusInListener = (event) => {
      const focusIsInside = containsOrEqual(this.node, event.target);
      if (!this.currentlyFocused && focusIsInside) {
        this.triggerFocus();
      }
    };
    this.focusOutListener = (event) => {
      const nextFocused = event.relatedTarget;
      let isNextFocusedInParent = !containsOrEqual(this.node, nextFocused);
      if (this.viewportId) {
        const viewport = document.getElementById(this.viewportId);
        isNextFocusedInParent = isNextFocusedInParent && !containsOrEqual(viewport, nextFocused);
      }
      if (this.currentlyFocused && (nextFocused === null || isNextFocusedInParent)) {
        this.triggerBlur();
      }
    };
    this.onFocusEnter = onFocusEnter;
    this.onFocusLeave = onFocusLeave;
    this.viewportId = viewportId;
  }
  initialize() {
    this.currentlyFocused = containsOrEqual(this.node, document.activeElement);
    document.addEventListener("focusin", this.focusInListener);
    document.addEventListener("focusout", this.focusOutListener);
  }
  destroy() {
    document.removeEventListener("focusin", this.focusInListener);
    document.removeEventListener("focusout", this.focusOutListener);
  }
  triggerBlur() {
    this.currentlyFocused = false;
    this.onFocusLeave();
  }
  triggerFocus() {
    this.currentlyFocused = true;
    this.onFocusEnter();
  }
};

// node_modules/@cloudscape-design/components/internal/hooks/use-focus-tracker.js
var useFocusTracker = ({ rootRef, onBlur, onFocus, viewportId }) => {
  const focusTracker = (0, import_react127.useRef)(null);
  (0, import_react127.useEffect)(() => {
    if (!rootRef.current) {
      return;
    }
    focusTracker.current = new FocusTracker(rootRef.current, {
      onFocusLeave: () => {
        fireNonCancelableEvent(onBlur);
      },
      onFocusEnter: () => {
        fireNonCancelableEvent(onFocus);
      }
    }, viewportId);
    focusTracker.current.initialize();
    return () => {
      var _a;
      (_a = focusTracker.current) === null || _a === void 0 ? void 0 : _a.destroy();
    };
  }, [rootRef, onBlur, onFocus, viewportId]);
};

// node_modules/@cloudscape-design/components/date-picker/index.js
var DatePicker = import_react128.default.forwardRef((_a, ref) => {
  var { locale: locale2 = "", startOfWeek: startOfWeek2, isDateEnabled, nextMonthAriaLabel, previousMonthAriaLabel, todayAriaLabel, placeholder = "", value = "", readOnly = false, disabled = false, onBlur, autoFocus = false, onChange, onFocus, name, ariaLabel, ariaRequired, controlId, invalid, openCalendarAriaLabel, expandToViewport } = _a, restProps = __rest(_a, ["locale", "startOfWeek", "isDateEnabled", "nextMonthAriaLabel", "previousMonthAriaLabel", "todayAriaLabel", "placeholder", "value", "readOnly", "disabled", "onBlur", "autoFocus", "onChange", "onFocus", "name", "ariaLabel", "ariaRequired", "controlId", "invalid", "openCalendarAriaLabel", "expandToViewport"]);
  const { __internalRootRef } = useBaseComponent("DatePicker");
  checkControlled("DatePicker", "value", value, "onChange", onChange);
  const contextLocale = useLocale();
  const normalizedLocale = normalizeLocale("DatePicker", locale2 || contextLocale);
  const baseProps = getBaseProps(restProps);
  const [isDropDownOpen, setIsDropDownOpen] = (0, import_react128.useState)(false);
  const { ariaLabelledby, ariaDescribedby } = useFormFieldContext(restProps);
  const internalInputRef = (0, import_react128.useRef)(null);
  const buttonRef = (0, import_react128.useRef)(null);
  useForwardFocus(ref, internalInputRef);
  const rootRef = (0, import_react128.useRef)(null);
  const dropdownId = useUniqueId("calender");
  const calendarDescriptionId = useUniqueId("calendar-description-");
  const mergedRef = useMergeRefs(rootRef, __internalRootRef);
  useFocusTracker({ rootRef, onBlur, onFocus, viewportId: expandToViewport ? dropdownId : "" });
  const onDropdownCloseHandler = (0, import_react128.useCallback)(() => setIsDropDownOpen(false), [setIsDropDownOpen]);
  const onButtonClickHandler = () => {
    if (!isDropDownOpen) {
      setIsDropDownOpen(true);
    }
  };
  const onWrapperKeyDownHandler = (event) => {
    var _a2;
    if (event.keyCode === KeyCode.escape && isDropDownOpen) {
      (_a2 = buttonRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
      setIsDropDownOpen(false);
    }
  };
  const onInputChangeHandler = (event) => {
    fireNonCancelableEvent(onChange, { value: event.detail.value });
  };
  const onInputBlurHandler = () => {
    if (!isDropDownOpen) {
      setIsDropDownOpen(false);
    }
  };
  const parsedValue = value && value.length >= 4 ? parseDate(value) : null;
  const baseDate = parsedValue || new Date();
  const trigger = import_react128.default.createElement(
    "div",
    { className: styles_css_default38["date-picker-trigger"] },
    import_react128.default.createElement(
      "div",
      { className: styles_css_default38["date-picker-input"] },
      import_react128.default.createElement(internal_default15, { name, invalid, controlId, ariaLabelledby, ariaDescribedby, ariaLabel, ariaRequired, value, disabled, readOnly, onChange: onInputChangeHandler, onBlur: onInputBlurHandler, placeholder, ref: internalInputRef, autoFocus, onFocus: onDropdownCloseHandler })
    ),
    import_react128.default.createElement(
      "div",
      null,
      import_react128.default.createElement(InternalButton, { iconName: "calendar", className: styles_css_default38["open-calendar-button"], onClick: onButtonClickHandler, ref: buttonRef, ariaLabel: openCalendarAriaLabel && openCalendarAriaLabel(value.length === 10 ? getDateLabel(normalizedLocale, parsedValue) : null), disabled: disabled || readOnly, formAction: "none" })
    )
  );
  baseProps.className = clsx_m_default(baseProps.className, styles_css_default38.root, styles_css_default38["date-picker-container"]);
  const handleMouseDown = (event) => {
    event.preventDefault();
  };
  return import_react128.default.createElement("div", Object.assign({}, baseProps, { ref: mergedRef, onKeyDown: !disabled && !readOnly ? onWrapperKeyDownHandler : void 0 }), disabled || readOnly ? trigger : import_react128.default.createElement(dropdown_default, { stretchWidth: true, stretchHeight: true, open: isDropDownOpen, onDropdownClose: onDropdownCloseHandler, onMouseDown: handleMouseDown, trigger, expandToViewport, scrollable: false, dropdownId }, isDropDownOpen && import_react128.default.createElement(
    focus_lock_default,
    { className: styles_css_default38["focus-lock"], autoFocus: true },
    import_react128.default.createElement(
      "div",
      { tabIndex: 0, className: styles_css_default38.calendar, role: "dialog", "aria-modal": "true" },
      import_react128.default.createElement(Calendar, { value, onChange: (e) => {
        var _a2;
        fireNonCancelableEvent(onChange, e.detail);
        (_a2 = buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
        setIsDropDownOpen(false);
      }, locale: normalizedLocale, startOfWeek: startOfWeek2, ariaDescribedby: calendarDescriptionId, ariaLabel, ariaLabelledby, isDateEnabled, todayAriaLabel, nextMonthAriaLabel, previousMonthAriaLabel }),
      import_react128.default.createElement(live_region_default, { id: calendarDescriptionId }, renderMonthAndYear(normalizedLocale, baseDate))
    )
  )));
});
applyDisplayName(DatePicker, "DatePicker");
var date_picker_default = DatePicker;

// node_modules/@cloudscape-design/components/date-range-picker/index.js
var import_react142 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/date-range-picker/styles.scoped.css";
var styles_css_default39 = {
  "calendar": "awsui_calendar_mgja0_1citx_93",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_mgja0_1citx_1",
  "root": "awsui_root_mgja0_1citx_120",
  "focus-lock": "awsui_focus-lock_mgja0_1citx_134",
  "trigger-wrapper": "awsui_trigger-wrapper_mgja0_1citx_138",
  "trigger-flexbox": "awsui_trigger-flexbox_mgja0_1citx_142",
  "calendar-container": "awsui_calendar-container_mgja0_1citx_146",
  "one-grid": "awsui_one-grid_mgja0_1citx_149",
  "calendar-header": "awsui_calendar-header_mgja0_1citx_153",
  "calendar-header-months-wrapper": "awsui_calendar-header-months-wrapper_mgja0_1citx_159",
  "calendar-header-month": "awsui_calendar-header-month_mgja0_1citx_159",
  "calendar-next-month-btn": "awsui_calendar-next-month-btn_mgja0_1citx_180",
  "calendar-prev-month-btn": "awsui_calendar-prev-month-btn_mgja0_1citx_183",
  "first-grid": "awsui_first-grid_mgja0_1citx_187",
  "second-grid": "awsui_second-grid_mgja0_1citx_188",
  "date-and-time-container": "awsui_date-and-time-container_mgja0_1citx_192",
  "date-and-time-wrapper": "awsui_date-and-time-wrapper_mgja0_1citx_198",
  "footer": "awsui_footer_mgja0_1citx_205",
  "has-clear-button": "awsui_has-clear-button_mgja0_1citx_212",
  "footer-button-wrapper": "awsui_footer-button-wrapper_mgja0_1citx_219",
  "icon-wrapper": "awsui_icon-wrapper_mgja0_1citx_226",
  "label": "awsui_label_mgja0_1citx_231",
  "label-enabled": "awsui_label-enabled_mgja0_1citx_236",
  "label-text": "awsui_label-text_mgja0_1citx_240",
  "label-token-nowrap": "awsui_label-token-nowrap_mgja0_1citx_245",
  "mode-switch": "awsui_mode-switch_mgja0_1citx_249",
  "dropdown": "awsui_dropdown_mgja0_1citx_253",
  "dropdown-content": "awsui_dropdown-content_mgja0_1citx_269",
  "start-date-input": "awsui_start-date-input_mgja0_1citx_278",
  "start-time-input": "awsui_start-time-input_mgja0_1citx_279",
  "end-date-input": "awsui_end-date-input_mgja0_1citx_280",
  "end-time-input": "awsui_end-time-input_mgja0_1citx_281",
  "validation-section": "awsui_validation-section_mgja0_1citx_285",
  "validation-error": "awsui_validation-error_mgja0_1citx_289",
  "clear-button": "awsui_clear-button_mgja0_1citx_293",
  "apply-button": "awsui_apply-button_mgja0_1citx_297",
  "cancel-button": "awsui_cancel-button_mgja0_1citx_301",
  "calendar-aria-live": "awsui_calendar-aria-live_mgja0_1citx_305"
};

// node_modules/@cloudscape-design/components/date-range-picker/dropdown.js
var import_react141 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/calendar/index.js
var import_react135 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/calendar/header/index.js
var import_react130 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/calendar/header/header-button.js
var import_react129 = __toESM(require_react());
function PrevMonthButton2({ ariaLabel, baseDate, onChangeMonth }) {
  return import_react129.default.createElement(InternalButton, { iconName: "angle-left", ariaLabel, variant: "icon", onClick: () => onChangeMonth(addMonths(baseDate, -1)), formAction: "none", className: styles_css_default39["calendar-prev-month-btn"] });
}
function NextMonthButton2({ ariaLabel, baseDate, onChangeMonth }) {
  return import_react129.default.createElement(InternalButton, { iconName: "angle-right", ariaLabel, variant: "icon", onClick: () => onChangeMonth(addMonths(baseDate, 1)), formAction: "none", className: styles_css_default39["calendar-next-month-btn"] });
}

// node_modules/@cloudscape-design/components/date-range-picker/calendar/header/index.js
function CalendarHeader2({ baseDate, locale: locale2, onChangeMonth, previousMonthLabel, nextMonthLabel, isSingleGrid, headingIdPrefix }) {
  const i18n = useInternalI18n("calendar");
  const prevMonthLabel = renderMonthAndYear(locale2, add(baseDate, { months: -1 }));
  const currentMonthLabel = renderMonthAndYear(locale2, baseDate);
  return import_react130.default.createElement(
    import_react130.default.Fragment,
    null,
    import_react130.default.createElement(
      "div",
      { className: styles_css_default39["calendar-header"] },
      import_react130.default.createElement(PrevMonthButton2, { ariaLabel: i18n("previousMonthAriaLabel", previousMonthLabel), baseDate, onChangeMonth }),
      import_react130.default.createElement(
        "h2",
        { className: styles_css_default39["calendar-header-months-wrapper"] },
        !isSingleGrid && import_react130.default.createElement("span", { className: styles_css_default39["calendar-header-month"], id: `${headingIdPrefix}-prevmonth` }, prevMonthLabel),
        import_react130.default.createElement("span", { className: styles_css_default39["calendar-header-month"], id: `${headingIdPrefix}-currentmonth` }, currentMonthLabel)
      ),
      import_react130.default.createElement(NextMonthButton2, { ariaLabel: i18n("nextMonthAriaLabel", nextMonthLabel), baseDate, onChangeMonth })
    ),
    import_react130.default.createElement(live_region_default, null, isSingleGrid ? currentMonthLabel : `${prevMonthLabel}, ${currentMonthLabel}`)
  );
}

// node_modules/@cloudscape-design/components/date-range-picker/calendar/grids/index.js
var import_react132 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/calendar/grids/grid.js
var import_react131 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/calendar/grids/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/date-range-picker/calendar/grids/styles.scoped.css";
var styles_css_default40 = {
  "grid": "awsui_grid_1mfbn_1tmta_97",
  "grid-cell": "awsui_grid-cell_1mfbn_1tmta_102",
  "day-header": "awsui_day-header_1mfbn_1tmta_109",
  "week": "awsui_week_1mfbn_1tmta_117",
  "day": "awsui_day_1mfbn_1tmta_109",
  "day-inner": "awsui_day-inner_1mfbn_1tmta_160",
  "in-first-row": "awsui_in-first-row_1mfbn_1tmta_165",
  "in-previous-month": "awsui_in-previous-month_1mfbn_1tmta_165",
  "last-day-of-month": "awsui_last-day-of-month_1mfbn_1tmta_169",
  "in-next-month": "awsui_in-next-month_1mfbn_1tmta_173",
  "in-first-column": "awsui_in-first-column_1mfbn_1tmta_177",
  "in-current-month": "awsui_in-current-month_1mfbn_1tmta_180",
  "enabled": "awsui_enabled_1mfbn_1tmta_184",
  "in-range": "awsui_in-range_1mfbn_1tmta_190",
  "end-date": "awsui_end-date_1mfbn_1tmta_190",
  "start-date": "awsui_start-date_1mfbn_1tmta_190",
  "no-range": "awsui_no-range_1mfbn_1tmta_190",
  "selected": "awsui_selected_1mfbn_1tmta_197",
  "today": "awsui_today_1mfbn_1tmta_201",
  "range-start-date": "awsui_range-start-date_1mfbn_1tmta_239",
  "in-range-border-bottom": "awsui_in-range-border-bottom_1mfbn_1tmta_242",
  "range-end-date": "awsui_range-end-date_1mfbn_1tmta_245",
  "in-range-border-top": "awsui_in-range-border-top_1mfbn_1tmta_248",
  "in-range-border-right": "awsui_in-range-border-right_1mfbn_1tmta_264",
  "in-range-border-left": "awsui_in-range-border-left_1mfbn_1tmta_270"
};

// node_modules/@cloudscape-design/components/date-range-picker/calendar/grids/grid.js
function Grid2({ baseDate, selectedStartDate, selectedEndDate, rangeStartDate, rangeEndDate, focusedDate, focusedDateRef, onSelectDate, onGridKeyDownHandler, onFocusedDateChange, isDateEnabled, locale: locale2, startOfWeek: startOfWeek2, todayAriaLabel, ariaLabelledby, className }) {
  const baseDateTime = baseDate === null || baseDate === void 0 ? void 0 : baseDate.getTime();
  const weeks = (0, import_react131.useMemo)(
    () => getCalendarMonth(baseDate, { firstDayOfWeek: startOfWeek2 }),
    [baseDateTime, startOfWeek2]
  );
  const weekdays = weeks[0].map((date2) => date2.getDay());
  return import_react131.default.createElement(
    "table",
    { role: "grid", "aria-labelledby": ariaLabelledby, className: clsx_m_default(styles_css_default40.grid, className) },
    import_react131.default.createElement(
      "thead",
      null,
      import_react131.default.createElement("tr", null, weekdays.map((dayIndex) => import_react131.default.createElement(
        "th",
        { key: dayIndex, scope: "col", className: clsx_m_default(styles_css_default40["grid-cell"], styles_css_default40["day-header"]) },
        import_react131.default.createElement("span", { "aria-hidden": "true" }, renderDayName(locale2, dayIndex, "short")),
        import_react131.default.createElement(ScreenreaderOnly, null, renderDayName(locale2, dayIndex, "long"))
      )))
    ),
    import_react131.default.createElement("tbody", { onKeyDown: onGridKeyDownHandler }, weeks.map((week, weekIndex) => {
      return import_react131.default.createElement("tr", { key: weekIndex, className: styles_css_default40.week }, week.map((date2, dateIndex) => {
        const isStartDate = !!selectedStartDate && isSameDay(date2, selectedStartDate);
        const isEndDate = !!selectedEndDate && isSameDay(date2, selectedEndDate);
        const isSelected = isStartDate || isEndDate;
        const isRangeStartDate = !!rangeStartDate && isSameDay(date2, rangeStartDate);
        const isRangeEndDate = !!rangeEndDate && isSameDay(date2, rangeEndDate);
        const isFocused = !!focusedDate && isSameDay(date2, focusedDate) && isSameMonth(date2, baseDate);
        const dateIsInRange = isStartDate || isEndDate || isInRange(date2, rangeStartDate, rangeEndDate);
        const inRangeStartWeek = rangeStartDate && isInRange(date2, rangeStartDate, addDays(addWeeks(rangeStartDate, 1), -1));
        const inRangeEndWeek = rangeEndDate && isInRange(date2, rangeEndDate, addDays(addWeeks(rangeEndDate, -1), 1));
        const onlyOneSelected = !!rangeStartDate && !!rangeEndDate ? isSameDay(rangeStartDate, rangeEndDate) : !selectedStartDate || !selectedEndDate;
        const isEnabled = !isDateEnabled || isDateEnabled(date2);
        const isFocusable = isFocused && isEnabled;
        const baseClasses = {
          [styles_css_default40.day]: true,
          [styles_css_default40["grid-cell"]]: true,
          [styles_css_default40["in-first-row"]]: weekIndex === 0,
          [styles_css_default40["in-first-column"]]: dateIndex === 0
        };
        if (!isSameMonth(date2, baseDate)) {
          return import_react131.default.createElement("td", { key: `${weekIndex}:${dateIndex}`, ref: isFocused ? focusedDateRef : void 0, className: clsx_m_default(baseClasses, {
            [styles_css_default40["in-previous-month"]]: isBefore(date2, baseDate),
            [styles_css_default40["last-day-of-month"]]: isLastDayOfMonth(date2),
            [styles_css_default40["in-next-month"]]: isAfter(date2, baseDate)
          }) });
        }
        const handlers = {};
        if (isEnabled) {
          handlers.onClick = () => onSelectDate(date2);
          handlers.onFocus = () => onFocusedDateChange(date2);
        }
        let tabIndex = void 0;
        if (isFocusable && isEnabled) {
          tabIndex = 0;
        } else if (isEnabled) {
          tabIndex = -1;
        }
        let dayAnnouncement = getDateLabel(locale2, date2, "short");
        if (isToday(date2)) {
          dayAnnouncement += ". " + todayAriaLabel;
        }
        return import_react131.default.createElement(
          "td",
          Object.assign({ ref: isFocused ? focusedDateRef : void 0, key: `${weekIndex}:${dateIndex}`, className: clsx_m_default(baseClasses, {
            [styles_css_default40["in-current-month"]]: isSameMonth(date2, baseDate),
            [styles_css_default40.enabled]: isEnabled,
            [styles_css_default40.selected]: isSelected,
            [styles_css_default40["start-date"]]: isStartDate,
            [styles_css_default40["end-date"]]: isEndDate,
            [styles_css_default40["range-start-date"]]: isRangeStartDate,
            [styles_css_default40["range-end-date"]]: isRangeEndDate,
            [styles_css_default40["no-range"]]: isSelected && onlyOneSelected,
            [styles_css_default40["in-range"]]: dateIsInRange,
            [styles_css_default40["in-range-border-top"]]: !!inRangeStartWeek || date2.getDate() <= 7,
            [styles_css_default40["in-range-border-bottom"]]: !!inRangeEndWeek || date2.getDate() > getDaysInMonth(date2) - 7,
            [styles_css_default40["in-range-border-left"]]: dateIndex === 0 || date2.getDate() === 1 || isRangeStartDate,
            [styles_css_default40["in-range-border-right"]]: dateIndex === week.length - 1 || isLastDayOfMonth(date2) || isRangeEndDate,
            [styles_css_default40.today]: isToday(date2)
          }), "aria-selected": isEnabled ? isSelected || dateIsInRange : void 0, "aria-current": isToday(date2) ? "date" : void 0, "data-date": formatDate(date2), "aria-disabled": !isEnabled, tabIndex }, handlers),
          import_react131.default.createElement("span", { className: styles_css_default40["day-inner"], "aria-hidden": "true" }, date2.getDate()),
          import_react131.default.createElement(ScreenreaderOnly, null, dayAnnouncement)
        );
      }));
    }))
  );
}
function isInRange(date2, dateOne, dateTwo) {
  if (!dateOne || !dateTwo || isSameDay(dateOne, dateTwo)) {
    return false;
  }
  const inRange = isAfter(date2, dateOne) && isBefore(date2, dateTwo) || isAfter(date2, dateTwo) && isBefore(date2, dateOne);
  return inRange || isSameDay(date2, dateOne) || isSameDay(date2, dateTwo);
}

// node_modules/@cloudscape-design/components/internal/utils/has-value.js
function hasValue(value) {
  return value !== null && value !== void 0;
}

// node_modules/@cloudscape-design/components/date-range-picker/calendar/utils.js
function findDateToFocus(selected, baseDate, isDateEnabled) {
  if (selected && isDateEnabled(selected) && isSameMonth(selected, baseDate)) {
    return selected;
  }
  const today = new Date();
  if (isDateEnabled(today) && isSameMonth(today, baseDate)) {
    return today;
  }
  if (isDateEnabled(baseDate)) {
    return baseDate;
  }
  return null;
}
function findMonthToDisplay(value, isSingleGrid) {
  if (value.start.date) {
    const startDate = parseDate(value.start.date);
    if (isSingleGrid) {
      return startOfMonth(startDate);
    }
    return startOfMonth(addMonths(startDate, 1));
  }
  if (value.end.date) {
    return startOfMonth(parseDate(value.end.date));
  }
  return startOfMonth(Date.now());
}

// node_modules/@cloudscape-design/components/date-range-picker/calendar/grids/index.js
function isVisible(date2, baseDate, isSingleGrid) {
  if (isSingleGrid) {
    return isSameMonth(date2, baseDate);
  }
  const previousMonth = addMonths(baseDate, -1);
  return isSameMonth(date2, previousMonth) || isSameMonth(date2, baseDate);
}
var Grids = ({ baseDate, selectedStartDate, selectedEndDate, focusedDate, onFocusedDateChange, isDateEnabled, isSingleGrid, onSelectDate, onChangeMonth, locale: locale2, startOfWeek: startOfWeek2, todayAriaLabel, headingIdPrefix }) => {
  const containerRef = (0, import_react132.useRef)(null);
  const [gridHasFocus, setGridHasFocus] = (0, import_react132.useState)(false);
  const focusedDateRef = (0, import_react132.useRef)(null);
  const dateCache = useDateCache();
  baseDate = dateCache(baseDate);
  focusedDate = focusedDate ? dateCache(focusedDate) : null;
  (0, import_react132.useEffect)(() => {
    if (focusedDate && !isVisible(focusedDate, baseDate, isSingleGrid)) {
      const direction = isAfter(focusedDate, baseDate) ? -1 : 1;
      const newMonth = !isSingleGrid && direction === -1 ? addMonths(baseDate, -1) : baseDate;
      const nearestBaseDate = getBaseDate(newMonth, isDateEnabled);
      const newFocusedDate = findDateToFocus(focusedDate, nearestBaseDate, isDateEnabled);
      onFocusedDateChange(newFocusedDate);
    }
  }, [baseDate, focusedDate, isSingleGrid, isDateEnabled, onFocusedDateChange]);
  const onGridKeyDownHandler = (e) => {
    let updatedFocusDate;
    if (focusedDate === null) {
      return;
    }
    switch (e.keyCode) {
      case KeyCode.space:
      case KeyCode.enter:
        e.preventDefault();
        if (focusedDate) {
          onSelectDate(focusedDate);
        }
        return;
      case KeyCode.right:
        e.preventDefault();
        updatedFocusDate = moveNextDay(focusedDate, isDateEnabled);
        break;
      case KeyCode.left:
        e.preventDefault();
        updatedFocusDate = movePrevDay(focusedDate, isDateEnabled);
        break;
      case KeyCode.up:
        e.preventDefault();
        updatedFocusDate = movePrevWeek(focusedDate, isDateEnabled);
        break;
      case KeyCode.down:
        e.preventDefault();
        updatedFocusDate = moveNextWeek(focusedDate, isDateEnabled);
        break;
      default:
        return;
    }
    const updatedDateIsVisible = isVisible(updatedFocusDate, baseDate, isSingleGrid);
    if (!updatedDateIsVisible) {
      const newMonthIsOnLeftSide = !isSingleGrid && isBefore(updatedFocusDate, baseDate);
      onChangeMonth(newMonthIsOnLeftSide ? addMonths(updatedFocusDate, 1) : updatedFocusDate);
    }
    onFocusedDateChange(updatedFocusDate);
  };
  (0, import_react132.useEffect)(() => {
    if (focusedDate !== null && gridHasFocus) {
      if (focusedDateRef.current && focusedDateRef.current !== document.activeElement) {
        focusedDateRef.current.focus();
      }
    }
  }, [focusedDate, gridHasFocus]);
  const onGridBlur = (event) => {
    var _a;
    const newFocusTarget = event.relatedTarget || document.activeElement;
    const newFocusTargetIsInGrid = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.contains(newFocusTarget);
    if (newFocusTarget && !newFocusTargetIsInGrid && gridHasFocus) {
      setGridHasFocus(false);
    }
  };
  const onGridFocus = () => {
    if (!gridHasFocus) {
      setGridHasFocus(true);
    }
  };
  const isRangeVisible = selectedStartDate && selectedEndDate || gridHasFocus;
  const rangeEnds = [selectedStartDate !== null && selectedStartDate !== void 0 ? selectedStartDate : focusedDate, selectedEndDate !== null && selectedEndDate !== void 0 ? selectedEndDate : focusedDate].filter(hasValue);
  const rangeStartDate = min2(rangeEnds);
  const rangeEndDate = max2(rangeEnds);
  return import_react132.default.createElement(
    "div",
    { ref: containerRef, onFocus: onGridFocus, onBlur: onGridBlur },
    import_react132.default.createElement(
      InternalSpaceBetween,
      { size: "xs", direction: "horizontal" },
      !isSingleGrid && import_react132.default.createElement(Grid2, { className: styles_css_default39["first-grid"], baseDate: addMonths(baseDate, -1), selectedEndDate, selectedStartDate, rangeStartDate: isRangeVisible ? rangeStartDate : null, rangeEndDate: isRangeVisible ? rangeEndDate : null, focusedDate, focusedDateRef, isDateEnabled, onSelectDate, onGridKeyDownHandler, onFocusedDateChange, locale: locale2, startOfWeek: startOfWeek2, todayAriaLabel, ariaLabelledby: `${headingIdPrefix}-prevmonth` }),
      import_react132.default.createElement(Grid2, { className: styles_css_default39["second-grid"], baseDate, selectedEndDate, selectedStartDate, rangeStartDate: isRangeVisible ? rangeStartDate : null, rangeEndDate: isRangeVisible ? rangeEndDate : null, focusedDate, focusedDateRef, isDateEnabled, onSelectDate, onGridKeyDownHandler, onFocusedDateChange, locale: locale2, startOfWeek: startOfWeek2, todayAriaLabel, ariaLabelledby: `${headingIdPrefix}-currentmonth` })
    )
  );
};

// node_modules/@cloudscape-design/components/date-range-picker/calendar/range-inputs.js
var import_react134 = __toESM(require_react());

// node_modules/@cloudscape-design/components/time-input/internal.js
var import_react133 = __toESM(require_react());

// node_modules/@cloudscape-design/components/time-input/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/time-input/styles.scoped.css";
var styles_css_default41 = {
  "root": "awsui_root_l809c_im8v7_5"
};

// node_modules/@cloudscape-design/components/time-input/internal.js
var getMaskArgs = (format3, use24Hour) => {
  const segments = [
    use24Hour ? { min: 0, max: 23, length: 2 } : { min: 1, max: 12, length: 2 },
    { min: 0, max: 59, length: 2 },
    { min: 0, max: 59, length: 2 }
  ];
  return {
    separator: ":",
    segments: segments.slice(0, format3.split(":").length)
  };
};
var InternalTimeInput = import_react133.default.forwardRef((_a, ref) => {
  var { format: format3 = "hh:mm:ss", use24Hour = true, autoComplete = true, __internalRootRef = null } = _a, props2 = __rest(_a, ["format", "use24Hour", "autoComplete", "__internalRootRef"]);
  const inputRef = (0, import_react133.useRef)(null);
  useForwardFocus(ref, inputRef);
  const maskArgs2 = getMaskArgs(format3, use24Hour);
  return import_react133.default.createElement(masked_input_default, Object.assign({}, props2, { __internalRootRef, ref: inputRef, className: clsx_m_default(styles_css_default41.root, props2.className), autoComplete, disableBrowserAutocorrect: true, mask: maskArgs2 }));
});
var internal_default16 = InternalTimeInput;

// node_modules/@cloudscape-design/components/date-range-picker/calendar/range-inputs.js
function RangeInputs({ startDate, onChangeStartDate, startTime, onChangeStartTime, endDate, onChangeEndDate, endTime, onChangeEndTime, i18nStrings, dateOnly, timeInputFormat }) {
  const i18n = useInternalI18n("date-range-picker");
  return import_react134.default.createElement(
    InternalFormField,
    { constraintText: i18n("i18nStrings.dateTimeConstraintText", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.dateTimeConstraintText) },
    import_react134.default.createElement(
      "div",
      { className: styles_css_default39["date-and-time-container"] },
      import_react134.default.createElement(
        "div",
        { className: styles_css_default39["date-and-time-wrapper"] },
        import_react134.default.createElement(
          InternalFormField,
          { label: i18n("i18nStrings.startDateLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.startDateLabel), stretch: true },
          import_react134.default.createElement(internal_default15, { value: startDate, className: styles_css_default39["start-date-input"], onChange: (event) => onChangeStartDate(event.detail.value), placeholder: "YYYY/MM/DD" })
        ),
        !dateOnly && import_react134.default.createElement(
          InternalFormField,
          { label: i18n("i18nStrings.startTimeLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.startTimeLabel), stretch: true },
          import_react134.default.createElement(internal_default16, { value: startTime, onChange: (event) => onChangeStartTime(event.detail.value), format: timeInputFormat, placeholder: timeInputFormat, className: styles_css_default39["start-time-input"] })
        )
      ),
      import_react134.default.createElement(
        "div",
        { className: styles_css_default39["date-and-time-wrapper"] },
        import_react134.default.createElement(
          InternalFormField,
          { label: i18n("i18nStrings.endDateLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.endDateLabel), stretch: true },
          import_react134.default.createElement(internal_default15, { value: endDate, className: styles_css_default39["end-date-input"], onChange: (event) => onChangeEndDate(event.detail.value), placeholder: "YYYY/MM/DD" })
        ),
        !dateOnly && import_react134.default.createElement(
          InternalFormField,
          { label: i18n("i18nStrings.endTimeLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.endTimeLabel), stretch: true },
          import_react134.default.createElement(internal_default16, { value: endTime, onChange: (event) => onChangeEndTime(event.detail.value), format: timeInputFormat, placeholder: timeInputFormat, className: styles_css_default39["end-time-input"] })
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/date-range-picker/calendar/index.js
function DateRangePickerCalendar({ value, setValue, locale: locale2 = "", startOfWeek: startOfWeek2, isDateEnabled = () => true, i18nStrings, dateOnly = false, timeInputFormat = "hh:mm:ss", customAbsoluteRangeControl }) {
  const isSingleGrid = useMobile();
  const normalizedLocale = normalizeLocale("DateRangePicker", locale2);
  const normalizedStartOfWeek = normalizeStartOfWeek(startOfWeek2, normalizedLocale);
  const i18n = useInternalI18n("date-range-picker");
  const [announcement, setAnnouncement] = (0, import_react135.useState)("");
  const [currentMonth, setCurrentMonth] = (0, import_react135.useState)(() => findMonthToDisplay(value, isSingleGrid));
  const [focusedDate, setFocusedDate] = (0, import_react135.useState)(() => {
    if (value.start.date) {
      const startDate = parseDate(value.start.date);
      if (isSameMonth(startDate, currentMonth)) {
        return startDate;
      }
      if (!isSingleGrid && isSameMonth(startDate, addMonths(currentMonth, -1))) {
        return startDate;
      }
    }
    return findDateToFocus(parseDate(value.start.date), currentMonth, isDateEnabled);
  });
  const updateCurrentMonth = (startDate) => {
    if (startDate.length >= 8) {
      const newCurrentMonth = startOfMonth(parseDate(startDate));
      setCurrentMonth(isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, 1));
    }
  };
  const announceStart = (startDate) => {
    return i18n("i18nStrings.startDateLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.startDateLabel) + ", " + getDateLabel(normalizedLocale, startDate) + ", " + i18n("i18nStrings.startTimeLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.startTimeLabel) + ", " + renderTimeLabel(normalizedLocale, startDate, timeInputFormat) + ". ";
  };
  const announceEnd = (endDate) => {
    return i18n("i18nStrings.endDateLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.endDateLabel) + ", " + getDateLabel(normalizedLocale, endDate) + ", " + i18n("i18nStrings.endTimeLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.endTimeLabel) + ", " + renderTimeLabel(normalizedLocale, endDate, timeInputFormat) + ". ";
  };
  const renderSelectedAbsoluteRangeAriaLive = i18n("i18nStrings.renderSelectedAbsoluteRangeAriaLive", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.renderSelectedAbsoluteRangeAriaLive, (format3) => (startDate, endDate) => format3({ startDate, endDate }));
  const announceRange = (startDate, endDate) => {
    if (!renderSelectedAbsoluteRangeAriaLive) {
      return `${getDateLabel(normalizedLocale, startDate)} \u2013 ${getDateLabel(normalizedLocale, endDate)}`;
    }
    return renderSelectedAbsoluteRangeAriaLive(getDateLabel(normalizedLocale, startDate), getDateLabel(normalizedLocale, endDate));
  };
  const onSelectDateHandler = (selectedDate) => {
    const { start, end } = value;
    let newStart = void 0;
    let newEnd = void 0;
    let announcement2 = "";
    if (!start.date && !end.date) {
      newStart = startOfDay(selectedDate);
      announcement2 = announceStart(newStart);
    } else if (start.date && end.date) {
      newStart = startOfDay(selectedDate);
      newEnd = null;
      announcement2 = announceStart(newStart);
    } else if (start.date && !end.date) {
      const parsedStartDate = parseDate(start.date);
      if (isBefore(selectedDate, parsedStartDate)) {
        newStart = startOfDay(selectedDate);
        newEnd = endOfDay(parsedStartDate);
        announcement2 = announceStart(newStart) + announceRange(newStart, newEnd);
      } else {
        newEnd = endOfDay(selectedDate);
        announcement2 = announceEnd(newEnd) + announceRange(parsedStartDate, newEnd);
      }
    } else if (!start.date && end.date) {
      const existingEndDate = parseDate(end.date);
      if (isAfter(selectedDate, existingEndDate)) {
        newStart = startOfDay(existingEndDate);
        newEnd = endOfDay(selectedDate);
        announcement2 = announceEnd(newEnd) + announceRange(newStart, newEnd);
      } else {
        newStart = startOfDay(selectedDate);
        announcement2 = announceStart(newStart) + announceRange(newStart, existingEndDate);
      }
    }
    const formatValue2 = (date2, previous) => {
      if (date2 === null) {
        return { date: "", time: "" };
      } else if (date2 === void 0) {
        return previous;
      }
      return splitDateTime(formatDateTime(date2));
    };
    setValue({
      start: formatValue2(newStart, value.start),
      end: formatValue2(newEnd, value.end)
    });
    setAnnouncement(announcement2);
  };
  const onHeaderChangeMonthHandler = (newCurrentMonth) => {
    setCurrentMonth(newCurrentMonth);
    const newBaseDateMonth = isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, -1);
    const newBaseDate = getBaseDate(newBaseDateMonth, isDateEnabled);
    setFocusedDate(newBaseDate);
  };
  const onChangeStartDate = (value2) => {
    setValue((oldValue) => Object.assign(Object.assign({}, oldValue), { start: Object.assign(Object.assign({}, oldValue.start), { date: value2 }) }));
    updateCurrentMonth(value2);
  };
  const interceptedSetValue = (newValue) => {
    setValue((oldValue) => {
      const updated = typeof newValue === "function" ? newValue(oldValue) : newValue;
      updateCurrentMonth(updated.start.date);
      return updated;
    });
  };
  const headingIdPrefix = useUniqueId("date-range-picker-calendar-heading");
  return import_react135.default.createElement(
    import_react135.default.Fragment,
    null,
    import_react135.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default39["calendar-container"], {
        [styles_css_default39["one-grid"]]: isSingleGrid
      }) },
      import_react135.default.createElement(
        InternalSpaceBetween,
        { size: "s" },
        import_react135.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default39.calendar, {
            [styles_css_default39["one-grid"]]: isSingleGrid
          }) },
          import_react135.default.createElement(CalendarHeader2, { baseDate: currentMonth, locale: normalizedLocale, onChangeMonth: onHeaderChangeMonthHandler, previousMonthLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.previousMonthAriaLabel, nextMonthLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.nextMonthAriaLabel, isSingleGrid, headingIdPrefix }),
          import_react135.default.createElement(Grids, { isSingleGrid, locale: normalizedLocale, baseDate: currentMonth, focusedDate, onFocusedDateChange: setFocusedDate, isDateEnabled, onSelectDate: onSelectDateHandler, onChangeMonth: setCurrentMonth, startOfWeek: normalizedStartOfWeek, todayAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.todayAriaLabel, selectedStartDate: parseDate(value.start.date, true), selectedEndDate: parseDate(value.end.date, true), headingIdPrefix })
        ),
        import_react135.default.createElement(RangeInputs, { startDate: value.start.date, onChangeStartDate, startTime: value.start.time, onChangeStartTime: (value2) => setValue((oldValue) => Object.assign(Object.assign({}, oldValue), { start: Object.assign(Object.assign({}, oldValue.start), { time: value2 }) })), endDate: value.end.date, onChangeEndDate: (value2) => setValue((oldValue) => Object.assign(Object.assign({}, oldValue), { end: Object.assign(Object.assign({}, oldValue.end), { date: value2 }) })), endTime: value.end.time, onChangeEndTime: (value2) => setValue((oldValue) => Object.assign(Object.assign({}, oldValue), { end: Object.assign(Object.assign({}, oldValue.end), { time: value2 }) })), i18nStrings, dateOnly, timeInputFormat }),
        customAbsoluteRangeControl && import_react135.default.createElement("div", null, customAbsoluteRangeControl(value, interceptedSetValue))
      )
    ),
    import_react135.default.createElement(live_region_default, { className: styles_css_default39["calendar-aria-live"] }, announcement)
  );
}

// node_modules/@cloudscape-design/components/date-range-picker/relative-range/index.js
var import_react136 = __toESM(require_react());

// node_modules/@cloudscape-design/components/date-range-picker/relative-range/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/date-range-picker/relative-range/styles.scoped.css";
var styles_css_default42 = {
  "custom-range": "awsui_custom-range_16zmw_uanfn_93",
  "custom-range--no-padding": "awsui_custom-range--no-padding_16zmw_uanfn_99",
  "custom-range-form-controls": "awsui_custom-range-form-controls_16zmw_uanfn_103",
  "custom-range-duration": "awsui_custom-range-duration_16zmw_uanfn_107",
  "custom-range-unit": "awsui_custom-range-unit_16zmw_uanfn_108",
  "vertical": "awsui_vertical_16zmw_uanfn_114",
  "custom-range-duration-input": "awsui_custom-range-duration-input_16zmw_uanfn_125",
  "custom-range-unit-select": "awsui_custom-range-unit-select_16zmw_uanfn_126",
  "relative-range-radio-group": "awsui_relative-range-radio-group_16zmw_uanfn_130"
};

// node_modules/@cloudscape-design/components/date-range-picker/relative-range/index.js
var dayUnits = ["day", "week", "month", "year"];
var units = ["second", "minute", "hour", ...dayUnits];
var CUSTOM_OPTION_SELECT_KEY = "awsui-internal-custom-duration-key";
function RelativeRangePicker({ dateOnly, options: clientOptions = [], initialSelection: initialRange, onChange: onChangeRangeSize, i18nStrings, isSingleGrid }) {
  var _a;
  const i18n = useInternalI18n("date-range-picker");
  const formatRelativeRange = i18n("i18nStrings.formatRelativeRange", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.formatRelativeRange, (format3) => ({ amount, unit: unit2 }) => format3({ amount, unit: unit2 }));
  const formatUnit = i18n("i18nStrings.formatUnit", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.formatUnit, (format3) => (unit2, amount) => format3({ amount, unit: unit2 }));
  const radioOptions = clientOptions.map((option) => ({
    value: option.key,
    label: formatRelativeRange === null || formatRelativeRange === void 0 ? void 0 : formatRelativeRange(option)
  }));
  radioOptions.push({
    value: CUSTOM_OPTION_SELECT_KEY,
    label: i18n("i18nStrings.customRelativeRangeOptionLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.customRelativeRangeOptionLabel),
    description: i18n("i18nStrings.customRelativeRangeOptionDescription", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.customRelativeRangeOptionDescription)
  });
  const [selectedRadio, setSelectedRadio] = (0, import_react136.useState)(() => {
    var _a2;
    if (initialRange && !initialRange.key) {
      return CUSTOM_OPTION_SELECT_KEY;
    }
    return (_a2 = initialRange === null || initialRange === void 0 ? void 0 : initialRange.key) !== null && _a2 !== void 0 ? _a2 : null;
  });
  const [customDuration, setCustomDuration] = (0, import_react136.useState)(() => {
    if (initialRange) {
      return initialRange.amount;
    }
    return NaN;
  });
  const initialCustomTimeUnit = dateOnly ? "day" : "minute";
  const [customUnitOfTime, setCustomUnitOfTime] = (0, import_react136.useState)((_a = initialRange === null || initialRange === void 0 ? void 0 : initialRange.unit) !== null && _a !== void 0 ? _a : initialCustomTimeUnit);
  const showRadioControl = clientOptions.length > 0;
  const showCustomControls = clientOptions.length === 0 || selectedRadio === CUSTOM_OPTION_SELECT_KEY;
  return import_react136.default.createElement(
    "div",
    null,
    import_react136.default.createElement(
      InternalSpaceBetween,
      { size: "xs", direction: "vertical" },
      showRadioControl && import_react136.default.createElement(
        InternalFormField,
        { label: i18n("i18nStrings.relativeRangeSelectionHeading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.relativeRangeSelectionHeading) },
        import_react136.default.createElement(internal_default7, { className: styles_css_default42["relative-range-radio-group"], onChange: ({ detail }) => {
          setSelectedRadio(detail.value);
          if (detail.value === CUSTOM_OPTION_SELECT_KEY) {
            setCustomDuration(NaN);
            setCustomUnitOfTime(initialCustomTimeUnit);
            onChangeRangeSize({
              amount: NaN,
              unit: initialCustomTimeUnit,
              type: "relative"
            });
          } else {
            const option = clientOptions.filter((o) => o.key === detail.value)[0];
            onChangeRangeSize(option);
          }
        }, value: selectedRadio, items: radioOptions })
      ),
      showCustomControls && import_react136.default.createElement(
        InternalSpaceBetween,
        { direction: "vertical", size: "xs" },
        !showRadioControl && import_react136.default.createElement(InternalBox, { fontSize: "body-m", color: "text-body-secondary" }, i18n("i18nStrings.customRelativeRangeOptionDescription", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.customRelativeRangeOptionDescription)),
        import_react136.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default42["custom-range"], {
            [styles_css_default42["custom-range--no-padding"]]: !showRadioControl
          }) },
          import_react136.default.createElement(
            "div",
            { className: clsx_m_default(styles_css_default42["custom-range-form-controls"], {
              [styles_css_default42.vertical]: isSingleGrid
            }) },
            import_react136.default.createElement(
              "div",
              { className: styles_css_default42["custom-range-duration"] },
              import_react136.default.createElement(
                InternalFormField,
                { label: i18n("i18nStrings.customRelativeRangeDurationLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.customRelativeRangeDurationLabel) },
                import_react136.default.createElement(internal_default10, { type: "number", className: styles_css_default42["custom-range-duration-input"], value: isNaN(customDuration) || customDuration === 0 ? "" : customDuration === null || customDuration === void 0 ? void 0 : customDuration.toString(), onChange: (e) => {
                  const amount = Number(e.detail.value);
                  setCustomDuration(amount);
                  onChangeRangeSize({ amount, unit: customUnitOfTime, type: "relative" });
                }, placeholder: i18n("i18nStrings.customRelativeRangeDurationPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.customRelativeRangeDurationPlaceholder), __inheritFormFieldProps: true })
              )
            ),
            import_react136.default.createElement(
              "div",
              { className: styles_css_default42["custom-range-unit"] },
              import_react136.default.createElement(
                InternalFormField,
                { label: i18n("i18nStrings.customRelativeRangeUnitLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.customRelativeRangeUnitLabel) },
                import_react136.default.createElement(internal_default14, { className: styles_css_default42["custom-range-unit-select"], selectedOption: {
                  value: customUnitOfTime,
                  label: formatUnit === null || formatUnit === void 0 ? void 0 : formatUnit(customUnitOfTime, customDuration)
                }, onChange: (e) => {
                  const { value: unit2 } = e.detail.selectedOption;
                  setCustomUnitOfTime(unit2);
                  onChangeRangeSize({ amount: customDuration, unit: unit2, type: "relative" });
                }, options: (dateOnly ? dayUnits : units).map((unit2) => ({
                  value: unit2,
                  label: formatUnit === null || formatUnit === void 0 ? void 0 : formatUnit(unit2, customDuration)
                })), renderHighlightedAriaLive: (option) => option.label || option.value || "" })
              )
            )
          )
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/date-range-picker/mode-switcher.js
var import_react140 = __toESM(require_react());

// node_modules/@cloudscape-design/components/segmented-control/internal.js
var import_react139 = __toESM(require_react());

// node_modules/@cloudscape-design/components/segmented-control/internal-segmented-control.js
var import_react138 = __toESM(require_react());

// node_modules/@cloudscape-design/components/segmented-control/segment.js
var import_react137 = __toESM(require_react());

// node_modules/@cloudscape-design/components/segmented-control/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/segmented-control/styles.scoped.css";
var styles_css_default43 = {
  "segment": "awsui_segment_8cbea_cqyq1_97",
  "disabled": "awsui_disabled_8cbea_cqyq1_166",
  "selected": "awsui_selected_8cbea_cqyq1_174",
  "icon": "awsui_icon_8cbea_cqyq1_195",
  "with-text": "awsui_with-text_8cbea_cqyq1_199",
  "with-no-text": "awsui_with-no-text_8cbea_cqyq1_205",
  "root": "awsui_root_8cbea_cqyq1_216",
  "segment-part": "awsui_segment-part_8cbea_cqyq1_229",
  "select": "awsui_select_8cbea_cqyq1_174",
  "segment-count-2": "awsui_segment-count-2_8cbea_cqyq1_248",
  "segment-count-3": "awsui_segment-count-3_8cbea_cqyq1_253",
  "segment-count-4": "awsui_segment-count-4_8cbea_cqyq1_258",
  "segment-count-5": "awsui_segment-count-5_8cbea_cqyq1_263",
  "segment-count-6": "awsui_segment-count-6_8cbea_cqyq1_268"
};

// node_modules/@cloudscape-design/components/segmented-control/segment.js
var Segment = import_react137.default.forwardRef(({ disabled, text, iconName, iconAlt, iconUrl, iconSvg, isActive, onClick, onKeyDown, tabIndex }, ref) => {
  return import_react137.default.createElement(
    "button",
    { className: clsx_m_default(styles_css_default43.segment, { [styles_css_default43.disabled]: !!disabled }, { [styles_css_default43.selected]: isActive }), ref, onClick, onKeyDown, disabled, type: "button", tabIndex, "aria-pressed": isActive ? "true" : "false", "aria-label": !text ? iconAlt : void 0 },
    (iconName || iconUrl || iconSvg) && import_react137.default.createElement(internal_default, { className: clsx_m_default(styles_css_default43.icon, text ? styles_css_default43["with-text"] : styles_css_default43["with-no-text"]), name: iconName, url: iconUrl, svg: iconSvg, alt: iconAlt, variant: disabled ? "disabled" : "normal" }),
    import_react137.default.createElement("span", null, text)
  );
});

// node_modules/@cloudscape-design/components/segmented-control/internal-segmented-control.js
function InternalSegmentedControl({ selectedId, options, label, ariaLabelledby, onChange }) {
  const segmentByIdRef = (0, import_react138.useRef)({});
  const selectedOptions = (options || []).filter((option) => {
    return option.id === selectedId;
  });
  const currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;
  const enabledSegments = (options || []).filter((option) => !option.disabled);
  const moveHighlight = (event, activeIndex) => {
    var _a;
    if (event.keyCode !== KeyCode.right && event.keyCode !== KeyCode.left) {
      return;
    }
    let nextIndex = activeIndex;
    if (event.keyCode === KeyCode.right) {
      nextIndex = activeIndex + 1 === enabledSegments.length ? 0 : activeIndex + 1;
    } else if (event.keyCode === KeyCode.left) {
      nextIndex = activeIndex === 0 ? enabledSegments.length - 1 : activeIndex - 1;
    }
    const nextSegmentId = enabledSegments[nextIndex].id;
    (_a = segmentByIdRef.current[nextSegmentId]) === null || _a === void 0 ? void 0 : _a.focus();
  };
  return import_react138.default.createElement("div", { className: clsx_m_default(styles_css_default43["segment-part"], styles_css_default43[`segment-count-${options === null || options === void 0 ? void 0 : options.length}`]), "aria-label": label, "aria-labelledby": ariaLabelledby, role: "toolbar" }, options && options.map((option, index) => {
    const isActive = selectedId === option.id;
    const enabledSegmentIndex = enabledSegments.indexOf(option);
    let tabIndex = isActive ? 0 : -1;
    if (currentSelectedOption === null && enabledSegmentIndex === 0) {
      tabIndex = 0;
    }
    return import_react138.default.createElement(Segment, { key: index, id: option.id, disabled: !!option.disabled, iconName: option.iconName, iconAlt: option.iconAlt, iconUrl: option.iconUrl, iconSvg: option.iconSvg, text: option.text, isActive, tabIndex, ref: (node) => {
      if (node) {
        segmentByIdRef.current[option.id] = node;
      } else {
        delete segmentByIdRef.current[option.id];
      }
    }, onClick: () => {
      if (selectedId !== option.id) {
        fireNonCancelableEvent(onChange, { selectedId: option.id });
      }
    }, onKeyDown: (event) => moveHighlight(event, enabledSegmentIndex) });
  }));
}

// node_modules/@cloudscape-design/components/segmented-control/internal.js
function InternalSegmentedControl2(_a) {
  var { selectedId, options, label, ariaLabelledby, onChange, __internalRootRef = null } = _a, props2 = __rest(_a, ["selectedId", "options", "label", "ariaLabelledby", "onChange", "__internalRootRef"]);
  const baseProps = getBaseProps(props2);
  const selectOptions = (options || []).map((option) => {
    const label2 = option.text || option.iconAlt;
    return Object.assign(Object.assign({}, option), { label: label2, value: option.id });
  });
  const selectedOptions = selectOptions.filter((option) => {
    return option.value === selectedId;
  });
  const currentSelectedOption = selectedOptions.length ? selectedOptions[0] : null;
  const selectProps = {
    options: selectOptions,
    selectedOption: currentSelectedOption,
    triggerVariant: "option",
    onChange: (event) => fireNonCancelableEvent(onChange, { selectedId: event.detail.selectedOption.value })
  };
  return import_react139.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default43.root), ref: __internalRootRef }),
    import_react139.default.createElement(InternalSegmentedControl, { selectedId, options, label, ariaLabelledby, onChange }),
    import_react139.default.createElement(
      "div",
      { className: styles_css_default43.select },
      ariaLabelledby && import_react139.default.createElement(internal_default14, Object.assign({}, selectProps, { ariaLabelledby })),
      !ariaLabelledby && label && import_react139.default.createElement(
        InternalFormField,
        { label, stretch: true },
        import_react139.default.createElement(internal_default14, Object.assign({}, selectProps))
      ),
      !ariaLabelledby && !label && import_react139.default.createElement(internal_default14, Object.assign({}, selectProps))
    )
  );
}

// node_modules/@cloudscape-design/components/date-range-picker/mode-switcher.js
function ModeSwitcher({ i18nStrings, mode, onChange }) {
  const i18n = useInternalI18n("date-range-picker");
  return import_react140.default.createElement(InternalSegmentedControl2, { className: styles_css_default39["mode-switch"], selectedId: mode, options: [
    { id: "relative", text: i18n("i18nStrings.relativeModeTitle", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.relativeModeTitle) },
    { id: "absolute", text: i18n("i18nStrings.absoluteModeTitle", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.absoluteModeTitle) }
  ], onChange: (e) => onChange(e.detail.selectedId) });
}

// node_modules/@cloudscape-design/components/date-range-picker/time-offset.js
function setTimeOffset(value, timeOffset) {
  if (!((value === null || value === void 0 ? void 0 : value.type) === "absolute")) {
    return value;
  }
  return {
    type: "absolute",
    startDate: value.startDate + formatTimezoneOffset(value.startDate, timeOffset.startDate),
    endDate: value.endDate + formatTimezoneOffset(value.endDate, timeOffset.endDate)
  };
}
function shiftTimeOffset(value, timeOffset) {
  if (!value || value.type !== "absolute") {
    return value;
  }
  const dateTimeRegex = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}(:\d{2})?(\.\d{1,3})?(((\+|-)\d{2}(:\d{2})?)|Z)?$/;
  if (!dateTimeRegex.test(value.startDate) || !dateTimeRegex.test(value.endDate)) {
    warnOnce("DateRangePicker", "You have provided a misformatted start or end date. The component will fall back to an empty value. Dates have to be ISO8601-formatted with an optional time zone offset.");
    return null;
  }
  return {
    type: "absolute",
    startDate: shiftTimezoneOffset(value.startDate, timeOffset.startDate),
    endDate: shiftTimezoneOffset(value.endDate, timeOffset.endDate)
  };
}
function normalizeTimeOffset(value, getTimeOffset, timeOffset) {
  if (value && value.type === "absolute") {
    if (getTimeOffset) {
      return {
        startDate: getTimeOffset(parseDateUTC(value.startDate)),
        endDate: getTimeOffset(parseDateUTC(value.endDate))
      };
    } else if (timeOffset !== void 0) {
      return { startDate: timeOffset, endDate: timeOffset };
    }
  }
  return { startDate: void 0, endDate: void 0 };
}
function parseDateUTC(isoDateString) {
  const date2 = new Date(isoDateString);
  return addMinutes(date2, parseTimezoneOffset(isoDateString));
}

// node_modules/@cloudscape-design/components/date-range-picker/utils.js
function formatValue(value, { timeOffset, dateOnly }) {
  if (!value || value.type === "relative") {
    return value;
  }
  if (dateOnly) {
    return {
      type: "absolute",
      startDate: value.startDate.split("T")[0],
      endDate: value.endDate.split("T")[0]
    };
  }
  return setTimeOffset(value, timeOffset);
}
function getDefaultMode(value, relativeOptions, rangeSelectorMode) {
  if (value && value.type) {
    return value.type;
  }
  if (rangeSelectorMode === "relative-only") {
    return "relative";
  }
  if (rangeSelectorMode === "absolute-only") {
    return "absolute";
  }
  return relativeOptions.length > 0 ? "relative" : "absolute";
}
function splitAbsoluteValue(value) {
  if (!value) {
    return {
      start: { date: "", time: "" },
      end: { date: "", time: "" }
    };
  }
  return { start: splitDateTime(value.startDate), end: splitDateTime(value.endDate) };
}
function joinAbsoluteValue(value) {
  return {
    type: "absolute",
    startDate: joinDateTime(value.start.date, value.start.time || "00:00:00"),
    endDate: joinDateTime(value.end.date, value.end.time || "23:59:59")
  };
}

// node_modules/@cloudscape-design/components/date-range-picker/dropdown.js
var VALID_RANGE = { valid: true };
function DateRangePickerDropdown({ locale: locale2 = "", startOfWeek: startOfWeek2, isDateEnabled, isValidRange, value, onClear: clearValue, onApply: applyValue, onDropdownClose, relativeOptions, showClearButton, isSingleGrid, i18nStrings, dateOnly, timeInputFormat, rangeSelectorMode, ariaLabelledby, ariaDescribedby, customAbsoluteRangeControl }) {
  const i18n = useInternalI18n("date-range-picker");
  const [rangeSelectionMode, setRangeSelectionMode] = (0, import_react141.useState)(getDefaultMode(value, relativeOptions, rangeSelectorMode));
  const [selectedAbsoluteRange, setSelectedAbsoluteRange] = (0, import_react141.useState)(() => splitAbsoluteValue((value === null || value === void 0 ? void 0 : value.type) === "absolute" ? value : null));
  const [selectedRelativeRange, setSelectedRelativeRange] = (0, import_react141.useState)((value === null || value === void 0 ? void 0 : value.type) === "relative" ? value : null);
  const scrollableContainerRef = (0, import_react141.useRef)(null);
  const applyButtonRef = (0, import_react141.useRef)(null);
  const [applyClicked, setApplyClicked] = (0, import_react141.useState)(false);
  const [validationResult, setValidationResult] = (0, import_react141.useState)(VALID_RANGE);
  const closeDropdown = () => {
    setApplyClicked(false);
    onDropdownClose();
  };
  const onClear = () => {
    closeDropdown();
    clearValue();
  };
  const onApply = () => {
    const newValue = rangeSelectionMode === "relative" ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);
    const newValidationResult = applyValue(newValue);
    if (newValidationResult.valid === false) {
      setApplyClicked(true);
      setValidationResult(newValidationResult);
    } else {
      setApplyClicked(false);
      closeDropdown();
    }
  };
  (0, import_react141.useEffect)(() => {
    if (applyClicked) {
      const visibleRange = rangeSelectionMode === "relative" ? selectedRelativeRange : joinAbsoluteValue(selectedAbsoluteRange);
      const newValidationResult = isValidRange(visibleRange);
      setValidationResult(newValidationResult || VALID_RANGE);
    }
  }, [
    applyClicked,
    isValidRange,
    rangeSelectionMode,
    selectedRelativeRange,
    selectedAbsoluteRange,
    setValidationResult
  ]);
  (0, import_react141.useEffect)(() => {
    var _a;
    return (_a = scrollableContainerRef.current) === null || _a === void 0 ? void 0 : _a.focus();
  }, [scrollableContainerRef]);
  return import_react141.default.createElement(
    import_react141.default.Fragment,
    null,
    import_react141.default.createElement(
      focus_lock_default,
      { className: styles_css_default39["focus-lock"], autoFocus: true },
      import_react141.default.createElement(
        "div",
        { ref: scrollableContainerRef, className: styles_css_default39.dropdown, tabIndex: 0, role: "dialog", "aria-modal": "true", "aria-label": i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel, "aria-labelledby": ariaLabelledby !== null && ariaLabelledby !== void 0 ? ariaLabelledby : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby, "aria-describedby": ariaDescribedby !== null && ariaDescribedby !== void 0 ? ariaDescribedby : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby },
        import_react141.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default39["dropdown-content"], {
            [styles_css_default39["one-grid"]]: isSingleGrid
          }) },
          import_react141.default.createElement(
            InternalSpaceBetween,
            { size: "l" },
            import_react141.default.createElement(
              InternalBox,
              { padding: { top: "m", horizontal: "l" } },
              import_react141.default.createElement(
                InternalSpaceBetween,
                { direction: "vertical", size: "s" },
                rangeSelectorMode === "default" && import_react141.default.createElement(ModeSwitcher, { mode: rangeSelectionMode, onChange: (mode) => {
                  setRangeSelectionMode(mode);
                  setApplyClicked(false);
                  setValidationResult(VALID_RANGE);
                }, i18nStrings }),
                rangeSelectionMode === "absolute" && import_react141.default.createElement(DateRangePickerCalendar, { value: selectedAbsoluteRange, setValue: setSelectedAbsoluteRange, locale: locale2, startOfWeek: startOfWeek2, isDateEnabled, i18nStrings, dateOnly, timeInputFormat, customAbsoluteRangeControl }),
                rangeSelectionMode === "relative" && import_react141.default.createElement(RelativeRangePicker, { isSingleGrid, options: relativeOptions, dateOnly, initialSelection: selectedRelativeRange, onChange: (range2) => setSelectedRelativeRange(range2), i18nStrings })
              ),
              import_react141.default.createElement(InternalBox, { className: styles_css_default39["validation-section"], margin: !validationResult.valid ? { top: "s" } : void 0 }, !validationResult.valid && import_react141.default.createElement(
                import_react141.default.Fragment,
                null,
                import_react141.default.createElement(
                  InternalAlert,
                  { type: "error", statusIconAriaLabel: i18n("i18nStrings.errorIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel) },
                  import_react141.default.createElement("span", { className: styles_css_default39["validation-error"] }, validationResult.errorMessage)
                ),
                import_react141.default.createElement(live_region_default, null, validationResult.errorMessage)
              ))
            ),
            import_react141.default.createElement(
              "div",
              { className: clsx_m_default(styles_css_default39.footer, {
                [styles_css_default39["one-grid"]]: isSingleGrid,
                [styles_css_default39["has-clear-button"]]: showClearButton
              }) },
              showClearButton && import_react141.default.createElement(
                "div",
                { className: styles_css_default39["footer-button-wrapper"] },
                import_react141.default.createElement(InternalButton, { onClick: onClear, className: styles_css_default39["clear-button"], variant: "link", formAction: "none" }, i18n("i18nStrings.clearButtonLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearButtonLabel))
              ),
              import_react141.default.createElement(
                "div",
                { className: styles_css_default39["footer-button-wrapper"] },
                import_react141.default.createElement(
                  InternalSpaceBetween,
                  { size: "xs", direction: "horizontal" },
                  import_react141.default.createElement(InternalButton, { onClick: closeDropdown, className: styles_css_default39["cancel-button"], variant: "link", formAction: "none" }, i18n("i18nStrings.cancelButtonLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.cancelButtonLabel)),
                  import_react141.default.createElement(InternalButton, { onClick: onApply, className: styles_css_default39["apply-button"], ref: applyButtonRef, formAction: "none" }, i18n("i18nStrings.applyButtonLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.applyButtonLabel))
                )
              )
            )
          )
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/date-range-picker/index.js
function renderDateRange(range2, placeholder, formatRelativeRange, timeOffset) {
  var _a;
  if (!range2) {
    return import_react142.default.createElement("span", { className: styles_css_default39["label-text"], "aria-disabled": true }, placeholder);
  }
  const formatted = range2.type === "relative" ? (_a = formatRelativeRange === null || formatRelativeRange === void 0 ? void 0 : formatRelativeRange(range2)) !== null && _a !== void 0 ? _a : "" : import_react142.default.createElement(BreakSpaces, { text: formatDateRange(range2.startDate, range2.endDate, timeOffset) });
  return import_react142.default.createElement(InternalBox, { fontWeight: "normal", display: "inline", color: "inherit", variant: "span" }, formatted);
}
function BreakSpaces({ text }) {
  const tokens = text.split(/( )/);
  return import_react142.default.createElement(import_react142.default.Fragment, null, tokens.map((token, index) => import_react142.default.createElement(
    import_react142.default.Fragment,
    { key: index },
    token.length > 1 ? import_react142.default.createElement("span", { className: styles_css_default39["label-token-nowrap"] }, token) : token,
    token === " " && import_react142.default.createElement("wbr", null)
  )));
}
function isDateOnly(value) {
  if (!value || value.type !== "absolute") {
    return false;
  }
  return isIsoDateOnly(value.startDate) && isIsoDateOnly(value.endDate);
}
var DateRangePicker = import_react142.default.forwardRef((_a, ref) => {
  var _b, _c;
  var { locale: locale2 = "", startOfWeek: startOfWeek2, isDateEnabled = () => true, value, placeholder, readOnly = false, disabled = false, onChange, onBlur, onFocus, relativeOptions = [], i18nStrings, isValidRange = () => ({ valid: true }), showClearButton = true, dateOnly = false, timeOffset, getTimeOffset, timeInputFormat = "hh:mm:ss", expandToViewport = false, rangeSelectorMode = "default", customAbsoluteRangeControl } = _a, rest = __rest(_a, ["locale", "startOfWeek", "isDateEnabled", "value", "placeholder", "readOnly", "disabled", "onChange", "onBlur", "onFocus", "relativeOptions", "i18nStrings", "isValidRange", "showClearButton", "dateOnly", "timeOffset", "getTimeOffset", "timeInputFormat", "expandToViewport", "rangeSelectorMode", "customAbsoluteRangeControl"]);
  const { __internalRootRef } = useBaseComponent("DateRangePicker");
  checkControlled("DateRangePicker", "value", value, "onChange", onChange);
  const normalizedTimeOffset = normalizeTimeOffset(value, getTimeOffset, timeOffset);
  value = isDateOnly(value) ? value : shiftTimeOffset(value, normalizedTimeOffset);
  const baseProps = getBaseProps(rest);
  const { invalid, controlId, ariaDescribedby, ariaLabelledby } = useFormFieldContext(Object.assign({ ariaLabelledby: (_b = rest.ariaLabelledby) !== null && _b !== void 0 ? _b : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabelledby, ariaDescribedby: (_c = rest.ariaDescribedby) !== null && _c !== void 0 ? _c : i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaDescribedby }, rest));
  const isSingleGrid = useMobile();
  const triggerRef = (0, import_react142.useRef)(null);
  useForwardFocus(ref, triggerRef);
  const rootRef = (0, import_react142.useRef)(null);
  const dropdownId = useUniqueId("date-range-picker-dropdown");
  useFocusTracker({ rootRef, onBlur, onFocus, viewportId: expandToViewport ? dropdownId : "" });
  const [isDropDownOpen, setIsDropDownOpen] = (0, import_react142.useState)(false);
  const normalizedLocale = normalizeLocale("DateRangePicker", locale2);
  const closeDropdown = (focusTrigger = false) => {
    var _a2;
    setIsDropDownOpen(false);
    if (focusTrigger) {
      (_a2 = triggerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  };
  const onWrapperKeyDownHandler = (event) => {
    if (event.keyCode === KeyCode.escape) {
      closeDropdown(true);
    }
  };
  const onClear = () => {
    fireNonCancelableEvent(onChange, { value: null });
  };
  const onApply = (newValue) => {
    const validationResult = isValidRange(newValue);
    if ((validationResult === null || validationResult === void 0 ? void 0 : validationResult.valid) === false) {
      return validationResult;
    }
    if (isDevelopment) {
      if ((newValue === null || newValue === void 0 ? void 0 : newValue.type) === "absolute") {
        const [startDateWithoutTime] = newValue.startDate.split("T");
        const [endDateWithoutTime] = newValue.endDate.split("T");
        if (!startDateWithoutTime || !endDateWithoutTime) {
          warnOnce("DateRangePicker", "You have provided an `isValidRange` prop that did not catch a missing start or end date.");
        }
      }
    }
    fireNonCancelableEvent(onChange, {
      value: formatValue(newValue, {
        dateOnly,
        timeOffset: normalizeTimeOffset(newValue, getTimeOffset, timeOffset)
      })
    });
    return validationResult || { valid: true };
  };
  const prevDateOnly = usePrevious(dateOnly);
  (0, import_react142.useEffect)(() => {
    if (prevDateOnly !== void 0 && prevDateOnly !== dateOnly) {
      warnOnce("DateRangePicker", `The provided \`dateOnly\` flag has been changed from "${prevDateOnly}" to "${dateOnly}" which can lead to unexpected value format. Consider using separate components.`);
    }
  }, [prevDateOnly, dateOnly]);
  if (value && value.type !== "absolute" && value.type !== "relative") {
    warnOnce("DateRangePicker", "You provided an invalid value. Reverting back to default.");
    value = null;
  }
  if ((value === null || value === void 0 ? void 0 : value.type) === "absolute" && rangeSelectorMode === "relative-only" || (value === null || value === void 0 ? void 0 : value.type) === "relative" && rangeSelectorMode === "absolute-only") {
    warnOnce("DateRangePicker", "The provided value does not correspond to the current range selector mode. Reverting back to default.");
    value = null;
  }
  const i18n = useInternalI18n("date-range-picker");
  const formatRelativeRange = i18n("i18nStrings.formatRelativeRange", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.formatRelativeRange, (format3) => ({ amount, unit: unit2 }) => format3({ amount, unit: unit2 }));
  if (isDevelopment) {
    if (!formatRelativeRange) {
      warnOnce("DateRangePicker", "A function for i18nStrings.formatRelativeRange was not provided. Relative ranges will not be correctly rendered.");
    }
  }
  const trigger = import_react142.default.createElement(
    "div",
    { className: styles_css_default39["trigger-wrapper"] },
    import_react142.default.createElement(
      button_trigger_default,
      { ref: triggerRef, id: controlId, invalid, ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel, ariaDescribedby, ariaLabelledby, className: clsx_m_default(styles_css_default39.label, {
        [styles_css_default39["label-enabled"]]: !readOnly && !disabled
      }), hideCaret: true, onClick: () => {
        if (!readOnly && !disabled) {
          setIsDropDownOpen(true);
        }
      }, disabled, readOnly, ariaHasPopup: "true" },
      import_react142.default.createElement(
        "span",
        { className: styles_css_default39["trigger-flexbox"] },
        import_react142.default.createElement(
          "span",
          { className: styles_css_default39["icon-wrapper"] },
          import_react142.default.createElement(internal_default, { name: "calendar", variant: disabled || readOnly ? "disabled" : "normal" })
        ),
        renderDateRange(value, placeholder !== null && placeholder !== void 0 ? placeholder : "", formatRelativeRange, normalizedTimeOffset)
      )
    )
  );
  const mergedRef = useMergeRefs(rootRef, __internalRootRef);
  return import_react142.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: mergedRef, className: clsx_m_default(baseProps.className, styles_css_default39.root), onKeyDown: onWrapperKeyDownHandler }),
    import_react142.default.createElement(dropdown_default, { stretchWidth: true, stretchHeight: true, open: isDropDownOpen, onDropdownClose: () => closeDropdown(), trigger, stretchToTriggerWidth: false, expandToViewport, dropdownId }, isDropDownOpen && import_react142.default.createElement(DateRangePickerDropdown, { startOfWeek: startOfWeek2, locale: normalizedLocale, isSingleGrid, onDropdownClose: () => closeDropdown(true), value, showClearButton, isDateEnabled, i18nStrings, onClear, onApply, relativeOptions, isValidRange, dateOnly, timeInputFormat, rangeSelectorMode, ariaLabelledby, ariaDescribedby, customAbsoluteRangeControl }))
  );
});
applyDisplayName(DateRangePicker, "DateRangePicker");
var date_range_picker_default = DateRangePicker;

// node_modules/@cloudscape-design/components/expandable-section/index.js
var import_react143 = __toESM(require_react());
function ExpandableSection(_a) {
  var { variant = "default" } = _a, props2 = __rest(_a, ["variant"]);
  const baseComponentProps = useBaseComponent("ExpandableSection");
  const expandableSection = import_react143.default.createElement(InternalExpandableSection, Object.assign({ variant }, props2, baseComponentProps));
  if (variant === "container" || variant === "stacked") {
    return import_react143.default.createElement(AnalyticsFunnelSubStep, null, expandableSection);
  } else {
    return expandableSection;
  }
}
applyDisplayName(ExpandableSection, "ExpandableSection");

// node_modules/@cloudscape-design/components/file-upload/index.js
var import_react149 = __toESM(require_react());

// node_modules/@cloudscape-design/components/file-upload/internal.js
var import_react148 = __toESM(require_react());

// node_modules/@cloudscape-design/components/file-upload/file-option/index.js
var import_react145 = __toESM(require_react());

// node_modules/@cloudscape-design/components/file-upload/file-option/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/file-upload/file-option/styles.scoped.css";
var styles_css_default44 = {
  "file-option-name": "awsui_file-option-name_ezgb4_ql5bn_9",
  "file-option-size": "awsui_file-option-size_ezgb4_ql5bn_10",
  "file-option-last-modified": "awsui_file-option-last-modified_ezgb4_ql5bn_11",
  "file-option-thumbnail": "awsui_file-option-thumbnail_ezgb4_ql5bn_12",
  "file-option": "awsui_file-option_ezgb4_ql5bn_9",
  "file-option-thumbnail-image": "awsui_file-option-thumbnail-image_ezgb4_ql5bn_28",
  "file-option-metadata": "awsui_file-option-metadata_ezgb4_ql5bn_33"
};

// node_modules/@cloudscape-design/components/file-upload/default-formatters.js
var KB = 1e3;
var MB = Math.pow(1e3, 2);
var GB = Math.pow(1e3, 3);
var TB = Math.pow(1e3, 4);
function formatFileSize(size) {
  if (size < MB) {
    return `${(size / KB).toFixed(2)} KB`;
  }
  if (size < GB) {
    return `${(size / MB).toFixed(2)} MB`;
  }
  if (size < TB) {
    return `${(size / GB).toFixed(2)} GB`;
  }
  return `${(size / TB).toFixed(2)} TB`;
}
function formatFileLastModified(date2) {
  return formatDateTime(date2);
}

// node_modules/@cloudscape-design/components/file-upload/file-option/thumbnail.js
var import_react144 = __toESM(require_react());
function FileOptionThumbnail({ file }) {
  const [imageSrc, setImageSrc] = (0, import_react144.useState)("");
  (0, import_react144.useEffect)(() => {
    if (URL.createObjectURL) {
      const src = URL.createObjectURL(file);
      setImageSrc(src);
      return () => {
        URL.revokeObjectURL(src);
      };
    }
  }, [file]);
  return import_react144.default.createElement(
    "div",
    { className: styles_css_default44["file-option-thumbnail"], "aria-hidden": true },
    import_react144.default.createElement("img", { className: styles_css_default44["file-option-thumbnail-image"], alt: file.name, src: imageSrc })
  );
}

// node_modules/@cloudscape-design/components/file-upload/file-option/index.js
function FileOption({ file, metadata, i18nStrings }) {
  var _a, _b;
  const isImage = file.type.startsWith("image/");
  const formatFileSize2 = (_a = i18nStrings.formatFileSize) !== null && _a !== void 0 ? _a : formatFileSize;
  const formatFileLastModified2 = (_b = i18nStrings.formatFileLastModified) !== null && _b !== void 0 ? _b : formatFileLastModified;
  return import_react145.default.createElement(
    InternalBox,
    { className: styles_css_default44["file-option"] },
    metadata.showFileThumbnail && isImage && import_react145.default.createElement(FileOptionThumbnail, { file }),
    import_react145.default.createElement(
      "div",
      { className: styles_css_default44["file-option-metadata"] },
      import_react145.default.createElement(
        InternalSpaceBetween,
        { direction: "vertical", size: "xxxs" },
        import_react145.default.createElement(InternalBox, { className: styles_css_default44["file-option-name"] }, file.name),
        metadata.showFileSize && file.size ? import_react145.default.createElement(InternalBox, { fontSize: "body-s", color: "text-body-secondary", className: styles_css_default44["file-option-size"] }, formatFileSize2(file.size)) : null,
        metadata.showFileLastModified && file.lastModified ? import_react145.default.createElement(InternalBox, { fontSize: "body-s", color: "text-body-secondary", className: styles_css_default44["file-option-last-modified"] }, formatFileLastModified2(new Date(file.lastModified))) : null
      )
    )
  );
}

// node_modules/@cloudscape-design/components/file-upload/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/file-upload/styles.scoped.css";
var styles_css_default45 = {
  "root": "awsui_root_1ubbm_1j86n_9",
  "hints": "awsui_hints_1ubbm_1j86n_10"
};

// node_modules/@cloudscape-design/components/file-upload/dropzone/index.js
var import_react146 = __toESM(require_react());

// node_modules/@cloudscape-design/components/file-upload/dropzone/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/file-upload/dropzone/styles.scoped.css";
var styles_css_default46 = {
  "dropzone": "awsui_dropzone_1fham_uelh3_93",
  "dropzone-hovered": "awsui_dropzone-hovered_1fham_uelh3_105"
};

// node_modules/@cloudscape-design/components/file-upload/dropzone/index.js
function useDropzoneVisible() {
  const [isDropzoneVisible, setDropzoneVisible] = (0, import_react146.useState)(false);
  (0, import_react146.useEffect)(() => {
    let dragTimer = null;
    const onDocumentDragOver = (event) => {
      var _a, _b;
      event.preventDefault();
      if (((_b = (_a = event.dataTransfer) === null || _a === void 0 ? void 0 : _a.types) === null || _b === void 0 ? void 0 : _b.indexOf("Files")) !== -1) {
        setDropzoneVisible(true);
        dragTimer && clearTimeout(dragTimer);
      }
    };
    const onDocumentDragLeave = (event) => {
      event.preventDefault();
      dragTimer = setTimeout(() => setDropzoneVisible(false), 25);
    };
    const onDocumentDrop = (event) => {
      event.preventDefault();
      dragTimer = setTimeout(() => setDropzoneVisible(false), 25);
    };
    document.addEventListener("dragover", onDocumentDragOver, false);
    document.addEventListener("dragleave", onDocumentDragLeave, false);
    document.addEventListener("drop", onDocumentDrop, false);
    return () => {
      dragTimer && clearTimeout(dragTimer);
      document.removeEventListener("dragover", onDocumentDragOver);
      document.removeEventListener("dragleave", onDocumentDragLeave);
      document.removeEventListener("drop", onDocumentDrop);
    };
  }, []);
  return isDropzoneVisible;
}
function Dropzone({ onChange, children }) {
  const [isDropzoneHovered, setDropzoneHovered] = (0, import_react146.useState)(false);
  const onDragOver = (event) => {
    event.preventDefault();
    setDropzoneHovered(true);
    if (event.dataTransfer) {
      event.dataTransfer.dropEffect = "copy";
    }
  };
  const onDragLeave = (event) => {
    event.preventDefault();
    setDropzoneHovered(false);
    if (event.dataTransfer) {
      event.dataTransfer.dropEffect = "none";
    }
  };
  const onDrop = (event) => {
    event.preventDefault();
    setDropzoneHovered(false);
    onChange(Array.from(event.dataTransfer.files));
  };
  return import_react146.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default46.dropzone, isDropzoneHovered && styles_css_default46["dropzone-hovered"]), onDragOver, onDragLeave, onDrop },
    import_react146.default.createElement(internal_default, { name: "upload" }),
    import_react146.default.createElement("span", null, children)
  );
}

// node_modules/@cloudscape-design/components/file-upload/file-input/index.js
var import_react147 = __toESM(require_react());

// node_modules/@cloudscape-design/components/file-upload/file-input/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/file-upload/file-input/styles.scoped.css";
var styles_css_default47 = {
  "upload-button": "awsui_upload-button_4xu1k_1q7mi_93",
  "upload-input": "awsui_upload-input_4xu1k_1q7mi_94",
  "file-input-container": "awsui_file-input-container_4xu1k_1q7mi_98",
  "force-focus-outline": "awsui_force-focus-outline_4xu1k_1q7mi_107"
};

// node_modules/@cloudscape-design/components/file-upload/file-input/index.js
var file_input_default = import_react147.default.forwardRef(FileInput);
function FileInput(_a, ref) {
  var _b;
  var { accept, ariaRequired, multiple, value, onChange, children } = _a, restProps = __rest(_a, ["accept", "ariaRequired", "multiple", "value", "onChange", "children"]);
  const uploadInputRef = (0, import_react147.useRef)(null);
  const uploadButtonLabelId = useUniqueId("upload-button-label");
  const formFieldContext = useFormFieldContext(restProps);
  const selfControlId = useUniqueId("upload-input");
  const controlId = (_b = formFieldContext.controlId) !== null && _b !== void 0 ? _b : selfControlId;
  useForwardFocus(ref, uploadInputRef);
  const [isFocused, setIsFocused] = (0, import_react147.useState)(false);
  const onUploadButtonClick = () => {
    var _a2;
    return (_a2 = uploadInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.click();
  };
  const onUploadInputFocus = () => setIsFocused(true);
  const onUploadInputBlur = () => setIsFocused(false);
  const onUploadInputChange = ({ target }) => {
    onChange(target.files ? Array.from(target.files) : []);
  };
  const nativeAttributes = {
    "aria-labelledby": joinStrings(formFieldContext.ariaLabelledby, uploadButtonLabelId),
    "aria-describedby": formFieldContext.ariaDescribedby
  };
  if (formFieldContext.invalid) {
    nativeAttributes["aria-invalid"] = true;
  }
  if (ariaRequired) {
    nativeAttributes["aria-required"] = true;
  }
  (0, import_react147.useEffect)(() => {
    if (window.DataTransfer) {
      const dataTransfer = new DataTransfer();
      for (const file of value) {
        dataTransfer.items.add(file);
      }
      uploadInputRef.current.files = dataTransfer.files;
    }
  }, [value]);
  return import_react147.default.createElement(
    "div",
    { className: styles_css_default47["file-input-container"] },
    import_react147.default.createElement("input", Object.assign({ id: controlId, ref: uploadInputRef, type: "file", hidden: false, multiple, accept, onChange: onUploadInputChange, onFocus: onUploadInputFocus, onBlur: onUploadInputBlur, className: styles_css_default47["upload-input"] }, nativeAttributes)),
    import_react147.default.createElement(internal_default2, { iconName: "upload", formAction: "none", onClick: onUploadButtonClick, className: clsx_m_default(styles_css_default47["upload-button"], isFocused && styles_css_default47["force-focus-outline"]), __nativeAttributes: { tabIndex: -1, "aria-hidden": true } }, children),
    import_react147.default.createElement(ScreenreaderOnly, { id: uploadButtonLabelId }, children)
  );
}

// node_modules/@cloudscape-design/components/file-upload/internal.js
var internal_default17 = import_react148.default.forwardRef(InternalFileUpload);
function InternalFileUpload(_a, externalRef) {
  var _b;
  var { accept, ariaRequired, multiple = false, onChange, value, tokenLimit, showFileSize, showFileLastModified, showFileThumbnail, i18nStrings, __internalRootRef = null, constraintText, errorText, fileErrors } = _a, restProps = __rest(_a, ["accept", "ariaRequired", "multiple", "onChange", "value", "tokenLimit", "showFileSize", "showFileLastModified", "showFileThumbnail", "i18nStrings", "__internalRootRef", "constraintText", "errorText", "fileErrors"]);
  const baseProps = getBaseProps(restProps);
  const metadata = { showFileSize, showFileLastModified, showFileThumbnail };
  const errorId = useUniqueId("error-");
  const constraintTextId = useUniqueId("constraint-text-");
  const fileInputRef = (0, import_react148.useRef)(null);
  const ref = useMergeRefs(fileInputRef, externalRef);
  const [removedFileIndex, setRemovedFileIndex] = (0, import_react148.useState)(null);
  checkControlled("FileUpload", "value", value, "onChange", onChange);
  if (!multiple && value.length > 1) {
    warnOnce("FileUpload", "Value must be an array of size 0 or 1 when `multiple=false`.");
  }
  const handleFilesChange = (newFiles) => {
    const newValue = multiple ? [...value, ...newFiles] : newFiles[0] ? newFiles : [...value];
    fireNonCancelableEvent(onChange, { value: newValue });
  };
  const onFileRemove = (removeFileIndex) => {
    var _a2;
    const newValue = value.filter((_, fileIndex) => fileIndex !== removeFileIndex);
    fireNonCancelableEvent(onChange, { value: newValue });
    setRemovedFileIndex(removeFileIndex);
    if (value.length === 1) {
      (_a2 = fileInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  };
  const isDropzoneVisible = useDropzoneVisible();
  const formFieldContext = useFormFieldContext(restProps);
  const ariaDescribedBy = joinStrings((_b = restProps.ariaDescribedby) !== null && _b !== void 0 ? _b : formFieldContext.ariaDescribedby, errorText ? errorId : void 0, constraintText ? constraintTextId : void 0);
  const hasError = Boolean(errorText || (fileErrors === null || fileErrors === void 0 ? void 0 : fileErrors.filter(Boolean).length));
  const invalid = restProps.invalid || formFieldContext.invalid || hasError;
  return import_react148.default.createElement(
    InternalSpaceBetween,
    Object.assign({}, baseProps, { size: "xs", className: clsx_m_default(baseProps.className, styles_css_default45.root), __internalRootRef }),
    import_react148.default.createElement(
      InternalBox,
      null,
      isDropzoneVisible ? import_react148.default.createElement(Dropzone, { onChange: handleFilesChange }, i18nStrings.dropzoneText(multiple)) : import_react148.default.createElement(file_input_default, Object.assign({ ref, accept, ariaRequired, multiple, onChange: handleFilesChange, value }, restProps, { ariaDescribedby: ariaDescribedBy, invalid }), i18nStrings.uploadButtonText(multiple)),
      (constraintText || errorText) && import_react148.default.createElement(
        "div",
        { className: styles_css_default45.hints },
        errorText && import_react148.default.createElement(FormFieldError, { id: errorId, errorIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel }, errorText),
        constraintText && import_react148.default.createElement(ConstraintText, { id: constraintTextId, hasError: !!errorText }, constraintText)
      )
    ),
    !multiple && value.length > 0 ? import_react148.default.createElement(
      InternalBox,
      null,
      import_react148.default.createElement(
        Token,
        { ariaLabel: value[0].name, dismissLabel: i18nStrings.removeFileAriaLabel(0), onDismiss: () => onFileRemove(0), errorText: fileErrors === null || fileErrors === void 0 ? void 0 : fileErrors[0], errorIconAriaLabel: i18nStrings.errorIconAriaLabel, "data-index": 0 },
        import_react148.default.createElement(FileOption, { file: value[0], metadata, i18nStrings })
      )
    ) : null,
    multiple && value.length > 0 ? import_react148.default.createElement(
      InternalBox,
      null,
      import_react148.default.createElement(TokenList, { alignment: "vertical", items: value, renderItem: (file, fileIndex) => import_react148.default.createElement(
        Token,
        { ariaLabel: file.name, dismissLabel: i18nStrings.removeFileAriaLabel(fileIndex), onDismiss: () => onFileRemove(fileIndex), errorText: fileErrors === null || fileErrors === void 0 ? void 0 : fileErrors[fileIndex], errorIconAriaLabel: i18nStrings.errorIconAriaLabel, "data-index": fileIndex },
        import_react148.default.createElement(FileOption, { file, metadata, i18nStrings })
      ), limit: tokenLimit, i18nStrings: {
        limitShowFewer: i18nStrings.limitShowFewer,
        limitShowMore: i18nStrings.limitShowMore
      }, removedItemIndex: removedFileIndex })
    ) : null
  );
}

// node_modules/@cloudscape-design/components/file-upload/index.js
var FileUpload = import_react149.default.forwardRef((_a, ref) => {
  var { multiple, showFileSize, showFileLastModified, showFileThumbnail } = _a, restProps = __rest(_a, ["multiple", "showFileSize", "showFileLastModified", "showFileThumbnail"]);
  const baseComponentProps = useBaseComponent("FileUpload");
  const externalProps = getExternalProps(restProps);
  return import_react149.default.createElement(internal_default17, Object.assign({ ref, multiple, showFileSize, showFileLastModified, showFileThumbnail }, externalProps, baseComponentProps));
});
applyDisplayName(FileUpload, "FileUpload");
var file_upload_default = FileUpload;

// node_modules/@cloudscape-design/components/flashbar/index.js
var import_react154 = __toESM(require_react());

// node_modules/@cloudscape-design/components/flashbar/collapsible-flashbar.js
var import_react152 = __toESM(require_react());

// node_modules/@cloudscape-design/components/flashbar/flash.js
var import_react150 = __toESM(require_react());

// node_modules/@cloudscape-design/components/flashbar/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/flashbar/styles.scoped.css";
var styles_css_default48 = {
  "flash-with-motion": "awsui_flash-with-motion_1q84n_trp7z_93",
  "enter": "awsui_enter_1q84n_trp7z_93",
  "flash-body": "awsui_flash-body_1q84n_trp7z_107",
  "flash-message": "awsui_flash-message_1q84n_trp7z_107",
  "flash-header": "awsui_flash-header_1q84n_trp7z_107",
  "flash-content": "awsui_flash-content_1q84n_trp7z_108",
  "action-button-wrapper": "awsui_action-button-wrapper_1q84n_trp7z_109",
  "dismiss-button-wrapper": "awsui_dismiss-button-wrapper_1q84n_trp7z_110",
  "flash-icon": "awsui_flash-icon_1q84n_trp7z_133",
  "entering": "awsui_entering_1q84n_trp7z_146",
  "entered": "awsui_entered_1q84n_trp7z_167",
  "exiting": "awsui_exiting_1q84n_trp7z_272",
  "stack": "awsui_stack_1q84n_trp7z_294",
  "animation-running": "awsui_animation-running_1q84n_trp7z_294",
  "item": "awsui_item_1q84n_trp7z_294",
  "flash-list-item": "awsui_flash-list-item_1q84n_trp7z_295",
  "notification-bar": "awsui_notification-bar_1q84n_trp7z_296",
  "collapsed": "awsui_collapsed_1q84n_trp7z_316",
  "animation-ready": "awsui_animation-ready_1q84n_trp7z_316",
  "expanded-only": "awsui_expanded-only_1q84n_trp7z_316",
  "expanded": "awsui_expanded_1q84n_trp7z_316",
  "flash": "awsui_flash_1q84n_trp7z_93",
  "collapsible": "awsui_collapsible_1q84n_trp7z_380",
  "short-list": "awsui_short-list_1q84n_trp7z_386",
  "visual-refresh": "awsui_visual-refresh_1q84n_trp7z_386",
  "status": "awsui_status_1q84n_trp7z_603",
  "header": "awsui_header_1q84n_trp7z_603",
  "item-count": "awsui_item-count_1q84n_trp7z_604",
  "button": "awsui_button_1q84n_trp7z_605",
  "type-count": "awsui_type-count_1q84n_trp7z_640",
  "count-number": "awsui_count-number_1q84n_trp7z_640",
  "icon": "awsui_icon_1q84n_trp7z_674",
  "floating": "awsui_floating_1q84n_trp7z_712",
  "flashbar": "awsui_flashbar_1q84n_trp7z_720",
  "flash-refresh": "awsui_flash-refresh_1q84n_trp7z_766",
  "flash-list": "awsui_flash-list_1q84n_trp7z_295",
  "flash-focus-container": "awsui_flash-focus-container_1q84n_trp7z_785",
  "flash-text": "awsui_flash-text_1q84n_trp7z_812",
  "dismiss-button": "awsui_dismiss-button_1q84n_trp7z_110",
  "breakpoint-default": "awsui_breakpoint-default_1q84n_trp7z_853",
  "action-button": "awsui_action-button_1q84n_trp7z_109",
  "flash-type-success": "awsui_flash-type-success_1q84n_trp7z_866",
  "flash-type-error": "awsui_flash-type-error_1q84n_trp7z_870",
  "flash-type-info": "awsui_flash-type-info_1q84n_trp7z_874",
  "flash-type-in-progress": "awsui_flash-type-in-progress_1q84n_trp7z_875",
  "flash-type-warning": "awsui_flash-type-warning_1q84n_trp7z_876"
};

// node_modules/@cloudscape-design/components/flashbar/utils.js
var FOCUS_THROTTLE_DELAY = 2e3;
var typesToColors = {
  error: "red",
  info: "blue",
  "in-progress": "blue",
  success: "green",
  warning: "blue"
};
function getColorFromType(type) {
  const defaultColor = "blue";
  return type ? typesToColors[type] || defaultColor : defaultColor;
}
function getItemType(item) {
  if (item.loading) {
    return "in-progress";
  } else {
    return item.type || "info";
  }
}
function getItemColor(item) {
  return getColorFromType(getItemType(item));
}
function getVisibleCollapsedItems(items, desiredLength) {
  const itemsOnTop = [];
  const itemsToPromote = [];
  const addedColors = /* @__PURE__ */ new Set();
  const allPossibleColors = Object.keys(typesToColors).length;
  const finalLength = Math.min(items.length, desiredLength);
  for (let i = 0; i < items.length; i++) {
    const item = items[i];
    const color2 = getItemColor(item);
    const isColorRepeated = addedColors.has(color2);
    if (i < finalLength) {
      itemsOnTop.push({ item: Object.assign(Object.assign({}, item), { expandedIndex: i }), isColorRepeated });
    } else {
      if (addedColors.size === allPossibleColors) {
        break;
      } else if (!isColorRepeated) {
        itemsToPromote.push(Object.assign(Object.assign({}, item), { expandedIndex: i }));
      }
    }
    addedColors.add(color2);
  }
  const reversedInitialSelection = [];
  let slotsReservedForPromotions = 0;
  for (let j = itemsOnTop.length - 1; j >= 0; j--) {
    const item = itemsOnTop[j];
    if (item.isColorRepeated && slotsReservedForPromotions < itemsToPromote.length) {
      slotsReservedForPromotions += 1;
    } else {
      reversedInitialSelection.push(item.item);
    }
  }
  const selectedItems = reversedInitialSelection.reverse();
  for (let k2 = 0; selectedItems.length < desiredLength; k2++) {
    selectedItems.push(itemsToPromote[k2]);
  }
  return selectedItems;
}
function getFlashTypeCount(items) {
  const count = { error: 0, info: 0, "in-progress": 0, success: 0, warning: 0 };
  for (const item of items) {
    const type = getItemType(item);
    count[type] += 1;
  }
  return count;
}
var counterTypes = [
  { type: "error", labelName: "errorIconAriaLabel", iconName: "status-negative" },
  { type: "warning", labelName: "warningIconAriaLabel", iconName: "status-warning" },
  { type: "success", labelName: "successIconAriaLabel", iconName: "status-positive" },
  { type: "info", labelName: "infoIconAriaLabel", iconName: "status-info" },
  { type: "in-progress", labelName: "inProgressIconAriaLabel", iconName: "status-in-progress" }
];

// node_modules/@cloudscape-design/components/flashbar/internal/analytics.js
var metrics = new Metrics(PACKAGE_SOURCE, PACKAGE_VERSION);
var eventContext = "csa_flashbar";
var sendRenderMetric = (items) => {
  const countByType = getFlashTypeCount(items);
  metrics.sendPanoramaMetric({
    eventContext,
    eventType: "render",
    eventValue: items.length.toString(),
    eventDetail: countByType
  });
};
var sendToggleMetric = (itemsCount, expanded) => {
  metrics.sendPanoramaMetric({
    eventContext,
    eventType: expanded ? "expand" : "collapse",
    eventValue: itemsCount.toString()
  });
};
var sendDismissMetric = (itemType) => {
  metrics.sendPanoramaMetric({
    eventContext,
    eventType: "dismiss",
    eventValue: itemType
  });
};

// node_modules/@cloudscape-design/components/flashbar/flash.js
var ICON_TYPES = {
  success: "status-positive",
  warning: "status-warning",
  info: "status-info",
  error: "status-negative",
  "in-progress": "status-in-progress"
};
function actionButton(buttonText, onButtonClick) {
  return import_react150.default.createElement(InternalButton, { onClick: onButtonClick, className: styles_css_default48["action-button"], formAction: "none" }, buttonText);
}
function dismissButton(dismissLabel, onDismiss) {
  return import_react150.default.createElement(
    "div",
    { className: styles_css_default48["dismiss-button-wrapper"] },
    import_react150.default.createElement(InternalButton, { onClick: onDismiss, className: styles_css_default48["dismiss-button"], variant: "flashbar-icon", iconName: "close", formAction: "none", ariaLabel: dismissLabel })
  );
}
var focusFlashById = throttle((element, itemId) => {
  var _a;
  const selector = `[data-itemid="${CSS.escape(itemId)}"] .${styles_css_default48["flash-focus-container"]}`;
  (_a = element === null || element === void 0 ? void 0 : element.querySelector(selector)) === null || _a === void 0 ? void 0 : _a.focus();
}, FOCUS_THROTTLE_DELAY, { trailing: false });
var Flash = import_react150.default.forwardRef(({ id, header, content, dismissible, dismissLabel, statusIconAriaLabel, loading, action, buttonText, onButtonClick, onDismiss, className, transitionState, ariaRole, type = "info" }, ref) => {
  if (isDevelopment) {
    if (buttonText && !onButtonClick) {
      warnOnce("Flashbar", `You provided a \`buttonText\` prop without an \`onButtonClick\` handler. This will render a non-interactive action button.`);
    }
    if (dismissible && !onDismiss) {
      warnOnce("Flashbar", `You have set the \`dismissible\` prop without an \`onDismiss\` handler. This will render a non-interactive dismiss button.`);
    }
  }
  const button = action || buttonText && actionButton(buttonText, onButtonClick);
  const iconType = ICON_TYPES[type];
  const icon = loading ? import_react150.default.createElement(InternalSpinner, null) : import_react150.default.createElement(internal_default, { name: iconType });
  const effectiveType = loading ? "info" : type;
  const handleDismiss = (event) => {
    sendDismissMetric(effectiveType);
    onDismiss && onDismiss(event);
  };
  const analyticsAttributes = {
    [DATA_ATTR_ANALYTICS_FLASHBAR]: effectiveType
  };
  return import_react150.default.createElement(
    "div",
    Object.assign({ ref, role: ariaRole, "aria-live": ariaRole ? "off" : void 0, "data-itemid": id, className: clsx_m_default(styles_css_default48.flash, styles_css_default48[`flash-type-${effectiveType}`], className, transitionState && {
      [styles_css_default48.enter]: transitionState === "enter",
      [styles_css_default48.entering]: transitionState === "entering",
      [styles_css_default48.entered]: transitionState === "entered",
      [styles_css_default48.exit]: transitionState === "exit",
      [styles_css_default48.exiting]: transitionState === "exiting",
      [styles_css_default48.exited]: transitionState === "exited"
    }) }, analyticsAttributes),
    import_react150.default.createElement(
      "div",
      { className: styles_css_default48["flash-body"] },
      import_react150.default.createElement(
        "div",
        { className: styles_css_default48["flash-focus-container"], tabIndex: -1 },
        import_react150.default.createElement("div", { className: clsx_m_default(styles_css_default48["flash-icon"], styles_css_default48["flash-text"]), role: "img", "aria-label": statusIconAriaLabel }, icon),
        import_react150.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default48["flash-message"], styles_css_default48["flash-text"]) },
          import_react150.default.createElement("div", { className: styles_css_default48["flash-header"] }, header),
          import_react150.default.createElement("div", { className: styles_css_default48["flash-content"] }, content)
        )
      ),
      button && import_react150.default.createElement("div", { className: styles_css_default48["action-button-wrapper"] }, button)
    ),
    dismissible && dismissButton(dismissLabel, handleDismiss),
    ariaRole === "status" && import_react150.default.createElement(
      live_region_default,
      null,
      statusIconAriaLabel,
      " ",
      header,
      " ",
      content
    )
  );
});

// node_modules/@cloudscape-design/components/internal/animate.js
function getDOMRects(elements) {
  const rects = {};
  for (const id in elements) {
    const element = elements[id];
    if (element) {
      rects[id] = element.getBoundingClientRect();
    }
  }
  return rects;
}
function animate({ oldState, elements, onTransitionsEnd, newElementInitialState }) {
  for (const id in elements) {
    const element = elements[id];
    const oldRect = oldState[id];
    if (element) {
      const newRect = element.getBoundingClientRect();
      const noOpTransform = { scale: 1, x: 0, y: 0 };
      const calculatedInverseTransform = oldRect ? {
        scale: oldRect.width / newRect.width,
        x: (oldRect.left + oldRect.right) / 2 - (newRect.left + newRect.right) / 2,
        y: (oldRect.top + oldRect.bottom) / 2 - (newRect.top + newRect.bottom) / 2
      } : newElementInitialState ? newElementInitialState(newRect) : {};
      const inverseTransform = Object.assign(Object.assign({}, noOpTransform), calculatedInverseTransform);
      element.style.transitionProperty = "none";
      element.style.transform = `scale(${inverseTransform.scale}) translate(${inverseTransform.x}px, ${inverseTransform.y}px)`;
      if (!oldRect) {
        element.style.opacity = "0";
      }
    }
  }
  requestAnimationFrame(() => {
    const ongoingAnimations = /* @__PURE__ */ new Set();
    for (const id in elements) {
      const element = elements[id];
      if (element) {
        const oldRect = oldState[id];
        if (oldRect) {
          element.style.transitionProperty = `transform`;
          element.style.transform = "";
        } else {
          element.style.transitionProperty = `transform, opacity`;
          element.style.transform = "";
          element.style.opacity = "";
        }
        const onTransitionStart = (event) => {
          if (event.target === element) {
            ongoingAnimations.add(id);
            element.removeEventListener("transitionstart", onTransitionStart);
          }
        };
        const onTransitionEnd = (event) => {
          if (event.target === element) {
            element.style.transitionProperty = "";
            element.removeEventListener("transitionstart", onTransitionEnd);
            if (onTransitionsEnd) {
              ongoingAnimations.delete(id);
              if (ongoingAnimations.size === 0) {
                onTransitionsEnd();
              }
            }
          }
        };
        element.addEventListener("transitionstart", onTransitionStart);
        element.addEventListener("transitionend", onTransitionEnd);
      }
    }
  });
}

// node_modules/@cloudscape-design/components/flashbar/common.js
var import_react151 = __toESM(require_react());
var componentName = "Flashbar";
function useFlashbar(_a) {
  var { items, onItemsAdded, onItemsChanged, onItemsRemoved } = _a, restProps = __rest(_a, ["items", "onItemsAdded", "onItemsChanged", "onItemsRemoved"]);
  const { __internalRootRef } = useBaseComponent(componentName);
  const allItemsHaveId = (0, import_react151.useMemo)(() => items.every((item) => "id" in item), [items]);
  const baseProps = getBaseProps(restProps);
  const ref = (0, import_react151.useRef)(null);
  const [breakpoint, breakpointRef] = useContainerBreakpoints(["xs"]);
  const mergedRef = useMergeRefs(ref, breakpointRef, __internalRootRef);
  const isReducedMotion = useReducedMotion(breakpointRef);
  const isVisualRefresh = useVisualRefresh();
  const [previousItems, setPreviousItems] = (0, import_react151.useState)(items);
  const [nextFocusId, setNextFocusId] = (0, import_react151.useState)(null);
  if (isDevelopment) {
    if (items === null || items === void 0 ? void 0 : items.some((item) => item.ariaRole === "alert" && !item.id)) {
      warnOnce("Flashbar", `You provided \`ariaRole="alert"\` for a flashbar item without providing an \`id\`. Focus will not be moved to the newly added flash message.`);
    }
  }
  if (items) {
    const newItems = items.filter(({ id }) => id && !previousItems.some((item) => item.id === id));
    const removedItems = previousItems.filter(({ id }) => id && !items.some((item) => item.id === id));
    if (newItems.length > 0 || removedItems.length > 0) {
      setPreviousItems(items);
      onItemsAdded === null || onItemsAdded === void 0 ? void 0 : onItemsAdded(newItems);
      onItemsRemoved === null || onItemsRemoved === void 0 ? void 0 : onItemsRemoved(removedItems);
      onItemsChanged === null || onItemsChanged === void 0 ? void 0 : onItemsChanged({ allItemsHaveId, isReducedMotion });
      const newFocusItems = newItems.filter(({ ariaRole }) => ariaRole === "alert");
      if (newFocusItems.length > 0) {
        setNextFocusId(newFocusItems[0].id);
      }
    }
  }
  (0, import_react151.useEffect)(() => {
    if (nextFocusId) {
      focusFlashById(ref.current, nextFocusId);
    }
  }, [nextFocusId, ref]);
  return {
    allItemsHaveId,
    baseProps,
    breakpoint,
    isReducedMotion,
    isVisualRefresh,
    mergedRef,
    ref
  };
}

// node_modules/@cloudscape-design/components/flashbar/collapsible-flashbar.js
var maxNonCollapsibleItems = 1;
var resizeListenerThrottleDelay = 100;
function CollapsibleFlashbar(_a) {
  var { items } = _a, restProps = __rest(_a, ["items"]);
  const [enteringItems, setEnteringItems] = (0, import_react152.useState)([]);
  const [exitingItems, setExitingItems] = (0, import_react152.useState)([]);
  const [isFlashbarStackExpanded, setIsFlashbarStackExpanded] = (0, import_react152.useState)(false);
  const getElementsToAnimate = (0, import_react152.useCallback)(() => {
    const flashElements = isFlashbarStackExpanded ? expandedItemRefs.current : collapsedItemRefs.current;
    return Object.assign(Object.assign({}, flashElements), { notificationBar: notificationBarRef.current });
  }, [isFlashbarStackExpanded]);
  const prepareAnimations = (0, import_react152.useCallback)(() => {
    const rects = getDOMRects(getElementsToAnimate());
    setInitialAnimationState(rects);
  }, [getElementsToAnimate]);
  const { baseProps, breakpoint, isReducedMotion, isVisualRefresh, mergedRef, ref } = useFlashbar(Object.assign(Object.assign({ items }, restProps), { onItemsAdded: (newItems) => {
    setEnteringItems([...enteringItems, ...newItems]);
  }, onItemsChanged: (options) => {
    if ((options === null || options === void 0 ? void 0 : options.allItemsHaveId) && !(options === null || options === void 0 ? void 0 : options.isReducedMotion)) {
      prepareAnimations();
    }
  }, onItemsRemoved: (removedItems) => {
    setExitingItems([...exitingItems, ...removedItems]);
  } }));
  const collapsedItemRefs = (0, import_react152.useRef)({});
  const expandedItemRefs = (0, import_react152.useRef)({});
  const [initialAnimationState, setInitialAnimationState] = (0, import_react152.useState)(null);
  const listElementRef = (0, import_react152.useRef)(null);
  const notificationBarRef = (0, import_react152.useRef)(null);
  const [transitioning, setTransitioning] = (0, import_react152.useState)(false);
  const flashbarElementId = useUniqueId("flashbar");
  const itemCountElementId = useUniqueId("item-count");
  if (items.length <= maxNonCollapsibleItems && isFlashbarStackExpanded) {
    setIsFlashbarStackExpanded(false);
  }
  const animateFlash = !isReducedMotion;
  function toggleCollapseExpand() {
    sendToggleMetric(items.length, !isFlashbarStackExpanded);
    if (!isReducedMotion) {
      prepareAnimations();
    }
    setIsFlashbarStackExpanded((prev) => !prev);
  }
  (0, import_react152.useLayoutEffect)(() => {
    if (isFlashbarStackExpanded && (items === null || items === void 0 ? void 0 : items.length)) {
      const mostRecentItem = items[0];
      if (mostRecentItem.id !== void 0) {
        focusFlashById(ref.current, mostRecentItem.id);
      }
    }
  }, [isFlashbarStackExpanded]);
  const updateBottomSpacing = (0, import_react152.useMemo)(() => throttle(() => {
    const listElement = listElementRef === null || listElementRef === void 0 ? void 0 : listElementRef.current;
    const flashbar = listElement === null || listElement === void 0 ? void 0 : listElement.parentElement;
    if (listElement && flashbar) {
      flashbar.classList.remove(styles_css_default48.floating);
      const windowHeight = window.innerHeight;
      const outerElement = findUpUntil(flashbar, (element) => element.getAttribute("role") === "region") || flashbar;
      const applySpacing = isFlashbarStackExpanded && Math.ceil(outerElement.getBoundingClientRect().bottom) >= windowHeight;
      if (!applySpacing) {
        flashbar.classList.add(styles_css_default48.floating);
      }
    }
  }, resizeListenerThrottleDelay), [isFlashbarStackExpanded]);
  (0, import_react152.useLayoutEffect)(() => {
    window.addEventListener("resize", updateBottomSpacing);
    return () => {
      window.removeEventListener("resize", updateBottomSpacing);
      updateBottomSpacing.cancel();
    };
  }, [updateBottomSpacing]);
  const { i18nStrings } = restProps;
  const i18n = useInternalI18n("flashbar");
  const ariaLabel = i18n("i18nStrings.ariaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel);
  const notificationBarText = i18n("i18nStrings.notificationBarText", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.notificationBarText);
  const notificationBarAriaLabel = i18n("i18nStrings.notificationBarAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.notificationBarAriaLabel);
  const iconAriaLabels = {
    errorIconAriaLabel: i18n("i18nStrings.errorIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel),
    inProgressIconAriaLabel: i18n("i18nStrings.inProgressIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inProgressIconAriaLabel),
    infoIconAriaLabel: i18n("i18nStrings.infoIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.infoIconAriaLabel),
    successIconAriaLabel: i18n("i18nStrings.successIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.successIconAriaLabel),
    warningIconAriaLabel: i18n("i18nStrings.warningIconAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.warningIconAriaLabel)
  };
  (0, import_react152.useLayoutEffect)(() => {
    if (initialAnimationState) {
      updateBottomSpacing();
      animate({
        elements: getElementsToAnimate(),
        oldState: initialAnimationState,
        newElementInitialState: ({ top }) => ({ scale: 0.9, y: -0.2 * top }),
        onTransitionsEnd: () => setTransitioning(false)
      });
      if (!isFlashbarStackExpanded && notificationBarRef.current) {
        scrollElementIntoView(notificationBarRef.current);
      }
      setTransitioning(true);
      setInitialAnimationState(null);
    }
  }, [updateBottomSpacing, getElementsToAnimate, initialAnimationState, isFlashbarStackExpanded]);
  const isCollapsible = items.length > maxNonCollapsibleItems;
  const countByType = getFlashTypeCount(items);
  const stackDepth = Math.min(3, items.length);
  const itemsToShow = isFlashbarStackExpanded ? items.map((item, index) => Object.assign(Object.assign({}, item), { expandedIndex: index })) : getVisibleCollapsedItems(items, stackDepth).map((item, index) => Object.assign(Object.assign({}, item), { collapsedIndex: index }));
  const getItemId = (item) => {
    var _a2, _b;
    return (_b = (_a2 = item.id) !== null && _a2 !== void 0 ? _a2 : item.expandedIndex) !== null && _b !== void 0 ? _b : 0;
  };
  const hasEntered = (item) => enteringItems.some((_item) => _item.id && _item.id === item.id);
  const hasLeft = (item) => !("expandedIndex" in item);
  const hasEnteredOrLeft = (item) => hasEntered(item) || hasLeft(item);
  const showInnerContent = (item) => isFlashbarStackExpanded || hasLeft(item) || "expandedIndex" in item && item.expandedIndex === 0;
  const shouldUseStandardAnimation = (item, index) => index === 0 && hasEnteredOrLeft(item);
  const getAnimationElementId = (item) => `flash-${getItemId(item)}`;
  const renderList = () => import_react152.default.createElement(
    "ul",
    { ref: listElementRef, className: clsx_m_default(styles_css_default48["flash-list"], isFlashbarStackExpanded ? styles_css_default48.expanded : styles_css_default48.collapsed, transitioning && styles_css_default48["animation-running"], initialAnimationState && styles_css_default48["animation-ready"], isVisualRefresh && styles_css_default48["visual-refresh"]), id: flashbarElementId, "aria-label": ariaLabel, "aria-describedby": isCollapsible ? itemCountElementId : void 0, style: !isFlashbarStackExpanded || transitioning ? {
      [custom_css_properties_default.flashbarStackDepth]: stackDepth
    } : void 0 },
    import_react152.default.createElement(TransitionGroup_default, { component: null }, itemsToShow.map((item, index) => import_react152.default.createElement(Transition, { key: getItemId(item), in: !hasLeft(item), onStatusChange: (status) => {
      if (status === "entered") {
        setEnteringItems([]);
      } else if (status === "exited") {
        setExitingItems([]);
      }
    } }, (state, transitionRootElement) => {
      var _a2, _b, _c;
      return import_react152.default.createElement("li", { "aria-hidden": !showInnerContent(item), className: showInnerContent(item) ? clsx_m_default(styles_css_default48["flash-list-item"], !isFlashbarStackExpanded && styles_css_default48.item, !collapsedItemRefs.current[getAnimationElementId(item)] && styles_css_default48["expanded-only"]) : clsx_m_default(styles_css_default48.flash, styles_css_default48[`flash-type-${(_a2 = item.type) !== null && _a2 !== void 0 ? _a2 : "info"}`], styles_css_default48.item), ref: (element) => {
        if (isFlashbarStackExpanded) {
          expandedItemRefs.current[getAnimationElementId(item)] = element;
        } else {
          collapsedItemRefs.current[getAnimationElementId(item)] = element;
        }
      }, style: !isFlashbarStackExpanded || transitioning ? {
        [custom_css_properties_default.flashbarStackIndex]: (_c = (_b = item.collapsedIndex) !== null && _b !== void 0 ? _b : item.expandedIndex) !== null && _c !== void 0 ? _c : index
      } : void 0, key: getItemId(item) }, showInnerContent(item) && import_react152.default.createElement(
        Flash,
        Object.assign({
          className: clsx_m_default(animateFlash && styles_css_default48["flash-with-motion"], isVisualRefresh && styles_css_default48["flash-refresh"]),
          key: getItemId(item),
          ref: shouldUseStandardAnimation(item, index) ? transitionRootElement : void 0,
          transitionState: shouldUseStandardAnimation(item, index) ? state : void 0
        }, item)
      ));
    })))
  );
  return import_react152.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default48.flashbar, styles_css_default48[`breakpoint-${breakpoint}`], styles_css_default48.stack, isCollapsible && styles_css_default48.collapsible, items.length === 2 && styles_css_default48["short-list"], isFlashbarStackExpanded && styles_css_default48.expanded, isVisualRefresh && styles_css_default48["visual-refresh"], getVisualContextClassname("flashbar")), ref: mergedRef }),
    import_react152.default.createElement(
      import_react152.default.Fragment,
      null,
      isFlashbarStackExpanded && renderList(),
      isCollapsible && import_react152.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default48["notification-bar"], isVisualRefresh && styles_css_default48["visual-refresh"], isFlashbarStackExpanded ? styles_css_default48.expanded : styles_css_default48.collapsed, transitioning && styles_css_default48["animation-running"], items.length === 2 && styles_css_default48["short-list"]), onClick: toggleCollapseExpand, ref: notificationBarRef },
        import_react152.default.createElement(
          "span",
          { "aria-live": "polite", className: styles_css_default48.status, role: "status", id: itemCountElementId },
          notificationBarText && import_react152.default.createElement("h2", { className: styles_css_default48.header }, notificationBarText),
          import_react152.default.createElement("span", { className: styles_css_default48["item-count"] }, counterTypes.map(({ type, labelName, iconName }) => import_react152.default.createElement(NotificationTypeCount, { key: type, iconName, label: iconAriaLabels[labelName], count: countByType[type] })))
        ),
        import_react152.default.createElement(
          "button",
          { "aria-controls": flashbarElementId, "aria-describedby": itemCountElementId, "aria-expanded": isFlashbarStackExpanded, "aria-label": notificationBarAriaLabel, className: clsx_m_default(styles_css_default48.button, isFlashbarStackExpanded && styles_css_default48.expanded) },
          import_react152.default.createElement(internal_default, { className: styles_css_default48.icon, size: "normal", name: "angle-down" })
        )
      ),
      !isFlashbarStackExpanded && renderList()
    )
  );
}
var NotificationTypeCount = ({ iconName, label, count }) => {
  return import_react152.default.createElement(
    "span",
    { className: styles_css_default48["type-count"] },
    import_react152.default.createElement(
      "span",
      { "aria-label": label, role: "img" },
      import_react152.default.createElement(
        "span",
        { title: label, "aria-hidden": "true" },
        import_react152.default.createElement(internal_default, { name: iconName })
      )
    ),
    import_react152.default.createElement("span", { className: styles_css_default48["count-number"] }, count)
  );
};

// node_modules/@cloudscape-design/components/flashbar/non-collapsible-flashbar.js
var import_react153 = __toESM(require_react());

// node_modules/@cloudscape-design/components/flashbar/constant.js
var TIMEOUT_FOR_ENTERING_ANIMATION = 115;

// node_modules/@cloudscape-design/components/flashbar/non-collapsible-flashbar.js
function NonCollapsibleFlashbar(_a) {
  var { items, i18nStrings } = _a, restProps = __rest(_a, ["items", "i18nStrings"]);
  const { allItemsHaveId, baseProps, breakpoint, isReducedMotion, isVisualRefresh, mergedRef } = useFlashbar(Object.assign({ items }, restProps));
  const i18n = useInternalI18n("flashbar");
  const ariaLabel = i18n("i18nStrings.ariaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.ariaLabel);
  const motionDisabled = isReducedMotion || !isVisualRefresh || !allItemsHaveId;
  const animateFlash = !isReducedMotion && isVisualRefresh;
  function renderFlatItemsWithTransitions() {
    if (motionDisabled || !items) {
      return;
    }
    return import_react153.default.createElement(TransitionGroup_default, { component: "ul", className: styles_css_default48["flash-list"], "aria-label": ariaLabel }, items.map((item, index) => {
      var _a2;
      return import_react153.default.createElement(Transition, { transitionChangeDelay: { entering: TIMEOUT_FOR_ENTERING_ANIMATION }, key: (_a2 = item.id) !== null && _a2 !== void 0 ? _a2 : index, in: true }, (state, transitionRootElement) => {
        var _a3;
        return import_react153.default.createElement("li", { className: styles_css_default48["flash-list-item"] }, renderItem(item, (_a3 = item.id) !== null && _a3 !== void 0 ? _a3 : index, transitionRootElement, state));
      });
    }));
  }
  function renderFlatItemsWithoutTransitions() {
    if (!motionDisabled || !items) {
      return;
    }
    return import_react153.default.createElement("ul", { className: styles_css_default48["flash-list"], "aria-label": ariaLabel }, items.map((item, index) => {
      var _a2, _b;
      return import_react153.default.createElement("li", { key: (_a2 = item.id) !== null && _a2 !== void 0 ? _a2 : index, className: styles_css_default48["flash-list-item"] }, renderItem(item, (_b = item.id) !== null && _b !== void 0 ? _b : index));
    }));
  }
  function renderItem(item, key, transitionRootElement, transitionState) {
    return import_react153.default.createElement(
      Flash,
      Object.assign({
        className: clsx_m_default(getVisualContextClassname("flashbar"), animateFlash && styles_css_default48["flash-with-motion"], isVisualRefresh && styles_css_default48["flash-refresh"]),
        key,
        ref: transitionRootElement,
        transitionState
      }, item)
    );
  }
  return import_react153.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default48.flashbar, styles_css_default48[`breakpoint-${breakpoint}`]), ref: mergedRef }),
    renderFlatItemsWithTransitions(),
    renderFlatItemsWithoutTransitions()
  );
}

// node_modules/@cloudscape-design/components/flashbar/index.js
function Flashbar(props2) {
  (0, import_react154.useEffect)(() => {
    if (props2.items.length > 0) {
      sendRenderMetric(props2.items);
    }
  }, [props2.items]);
  if (props2.stackItems) {
    return import_react154.default.createElement(CollapsibleFlashbar, Object.assign({}, props2));
  } else {
    return import_react154.default.createElement(NonCollapsibleFlashbar, Object.assign({}, props2));
  }
}
applyDisplayName(Flashbar, "Flashbar");

// node_modules/@cloudscape-design/components/form/index.js
var import_react156 = __toESM(require_react());

// node_modules/@cloudscape-design/components/form/internal.js
var import_react155 = __toESM(require_react());

// node_modules/@cloudscape-design/components/form/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/form/styles.scoped.css";
var styles_css_default49 = {
  "root": "awsui_root_1i0s3_ijcj5_93",
  "header": "awsui_header_1i0s3_ijcj5_106",
  "full-page": "awsui_full-page_1i0s3_ijcj5_106",
  "content": "awsui_content_1i0s3_ijcj5_110",
  "error": "awsui_error_1i0s3_ijcj5_114",
  "footer": "awsui_footer_1i0s3_ijcj5_118",
  "actions-section": "awsui_actions-section_1i0s3_ijcj5_122",
  "secondary-actions": "awsui_secondary-actions_1i0s3_ijcj5_131",
  "actions": "awsui_actions_1i0s3_ijcj5_122"
};

// node_modules/@cloudscape-design/components/form/internal.js
function InternalForm(_a) {
  var { children, header, errorText, errorIconAriaLabel: errorIconAriaLabelOverride, actions, secondaryActions, variant, __internalRootRef } = _a, props2 = __rest(_a, ["children", "header", "errorText", "errorIconAriaLabel", "actions", "secondaryActions", "variant", "__internalRootRef"]);
  const baseProps = getBaseProps(props2);
  const i18n = useInternalI18n("form");
  const errorIconAriaLabel = i18n("errorIconAriaLabel", errorIconAriaLabelOverride);
  const { funnelInteractionId, submissionAttempt, errorCount } = useFunnel();
  (0, import_react155.useEffect)(() => {
    if (funnelInteractionId && errorText) {
      errorCount.current++;
      FunnelMetrics.funnelError({ funnelInteractionId });
      return () => {
        errorCount.current--;
      };
    }
  }, [funnelInteractionId, errorText, submissionAttempt, errorCount]);
  return import_react155.default.createElement(
    "div",
    Object.assign({}, baseProps, { ref: __internalRootRef, className: clsx_m_default(styles_css_default49.root, baseProps.className) }),
    import_react155.default.createElement(
      FormLayout,
      { header: header && import_react155.default.createElement("div", { className: clsx_m_default(styles_css_default49.header, variant === "full-page" && styles_css_default49["full-page"]) }, header), variant },
      children && import_react155.default.createElement("div", { className: styles_css_default49.content }, children),
      errorText && import_react155.default.createElement(
        InternalBox,
        { margin: { top: "l" } },
        import_react155.default.createElement(
          InternalAlert,
          { type: "error", statusIconAriaLabel: errorIconAriaLabel },
          import_react155.default.createElement("div", { className: styles_css_default49.error }, errorText)
        )
      ),
      (actions || secondaryActions) && import_react155.default.createElement(
        "div",
        { className: styles_css_default49.footer },
        import_react155.default.createElement(
          "div",
          { className: styles_css_default49["actions-section"] },
          actions && import_react155.default.createElement("div", { className: styles_css_default49.actions }, actions),
          secondaryActions && import_react155.default.createElement("div", { className: styles_css_default49["secondary-actions"] }, secondaryActions)
        )
      ),
      errorText && import_react155.default.createElement(
        live_region_default,
        { assertive: true },
        errorIconAriaLabel,
        ", ",
        errorText
      )
    )
  );
}
function FormLayout({ children, header, variant }) {
  return variant === "full-page" && header ? import_react155.default.createElement(InternalContentLayout, { header }, children) : import_react155.default.createElement(
    import_react155.default.Fragment,
    null,
    header,
    children
  );
}

// node_modules/@cloudscape-design/components/form/index.js
var FormWithAnalytics = (_a) => {
  var { variant = "full-page", actions } = _a, props2 = __rest(_a, ["variant", "actions"]);
  const { funnelProps, funnelSubmit, funnelNextOrSubmitAttempt } = useFunnel();
  const { funnelStepProps } = useFunnelStep();
  const handleActionButtonClick = ({ variant: variant2 }) => {
    if (variant2 === "primary") {
      funnelNextOrSubmitAttempt();
      funnelSubmit();
    }
  };
  return import_react156.default.createElement(InternalForm, Object.assign({ variant, actions: actions && import_react156.default.createElement(ButtonContext.Provider, { value: { onClick: handleActionButtonClick } }, actions) }, props2, funnelProps, funnelStepProps));
};
function Form(_a) {
  var { variant = "full-page" } = _a, props2 = __rest(_a, ["variant"]);
  const baseComponentProps = useBaseComponent("Form");
  return import_react156.default.createElement(
    AnalyticsFunnel,
    { funnelType: "single-page", optionalStepNumbers: [], totalFunnelSteps: 1 },
    import_react156.default.createElement(
      AnalyticsFunnelStep,
      { stepNumber: 1, stepNameSelector: getFunnelNameSelector() },
      import_react156.default.createElement(FormWithAnalytics, Object.assign({ variant }, props2, baseComponentProps))
    )
  );
}
applyDisplayName(Form, "Form");

// node_modules/@cloudscape-design/components/form-field/index.js
var import_react157 = __toESM(require_react());
function FormField(_a) {
  var { stretch = false } = _a, props2 = __rest(_a, ["stretch"]);
  const baseComponentProps = useBaseComponent("FormField");
  return import_react157.default.createElement(InternalFormField, Object.assign({ stretch }, props2, { __hideLabel: false }, baseComponentProps));
}
applyDisplayName(FormField, "FormField");

// node_modules/@cloudscape-design/components/grid/index.js
var import_react158 = __toESM(require_react());
function Grid3(_a) {
  var { gridDefinition = [], disableGutters = false, children } = _a, restProps = __rest(_a, ["gridDefinition", "disableGutters", "children"]);
  const baseComponentProps = useBaseComponent("Grid");
  const baseProps = getBaseProps(restProps);
  const [breakpoint, ref] = useContainerBreakpoints(void 0);
  return import_react158.default.createElement(internal_default6, Object.assign({}, baseProps, baseComponentProps, { ref, __breakpoint: breakpoint, gridDefinition, disableGutters }), children);
}
applyDisplayName(Grid3, "Grid");

// node_modules/@cloudscape-design/components/hotspot/index.js
var import_react159 = __toESM(require_react());

// node_modules/@cloudscape-design/components/hotspot/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/hotspot/styles.scoped.css";
var styles_css_default50 = {
  "root": "awsui_root_cqcqk_ki4my_93",
  "wrapper": "awsui_wrapper_cqcqk_ki4my_97",
  "elementWrapper": "awsui_elementWrapper_cqcqk_ki4my_101",
  "markerWrapper": "awsui_markerWrapper_cqcqk_ki4my_105",
  "placement-right": "awsui_placement-right_cqcqk_ki4my_110",
  "placement-left": "awsui_placement-left_cqcqk_ki4my_115",
  "inlineWrapper": "awsui_inlineWrapper_cqcqk_ki4my_120"
};

// node_modules/@cloudscape-design/components/hotspot/index.js
function Hotspot(_a) {
  var { children, hotspotId, side = "right", direction = "top" } = _a, restProps = __rest(_a, ["children", "hotspotId", "side", "direction"]);
  const { __internalRootRef } = useBaseComponent("Hotspot");
  const baseProps = getBaseProps(restProps);
  const hotspotContext2 = (0, import_react159.useContext)(hotspotContext);
  const content = hotspotContext2.getContentForId(hotspotId, direction);
  const { unregisterHotspot, registerHotspot } = hotspotContext2;
  (0, import_react159.useEffect)(() => {
    registerHotspot(hotspotId);
    return () => unregisterHotspot(hotspotId);
  }, [hotspotId, unregisterHotspot, registerHotspot]);
  if (children) {
    return import_react159.default.createElement(
      "div",
      Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default50.root, styles_css_default50.wrapper), ref: __internalRootRef }),
      import_react159.default.createElement("div", { className: styles_css_default50.elementWrapper }, children),
      import_react159.default.createElement("div", { className: clsx_m_default(styles_css_default50.markerWrapper, styles_css_default50[`placement-${side}`]), onClick: (e) => e.stopPropagation() }, content)
    );
  }
  return import_react159.default.createElement("span", Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default50.root, styles_css_default50.inlineWrapper), ref: __internalRootRef, onClick: (e) => e.stopPropagation() }), content);
}
applyDisplayName(Hotspot, "Hotspot");

// node_modules/@cloudscape-design/components/icon/index.js
var import_react160 = __toESM(require_react());
function Icon(_a) {
  var { size = "normal", variant = "normal" } = _a, props2 = __rest(_a, ["size", "variant"]);
  const baseComponentProps = useBaseComponent("Icon");
  return import_react160.default.createElement(internal_default, Object.assign({ size, variant }, props2, baseComponentProps));
}
applyDisplayName(Icon, "Icon");

// node_modules/@cloudscape-design/components/input/index.js
var import_react161 = __toESM(require_react());
var Input = import_react161.default.forwardRef((_a, ref) => {
  var { value, type = "text", step: step2, inputMode, autoComplete = true, spellcheck, disabled, readOnly, disableBrowserAutocorrect, onKeyDown, onKeyUp, onChange, onBlur, onFocus, ariaRequired, name, placeholder, autoFocus, ariaLabel, ariaLabelledby, ariaDescribedby, invalid, controlId, clearAriaLabel } = _a, rest = __rest(_a, ["value", "type", "step", "inputMode", "autoComplete", "spellcheck", "disabled", "readOnly", "disableBrowserAutocorrect", "onKeyDown", "onKeyUp", "onChange", "onBlur", "onFocus", "ariaRequired", "name", "placeholder", "autoFocus", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "invalid", "controlId", "clearAriaLabel"]);
  const baseComponentProps = useBaseComponent("Input");
  const baseProps = getBaseProps(rest);
  const inputRef = (0, import_react161.useRef)(null);
  (0, import_react161.useImperativeHandle)(ref, () => ({
    focus(...args) {
      var _a2;
      (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus(...args);
    },
    select() {
      var _a2;
      (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.select();
    }
  }), [inputRef]);
  return import_react161.default.createElement(internal_default10, Object.assign({ ref: inputRef }, Object.assign(Object.assign(Object.assign({}, baseProps), baseComponentProps), {
    autoComplete,
    ariaLabel,
    ariaRequired,
    autoFocus,
    disabled,
    disableBrowserAutocorrect,
    name,
    onKeyDown,
    onKeyUp,
    onChange,
    onBlur,
    onFocus,
    placeholder,
    readOnly,
    type,
    step: step2,
    inputMode,
    spellcheck,
    value,
    ariaDescribedby,
    ariaLabelledby,
    invalid,
    controlId,
    clearAriaLabel
  }), { className: clsx_m_default(styles_css_default11.root, baseProps.className), __inheritFormFieldProps: true }));
});
applyDisplayName(Input, "Input");
var input_default = Input;

// node_modules/@cloudscape-design/components/line-chart/index.js
var import_react162 = __toESM(require_react());

// node_modules/@cloudscape-design/components/line-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/line-chart/styles.scoped.css";
var styles_css_default51 = {
  "root": "awsui_root_g9v3m_im8v7_5"
};

// node_modules/@cloudscape-design/components/line-chart/index.js
function LineChart(_a) {
  var { series = [], height = 500, xScaleType = "linear", yScaleType = "linear", detailPopoverSize = "medium", statusType = "finished", emphasizeBaselineAxis = true } = _a, props2 = __rest(_a, ["series", "height", "xScaleType", "yScaleType", "detailPopoverSize", "statusType", "emphasizeBaselineAxis"]);
  const baseComponentProps = useBaseComponent("LineChart");
  const baseProps = getBaseProps(props2);
  const className = clsx_m_default(baseProps.className, styles_css_default51.root);
  return import_react162.default.createElement(InternalMixedLineBarChart, Object.assign({}, props2, baseComponentProps, { className, height, xScaleType, yScaleType, stackedBars: false, horizontalBars: false, series, detailPopoverSize, statusType, emphasizeBaselineAxis }));
}
applyDisplayName(LineChart, "LineChart");
var line_chart_default = LineChart;

// node_modules/@cloudscape-design/components/link/index.js
var import_react163 = __toESM(require_react());
var Link = import_react163.default.forwardRef((_a, ref) => {
  var { variant = "secondary", fontSize = "body-m", color: color2 = "normal", external = false } = _a, props2 = __rest(_a, ["variant", "fontSize", "color", "external"]);
  const baseComponentProps = useBaseComponent("Link");
  return import_react163.default.createElement(internal_default4, Object.assign({ variant, fontSize, color: color2, external }, props2, baseComponentProps, { ref }));
});
applyDisplayName(Link, "Link");
var link_default = Link;

// node_modules/@cloudscape-design/components/mixed-line-bar-chart/index.js
var import_react164 = __toESM(require_react());
function MixedLineBarChart(_a) {
  var { series = [], height = 500, xScaleType = "linear", yScaleType = "linear", stackedBars = false, horizontalBars = false, statusType = "finished", detailPopoverSize = "medium", emphasizeBaselineAxis = true } = _a, props2 = __rest(_a, ["series", "height", "xScaleType", "yScaleType", "stackedBars", "horizontalBars", "statusType", "detailPopoverSize", "emphasizeBaselineAxis"]);
  const baseComponentProps = useBaseComponent("MixedLineBarChart");
  return import_react164.default.createElement(InternalMixedLineBarChart, Object.assign({ series, height, xScaleType, yScaleType, stackedBars, horizontalBars, statusType, detailPopoverSize, emphasizeBaselineAxis }, props2, baseComponentProps));
}
applyDisplayName(MixedLineBarChart, "MixedLineBarChart");
var mixed_line_bar_chart_default = MixedLineBarChart;

// node_modules/@cloudscape-design/components/modal/index.js
var import_react165 = __toESM(require_react());
function Modal(_a) {
  var { size = "medium" } = _a, props2 = __rest(_a, ["size"]);
  const baseComponentProps = useBaseComponent("Modal");
  return import_react165.default.createElement(InternalModal, Object.assign({ size }, props2, baseComponentProps));
}
applyDisplayName(Modal, "Modal");

// node_modules/@cloudscape-design/components/multiselect/index.js
var import_react166 = __toESM(require_react());
var Multiselect = import_react166.default.forwardRef((_a, ref) => {
  var { options = [], filteringType = "none", statusType = "finished", selectedOptions = [], keepOpen = true, hideTokens = false } = _a, restProps = __rest(_a, ["options", "filteringType", "statusType", "selectedOptions", "keepOpen", "hideTokens"]);
  const baseComponentProps = useBaseComponent("Multiselect");
  return import_react166.default.createElement(internal_default11, Object.assign({ options, filteringType, statusType, selectedOptions, keepOpen, hideTokens }, restProps, baseComponentProps, { ref }));
});
applyDisplayName(Multiselect, "Multiselect");
var multiselect_default = Multiselect;

// node_modules/@cloudscape-design/components/pie-chart/index.js
var import_react171 = __toESM(require_react());

// node_modules/@cloudscape-design/components/pie-chart/pie-chart.js
var import_react170 = __toESM(require_react());

// node_modules/@cloudscape-design/components/pie-chart/labels.js
var import_react168 = __toESM(require_react());

// node_modules/@cloudscape-design/components/pie-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/pie-chart/styles.scoped.css";
var styles_css_default52 = {
  "segment__path": "awsui_segment__path_1edmh_u8hsy_97",
  "segment": "awsui_segment_1edmh_u8hsy_97",
  "segment__hover": "awsui_segment__hover_1edmh_u8hsy_124",
  "label": "awsui_label_1edmh_u8hsy_138",
  "root": "awsui_root_1edmh_u8hsy_156",
  "content": "awsui_content_1edmh_u8hsy_160",
  "content--small": "awsui_content--small_1edmh_u8hsy_160",
  "content--without-labels": "awsui_content--without-labels_1edmh_u8hsy_163",
  "content--medium": "awsui_content--medium_1edmh_u8hsy_166",
  "content--large": "awsui_content--large_1edmh_u8hsy_172",
  "status-container": "awsui_status-container_1edmh_u8hsy_179",
  "chart-container": "awsui_chart-container_1edmh_u8hsy_183",
  "inner-content": "awsui_inner-content_1edmh_u8hsy_188",
  "segment__highlight": "awsui_segment__highlight_1edmh_u8hsy_202",
  "segment--dimmed": "awsui_segment--dimmed_1edmh_u8hsy_217",
  "segment--highlighted": "awsui_segment--highlighted_1edmh_u8hsy_220",
  "label--dimmed": "awsui_label--dimmed_1edmh_u8hsy_237",
  "label--align-right": "awsui_label--align-right_1edmh_u8hsy_240",
  "label-text": "awsui_label-text_1edmh_u8hsy_248",
  "label__description": "awsui_label__description_1edmh_u8hsy_256",
  "label-line": "awsui_label-line_1edmh_u8hsy_263",
  "label--highlighted": "awsui_label--highlighted_1edmh_u8hsy_267",
  "popover-header": "awsui_popover-header_1edmh_u8hsy_271"
};

// node_modules/@cloudscape-design/components/pie-chart/utils.js
var dimensionsBySize = {
  small: {
    innerRadius: 33,
    outerRadius: 50,
    innerLabelPadding: 8,
    padding: 8,
    paddingLabels: 44
  },
  medium: {
    innerRadius: 66,
    outerRadius: 100,
    innerLabelPadding: 12,
    padding: 12,
    paddingLabels: 44
  },
  large: {
    innerRadius: 93,
    outerRadius: 140,
    innerLabelPadding: 12,
    padding: 12,
    paddingLabels: 44
  }
};
var refreshDimensionsBySize = {
  small: Object.assign(Object.assign({}, dimensionsBySize.small), { innerRadius: 38, cornerRadius: 3 }),
  medium: Object.assign(Object.assign({}, dimensionsBySize.medium), { innerRadius: 75, cornerRadius: 4 }),
  large: Object.assign(Object.assign({}, dimensionsBySize.large), { innerRadius: 105, cornerRadius: 5 })
};
var defaultDetails = (i18n, i18nStrings) => (datum, dataSum) => [
  { key: i18n("i18nStrings.detailsValue", i18nStrings.detailsValue) || "", value: datum.value },
  {
    key: i18n("i18nStrings.detailsPercentage", i18nStrings.detailsPercentage) || "",
    value: `${(datum.value * 100 / dataSum).toFixed(0)}%`
  }
];
var balanceLabelNodes = (nodes, markers, leftSide) => {
  var _a;
  const MARGIN = 10;
  let previousBBox = null;
  let i = leftSide ? nodes.length - 1 : 0;
  while (leftSide && i >= 0 || !leftSide && i < nodes.length) {
    const node = nodes[i];
    const x2 = parseFloat(node.getAttribute("data-x") || "0");
    const y2 = parseFloat(node.getAttribute("data-y") || "0");
    const box = {
      x: x2,
      y: y2,
      height: node.getBoundingClientRect().height
    };
    const marker = markers[i];
    if (leftSide) {
      i--;
    } else {
      i++;
    }
    if (!previousBBox) {
      previousBBox = box;
      node.setAttribute("transform", "");
      continue;
    }
    if (!leftSide && box.x < 0 || leftSide && box.x >= 0) {
      break;
    }
    node.setAttribute("transform", "");
    const offset = previousBBox.y + previousBBox.height + MARGIN - box.y;
    if (offset > 0) {
      node.setAttribute("transform", `translate(0 ${offset})`);
      const lineNode = (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.querySelector(`.${styles_css_default52["label-line"]}`);
      if (lineNode) {
        const { endY } = marker;
        lineNode.setAttribute("y2", "" + (endY + offset));
      }
      box.y += offset;
    }
    previousBBox = box;
  }
};

// node_modules/@cloudscape-design/components/pie-chart/responsive-text.js
var import_react167 = __toESM(require_react());
var responsive_text_default = (0, import_react167.memo)(ResponsiveText);
function ResponsiveText({ x: x2, y: y2, rightSide, className, children, containerBoundaries }) {
  const actualRef = (0, import_react167.useRef)(null);
  const virtualRef = (0, import_react167.useRef)(null);
  (0, import_react167.useEffect)(() => {
    const timeoutId = setTimeout(() => {
      const groupRect = virtualRef.current.getBoundingClientRect();
      const visibleWidth = containerBoundaries ? getVisibleWidth(groupRect, containerBoundaries) : 0;
      renderTextContent(actualRef.current, children, visibleWidth);
    }, 25);
    return () => clearTimeout(timeoutId);
  });
  return import_react167.default.createElement(
    import_react167.default.Fragment,
    null,
    import_react167.default.createElement("text", { ref: virtualRef, x: x2, y: y2, style: { textAnchor: rightSide ? "start" : "end", visibility: "hidden" }, "aria-hidden": "true", className }, children),
    import_react167.default.createElement("text", { ref: actualRef, x: x2, y: y2, style: { textAnchor: rightSide ? "start" : "end" }, className }, children)
  );
}
function getVisibleWidth(element, container) {
  if (element.left < container.left) {
    return element.right - container.left;
  } else if (element.right > container.right) {
    return container.right - element.left;
  } else {
    return container.right - container.left;
  }
}
function renderTextContent(textNode, text, visibleWidth) {
  let visibleLength = text.length;
  while (visibleLength >= 0) {
    textNode.textContent = truncateText(text, visibleLength);
    if (!textNode.getComputedTextLength || textNode.getComputedTextLength() <= visibleWidth) {
      return;
    } else {
      visibleLength--;
    }
  }
}
function truncateText(text, maxLength) {
  if (text.length === maxLength) {
    return text;
  }
  return text.slice(0, maxLength) + "\u2026";
}

// node_modules/@cloudscape-design/components/pie-chart/labels.js
function LabelElement({ x: x2, y: y2, hideTitles, hideDescriptions, rightSide, title, description, containerBoundaries }) {
  return import_react168.default.createElement(
    "g",
    { className: styles_css_default52["label-text"], transform: "", "data-x": x2, "data-y": y2 },
    !hideTitles && import_react168.default.createElement(responsive_text_default, { x: x2, y: y2, rightSide, containerBoundaries }, title),
    !hideDescriptions && description && import_react168.default.createElement(responsive_text_default, { x: x2, y: y2 + (hideTitles ? 0 : 18), rightSide, className: styles_css_default52.label__description, containerBoundaries }, description)
  );
}
var labels_default = ({ pieData, size, highlightedSegment, segmentDescription, visibleDataSum, hideTitles, hideDescriptions, containerRef }) => {
  const containerBoundaries = useElementBoundaries(containerRef);
  const markers = (0, import_react168.useMemo)(() => {
    const { outerRadius: radius, innerLabelPadding } = dimensionsBySize[size];
    const arcMarkerStart = arc_default().innerRadius(radius - 1).outerRadius(radius - 1);
    const arcMarkerBreak = arc_default().innerRadius(radius + innerLabelPadding).outerRadius(radius + innerLabelPadding);
    return pieData.map((datum, i) => {
      const labelDatum = pieData[i];
      const midAngle = labelDatum.startAngle + (labelDatum.endAngle - labelDatum.startAngle) / 2;
      arcMarkerBreak.outerRadius(radius + 20 * (0.5 * Math.cos(2 * midAngle) + 0.5));
      arcMarkerBreak.innerRadius(radius + 20 * (0.5 * Math.cos(2 * midAngle) + 0.5));
      const [startX, startY] = arcMarkerStart.centroid(datum);
      const [breakX, breakY] = arcMarkerBreak.centroid(datum);
      const rightSide = midAngle < Math.PI;
      const endX = (radius + 20) * (rightSide ? 1 : -1);
      const textX = endX + 5 * (rightSide ? 1 : -1);
      return {
        startX,
        startY,
        breakX,
        breakY,
        endX,
        endY: breakY,
        textX,
        textY: breakY,
        rightSide,
        datum
      };
    });
  }, [pieData, size]);
  const rootRef = (0, import_react168.useRef)(null);
  (0, import_react168.useLayoutEffect)(() => {
    if (!rootRef.current) {
      return;
    }
    const labelNodes = rootRef.current.querySelectorAll(`.${styles_css_default52["label-text"]}`);
    balanceLabelNodes(labelNodes, markers, false);
    balanceLabelNodes(labelNodes, markers, true);
  }, [markers, pieData]);
  return import_react168.default.createElement("g", { className: styles_css_default52.markers, "aria-hidden": "true", ref: rootRef }, markers.map(({ startX, startY, breakX, breakY, endX, endY, textX, textY, rightSide, datum }) => {
    const segment = datum.data.datum;
    const description = segmentDescription === null || segmentDescription === void 0 ? void 0 : segmentDescription(segment, visibleDataSum);
    if (hideTitles && !description || hideDescriptions && !segment.title) {
      return null;
    }
    return import_react168.default.createElement(
      "g",
      { key: datum.data.index, className: clsx_m_default(styles_css_default52.label, {
        [styles_css_default52["label--highlighted"]]: highlightedSegment === segment,
        [styles_css_default52["label--dimmed"]]: highlightedSegment !== null && highlightedSegment !== segment,
        [styles_css_default52["label--align-right"]]: !rightSide
      }) },
      import_react168.default.createElement("line", { x1: startX, y1: startY, x2: breakX, y2: breakY }),
      import_react168.default.createElement("line", { x1: breakX, y1: breakY, x2: endX, y2: endY, className: styles_css_default52["label-line"] }),
      import_react168.default.createElement(LabelElement, { x: textX, y: textY, rightSide, title: segment.title, description, hideTitles, hideDescriptions, containerBoundaries })
    );
  }));
};
function useElementBoundaries(ref) {
  const [state, setState] = (0, import_react168.useState)({ left: 0, right: 0 });
  useResizeObserver(ref, (entry) => {
    const elementRect = entry.target.getBoundingClientRect();
    setState({ left: elementRect.left, right: elementRect.right });
  });
  return state;
}

// node_modules/@cloudscape-design/components/pie-chart/segments.js
var import_react169 = __toESM(require_react());
function Segments({ pieData, highlightedSegment, size, variant, focusedSegmentRef, popoverTrackRef, segmentAriaRoleDescription, onMouseDown, onMouseOver, onMouseOut }) {
  const i18n = useInternalI18n("pie-chart");
  const isRefresh = useVisualRefresh();
  const { arcFactory, highlightedArcFactory } = (0, import_react169.useMemo)(() => {
    const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];
    const radius = dimensions.outerRadius;
    const innerRadius = variant === "pie" ? 0 : dimensions.innerRadius;
    const cornerRadius = dimensions.cornerRadius || 0;
    const arcFactory2 = arc_default().innerRadius(innerRadius).outerRadius(radius).cornerRadius(cornerRadius);
    const highlightedArcFactory2 = arc_default().innerRadius(radius + 4).outerRadius(radius + 6);
    return {
      arcFactory: arcFactory2,
      highlightedArcFactory: highlightedArcFactory2
    };
  }, [size, variant, isRefresh]);
  const centroid = (0, import_react169.useMemo)(() => {
    for (const datum of pieData) {
      if (datum.data.datum === highlightedSegment) {
        const [centroidLeft, centroidTop] = arcFactory.centroid(datum);
        return { cx: centroidLeft, cy: centroidTop };
      }
    }
    return null;
  }, [highlightedSegment, pieData, arcFactory]);
  return import_react169.default.createElement(
    "g",
    { onMouseLeave: (event) => onMouseOut(event) },
    pieData.map((datum) => {
      const isHighlighted = highlightedSegment === datum.data.datum;
      const isDimmed = highlightedSegment !== null && !isHighlighted;
      const arcPath = arcFactory(datum) || void 0;
      const highlightedPath = highlightedArcFactory(datum) || void 0;
      return import_react169.default.createElement(
        "g",
        { key: datum.data.index, onMouseDown: (e) => {
          onMouseDown(datum.data);
          e.preventDefault();
        }, onMouseOver: () => onMouseOver(datum.data), className: clsx_m_default(styles_css_default52.segment, {
          [styles_css_default52["segment--highlighted"]]: isHighlighted,
          [styles_css_default52["segment--dimmed"]]: isDimmed
        }), ref: isHighlighted ? focusedSegmentRef : void 0, "aria-label": `${datum.data.datum.title} (${datum.data.datum.value})`, role: "button", "aria-roledescription": i18n("i18nStrings.segmentAriaRoleDescription", segmentAriaRoleDescription) },
        import_react169.default.createElement("path", { d: arcPath, fill: datum.data.color, className: styles_css_default52.segment__path, "aria-hidden": "true" }),
        import_react169.default.createElement("path", { d: highlightedPath, fill: datum.data.color, className: clsx_m_default(styles_css_default52.segment__path, styles_css_default52.segment__highlight), "aria-hidden": "true" })
      );
    }),
    import_react169.default.createElement("circle", Object.assign({}, centroid, { ref: popoverTrackRef, r: "1", opacity: "0", "aria-hidden": "true" }))
  );
}

// node_modules/@cloudscape-design/components/pie-chart/pie-chart.js
var pie_chart_default = ({ variant, size, i18nStrings, ariaLabel, ariaLabelledby, ariaDescription, innerMetricValue, innerMetricDescription, hideTitles, hideDescriptions, detailPopoverContent, detailPopoverSize, detailPopoverFooter, width, segmentDescription, highlightedSegment, onHighlightChange, legendSegment, pinnedSegment, setPinnedSegment, pieData, dataSum }) => {
  var _a;
  const plotRef = (0, import_react170.useRef)(null);
  const containerRef = (0, import_react170.useRef)(null);
  const focusedSegmentRef = (0, import_react170.useRef)(null);
  const popoverTrackRef = (0, import_react170.useRef)(null);
  const popoverRef = (0, import_react170.useRef)(null);
  const isRefresh = useVisualRefresh();
  const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];
  const radius = dimensions.outerRadius;
  const hasLabels = !(hideTitles && hideDescriptions);
  const height = 2 * (radius + dimensions.padding + (hasLabels ? dimensions.paddingLabels : 0));
  const hasInnerContent = variant === "donut" && (innerMetricValue || innerMetricDescription && size !== "small");
  const innerMetricId = useUniqueId("awsui-pie-chart__inner");
  const [isTooltipOpen, setTooltipOpen] = (0, import_react170.useState)(false);
  const [tooltipData, setTooltipData] = (0, import_react170.useState)();
  const highlightedSegmentIndex = (0, import_react170.useMemo)(() => {
    for (let index = 0; index < pieData.length; index++) {
      if (pieData[index].data.datum === highlightedSegment) {
        return index;
      }
    }
    return null;
  }, [pieData, highlightedSegment]);
  const detailPopoverFooterContent = (0, import_react170.useMemo)(() => detailPopoverFooter && highlightedSegment ? detailPopoverFooter(highlightedSegment) : null, [detailPopoverFooter, highlightedSegment]);
  const i18n = useInternalI18n("pie-chart");
  const detailFunction = detailPopoverContent || defaultDetails(i18n, i18nStrings);
  const details = tooltipData ? detailFunction(tooltipData.datum, dataSum) : [];
  const tooltipContent = tooltipData && import_react170.default.createElement(chart_series_details_default, { details });
  const popoverDismissedRecently = (0, import_react170.useRef)(false);
  const escapePressed = (0, import_react170.useRef)(false);
  const highlightSegment = (0, import_react170.useCallback)((internalDatum) => {
    const segment = internalDatum.datum;
    if (segment !== highlightedSegment) {
      onHighlightChange(segment);
    }
    if (popoverTrackRef.current) {
      setTooltipData({
        datum: internalDatum.datum,
        series: {
          color: internalDatum.color,
          index: internalDatum.index,
          label: internalDatum.datum.title,
          markerType: "rectangle"
        },
        trackRef: popoverTrackRef
      });
      setTooltipOpen(true);
    }
  }, [highlightedSegment, setTooltipOpen, onHighlightChange]);
  const clearHighlightedSegment = (0, import_react170.useCallback)(() => {
    setTooltipOpen(false);
    onHighlightChange(null);
  }, [onHighlightChange, setTooltipOpen]);
  (0, import_react170.useEffect)(() => {
    const onKeyDown2 = (event) => {
      if (event.key === "Escape") {
        clearHighlightedSegment();
        escapePressed.current = true;
      }
    };
    document.addEventListener("keydown", onKeyDown2);
    return () => document.removeEventListener("keydown", onKeyDown2);
  }, [clearHighlightedSegment]);
  const onMouseDown = (0, import_react170.useCallback)((internalDatum) => {
    if (pinnedSegment === internalDatum.datum) {
      setPinnedSegment(null);
      clearHighlightedSegment();
    } else {
      setPinnedSegment(internalDatum.datum);
      highlightSegment(internalDatum);
    }
  }, [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]);
  const onMouseOver = (0, import_react170.useCallback)((internalDatum) => {
    if (escapePressed.current) {
      escapePressed.current = false;
      return;
    }
    if (pinnedSegment !== null) {
      return;
    }
    highlightSegment(internalDatum);
  }, [pinnedSegment, highlightSegment]);
  const onMouseOut = (0, import_react170.useCallback)((event) => {
    var _a2;
    if (pinnedSegment !== null || ((_a2 = popoverRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(event.relatedTarget))) {
      return;
    }
    clearHighlightedSegment();
  }, [pinnedSegment, clearHighlightedSegment]);
  const onKeyDown = (0, import_react170.useCallback)((event) => {
    const keyCode = event.keyCode;
    if (keyCode !== KeyCode.right && keyCode !== KeyCode.left && keyCode !== KeyCode.enter && keyCode !== KeyCode.space) {
      return;
    }
    event.preventDefault();
    let nextIndex = highlightedSegmentIndex || 0;
    const MAX = pieData.length - 1;
    if (keyCode === KeyCode.right) {
      nextIndex++;
      if (nextIndex > MAX) {
        nextIndex = 0;
      }
    } else if (keyCode === KeyCode.left) {
      nextIndex--;
      if (nextIndex < 0) {
        nextIndex = MAX;
      }
    }
    if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
      setPinnedSegment(pieData[nextIndex].data.datum);
    }
    highlightSegment(pieData[nextIndex].data);
  }, [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]);
  const onFocus = (0, import_react170.useCallback)((_event, target) => {
    if (pinnedSegment !== null || popoverDismissedRecently.current || target === "mouse") {
      return;
    }
    const segment = highlightedSegment || legendSegment || pieData[0].data.datum;
    const matched = pieData.filter((d) => d.data.datum === segment);
    highlightSegment(matched[0].data);
  }, [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]);
  const onBlur = (0, import_react170.useCallback)((event) => {
    const blurTarget = event.relatedTarget || event.target;
    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRef.current, blurTarget)) {
      setTooltipOpen(false);
      setPinnedSegment(null);
    }
  }, [setPinnedSegment]);
  const onPopoverDismiss = (outsideClick) => {
    setTooltipOpen(false);
    setPinnedSegment(null);
    if (!outsideClick) {
      setTimeout(() => {
        popoverDismissedRecently.current = true;
        plotRef.current.focusApplication();
        popoverDismissedRecently.current = false;
      }, 0);
    } else {
      onHighlightChange(null);
    }
  };
  const onPopoverLeave = (event) => {
    if (pinnedSegment !== null || focusedSegmentRef.current.contains(event.relatedTarget)) {
      return;
    }
    clearHighlightedSegment();
  };
  return import_react170.default.createElement(
    "div",
    { className: styles_css_default52["chart-container"], ref: containerRef },
    import_react170.default.createElement(
      chart_plot_default,
      { ref: plotRef, width, height, transform: `translate(${width / 2} ${height / 2})`, isPrecise: true, isClickable: !isTooltipOpen, ariaLabel, ariaLabelledby, ariaDescription, ariaDescribedby: hasInnerContent ? innerMetricId : void 0, ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription, ariaLiveRegion: tooltipContent, activeElementRef: focusedSegmentRef, activeElementKey: highlightedSegmentIndex === null || highlightedSegmentIndex === void 0 ? void 0 : highlightedSegmentIndex.toString(), onFocus, onBlur, onKeyDown, onMouseOut },
      import_react170.default.createElement(Segments, { pieData, size, variant, focusedSegmentRef, popoverTrackRef, highlightedSegment, segmentAriaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.segmentAriaRoleDescription, onMouseDown, onMouseOver, onMouseOut }),
      hasLabels && import_react170.default.createElement(labels_default, { pieData, size, segmentDescription, visibleDataSum: dataSum, hideTitles, hideDescriptions, highlightedSegment, containerRef })
    ),
    hasInnerContent && import_react170.default.createElement(
      "div",
      { className: styles_css_default52["inner-content"], id: innerMetricId },
      innerMetricValue && import_react170.default.createElement(InternalBox, { variant: size === "small" ? "h3" : "h1", tagOverride: "div", color: "inherit", padding: "n" }, innerMetricValue),
      innerMetricDescription && size !== "small" && import_react170.default.createElement(InternalBox, { variant: "h3", color: "text-body-secondary", tagOverride: "div", padding: "n" }, innerMetricDescription)
    ),
    isTooltipOpen && tooltipData && import_react170.default.createElement(
      chart_popover_default,
      { ref: popoverRef, title: tooltipData.series && import_react170.default.createElement(
        InternalBox,
        { className: styles_css_default52["popover-header"], variant: "strong" },
        import_react170.default.createElement(chart_series_marker_default, { color: tooltipData.series.color, type: tooltipData.series.markerType }),
        " ",
        tooltipData.series.label
      ), trackRef: tooltipData.trackRef, trackKey: tooltipData.series.index, dismissButton: pinnedSegment !== null, dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel, onDismiss: onPopoverDismiss, container: ((_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.svg) || null, size: detailPopoverSize, onMouseLeave: onPopoverLeave },
      tooltipContent,
      detailPopoverFooterContent && import_react170.default.createElement(InternalBox, { margin: { top: "s" } }, detailPopoverFooterContent)
    )
  );
};

// node_modules/@cloudscape-design/components/pie-chart/index.js
var PieChart = function PieChart2(_a) {
  var { variant = "pie", size = "medium", hideTitles = false, hideDescriptions = false, hideLegend = false, hideFilter = false, statusType = "finished", data: externalData = [], i18nStrings = {}, highlightedSegment: controlledHighlightedSegment, visibleSegments: controlledVisibleSegments, onHighlightChange: controlledOnHighlightChange, onFilterChange, additionalFilters, legendTitle, detailPopoverSize = "medium" } = _a, props2 = __rest(_a, ["variant", "size", "hideTitles", "hideDescriptions", "hideLegend", "hideFilter", "statusType", "data", "i18nStrings", "highlightedSegment", "visibleSegments", "onHighlightChange", "onFilterChange", "additionalFilters", "legendTitle", "detailPopoverSize"]);
  const { __internalRootRef = null } = useBaseComponent("PieChart");
  const baseProps = getBaseProps(props2);
  const containerRef = (0, import_react171.useRef)(null);
  const [containerWidth, measureRef] = useContainerWidth();
  const data = (0, import_react171.useMemo)(() => {
    const colors = createCategoryColorScale(externalData, void 0, (it) => it.color || null);
    return externalData.map((datum, i) => ({
      index: i,
      color: colors[i],
      datum
    }));
  }, [externalData]);
  const [highlightedSegment = null, setHighlightedSegment] = useControllable(controlledHighlightedSegment, controlledOnHighlightChange, null, {
    componentName: "PieChart",
    controlledProp: "highlightedSegment",
    changeHandler: "onHighlightChange"
  });
  const [legendSegment, setLegendSegment] = (0, import_react171.useState)(highlightedSegment);
  (0, import_react171.useEffect)(() => {
    setLegendSegment(controlledHighlightedSegment || null);
  }, [controlledHighlightedSegment]);
  const [visibleSegments, setVisibleSegments] = useControllable(controlledVisibleSegments, onFilterChange, externalData, {
    componentName: "PieChart",
    controlledProp: "visibleSegments",
    changeHandler: "onFilterChange"
  });
  const [pinnedSegment, setPinnedSegment] = (0, import_react171.useState)(null);
  const visibleData = (0, import_react171.useMemo)(() => data.filter((d) => (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1), [data, visibleSegments]);
  const filterItems = data === null || data === void 0 ? void 0 : data.map((data2) => ({
    label: data2.datum.title,
    color: data2.color,
    type: "rectangle",
    datum: data2.datum
  }));
  const legendItems = filterItems.filter((d) => (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1);
  const filterChange = (0, import_react171.useCallback)((selectedSeries) => {
    setVisibleSegments(selectedSeries);
    fireNonCancelableEvent(onFilterChange, {
      visibleSegments: selectedSeries
    });
  }, [setVisibleSegments, onFilterChange]);
  const onHighlightChange = (0, import_react171.useCallback)((segment) => {
    setLegendSegment(segment);
    setHighlightedSegment(segment);
    fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSegment: segment });
  }, [controlledOnHighlightChange, setHighlightedSegment]);
  const onBlur = (event) => {
    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {
      highlightedSegment && onHighlightChange(null);
      setLegendSegment(null);
    }
  };
  const mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);
  const { pieData, dataSum } = (0, import_react171.useMemo)(() => {
    const dataSum2 = visibleData.reduce((sum2, d) => sum2 + d.datum.value, 0);
    const pieFactory = pie_default().value((d) => d.datum.value < dataSum2 / 100 ? dataSum2 / 100 : d.datum.value).sort(null);
    const pieData2 = pieFactory(visibleData.filter((d) => d.datum.value > 0));
    return { pieData: pieData2, dataSum: dataSum2 };
  }, [visibleData]);
  const hasNoData = !externalData || externalData.length === 0;
  const { isEmpty, showChart } = getChartStatus({ externalData: data, visibleData: pieData, statusType });
  const isNoMatch = isEmpty && visibleData.length !== data.length;
  const showFilters = statusType === "finished" && !hasNoData && (additionalFilters || !hideFilter);
  const reserveLegendSpace = !showChart && !hideLegend;
  const reserveFilterSpace = statusType !== "finished" && !isNoMatch && (!hideFilter || additionalFilters);
  const hasLabels = !(hideTitles && hideDescriptions);
  return import_react171.default.createElement(ChartWrapper, Object.assign({ ref: mergedRef }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default52.root), contentClassName: clsx_m_default(styles_css_default52.content, styles_css_default52[`content--${size}`], {
    [styles_css_default52["content--without-labels"]]: !hasLabels
  }), defaultFilter: showFilters && !hideFilter ? import_react171.default.createElement(chart_filter_default, { series: filterItems, onChange: filterChange, selectedSeries: visibleSegments, i18nStrings }) : null, additionalFilters: showFilters ? additionalFilters : null, reserveFilterSpace: !!reserveFilterSpace, reserveLegendSpace: !!reserveLegendSpace, chartStatus: import_react171.default.createElement(ChartStatusContainer, { isEmpty, isNoMatch, showChart, statusType, empty: props2.empty, noMatch: props2.noMatch, loadingText: props2.loadingText, errorText: props2.errorText, recoveryText: props2.recoveryText, onRecoveryClick: props2.onRecoveryClick }), chart: showChart ? import_react171.default.createElement(pie_chart_default, Object.assign({}, props2, { variant, size, data: externalData, width: containerWidth, hideTitles, hideDescriptions, i18nStrings, onHighlightChange, highlightedSegment, legendSegment, pinnedSegment, setPinnedSegment, detailPopoverSize, pieData, dataSum })) : null, legend: !hideLegend && !hasNoData && statusType === "finished" && import_react171.default.createElement(chart_legend_default, { series: legendItems, highlightedSeries: legendSegment, legendTitle, ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel, onHighlightChange, plotContainerRef: containerRef }), onBlur }));
};
applyDisplayName(PieChart, "PieChart");
var pie_chart_default2 = PieChart;

// node_modules/@cloudscape-design/components/popover/index.js
var import_react173 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/internal.js
var import_react172 = __toESM(require_react());
var internal_default18 = import_react172.default.forwardRef(InternalPopover);
function InternalPopover(_a, ref) {
  var { position = "right", size = "medium", fixedWidth = false, triggerType = "text", dismissButton: dismissButton2 = true, children, header, content, renderWithPortal = false, __onOpen, __internalRootRef = null } = _a, restProps = __rest(_a, ["position", "size", "fixedWidth", "triggerType", "dismissButton", "children", "header", "content", "renderWithPortal", "__onOpen", "__internalRootRef"]);
  const baseProps = getBaseProps(restProps);
  const triggerRef = (0, import_react172.useRef)(null);
  const popoverRef = (0, import_react172.useRef)(null);
  const clickFrameId = (0, import_react172.useRef)(null);
  const i18n = useInternalI18n("popover");
  const dismissAriaLabel = i18n("dismissAriaLabel", restProps.dismissAriaLabel);
  const [visible, setVisible] = (0, import_react172.useState)(false);
  const focusTrigger = (0, import_react172.useCallback)(() => {
    var _a2;
    (_a2 = triggerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  }, []);
  const onTriggerClick = (0, import_react172.useCallback)(() => {
    fireNonCancelableEvent(__onOpen);
    setVisible(true);
  }, [__onOpen]);
  const onDismiss = (0, import_react172.useCallback)(() => {
    setVisible(false);
    focusTrigger();
  }, [focusTrigger]);
  const onTriggerKeyDown = (0, import_react172.useCallback)((event) => {
    if (event.keyCode === KeyCode.tab || event.keyCode === KeyCode.escape) {
      setVisible(false);
    }
  }, []);
  (0, import_react172.useImperativeHandle)(ref, () => ({
    dismissPopover: onDismiss
  }));
  (0, import_react172.useEffect)(() => {
    if (!triggerRef.current) {
      return;
    }
    const document2 = triggerRef.current.ownerDocument;
    const onDocumentClick = () => {
      if (clickFrameId.current === null) {
        setVisible(false);
      }
    };
    document2.addEventListener("mousedown", onDocumentClick, false);
    return () => {
      document2.removeEventListener("mousedown", onDocumentClick, false);
    };
  }, []);
  const popoverClasses = usePortalModeClasses(triggerRef);
  const triggerProps = {
    ref: triggerRef,
    onClick: onTriggerClick,
    onKeyDown: onTriggerKeyDown,
    className: clsx_m_default(styles_css_default.trigger, styles_css_default[`trigger-type-${triggerType}`])
  };
  const referrerId = useUniqueId();
  const popoverContent = import_react172.default.createElement("div", { "aria-live": dismissButton2 ? void 0 : "polite", "aria-atomic": dismissButton2 ? void 0 : true, className: clsx_m_default(popoverClasses, styles_css_default["popover-content"]), "data-awsui-referrer-id": referrerId }, visible && import_react172.default.createElement(
    PopoverContainer,
    { size, fixedWidth, position, trackRef: triggerRef, arrow: (position2) => import_react172.default.createElement(arrow_default, { position: position2 }), renderWithPortal, zIndex: renderWithPortal ? 7e3 : void 0 },
    import_react172.default.createElement(PopoverBody, { dismissButton: dismissButton2, dismissAriaLabel, header, onDismiss, overflowVisible: "both" }, content)
  ));
  const mergedRef = useMergeRefs(popoverRef, __internalRootRef);
  return import_react172.default.createElement(
    "span",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className), ref: mergedRef, onMouseDown: () => {
      clickFrameId.current = requestAnimationFrame(() => {
        clickFrameId.current = null;
      });
    } }),
    triggerType === "text" ? import_react172.default.createElement(
      "button",
      Object.assign({}, triggerProps, { type: "button", "aria-haspopup": "dialog", id: referrerId }),
      import_react172.default.createElement("span", { className: styles_css_default["trigger-inner-text"] }, children)
    ) : import_react172.default.createElement("span", Object.assign({}, triggerProps, { id: referrerId }), children),
    import_react172.default.createElement(FormFieldContext.Provider, { value: {} }, renderWithPortal ? import_react172.default.createElement(Portal, null, popoverContent) : popoverContent)
  );
}

// node_modules/@cloudscape-design/components/popover/index.js
function Popover(_a) {
  var { position = "right", size = "medium", fixedWidth = false, triggerType = "text", dismissButton: dismissButton2 = true, renderWithPortal = false, header } = _a, rest = __rest(_a, ["position", "size", "fixedWidth", "triggerType", "dismissButton", "renderWithPortal", "header"]);
  if (isDevelopment) {
    if (dismissButton2 && !header) {
      warnOnce("Popover", `You should provide a \`header\` when \`dismissButton\` is true.`);
    }
  }
  const baseComponentProps = useBaseComponent("Popover");
  const externalProps = getExternalProps(rest);
  return import_react173.default.createElement(internal_default18, Object.assign({ header, position, size, fixedWidth, triggerType, dismissButton: dismissButton2, renderWithPortal }, externalProps, baseComponentProps));
}
applyDisplayName(Popover, "Popover");

// node_modules/@cloudscape-design/components/progress-bar/index.js
var import_react175 = __toESM(require_react());

// node_modules/@cloudscape-design/components/progress-bar/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/progress-bar/styles.scoped.css";
var styles_css_default53 = {
  "progress": "awsui_progress_11huc_1pede_185",
  "result-state": "awsui_result-state_11huc_1pede_199",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_11huc_1pede_1",
  "root": "awsui_root_11huc_1pede_221",
  "with-result-button": "awsui_with-result-button_11huc_1pede_234",
  "result-text": "awsui_result-text_11huc_1pede_238",
  "result-container-error": "awsui_result-container-error_11huc_1pede_242",
  "result-container-success": "awsui_result-container-success_11huc_1pede_242",
  "result-button": "awsui_result-button_11huc_1pede_246",
  "word-wrap": "awsui_word-wrap_11huc_1pede_251",
  "label-flash": "awsui_label-flash_11huc_1pede_257",
  "label-key-value": "awsui_label-key-value_11huc_1pede_261",
  "flash": "awsui_flash_11huc_1pede_269",
  "progress-container": "awsui_progress-container_11huc_1pede_273",
  "percentage-container": "awsui_percentage-container_11huc_1pede_280",
  "percentage": "awsui_percentage_11huc_1pede_280",
  "complete": "awsui_complete_11huc_1pede_315",
  "progress-in-flash": "awsui_progress-in-flash_11huc_1pede_330"
};

// node_modules/@cloudscape-design/components/progress-bar/internal.js
var import_react174 = __toESM(require_react());
var MAX_VALUE = 100;
var clamp2 = (value, lowerLimit, upperLimit) => {
  return Math.max(Math.min(value, upperLimit), lowerLimit);
};
var Progress = ({ value, isInFlash, labelId }) => {
  const roundedValue = Math.round(value);
  const progressValue = clamp2(roundedValue, 0, MAX_VALUE);
  return import_react174.default.createElement(
    "div",
    { className: styles_css_default53["progress-container"] },
    import_react174.default.createElement("progress", { className: clsx_m_default(styles_css_default53.progress, progressValue >= MAX_VALUE && styles_css_default53.complete, isInFlash && styles_css_default53["progress-in-flash"]), max: MAX_VALUE, value: progressValue, "aria-labelledby": labelId }),
    import_react174.default.createElement(
      "span",
      { "aria-hidden": "true", className: styles_css_default53["percentage-container"] },
      import_react174.default.createElement(InternalBox, { className: styles_css_default53.percentage, variant: "small", color: isInFlash ? "inherit" : void 0 }, `${progressValue}%`)
    )
  );
};
var SmallText = ({ color: color2, children }) => {
  return import_react174.default.createElement(InternalBox, { className: styles_css_default53["word-wrap"], variant: "small", display: "block", color: color2 }, children);
};
var ResultButton = ({ onClick, children }) => {
  return import_react174.default.createElement(
    "div",
    { className: styles_css_default53["result-button"] },
    import_react174.default.createElement(InternalButton, { formAction: "none", onClick }, children)
  );
};
var ResultState = ({ isInFlash, resultText, resultButtonText, status, onClick }) => {
  const hasResultButton = !!resultButtonText;
  if (isInFlash) {
    return import_react174.default.createElement(
      "div",
      { className: styles_css_default53[`result-container-${status}`], "aria-live": "polite", "aria-atomic": "true" },
      import_react174.default.createElement("span", { className: styles_css_default53["result-text"] }, resultText)
    );
  }
  return import_react174.default.createElement(
    "div",
    { className: styles_css_default53[`result-container-${status}`], "aria-live": "polite", "aria-atomic": "true" },
    import_react174.default.createElement(
      "span",
      { className: clsx_m_default(hasResultButton && styles_css_default53["with-result-button"]) },
      import_react174.default.createElement(
        StatusIndicator,
        { type: status === "success" ? "success" : "error" },
        import_react174.default.createElement("span", { className: styles_css_default53["result-text"] }, resultText)
      )
    ),
    hasResultButton && import_react174.default.createElement(ResultButton, { onClick }, resultButtonText)
  );
};

// node_modules/@cloudscape-design/components/progress-bar/index.js
var ASSERTION_FREQUENCY = 5e3;
function ProgressBar(_a) {
  var { value = 0, status = "in-progress", variant = "standalone", resultButtonText, label, description, additionalInfo, resultText, onResultButtonClick } = _a, rest = __rest(_a, ["value", "status", "variant", "resultButtonText", "label", "description", "additionalInfo", "resultText", "onResultButtonClick"]);
  const { __internalRootRef } = useBaseComponent("ProgressBar");
  const baseProps = getBaseProps(rest);
  const generatedName = useUniqueId("awsui-progress-bar-");
  const labelId = `${generatedName}-label`;
  const isInFlash = variant === "flash";
  const isInProgressState = status === "in-progress";
  const [assertion, setAssertion] = (0, import_react175.useState)("");
  const throttledAssertion = (0, import_react175.useMemo)(() => {
    return throttle((value2) => {
      setAssertion(`${label !== null && label !== void 0 ? label : ""}: ${value2}%`);
    }, ASSERTION_FREQUENCY);
  }, [label]);
  (0, import_react175.useEffect)(() => {
    throttledAssertion(value);
  }, [throttledAssertion, value]);
  if (isInFlash && resultButtonText) {
    warnOnce("ProgressBar", 'The `resultButtonText` is ignored if you set `variant="flash"`, and the result button is not displayed. Use the `buttonText` property and the `onButtonClick` event listener of the flashbar item in which the progress bar component is embedded.');
  }
  return import_react175.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default53.root, variant && styles_css_default53[variant]), ref: __internalRootRef }),
    import_react175.default.createElement(
      "div",
      { className: isInFlash ? styles_css_default53["flash-container"] : void 0 },
      import_react175.default.createElement("div", { className: clsx_m_default(styles_css_default53["word-wrap"], styles_css_default53[`label-${variant}`]), id: labelId }, label),
      description && import_react175.default.createElement(SmallText, { color: isInFlash ? "inherit" : void 0 }, description),
      import_react175.default.createElement("div", null, isInProgressState ? import_react175.default.createElement(
        import_react175.default.Fragment,
        null,
        import_react175.default.createElement(Progress, { value, labelId, isInFlash }),
        import_react175.default.createElement(live_region_default, { delay: 0 }, assertion)
      ) : import_react175.default.createElement(ResultState, { resultText, isInFlash, resultButtonText, status, onClick: () => {
        fireNonCancelableEvent(onResultButtonClick);
      } }))
    ),
    additionalInfo && import_react175.default.createElement(SmallText, { color: isInFlash ? "inherit" : void 0 }, additionalInfo)
  );
}
applyDisplayName(ProgressBar, "ProgressBar");

// node_modules/@cloudscape-design/components/property-filter/index.js
var import_react183 = __toESM(require_react());

// node_modules/@cloudscape-design/components/property-filter/token.js
var import_react179 = __toESM(require_react());

// node_modules/@cloudscape-design/components/property-filter/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/property-filter/styles.scoped.css";
var styles_css_default54 = {
  "root": "awsui_root_1wzqe_7h5px_93",
  "search-field": "awsui_search-field_1wzqe_7h5px_106",
  "input-wrapper": "awsui_input-wrapper_1wzqe_7h5px_112",
  "add-token": "awsui_add-token_1wzqe_7h5px_116",
  "tokens": "awsui_tokens_1wzqe_7h5px_123",
  "token-operator": "awsui_token-operator_1wzqe_7h5px_127",
  "property-editor": "awsui_property-editor_1wzqe_7h5px_131",
  "token-editor": "awsui_token-editor_1wzqe_7h5px_132",
  "property-editor-form": "awsui_property-editor-form_1wzqe_7h5px_136",
  "token-editor-form": "awsui_token-editor-form_1wzqe_7h5px_137",
  "property-editor-field-property": "awsui_property-editor-field-property_1wzqe_7h5px_140",
  "token-editor-field-property": "awsui_token-editor-field-property_1wzqe_7h5px_141",
  "property-editor-field-operator": "awsui_property-editor-field-operator_1wzqe_7h5px_144",
  "token-editor-field-operator": "awsui_token-editor-field-operator_1wzqe_7h5px_145",
  "property-editor-field-value": "awsui_property-editor-field-value_1wzqe_7h5px_148",
  "token-editor-field-value": "awsui_token-editor-field-value_1wzqe_7h5px_149",
  "property-editor-cancel": "awsui_property-editor-cancel_1wzqe_7h5px_152",
  "token-editor-cancel": "awsui_token-editor-cancel_1wzqe_7h5px_153",
  "property-editor-submit": "awsui_property-editor-submit_1wzqe_7h5px_156",
  "token-editor-submit": "awsui_token-editor-submit_1wzqe_7h5px_157",
  "property-editor-actions": "awsui_property-editor-actions_1wzqe_7h5px_160",
  "token-editor-actions": "awsui_token-editor-actions_1wzqe_7h5px_161",
  "custom-content-wrapper": "awsui_custom-content-wrapper_1wzqe_7h5px_179",
  "custom-control": "awsui_custom-control_1wzqe_7h5px_183",
  "input": "awsui_input_1wzqe_7h5px_112",
  "token-trigger": "awsui_token-trigger_1wzqe_7h5px_191",
  "remove-all": "awsui_remove-all_1wzqe_7h5px_197",
  "token-label": "awsui_token-label_1wzqe_7h5px_198",
  "join-operation": "awsui_join-operation_1wzqe_7h5px_199"
};

// node_modules/@cloudscape-design/components/property-filter/token-editor.js
var import_react177 = __toESM(require_react());

// node_modules/@cloudscape-design/components/property-filter/use-load-items.js
var import_react176 = __toESM(require_react());
var useLoadItems2 = (onLoadItems, focusFilteringText, currentFilteringProperty, currentFilteringText, currentFilteringOperator) => {
  const focusIn = (0, import_react176.useRef)(false);
  const handleBlur = () => {
    focusIn.current = true;
  };
  const fireLoadItems = (detail) => {
    var _a;
    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, detail), { filteringText: (_a = currentFilteringText !== null && currentFilteringText !== void 0 ? currentFilteringText : detail.filteringText) !== null && _a !== void 0 ? _a : "", filteringProperty: currentFilteringProperty, filteringOperator: currentFilteringOperator }));
    focusIn.current = false;
  };
  const handleFocus = () => {
    if (focusIn.current) {
      fireLoadItems({ firstPage: true, samePage: false, filteringText: focusFilteringText });
    }
  };
  const handleLoadItems = ({ detail }) => fireLoadItems(detail);
  return {
    onBlur: handleBlur,
    onFocus: handleFocus,
    onLoadItems: handleLoadItems
  };
};

// node_modules/@cloudscape-design/components/property-filter/utils.js
function matchFilteringProperty(filteringProperties, filteringText) {
  let maxLength = 0;
  let matchedProperty = null;
  for (const property of filteringProperties) {
    if (property.propertyLabel.length >= maxLength && startsWith(filteringText, property.propertyLabel) || property.propertyLabel.length > maxLength && startsWith(filteringText.toLowerCase(), property.propertyLabel.toLowerCase())) {
      maxLength = property.propertyLabel.length;
      matchedProperty = property;
    }
  }
  return matchedProperty;
}
function matchOperator(allowedOperators, filteringText) {
  filteringText = filteringText.toLowerCase();
  let maxLength = 0;
  let matchedOperator = null;
  for (const operator of allowedOperators) {
    if (operator.length > maxLength && startsWith(filteringText, operator.toLowerCase())) {
      maxLength = operator.length;
      matchedOperator = operator;
    }
  }
  return matchedOperator;
}
function matchOperatorPrefix(allowedOperators, filteringText) {
  if (filteringText.trim().length === 0) {
    return "";
  }
  for (const operator of allowedOperators) {
    if (startsWith(operator.toLowerCase(), filteringText.toLowerCase())) {
      return filteringText;
    }
  }
  return null;
}
function matchTokenValue(token, filteringOptions) {
  var _a, _b;
  const propertyOptions = filteringOptions.filter((option) => option.propertyKey === token.propertyKey);
  const bestMatch = Object.assign({}, token);
  for (const option of propertyOptions) {
    if (option.label && option.label === token.value || !option.label && option.value === token.value) {
      return Object.assign(Object.assign({}, token), { value: option.value });
    }
    if (typeof token.value === "string" && token.value.toLowerCase() === ((_b = (_a = option.label) !== null && _a !== void 0 ? _a : option.value) !== null && _b !== void 0 ? _b : "").toLowerCase()) {
      bestMatch.value = option.value;
    }
  }
  return bestMatch;
}
function getPropertyByKey(filteringProperties, key) {
  const propertyMap = new Map(filteringProperties.map((prop) => [prop.propertyKey, prop]));
  return propertyMap.get(key);
}
function getFormattedToken(filteringProperties, token) {
  const property = token.propertyKey ? getPropertyByKey(filteringProperties, token.propertyKey) : void 0;
  const valueFormatter = property === null || property === void 0 ? void 0 : property.getValueFormatter(token.operator);
  const propertyLabel = property && property.propertyLabel;
  const tokenValue = valueFormatter ? valueFormatter(token.value) : token.value;
  const label = `${propertyLabel !== null && propertyLabel !== void 0 ? propertyLabel : ""} ${token.operator} ${tokenValue}`;
  return { property: propertyLabel, operator: token.operator, value: tokenValue, label };
}
function trimStart(source) {
  let spacesLength = 0;
  for (let i = 0; i < source.length; i++) {
    if (source[i] === " ") {
      spacesLength++;
    } else {
      break;
    }
  }
  return source.slice(spacesLength);
}
function trimFirstSpace(source) {
  return source[0] === " " ? source.slice(1) : source;
}
function startsWith(source, target) {
  return source.indexOf(target) === 0;
}

// node_modules/@cloudscape-design/components/property-filter/controller.js
var getQueryActions = (query, onChange, inputRef) => {
  const { tokens, operation } = query;
  const fireOnChange = (tokens2, operation2) => fireNonCancelableEvent(onChange, { tokens: tokens2, operation: operation2 });
  const setToken = (index, newToken) => {
    const newTokens = [...tokens];
    if (newTokens && index < newTokens.length) {
      newTokens[index] = newToken;
    }
    fireOnChange(newTokens, operation);
  };
  const removeToken = (index) => {
    var _a;
    const newTokens = tokens.filter((_, i) => i !== index);
    fireOnChange(newTokens, operation);
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventDropdown: true });
  };
  const removeAllTokens = () => {
    var _a;
    fireOnChange([], operation);
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus({ preventDropdown: true });
  };
  const addToken = (newToken) => {
    const newTokens = [...tokens];
    newTokens.push(newToken);
    fireOnChange(newTokens, operation);
  };
  const setOperation = (newOperation) => {
    fireOnChange(tokens, newOperation);
  };
  return {
    setToken,
    removeToken,
    removeAllTokens,
    addToken,
    setOperation
  };
};
var getAllowedOperators = (property) => {
  const { operators = [], defaultOperator } = property;
  const operatorOrder = ["=", "!=", ":", "!:", ">=", "<=", "<", ">"];
  const operatorSet = /* @__PURE__ */ new Set([defaultOperator, ...operators]);
  return operatorOrder.filter((op) => operatorSet.has(op));
};
var parseText = (filteringText, filteringProperties = [], disableFreeTextFiltering) => {
  const negatedGlobalQuery = /^(!:|!)(.*)/.exec(filteringText);
  if (!disableFreeTextFiltering && negatedGlobalQuery) {
    return {
      step: "free-text",
      operator: "!:",
      value: negatedGlobalQuery[2]
    };
  }
  const property = matchFilteringProperty(filteringProperties, filteringText);
  if (!property) {
    return {
      step: "free-text",
      value: filteringText
    };
  }
  const allowedOps = getAllowedOperators(property);
  const textWithoutProperty = filteringText.substring(property.propertyLabel.length);
  const operator = matchOperator(allowedOps, trimStart(textWithoutProperty));
  if (operator) {
    const operatorLastIndex = textWithoutProperty.indexOf(operator) + operator.length;
    const textWithoutPropertyAndOperator = textWithoutProperty.slice(operatorLastIndex);
    const value = trimFirstSpace(textWithoutPropertyAndOperator);
    return { step: "property", property, operator, value };
  }
  const operatorPrefix = matchOperatorPrefix(allowedOps, trimStart(textWithoutProperty));
  if (operatorPrefix !== null) {
    return { step: "operator", property, operatorPrefix };
  }
  return {
    step: "free-text",
    value: filteringText
  };
};
var getPropertyOptions = (filteringProperty, filteringOptions) => {
  return filteringOptions.filter((option) => option.propertyKey === filteringProperty.propertyKey);
};
var getAllValueSuggestions = (filteringOptions, filteringProperties, operator = "=", i18nStrings, customGroupsText) => {
  var _a;
  const defaultGroup = {
    label: (_a = i18nStrings.groupValuesText) !== null && _a !== void 0 ? _a : "",
    options: []
  };
  const customGroups = {};
  filteringOptions.forEach((filteringOption) => {
    const property = getPropertyByKey(filteringProperties, filteringOption.propertyKey);
    if (!property) {
      return;
    }
    if (getAllowedOperators(property).indexOf(operator) === -1) {
      return;
    }
    if (property.propertyGroup && !customGroups[property.propertyGroup]) {
      const label = customGroupsText.reduce((acc, customGroup) => customGroup.group === property.propertyGroup ? customGroup.values : acc, "");
      customGroups[property.propertyGroup] = {
        label,
        options: []
      };
    }
    const propertyGroup = property.propertyGroup ? customGroups[property.propertyGroup] : defaultGroup;
    propertyGroup.options.push({
      value: property.propertyLabel + " " + (operator || "=") + " " + filteringOption.value,
      label: filteringOption.label,
      __labelPrefix: property.propertyLabel + " " + (operator || "=")
    });
  });
  return [defaultGroup, ...Object.keys(customGroups).map((group) => customGroups[group])];
};
function createPropertiesCompatibilityMap(filteringProperties) {
  const lookup = {};
  for (const property of filteringProperties) {
    lookup[property.propertyKey] = (property.operators || []).map((operator) => ({ operator, form: property.getValueFormRenderer(operator) })).sort((a2, b) => a2.operator.localeCompare(b.operator));
  }
  return (propertyA, propertyB) => {
    if (lookup[propertyA].length !== lookup[propertyB].length) {
      return false;
    }
    for (let i = 0; i < lookup[propertyA].length; i++) {
      if (lookup[propertyA][i].operator !== lookup[propertyB][i].operator) {
        return false;
      }
      if (lookup[propertyA][i].form !== lookup[propertyB][i].form) {
        return false;
      }
    }
    return true;
  };
}
var filteringPropertyToAutosuggestOption = (filteringProperty) => ({
  value: filteringProperty.propertyLabel,
  label: filteringProperty.propertyLabel,
  keepOpenOnSelect: true
});
function getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToOption) {
  var _a;
  const defaultGroup = {
    label: (_a = i18nStrings.groupPropertiesText) !== null && _a !== void 0 ? _a : "",
    options: []
  };
  const customGroups = {};
  filteringProperties.forEach((filteringProperty) => {
    const { propertyGroup } = filteringProperty;
    let optionsGroup = defaultGroup;
    if (propertyGroup) {
      if (!customGroups[propertyGroup]) {
        const label = customGroupsText.reduce((acc, customGroup) => customGroup.group === propertyGroup ? customGroup.properties : acc, "");
        customGroups[propertyGroup] = { options: [], label };
      }
      optionsGroup = customGroups[propertyGroup];
    }
    optionsGroup.options.push(filteringPropertyToOption(filteringProperty));
  });
  const defaultGroupArray = defaultGroup.options.length ? [defaultGroup] : [];
  const customGroupsArray = Object.keys(customGroups).map((groupKey) => customGroups[groupKey]);
  return [...defaultGroupArray, ...customGroupsArray];
}
var getAutosuggestOptions = (parsedText, filteringOptions, filteringProperties, customGroupsText, i18nStrings) => {
  switch (parsedText.step) {
    case "property": {
      const { propertyLabel, groupValuesLabel } = parsedText.property;
      const options = getPropertyOptions(parsedText.property, filteringOptions);
      return {
        filterText: parsedText.value,
        options: [
          {
            options: options.map(({ label, value }) => ({
              value: propertyLabel + " " + parsedText.operator + " " + value,
              label,
              __labelPrefix: propertyLabel + " " + parsedText.operator
            })),
            label: groupValuesLabel
          }
        ]
      };
    }
    case "operator": {
      return {
        filterText: parsedText.property.propertyLabel + " " + parsedText.operatorPrefix,
        options: [
          ...getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToAutosuggestOption),
          {
            options: getAllowedOperators(parsedText.property).map((value) => ({
              value: parsedText.property.propertyLabel + " " + value + " ",
              label: parsedText.property.propertyLabel + " " + value,
              description: operatorToDescription(value, i18nStrings),
              keepOpenOnSelect: true
            })),
            label: i18nStrings.operatorsText
          }
        ]
      };
    }
    case "free-text": {
      const needsValueSuggestions = !!parsedText.value;
      const needsPropertySuggestions = !(parsedText.step === "free-text" && parsedText.operator === "!:");
      return {
        filterText: parsedText.value,
        options: [
          ...needsPropertySuggestions ? getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, filteringPropertyToAutosuggestOption) : [],
          ...needsValueSuggestions ? getAllValueSuggestions(filteringOptions, filteringProperties, parsedText.operator, i18nStrings, customGroupsText) : []
        ]
      };
    }
  }
};
var operatorToDescription = (operator, i18nStrings) => {
  const mapping = {
    ["<"]: i18nStrings.operatorLessText,
    ["<="]: i18nStrings.operatorLessOrEqualText,
    [">"]: i18nStrings.operatorGreaterText,
    [">="]: i18nStrings.operatorGreaterOrEqualText,
    [":"]: i18nStrings.operatorContainsText,
    ["!:"]: i18nStrings.operatorDoesNotContainText,
    ["="]: i18nStrings.operatorEqualsText,
    ["!="]: i18nStrings.operatorDoesNotEqualText
  };
  return mapping[operator];
};

// node_modules/@cloudscape-design/components/property-filter/token-editor.js
var freeTextOperators = [":", "!:"];
function PropertyInput({ propertyKey, onChangePropertyKey, asyncProps, filteringProperties, onLoadItems, customGroupsText, i18nStrings, disableFreeTextFiltering }) {
  const property = propertyKey !== void 0 ? getPropertyByKey(filteringProperties, propertyKey) : void 0;
  const propertySelectHandlers = useLoadItems2(onLoadItems);
  const asyncPropertySelectProps = asyncProps ? Object.assign(Object.assign({}, asyncProps), propertySelectHandlers) : {};
  const propertyOptions = getPropertySuggestions(filteringProperties, customGroupsText, i18nStrings, ({ propertyKey: propertyKey2, propertyLabel }) => ({
    value: propertyKey2,
    label: propertyLabel,
    dontCloseOnSelect: true
  }));
  const checkPropertiesCompatible = createPropertiesCompatibilityMap(filteringProperties);
  propertyOptions.forEach((optionGroup) => {
    if ("options" in optionGroup) {
      optionGroup.options.forEach((option) => {
        if (propertyKey && option.value) {
          option.disabled = !checkPropertiesCompatible(option.value, propertyKey);
        }
      });
    }
  });
  const allPropertiesOption = {
    label: i18nStrings.allPropertiesLabel,
    value: void 0
  };
  if (!disableFreeTextFiltering) {
    propertyOptions.unshift(allPropertiesOption);
  }
  return import_react177.default.createElement(internal_default14, Object.assign({ options: propertyOptions, selectedOption: property ? {
    value: propertyKey !== null && propertyKey !== void 0 ? propertyKey : void 0,
    label: property.propertyLabel
  } : allPropertiesOption, onChange: (e) => onChangePropertyKey(e.detail.selectedOption.value) }, asyncPropertySelectProps));
}
function OperatorInput({ propertyKey, operator, onChangeOperator, filteringProperties, i18nStrings }) {
  const property = propertyKey !== void 0 ? getPropertyByKey(filteringProperties, propertyKey) : void 0;
  const freeTextOperators2 = [":", "!:"];
  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators2).map((operator2) => ({
    value: operator2,
    label: operator2,
    description: operatorToDescription(operator2, i18nStrings)
  }));
  return import_react177.default.createElement(internal_default14, { options: operatorOptions, triggerVariant: "option", selectedOption: operator ? {
    value: operator,
    label: operator,
    description: operatorToDescription(operator, i18nStrings)
  } : null, onChange: (e) => onChangeOperator(e.detail.selectedOption.value) });
}
function ValueInput({ propertyKey, operator, value, onChangeValue, asyncProps, filteringProperties, filteringOptions, onLoadItems, i18nStrings }) {
  var _a, _b, _c;
  const property = propertyKey !== void 0 ? getPropertyByKey(filteringProperties, propertyKey) : void 0;
  const valueOptions = property ? getPropertyOptions(property, filteringOptions).map(({ label, value: value2 }) => ({ label, value: value2 })) : [];
  const valueAutosuggestHandlers = useLoadItems2(onLoadItems, "", property === null || property === void 0 ? void 0 : property.externalProperty);
  const asyncValueAutosuggestProps = propertyKey ? Object.assign(Object.assign({}, valueAutosuggestHandlers), asyncProps) : { empty: asyncProps.empty };
  const [matchedOption] = valueOptions.filter((option) => option.value === value);
  const OperatorForm = propertyKey && operator && (property === null || property === void 0 ? void 0 : property.getValueFormRenderer(operator));
  return OperatorForm ? import_react177.default.createElement(OperatorForm, { value, onChange: onChangeValue, operator }) : import_react177.default.createElement(internal_default13, Object.assign({ enteredTextLabel: (_a = i18nStrings.enteredTextLabel) !== null && _a !== void 0 ? _a : (value2) => value2, value: (_c = (_b = matchedOption === null || matchedOption === void 0 ? void 0 : matchedOption.label) !== null && _b !== void 0 ? _b : value) !== null && _c !== void 0 ? _c : "", clearAriaLabel: i18nStrings.clearAriaLabel, onChange: (e) => onChangeValue(e.detail.value), disabled: !operator, options: valueOptions }, asyncValueAutosuggestProps, { virtualScroll: true }));
}
function TokenEditor({ asyncProperties, asyncProps, customGroupsText, disableFreeTextFiltering, expandToViewport, filteringOptions, filteringProperties, i18nStrings, onLoadItems, setToken, token, triggerComponent }) {
  const [temporaryToken, setTemporaryToken] = (0, import_react177.useState)(token);
  const popoverRef = (0, import_react177.useRef)(null);
  const closePopover = () => {
    popoverRef.current && popoverRef.current.dismissPopover();
  };
  const propertyKey = temporaryToken.propertyKey;
  const onChangePropertyKey = (newPropertyKey) => {
    const filteringProperty = filteringProperties.reduce((acc, property) => property.propertyKey === newPropertyKey ? property : acc, void 0);
    const allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;
    const operator2 = temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) !== -1 ? temporaryToken.operator : allowedOperators[0];
    setTemporaryToken(Object.assign(Object.assign({}, temporaryToken), { propertyKey: newPropertyKey, operator: operator2 }));
  };
  const operator = temporaryToken.operator;
  const onChangeOperator = (newOperator) => {
    setTemporaryToken(Object.assign(Object.assign({}, temporaryToken), { operator: newOperator }));
  };
  const value = temporaryToken.value;
  const onChangeValue = (newValue) => {
    setTemporaryToken(Object.assign(Object.assign({}, temporaryToken), { value: newValue }));
  };
  return import_react177.default.createElement(internal_default18, { ref: popoverRef, className: styles_css_default54["token-label"], triggerType: "text", header: i18nStrings.editTokenHeader, size: "large", position: "right", dismissAriaLabel: i18nStrings.dismissAriaLabel, __onOpen: () => setTemporaryToken(token), renderWithPortal: expandToViewport, content: import_react177.default.createElement(
    "div",
    { className: styles_css_default54["token-editor"] },
    import_react177.default.createElement(
      "div",
      { className: styles_css_default54["token-editor-form"] },
      import_react177.default.createElement(
        InternalFormField,
        { label: i18nStrings.propertyText, className: styles_css_default54["token-editor-field-property"] },
        import_react177.default.createElement(PropertyInput, { propertyKey, onChangePropertyKey, asyncProps: asyncProperties ? asyncProps : null, filteringProperties, onLoadItems, customGroupsText, i18nStrings, disableFreeTextFiltering })
      ),
      import_react177.default.createElement(
        InternalFormField,
        { label: i18nStrings.operatorText, className: styles_css_default54["token-editor-field-operator"] },
        import_react177.default.createElement(OperatorInput, { propertyKey, operator, onChangeOperator, filteringProperties, i18nStrings })
      ),
      import_react177.default.createElement(
        InternalFormField,
        { label: i18nStrings.valueText, className: styles_css_default54["token-editor-field-value"] },
        import_react177.default.createElement(ValueInput, { propertyKey, operator, value, onChangeValue, asyncProps, filteringProperties, filteringOptions, onLoadItems, i18nStrings })
      )
    ),
    import_react177.default.createElement(
      "div",
      { className: styles_css_default54["token-editor-actions"] },
      import_react177.default.createElement(internal_default2, { variant: "link", className: styles_css_default54["token-editor-cancel"], onClick: closePopover }, i18nStrings.cancelActionText),
      import_react177.default.createElement(internal_default2, { className: styles_css_default54["token-editor-submit"], onClick: () => {
        setToken(matchTokenValue(temporaryToken, filteringOptions));
        closePopover();
      } }, i18nStrings.applyActionText)
    )
  ) }, triggerComponent);
}

// node_modules/@cloudscape-design/components/internal/components/filtering-token/index.js
var import_react178 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/filtering-token/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/internal/components/filtering-token/styles.scoped.css";
var styles_css_default55 = {
  "root": "awsui_root_10m3l_1jdeo_97",
  "token": "awsui_token_10m3l_1jdeo_102",
  "show-operation": "awsui_show-operation_10m3l_1jdeo_113",
  "select": "awsui_select_10m3l_1jdeo_119",
  "token-content": "awsui_token-content_10m3l_1jdeo_123",
  "dismiss-button": "awsui_dismiss-button_10m3l_1jdeo_127",
  "token-disabled": "awsui_token-disabled_10m3l_1jdeo_163"
};

// node_modules/@cloudscape-design/components/internal/components/filtering-token/index.js
function FilteringToken({ ariaLabel, showOperation, operation, andText, orText, dismissAriaLabel, operatorAriaLabel, disabled, children, onChange, onDismiss }) {
  return import_react178.default.createElement(
    "div",
    { className: styles_css_default55.root, role: "group", "aria-label": ariaLabel },
    showOperation && import_react178.default.createElement(internal_default14, { __inFilteringToken: true, className: styles_css_default55.select, options: [
      { value: "and", label: andText },
      { value: "or", label: orText }
    ], selectedOption: { value: operation, label: operation === "and" ? andText : orText }, onChange: (e) => onChange(e.detail.selectedOption.value), disabled, ariaLabel: operatorAriaLabel }),
    import_react178.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default55.token, showOperation && styles_css_default55["show-operation"], disabled && styles_css_default55["token-disabled"]), "aria-disabled": disabled },
      import_react178.default.createElement("div", { className: styles_css_default55["token-content"] }, children),
      import_react178.default.createElement(
        "button",
        { type: "button", className: styles_css_default55["dismiss-button"], "aria-label": dismissAriaLabel, onClick: onDismiss, disabled },
        import_react178.default.createElement(internal_default, { name: "close" })
      )
    )
  );
}

// node_modules/@cloudscape-design/components/property-filter/token.js
var TokenButton = ({ token, operation = "and", first, removeToken, setToken, setOperation, filteringOptions, filteringProperties, asyncProps, onLoadItems, i18nStrings, asyncProperties, hideOperations, customGroupsText, disabled, disableFreeTextFiltering, expandToViewport }) => {
  var _a, _b, _c;
  const formattedToken = getFormattedToken(filteringProperties, token);
  return import_react179.default.createElement(
    FilteringToken,
    { ariaLabel: formattedToken.label, showOperation: !first && !hideOperations, operation, andText: (_a = i18nStrings.operationAndText) !== null && _a !== void 0 ? _a : "", orText: (_b = i18nStrings.operationOrText) !== null && _b !== void 0 ? _b : "", dismissAriaLabel: (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.removeTokenButtonAriaLabel) === null || _c === void 0 ? void 0 : _c.call(i18nStrings, token), operatorAriaLabel: i18nStrings.tokenOperatorAriaLabel, onChange: setOperation, onDismiss: removeToken, disabled },
    import_react179.default.createElement(TokenEditor, { setToken, triggerComponent: import_react179.default.createElement(
      "span",
      { className: styles_css_default54["token-trigger"] },
      import_react179.default.createElement(TokenTrigger, { property: formattedToken.property, operator: token.operator, value: formattedToken.value })
    ), filteringOptions, filteringProperties, token, asyncProps, onLoadItems, i18nStrings, asyncProperties, customGroupsText, disableFreeTextFiltering, expandToViewport })
  );
};
var TokenTrigger = ({ property, operator, value }) => {
  if (property) {
    property += " ";
  }
  const freeTextContainsToken = operator === ":" && !property;
  const operatorText = freeTextContainsToken ? "" : operator + " ";
  return import_react179.default.createElement(
    import_react179.default.Fragment,
    null,
    property,
    import_react179.default.createElement("span", { className: styles_css_default54["token-operator"] }, operatorText),
    value
  );
};

// node_modules/@cloudscape-design/components/property-filter/property-filter-autosuggest.js
var import_react180 = __toESM(require_react());

// node_modules/@cloudscape-design/components/property-filter/filter-options.js
function filterOptions3(options, searchText = "") {
  if (!searchText) {
    return options;
  }
  const filtered = [];
  for (const option of options) {
    if (isGroup4(option)) {
      const childOptions = filterOptions3(option.options, searchText);
      if (childOptions.length > 0) {
        filtered.push(Object.assign(Object.assign({}, option), { options: childOptions }));
      }
    } else if (matchSingleOption2(option, searchText)) {
      filtered.push(option);
    }
  }
  return filtered;
}
function isGroup4(optionOrGroup) {
  return "options" in optionOrGroup;
}
function matchSingleOption2(option, searchText) {
  var _a, _b;
  searchText = searchText.toLowerCase();
  const label = ((_a = option.label) !== null && _a !== void 0 ? _a : "").toLowerCase();
  const labelPrefix = (_b = option.__labelPrefix) !== null && _b !== void 0 ? _b : "";
  const value = (option.value ? option.value.slice(labelPrefix.length) : "").toLowerCase();
  return label.indexOf(searchText) !== -1 || value.indexOf(searchText) !== -1;
}

// node_modules/@cloudscape-design/components/property-filter/property-filter-autosuggest.js
var DROPDOWN_WIDTH_OPTIONS_LIST = 300;
var DROPDOWN_WIDTH_CUSTOM_FORM = 200;
var PropertyFilterAutosuggest = import_react180.default.forwardRef((props2, ref) => {
  var _a;
  const { value, onChange, onFocus, onBlur, onLoadItems, options, statusType = "finished", placeholder, disabled, ariaLabel, enteredTextLabel, onKeyDown, virtualScroll, expandToViewport, customForm, filterText, onOptionClick, hideEnteredTextOption, searchResultsId } = props2, rest = __rest(props2, ["value", "onChange", "onFocus", "onBlur", "onLoadItems", "options", "statusType", "placeholder", "disabled", "ariaLabel", "enteredTextLabel", "onKeyDown", "virtualScroll", "expandToViewport", "customForm", "filterText", "onOptionClick", "hideEnteredTextOption", "searchResultsId"]);
  const highlightText = filterText === void 0 ? value : filterText;
  const customFormRef = (0, import_react180.useRef)(null);
  const autosuggestInputRef = (0, import_react180.useRef)(null);
  const mergedRef = useMergeRefs(autosuggestInputRef, ref);
  const filteredOptions = (0, import_react180.useMemo)(() => filterOptions3(options || [], highlightText), [options, highlightText]);
  const [autosuggestItemsState, autosuggestItemsHandlers] = useAutosuggestItems({
    options: filteredOptions,
    filterValue: value,
    filterText: highlightText,
    filteringType: "manual",
    hideEnteredTextLabel: hideEnteredTextOption,
    onSelectItem: (option) => {
      var _a2;
      const value2 = option.value || "";
      fireNonCancelableEvent(onChange, { value: value2 });
      const selectedCancelled = fireCancelableEvent(onOptionClick, option);
      if (!selectedCancelled) {
        (_a2 = autosuggestInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.close();
      } else {
        autosuggestItemsHandlers.resetHighlightWithKeyboard();
      }
    }
  });
  const autosuggestLoadMoreHandlers = useAutosuggestLoadMore({
    options,
    statusType,
    onLoadItems: (detail) => fireNonCancelableEvent(onLoadItems, detail)
  });
  const handleChange = (event) => {
    autosuggestItemsHandlers.resetHighlightWithKeyboard();
    fireNonCancelableEvent(onChange, event.detail);
  };
  const handleDelayedInput = (event) => {
    autosuggestLoadMoreHandlers.fireLoadMoreOnInputChange(event.detail.value);
  };
  const handleFocus = () => {
    autosuggestLoadMoreHandlers.fireLoadMoreOnInputFocus();
    fireCancelableEvent(onFocus, null);
  };
  const handleBlur = () => {
    fireCancelableEvent(onBlur, null);
  };
  const handleKeyDown = (e) => {
    fireCancelableEvent(onKeyDown, e.detail);
  };
  const handlePressArrowDown = () => {
    var _a2;
    autosuggestItemsHandlers.moveHighlightWithKeyboard(1);
    if (customFormRef.current) {
      (_a2 = getFirstFocusable(customFormRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  };
  const handlePressArrowUp = () => {
    autosuggestItemsHandlers.moveHighlightWithKeyboard(-1);
  };
  const handlePressEnter = () => {
    return autosuggestItemsHandlers.selectHighlightedOptionWithKeyboard();
  };
  const handleCloseDropdown = () => {
    autosuggestItemsHandlers.resetHighlightWithKeyboard();
  };
  const handleRecoveryClick = () => {
    var _a2;
    autosuggestLoadMoreHandlers.fireLoadMoreOnRecoveryClick();
    (_a2 = autosuggestInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  };
  const selfControlId = useUniqueId("input");
  const controlId = (_a = rest.controlId) !== null && _a !== void 0 ? _a : selfControlId;
  const listId = useUniqueId("list");
  const footerId = useUniqueId("footer");
  const highlightedOptionIdSource = useUniqueId();
  const highlightedOptionId = autosuggestItemsState.highlightedOption ? highlightedOptionIdSource : void 0;
  const isEmpty = !value && !autosuggestItemsState.items.length;
  const dropdownStatus = useDropdownStatus(Object.assign(Object.assign({}, props2), { isEmpty, onRecoveryClick: handleRecoveryClick }));
  let content = null;
  if (customForm) {
    content = import_react180.default.createElement("div", { ref: customFormRef, className: styles_css_default54["custom-content-wrapper"] }, customForm);
  } else if (autosuggestItemsState.items.length > 0) {
    content = import_react180.default.createElement(AutosuggestOptionsList, { statusType, autosuggestItemsState, autosuggestItemsHandlers, highlightedOptionId, highlightText, listId, controlId, enteredTextLabel, handleLoadMore: autosuggestLoadMoreHandlers.fireLoadMoreOnScroll, hasDropdownStatus: dropdownStatus.content !== null, virtualScroll, listBottom: !dropdownStatus.isSticky ? import_react180.default.createElement(dropdown_footer_default, { content: dropdownStatus.content, id: footerId }) : null, ariaDescribedby: dropdownStatus.content ? footerId : void 0 });
  }
  return import_react180.default.createElement(autosuggest_input_default, Object.assign({ ref: mergedRef }, rest, { className: clsx_m_default(styles_css_default26.root, styles_css_default54.input), value, onChange: handleChange, onFocus: handleFocus, onBlur: handleBlur, onKeyDown: handleKeyDown, controlId, placeholder, disabled, ariaLabel, expandToViewport, ariaControls: listId, ariaActivedescendant: highlightedOptionId, ariaDescribedby: joinStrings(searchResultsId, rest.ariaDescribedby), dropdownExpanded: autosuggestItemsState.items.length > 1 || dropdownStatus.content !== null || !!customForm, dropdownContentKey: customForm ? "custom" : "options", dropdownContent: content, dropdownFooter: dropdownStatus.isSticky ? import_react180.default.createElement(dropdown_footer_default, { content: dropdownStatus.content, hasItems: autosuggestItemsState.items.length >= 1, id: footerId }) : null, dropdownWidth: customForm ? DROPDOWN_WIDTH_CUSTOM_FORM : DROPDOWN_WIDTH_OPTIONS_LIST, dropdownContentFocusable: !!customForm, onCloseDropdown: handleCloseDropdown, onDelayedInput: handleDelayedInput, onPressArrowDown: handlePressArrowDown, onPressArrowUp: handlePressArrowUp, onPressEnter: handlePressEnter }));
});
var property_filter_autosuggest_default = PropertyFilterAutosuggest;

// node_modules/@cloudscape-design/components/property-filter/property-editor.js
var import_react181 = __toESM(require_react());
function PropertyEditor({ property, operator, filter, operatorForm, onCancel, onSubmit, i18nStrings }) {
  const [value, onChange] = (0, import_react181.useState)(null);
  const submitToken = () => onSubmit({ propertyKey: property.propertyKey, operator, value });
  return import_react181.default.createElement(
    "div",
    { className: styles_css_default54["property-editor"] },
    import_react181.default.createElement(
      "div",
      { className: styles_css_default54["property-editor-form"] },
      import_react181.default.createElement(InternalFormField, { label: property.groupValuesLabel }, operatorForm({ value, onChange, operator, filter }))
    ),
    import_react181.default.createElement(
      "div",
      { className: styles_css_default54["property-editor-actions"] },
      import_react181.default.createElement(internal_default2, { variant: "link", className: styles_css_default54["property-editor-cancel"], onClick: onCancel }, i18nStrings.cancelActionText),
      import_react181.default.createElement(internal_default2, { className: styles_css_default54["property-editor-submit"], onClick: submitToken }, i18nStrings.applyActionText)
    )
  );
}

// node_modules/@cloudscape-design/components/text-filter/search-results.js
var import_react182 = __toESM(require_react());

// node_modules/@cloudscape-design/components/text-filter/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/text-filter/styles.scoped.css";
var styles_css_default56 = {
  "root": "awsui_root_1sdq3_12s8y_93",
  "input": "awsui_input_1sdq3_12s8y_109",
  "results": "awsui_results_1sdq3_12s8y_113"
};

// node_modules/@cloudscape-design/components/text-filter/search-results.js
var LIVE_REGION_DELAY = 2e3;
function SearchResults({ id, children }) {
  return import_react182.default.createElement(
    "span",
    { className: styles_css_default56.results },
    import_react182.default.createElement(
      live_region_default,
      { delay: LIVE_REGION_DELAY, visible: true },
      import_react182.default.createElement("span", { id }, children)
    )
  );
}

// node_modules/@cloudscape-design/components/property-filter/index.js
var OPERATOR_I18N_MAPPING = {
  "=": "equals",
  "!=": "not_equals",
  ">": "greater_than",
  ">=": "greater_than_equal",
  "<": "less_than",
  "<=": "less_than_equal",
  ":": "contains",
  "!:": "not_contains"
};
var PropertyFilter = import_react183.default.forwardRef((_a, ref) => {
  var _b;
  var { disabled, countText, query, hideOperations, onChange, filteringProperties, filteringOptions = [], customGroupsText = [], disableFreeTextFiltering = false, onLoadItems, virtualScroll, customControl, filteringEmpty, filteringLoadingText, filteringFinishedText, filteringErrorText, filteringRecoveryText, filteringStatusType, asyncProperties, tokenLimit, expandToViewport } = _a, rest = __rest(_a, ["disabled", "countText", "query", "hideOperations", "onChange", "filteringProperties", "filteringOptions", "customGroupsText", "disableFreeTextFiltering", "onLoadItems", "virtualScroll", "customControl", "filteringEmpty", "filteringLoadingText", "filteringFinishedText", "filteringErrorText", "filteringRecoveryText", "filteringStatusType", "asyncProperties", "tokenLimit", "expandToViewport"]);
  const { __internalRootRef } = useBaseComponent("PropertyFilter");
  const [removedTokenIndex, setRemovedTokenIndex] = (0, import_react183.useState)(null);
  const inputRef = (0, import_react183.useRef)(null);
  const baseProps = getBaseProps(rest);
  const i18n = useInternalI18n("property-filter");
  const i18nStrings = Object.assign(Object.assign({}, rest.i18nStrings), { allPropertiesLabel: i18n("i18nStrings.allPropertiesLabel", rest.i18nStrings.allPropertiesLabel), applyActionText: i18n("i18nStrings.applyActionText", rest.i18nStrings.applyActionText), cancelActionText: i18n("i18nStrings.cancelActionText", rest.i18nStrings.cancelActionText), clearFiltersText: i18n("i18nStrings.clearFiltersText", rest.i18nStrings.clearFiltersText), editTokenHeader: i18n("i18nStrings.editTokenHeader", rest.i18nStrings.editTokenHeader), groupPropertiesText: i18n("i18nStrings.groupPropertiesText", rest.i18nStrings.groupPropertiesText), groupValuesText: i18n("i18nStrings.groupValuesText", rest.i18nStrings.groupValuesText), operationAndText: i18n("i18nStrings.operationAndText", rest.i18nStrings.operationAndText), operationOrText: i18n("i18nStrings.operationOrText", rest.i18nStrings.operationOrText), operatorContainsText: i18n("i18nStrings.operatorContainsText", rest.i18nStrings.operatorContainsText), operatorDoesNotContainText: i18n("i18nStrings.operatorDoesNotContainText", rest.i18nStrings.operatorDoesNotContainText), operatorDoesNotEqualText: i18n("i18nStrings.operatorDoesNotEqualText", rest.i18nStrings.operatorDoesNotEqualText), operatorEqualsText: i18n("i18nStrings.operatorEqualsText", rest.i18nStrings.operatorEqualsText), operatorGreaterOrEqualText: i18n("i18nStrings.operatorGreaterOrEqualText", rest.i18nStrings.operatorGreaterOrEqualText), operatorGreaterText: i18n("i18nStrings.operatorGreaterText", rest.i18nStrings.operatorGreaterText), operatorLessOrEqualText: i18n("i18nStrings.operatorLessOrEqualText", rest.i18nStrings.operatorLessOrEqualText), operatorLessText: i18n("i18nStrings.operatorLessText", rest.i18nStrings.operatorLessText), operatorText: i18n("i18nStrings.operatorText", rest.i18nStrings.operatorText), operatorsText: i18n("i18nStrings.operatorsText", rest.i18nStrings.operatorsText), propertyText: i18n("i18nStrings.propertyText", rest.i18nStrings.propertyText), tokenLimitShowFewer: i18n("i18nStrings.tokenLimitShowFewer", rest.i18nStrings.tokenLimitShowFewer), tokenLimitShowMore: i18n("i18nStrings.tokenLimitShowMore", rest.i18nStrings.tokenLimitShowMore), valueText: i18n("i18nStrings.valueText", rest.i18nStrings.valueText), removeTokenButtonAriaLabel: i18n("i18nStrings.removeTokenButtonAriaLabel", rest.i18nStrings.removeTokenButtonAriaLabel, (format3) => (token) => {
    var _a2;
    return format3({
      token__operator: OPERATOR_I18N_MAPPING[token.operator],
      token__propertyKey: (_a2 = token.propertyKey) !== null && _a2 !== void 0 ? _a2 : "",
      token__value: token.value
    });
  }) });
  (0, import_react183.useImperativeHandle)(ref, () => ({ focus: () => {
    var _a2;
    return (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  } }), []);
  const { tokens, operation } = query;
  const showResults = !!(tokens === null || tokens === void 0 ? void 0 : tokens.length) && !disabled && !!countText;
  const { addToken, removeToken, setToken, setOperation, removeAllTokens } = getQueryActions(query, onChange, inputRef);
  const [filteringText, setFilteringText] = (0, import_react183.useState)("");
  const internalFilteringProperties = filteringProperties.map((property) => {
    var _a2, _b2, _c, _d, _e;
    const extendedOperators = ((_a2 = property.operators) !== null && _a2 !== void 0 ? _a2 : []).reduce((acc, operator) => typeof operator === "object" ? acc.set(operator.operator, operator) : acc, /* @__PURE__ */ new Map());
    return {
      propertyKey: property.key,
      propertyLabel: (_b2 = property.propertyLabel) !== null && _b2 !== void 0 ? _b2 : "",
      groupValuesLabel: (_c = property.groupValuesLabel) !== null && _c !== void 0 ? _c : "",
      propertyGroup: property.group,
      operators: ((_d = property.operators) !== null && _d !== void 0 ? _d : []).map((op) => typeof op === "string" ? op : op.operator),
      defaultOperator: (_e = property.defaultOperator) !== null && _e !== void 0 ? _e : "=",
      getValueFormatter: (operator) => {
        var _a3, _b3;
        return operator ? (_b3 = (_a3 = extendedOperators.get(operator)) === null || _a3 === void 0 ? void 0 : _a3.format) !== null && _b3 !== void 0 ? _b3 : null : null;
      },
      getValueFormRenderer: (operator) => {
        var _a3, _b3;
        return operator ? (_b3 = (_a3 = extendedOperators.get(operator)) === null || _a3 === void 0 ? void 0 : _a3.form) !== null && _b3 !== void 0 ? _b3 : null : null;
      },
      externalProperty: property
    };
  });
  const propertyByKey = new Map(internalFilteringProperties.map((p) => [p.propertyKey, p]));
  const internalFilteringOptions = filteringOptions.map((option) => {
    var _a2, _b2, _c;
    const formatter = (_a2 = propertyByKey.get(option.propertyKey)) === null || _a2 === void 0 ? void 0 : _a2.getValueFormatter();
    return {
      propertyKey: option.propertyKey,
      value: option.value,
      label: formatter ? formatter(option.value) : (_c = (_b2 = option.label) !== null && _b2 !== void 0 ? _b2 : option.value) !== null && _c !== void 0 ? _c : ""
    };
  });
  const parsedText = parseText(filteringText, internalFilteringProperties, disableFreeTextFiltering);
  const autosuggestOptions = getAutosuggestOptions(parsedText, internalFilteringOptions, internalFilteringProperties, customGroupsText, i18nStrings);
  const createToken = (currentText) => {
    const parsedText2 = parseText(currentText, internalFilteringProperties, disableFreeTextFiltering);
    let newToken;
    switch (parsedText2.step) {
      case "property": {
        newToken = matchTokenValue({
          propertyKey: parsedText2.property.propertyKey,
          operator: parsedText2.operator,
          value: parsedText2.value
        }, internalFilteringOptions);
        break;
      }
      case "free-text": {
        newToken = {
          operator: parsedText2.operator || ":",
          value: parsedText2.value
        };
        break;
      }
      case "operator": {
        newToken = {
          operator: ":",
          value: currentText
        };
        break;
      }
    }
    if (disableFreeTextFiltering && !("propertyKey" in newToken)) {
      return;
    }
    addToken(newToken);
    setFilteringText("");
  };
  const ignoreKeyDown = (0, import_react183.useRef)(false);
  const handleKeyDown = (event) => {
    if (filteringText && !ignoreKeyDown.current && event.detail.keyCode === KeyCode.enter) {
      createToken(filteringText);
    }
  };
  const getLoadMoreDetail = (parsedText2, filteringText2) => {
    const loadMoreDetail2 = {
      filteringProperty: void 0,
      filteringText: filteringText2,
      filteringOperator: void 0
    };
    if (parsedText2.step === "property") {
      loadMoreDetail2.filteringProperty = parsedText2.property.externalProperty;
      loadMoreDetail2.filteringText = parsedText2.value;
      loadMoreDetail2.filteringOperator = parsedText2.operator;
    }
    return loadMoreDetail2;
  };
  const loadMoreDetail = getLoadMoreDetail(parsedText, filteringText);
  const inputLoadItemsHandlers = useLoadItems2(onLoadItems, loadMoreDetail.filteringText, loadMoreDetail.filteringProperty, loadMoreDetail.filteringText, loadMoreDetail.filteringOperator);
  const asyncProps = {
    empty: filteringEmpty,
    loadingText: filteringLoadingText,
    finishedText: filteringFinishedText,
    errorText: filteringErrorText,
    recoveryText: filteringRecoveryText,
    statusType: filteringStatusType
  };
  const asyncAutosuggestProps = !!filteringText.length || asyncProperties ? Object.assign(Object.assign({}, inputLoadItemsHandlers), asyncProps) : {};
  const handleSelected = (event) => {
    ignoreKeyDown.current = true;
    setTimeout(() => {
      ignoreKeyDown.current = false;
    }, 0);
    const { detail: option } = event;
    const value = option.value || "";
    if (!("keepOpenOnSelect" in option)) {
      createToken(value);
      return;
    }
    event.preventDefault();
    const parsedText2 = parseText(value, internalFilteringProperties, disableFreeTextFiltering);
    const loadMoreDetail2 = getLoadMoreDetail(parsedText2, value);
    if (parsedText2.step === "operator") {
      const operators = getAllowedOperators(parsedText2.property);
      if (value.trim() === parsedText2.property.propertyLabel && operators.length === 1) {
        loadMoreDetail2.filteringProperty = parsedText2.property.externalProperty;
        loadMoreDetail2.filteringOperator = operators[0];
        loadMoreDetail2.filteringText = "";
        setFilteringText(parsedText2.property.propertyLabel + " " + operators[0] + " ");
      }
    }
    fireNonCancelableEvent(onLoadItems, Object.assign(Object.assign({}, loadMoreDetail2), { firstPage: true, samePage: false }));
  };
  const operatorForm = parsedText.step === "property" && parsedText.property.getValueFormRenderer(parsedText.operator);
  const searchResultsId = useUniqueId("property-filter-search-results");
  return import_react183.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default54.root), ref: __internalRootRef }),
    import_react183.default.createElement(
      "div",
      { className: styles_css_default54["search-field"] },
      customControl && import_react183.default.createElement("div", { className: styles_css_default54["custom-control"] }, customControl),
      import_react183.default.createElement(property_filter_autosuggest_default, Object.assign({ ref: inputRef, virtualScroll, enteredTextLabel: (_b = i18nStrings.enteredTextLabel) !== null && _b !== void 0 ? _b : (value) => value, ariaLabel: i18nStrings.filteringAriaLabel, placeholder: i18nStrings.filteringPlaceholder, ariaLabelledby: rest.ariaLabelledby, ariaDescribedby: rest.ariaDescribedby, controlId: rest.controlId, value: filteringText, disabled, onKeyDown: handleKeyDown }, autosuggestOptions, { onChange: (event) => setFilteringText(event.detail.value), empty: filteringEmpty }, asyncAutosuggestProps, { expandToViewport, onOptionClick: handleSelected, customForm: operatorForm && import_react183.default.createElement(PropertyEditor, { property: parsedText.property, operator: parsedText.operator, filter: parsedText.value, operatorForm, i18nStrings, onCancel: () => {
        var _a2, _b2;
        setFilteringText("");
        (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.close();
        (_b2 = inputRef.current) === null || _b2 === void 0 ? void 0 : _b2.focus({ preventDropdown: true });
      }, onSubmit: (token) => {
        var _a2, _b2;
        addToken(token);
        setFilteringText("");
        (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus({ preventDropdown: true });
        (_b2 = inputRef.current) === null || _b2 === void 0 ? void 0 : _b2.close();
      } }), hideEnteredTextOption: disableFreeTextFiltering && parsedText.step !== "property", clearAriaLabel: i18nStrings.clearAriaLabel, searchResultsId: showResults ? searchResultsId : void 0 })),
      showResults ? import_react183.default.createElement(SearchResults, { id: searchResultsId }, countText) : null
    ),
    tokens && tokens.length > 0 && import_react183.default.createElement(
      "div",
      { className: styles_css_default54.tokens },
      import_react183.default.createElement(
        InternalSpaceBetween,
        { size: "xs", direction: "horizontal" },
        import_react183.default.createElement(TokenList, { alignment: "inline", limit: tokenLimit, items: tokens, renderItem: (token, tokenIndex) => import_react183.default.createElement(TokenButton, { token, first: tokenIndex === 0, operation, removeToken: () => {
          removeToken(tokenIndex);
          setRemovedTokenIndex(tokenIndex);
        }, setToken: (newToken) => setToken(tokenIndex, newToken), setOperation, filteringOptions: internalFilteringOptions, filteringProperties: internalFilteringProperties, asyncProps, onLoadItems, i18nStrings, asyncProperties, hideOperations, customGroupsText, disableFreeTextFiltering, disabled, expandToViewport }), i18nStrings: {
          limitShowFewer: i18nStrings.tokenLimitShowFewer,
          limitShowMore: i18nStrings.tokenLimitShowMore
        }, after: import_react183.default.createElement(InternalButton, { onClick: removeAllTokens, className: styles_css_default54["remove-all"], disabled }, i18nStrings.clearFiltersText), removedItemIndex: removedTokenIndex })
      )
    )
  );
});
applyDisplayName(PropertyFilter, "PropertyFilter");
var property_filter_default = PropertyFilter;

// node_modules/@cloudscape-design/components/radio-group/index.js
var import_react184 = __toESM(require_react());
var RadioGroup = import_react184.default.forwardRef((props2, ref) => {
  const baseComponentProps = useBaseComponent("RadioGroup");
  return import_react184.default.createElement(internal_default7, Object.assign({ ref }, props2, baseComponentProps));
});
applyDisplayName(RadioGroup, "RadioGroup");
var radio_group_default = RadioGroup;

// node_modules/@cloudscape-design/components/s3-resource-selector/index.js
var import_react195 = __toESM(require_react());

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/index.js
var import_react187 = __toESM(require_react());

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/use-versions-fetch.js
var import_react185 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/utils/promises.js
var PromiseCancelledSignal = class {
};
function makeCancellable(promise) {
  let cancelled = false;
  const wrapped = promise.then((value) => {
    if (cancelled) {
      throw new PromiseCancelledSignal();
    }
    return value;
  }, (err) => {
    if (cancelled) {
      throw new PromiseCancelledSignal();
    }
    throw err;
  });
  return {
    promise: wrapped,
    cancel: () => {
      cancelled = true;
    },
    isCancelled: () => cancelled
  };
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/validation.js
var SCHEME = "s3://";
var BUCKET_FIRST_CHAR = /^[a-z0-9]{1}/;
var CAPITAL_LETTER = /[A-Z]/;
var DNS_NAME = /^(([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9-]*[a-z0-9])$/;
function checkBucketNameLength(bucketName) {
  return 3 <= bucketName.length && bucketName.length <= 63;
}
function extractBucketName(uri) {
  const [bucketName, ...rest] = uri.replace(SCHEME, "").split("/");
  return [bucketName, rest.join("/")];
}
function validate(uri) {
  if (uri === "") {
    return void 0;
  }
  if (uri.slice(0, SCHEME.length) !== SCHEME) {
    return "validationPathMustBegin";
  }
  const [bucketName] = extractBucketName(uri);
  if (!BUCKET_FIRST_CHAR.test(bucketName)) {
    return "validationBucketLowerCase";
  }
  if (CAPITAL_LETTER.test(bucketName)) {
    return "validationBucketMustNotContain";
  }
  if (!checkBucketNameLength(bucketName)) {
    return "validationBucketLength";
  }
  if (!DNS_NAME.test(bucketName)) {
    return "validationBucketMustComplyDns";
  }
  return void 0;
}
function getErrorText(i18n, i18nStrings, errorCode) {
  return errorCode ? i18n(`i18nStrings.${errorCode}`, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings[errorCode]) : void 0;
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/use-versions-fetch.js
function useVersionsFetch(fetchVersions) {
  const [loading, setLoading] = (0, import_react185.useState)(false);
  const [lastFetchedValue, setLastFetched] = (0, import_react185.useState)("");
  const [versions, setVersions] = (0, import_react185.useState)([]);
  const loadVersions = (uri) => {
    if (uri === lastFetchedValue) {
      return;
    }
    setLastFetched(uri);
    const errorCode = validate(uri);
    const [bucketName, prefix] = extractBucketName(uri);
    if (errorCode || !bucketName || !prefix || prefix.slice(-1) === "/") {
      return;
    }
    setLoading(true);
    const result = makeCancellable(fetchVersions(bucketName, prefix));
    result.promise.then((versions2) => {
      setLoading(false);
      setVersions(versions2.map((version) => ({
        value: version.VersionId,
        label: version.LastModified
      })));
    }, (err) => {
      if (!(err instanceof PromiseCancelledSignal)) {
        setLoading(false);
      }
    });
    return result;
  };
  return {
    loading,
    versions,
    resetVersions: () => setVersions([]),
    loadVersions: useStableEventHandler(loadVersions)
  };
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/styles.scoped.css";
var styles_css_default57 = {
  "root": "awsui_root_1vtzr_1kwdg_9",
  "view-button": "awsui_view-button_1vtzr_1kwdg_13",
  "browse-button": "awsui_browse-button_1vtzr_1kwdg_17",
  "layout": "awsui_layout_1vtzr_1kwdg_21",
  "layout-uri": "awsui_layout-uri_1vtzr_1kwdg_31",
  "layout-version": "awsui_layout-version_1vtzr_1kwdg_35",
  "layout-divider": "awsui_layout-divider_1vtzr_1kwdg_40"
};

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/search-input.js
var import_react186 = __toESM(require_react());
var SearchInput = import_react186.default.forwardRef((props2, ref) => {
  const formFieldContext = useFormFieldContext(props2);
  return import_react186.default.createElement(internal_default10, Object.assign({ type: "search" }, props2, formFieldContext, { ref }));
});

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-in-context/index.js
var S3InContext = import_react187.default.forwardRef(({ i18nStrings, resource, viewHref, invalid, inputAriaDescribedby, selectableItemsTypes, fetchVersions, onChange, onBrowse }, ref) => {
  const i18n = useInternalI18n("s3-resource-selector");
  const isInputBlurredRef = (0, import_react187.useRef)(true);
  const [isInputTouched, setInputTouched] = (0, import_react187.useState)(false);
  const { versions, loading, loadVersions, resetVersions } = useVersionsFetch(fetchVersions);
  const inputRef = (0, import_react187.useRef)(null);
  useForwardFocus(ref, inputRef);
  const uri = resource.uri;
  const supportsVersions = selectableItemsTypes && selectableItemsTypes.indexOf("versions") > -1;
  const selectedVersion = versions.filter((version) => version.value === resource.versionId)[0] || null;
  function handleUriChange(event) {
    const uri2 = event.detail.value;
    const errorCode = isInputTouched ? validate(uri2) : void 0;
    resetVersions();
    onChange({ uri: uri2 }, getErrorText(i18n, i18nStrings, errorCode));
  }
  function handleUriBlur() {
    isInputBlurredRef.current = true;
    setInputTouched(true);
    const errorCode = validate(resource.uri);
    onChange(resource, getErrorText(i18n, i18nStrings, errorCode));
    if (supportsVersions) {
      loadVersions(resource.uri);
    }
  }
  (0, import_react187.useEffect)(() => {
    var _a;
    if (!isInputBlurredRef.current || !supportsVersions) {
      return;
    }
    const { cancel } = (_a = loadVersions(uri)) !== null && _a !== void 0 ? _a : {};
    return cancel;
  }, [uri, supportsVersions, loadVersions]);
  return import_react187.default.createElement(
    "div",
    { className: styles_css_default57.root },
    import_react187.default.createElement(
      "div",
      { className: styles_css_default57.layout },
      import_react187.default.createElement(
        InternalFormField,
        { className: styles_css_default57["layout-uri"], label: i18n("i18nStrings.inContextUriLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextUriLabel), stretch: true },
        import_react187.default.createElement(SearchInput, { ref: inputRef, value: uri, ariaDescribedby: inputAriaDescribedby, clearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputClearAriaLabel, placeholder: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextInputPlaceholder, onChange: handleUriChange, invalid, onFocus: () => isInputBlurredRef.current = false, onBlur: handleUriBlur })
      ),
      supportsVersions && import_react187.default.createElement(
        InternalFormField,
        { className: styles_css_default57["layout-version"], label: i18n("i18nStrings.inContextVersionSelectLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextVersionSelectLabel), stretch: true },
        import_react187.default.createElement(internal_default14, { selectedOption: selectedVersion, placeholder: i18n("i18nStrings.inContextSelectPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextSelectPlaceholder), disabled: versions.length === 0, options: versions, onChange: (event) => onChange(Object.assign(Object.assign({}, resource), { versionId: event.detail.selectedOption.value }), void 0), invalid: false })
      ),
      import_react187.default.createElement(
        "div",
        null,
        import_react187.default.createElement(InternalButton, { className: styles_css_default57["view-button"], disabled: !viewHref, href: viewHref, target: "_blank", iconName: "external", iconAlign: "right", formAction: "none", ariaLabel: i18n("i18nStrings.inContextViewButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButtonAriaLabel) }, i18n("i18nStrings.inContextViewButton", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextViewButton))
      ),
      import_react187.default.createElement("div", { className: styles_css_default57["layout-divider"] }),
      import_react187.default.createElement(
        "div",
        null,
        import_react187.default.createElement(InternalButton, { className: styles_css_default57["browse-button"], disabled: loading, formAction: "none", onClick: onBrowse }, i18n("i18nStrings.inContextBrowseButton", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextBrowseButton))
      )
    ),
    import_react187.default.createElement("div", { role: "alert", "aria-live": "assertive", "aria-atomic": "true" }, loading && import_react187.default.createElement(
      InternalBox,
      { margin: { top: "s" } },
      import_react187.default.createElement(
        StatusIndicator,
        { type: "loading" },
        import_react187.default.createElement(live_region_default, { visible: true }, i18n("i18nStrings.inContextLoadingText", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.inContextLoadingText))
      )
    ))
  );
});

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/index.js
var import_react194 = __toESM(require_react());

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/buckets-table.js
var import_react191 = __toESM(require_react());

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/table-utils.js
function includes(array, item) {
  return !!array && array.indexOf(item) > -1;
}
var compareDates = (itemA, itemB) => {
  const timeA = itemA ? new Date(itemA).getTime() : 0;
  const timeB = itemB ? new Date(itemB).getTime() : 0;
  return timeA - timeB;
};
function getColumnAriaLabel(i18n, i18nStrings, columnName = "") {
  return ({ sorted, descending: descending2 }) => {
    var _a, _b, _c, _d, _e, _f;
    if (!sorted) {
      return (_b = i18n("i18nStrings.labelNotSorted", (_a = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelNotSorted) === null || _a === void 0 ? void 0 : _a.call(i18nStrings, columnName), (format3) => format3({ columnName }))) !== null && _b !== void 0 ? _b : "";
    }
    if (descending2) {
      return (_d = i18n("i18nStrings.labelSortedDescending", (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelSortedDescending) === null || _c === void 0 ? void 0 : _c.call(i18nStrings, columnName), (format3) => format3({ columnName }))) !== null && _d !== void 0 ? _d : "";
    }
    return (_f = i18n("i18nStrings.labelSortedAscending", (_e = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelSortedAscending) === null || _e === void 0 ? void 0 : _e.call(i18nStrings, columnName), (format3) => format3({ columnName }))) !== null && _f !== void 0 ? _f : "";
  };
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/column-formats.js
var BYTES_BASE = 1024;
var BYTES_DECIMALS = 2;
var BYTES_SIZES = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
function formatDefault(value) {
  return value ? value : "-";
}
function formatSize(bytes) {
  if (bytes === void 0) {
    return "-";
  }
  if (bytes === 0) {
    return `0 ${BYTES_SIZES[0]}`;
  }
  const i = Math.floor(Math.log(bytes) / Math.log(BYTES_BASE));
  return parseFloat((bytes / Math.pow(BYTES_BASE, i)).toFixed(BYTES_DECIMALS)) + " " + BYTES_SIZES[i];
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/basic-table.js
var import_react190 = __toESM(require_react());

// node_modules/@cloudscape-design/components/text-filter/internal.js
var import_react188 = __toESM(require_react());
var InternalTextFilter = import_react188.default.forwardRef((_a, ref) => {
  var { filteringText, filteringAriaLabel, filteringPlaceholder, filteringClearAriaLabel, controlId, ariaLabelledby, ariaDescribedby, disabled, countText, onChange, onDelayedChange, __internalRootRef } = _a, rest = __rest(_a, ["filteringText", "filteringAriaLabel", "filteringPlaceholder", "filteringClearAriaLabel", "controlId", "ariaLabelledby", "ariaDescribedby", "disabled", "countText", "onChange", "onDelayedChange", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const inputRef = (0, import_react188.useRef)(null);
  useForwardFocus(ref, inputRef);
  const searchResultsId = useUniqueId("text-filter-search-results");
  const showResults = filteringText && countText && !disabled;
  return import_react188.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default56.root), ref: __internalRootRef }),
    import_react188.default.createElement(internal_default10, { __inheritFormFieldProps: true, ref: inputRef, className: styles_css_default56.input, type: "search", ariaLabel: filteringAriaLabel, placeholder: filteringPlaceholder, value: filteringText, disabled, controlId, ariaLabelledby, ariaDescribedby: joinStrings(showResults ? searchResultsId : void 0, ariaDescribedby), autoComplete: false, clearAriaLabel: filteringClearAriaLabel, onChange: (event) => fireNonCancelableEvent(onChange, { filteringText: event.detail.value }), __onDelayedInput: (event) => fireNonCancelableEvent(onDelayedChange, { filteringText: event.detail.value }) }),
    showResults ? import_react188.default.createElement(SearchResults, { id: searchResultsId }, countText) : null
  );
});
var internal_default19 = InternalTextFilter;

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/empty-state.js
var import_react189 = __toESM(require_react());
function EmptyState({ title, subtitle, action }) {
  return import_react189.default.createElement(
    InternalBox,
    { textAlign: "center", color: "inherit" },
    import_react189.default.createElement(InternalBox, { variant: "strong", textAlign: "center", color: "inherit" }, title),
    import_react189.default.createElement(InternalBox, { variant: "p", padding: { bottom: "s" }, color: "inherit" }, subtitle),
    action
  );
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/basic-table.js
function getSharedI18Strings(i18n, i18nStrings) {
  return {
    filteringCounterText: i18n("i18nStrings.filteringCounterText", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringCounterText, (format3) => (count) => format3({ count })),
    labelRefresh: i18n("i18nStrings.labelRefresh", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelRefresh),
    labelsPagination: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsPagination,
    noMatchTitle: i18n("i18nStrings.filteringNoMatches", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringNoMatches),
    noMatchSubtitle: i18n("i18nStrings.filteringCantFindMatch", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filteringCantFindMatch),
    clearFilterButtonText: i18n("i18nStrings.clearFilterButtonText", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearFilterButtonText),
    filteringClearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelClearFilter
  };
}
function BasicS3Table({ forwardFocusRef, columnDefinitions, fetchData, trackBy, i18nStrings = {}, isVisualRefresh, visibleColumns, isItemDisabled, onSelect }) {
  var _a;
  const [loading, setLoading] = (0, import_react190.useState)(false);
  const [allItems, setAllItems] = (0, import_react190.useState)([]);
  const textFilterRef = (0, import_react190.useRef)(null);
  const onSelectLatest = useStableEventHandler(onSelect);
  function loadData() {
    setLoading(true);
    fetchData().then((items2) => {
      setAllItems(items2);
      setLoading(false);
    }).catch(() => {
      setLoading(false);
    });
  }
  (0, import_react190.useEffect)(() => {
    loadData();
  }, []);
  useForwardFocus(forwardFocusRef, textFilterRef);
  const { items, filteredItemsCount, collectionProps, filterProps, paginationProps, actions } = useCollection(allItems, {
    selection: { trackBy },
    filtering: {
      empty: i18nStrings.emptyText,
      noMatch: import_react190.default.createElement(EmptyState, { title: i18nStrings.noMatchTitle, subtitle: i18nStrings.noMatchSubtitle, action: import_react190.default.createElement(InternalButton, { onClick: () => actions.setFiltering("") }, i18nStrings.clearFilterButtonText) })
    },
    pagination: {},
    sorting: {}
  });
  const selectedItem = (_a = collectionProps.selectedItems) === null || _a === void 0 ? void 0 : _a[0];
  (0, import_react190.useEffect)(() => {
    onSelectLatest(selectedItem);
  }, [selectedItem, onSelectLatest]);
  return import_react190.default.createElement(internal_default9, Object.assign({ variant: isVisualRefresh ? "borderless" : "container" }, collectionProps, { header: import_react190.default.createElement(InternalHeader, { variant: isVisualRefresh ? "h3" : "h2", headingTagOverride: "h3", actions: import_react190.default.createElement(InternalButton, { iconName: "refresh", ariaLabel: i18nStrings.labelRefresh, onClick: loadData }), counter: selectedItem ? `(1/${allItems.length})` : `(${allItems.length})` }, i18nStrings.header), trackBy, filter: import_react190.default.createElement(internal_default19, Object.assign({}, filterProps, { ref: textFilterRef, filteringAriaLabel: i18nStrings.filteringAriaLabel, filteringClearAriaLabel: i18nStrings.filteringClearAriaLabel, filteringPlaceholder: i18nStrings.filteringPlaceholder, countText: i18nStrings.filteringCounterText ? i18nStrings.filteringCounterText(filteredItemsCount) : "" })), pagination: import_react190.default.createElement(InternalPagination, Object.assign({}, paginationProps, { ariaLabels: i18nStrings.labelsPagination })), selectionType: "single", ariaLabels: i18nStrings.selectionLabels, loading, loadingText: i18nStrings.loadingText, items, visibleColumns, isItemDisabled, columnDefinitions }));
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/buckets-table.js
function BucketsTable({ forwardFocusRef, i18nStrings, isVisualRefresh, isItemDisabled, selectableItemsTypes, fetchData, visibleColumns, onDrilldown, onSelect }) {
  var _a, _b, _c, _d;
  const i18n = useInternalI18n("s3-resource-selector");
  return import_react191.default.createElement(BasicS3Table, { forwardFocusRef, trackBy: "Name", fetchData, visibleColumns, isItemDisabled: isItemDisabled || (() => !includes(selectableItemsTypes, "buckets")), i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), { header: i18n("i18nStrings.selectionBuckets", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets), loadingText: i18n("i18nStrings.selectionBucketsLoading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsLoading), filteringAriaLabel: (_a = i18n("i18nStrings.labelFiltering", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, (format3) => (itemsType) => format3({ itemsType }))) === null || _a === void 0 ? void 0 : _a((_b = i18n("i18nStrings.selectionBuckets", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBuckets)) !== null && _b !== void 0 ? _b : ""), filteringPlaceholder: i18n("i18nStrings.selectionBucketsSearchPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsSearchPlaceholder), emptyText: i18n("i18nStrings.selectionBucketsNoItems", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionBucketsNoItems), selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection), { selectionGroupLabel: i18n("i18nStrings.labelsBucketsSelection.selectionGroupLabel", (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel), itemSelectionLabel: i18n("i18nStrings.labelsBucketsSelection.itemSelectionLabel", (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsBucketsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, (format3) => (data, item) => {
    var _a2;
    return format3({ item__Name: (_a2 = item.Name) !== null && _a2 !== void 0 ? _a2 : "" });
  }) }) }), isVisualRefresh, columnDefinitions: [
    {
      id: "Name",
      header: i18n("i18nStrings.columnBucketName", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName),
      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnBucketName", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketName)),
      sortingField: "Name",
      cell: (item) => {
        const isClickable = includes(selectableItemsTypes, "objects") || includes(selectableItemsTypes, "versions");
        return isClickable ? import_react191.default.createElement(internal_default4, { onFollow: () => item.Name && onDrilldown(item.Name), variant: "link" }, item.Name) : item.Name;
      },
      minWidth: "250px"
    },
    {
      id: "CreationDate",
      header: i18n("i18nStrings.columnBucketCreationDate", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate),
      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnBucketCreationDate", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketCreationDate)),
      sortingComparator: (a2, b) => compareDates(a2.CreationDate, b.CreationDate),
      cell: (item) => formatDefault(item.CreationDate)
    },
    {
      id: "Region",
      header: i18n("i18nStrings.columnBucketRegion", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion),
      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnBucketRegion", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnBucketRegion)),
      sortingField: "Region",
      cell: (item) => formatDefault(item.Region),
      minWidth: "150px"
    }
  ], onSelect: (item) => {
    var _a2;
    return onSelect((_a2 = item === null || item === void 0 ? void 0 : item.Name) !== null && _a2 !== void 0 ? _a2 : "");
  } });
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/objects-table.js
var import_react192 = __toESM(require_react());

// node_modules/@cloudscape-design/components/s3-resource-selector/utils.js
function joinObjectPath(segments) {
  return segments.reduce((prev, next) => {
    if (prev && prev[prev.length - 1] !== "/") {
      prev = prev + "/";
    }
    return prev + next;
  }, "");
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/objects-table.js
function ObjectsTable({ forwardFocusRef, pathSegments, i18nStrings, isVisualRefresh, isItemDisabled, selectableItemsTypes, fetchData, visibleColumns, onDrilldown, onSelect }) {
  var _a, _b, _c, _d;
  const i18n = useInternalI18n("s3-resource-selector");
  return import_react192.default.createElement(BasicS3Table, {
    key: pathSegments.join("/"),
    forwardFocusRef,
    trackBy: "Key",
    fetchData: () => {
      const [bucketName, ...rest] = pathSegments;
      return fetchData(bucketName, joinObjectPath(rest));
    },
    i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), { header: i18n("i18nStrings.selectionObjects", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects), loadingText: i18n("i18nStrings.selectionObjectsLoading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsLoading), filteringAriaLabel: (_a = i18n("i18nStrings.labelFiltering", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, (format3) => (itemsType) => format3({ itemsType }))) === null || _a === void 0 ? void 0 : _a((_b = i18n("i18nStrings.selectionObjects", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjects)) !== null && _b !== void 0 ? _b : ""), filteringPlaceholder: i18n("i18nStrings.selectionObjectsSearchPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsSearchPlaceholder), emptyText: i18n("i18nStrings.selectionObjectsNoItems", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionObjectsNoItems), selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection), { selectionGroupLabel: i18n("i18nStrings.labelsObjectsSelection.selectionGroupLabel", (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel), itemSelectionLabel: i18n("i18nStrings.labelsObjectsSelection.itemSelectionLabel", (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsObjectsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, (format3) => (data, item) => {
      var _a2;
      return format3({ item__Key: (_a2 = item.Key) !== null && _a2 !== void 0 ? _a2 : "" });
    }) }) }),
    isVisualRefresh,
    visibleColumns,
    isItemDisabled: isItemDisabled || (() => !includes(selectableItemsTypes, "objects")),
    columnDefinitions: [
      {
        id: "Key",
        header: i18n("i18nStrings.columnObjectKey", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey),
        ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnObjectKey", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectKey)),
        sortingField: "Key",
        cell: (item) => {
          const isClickable = item.IsFolder || includes(selectableItemsTypes, "versions");
          return import_react192.default.createElement(
            import_react192.default.Fragment,
            null,
            import_react192.default.createElement(internal_default, { name: item.IsFolder ? "folder" : "file" }),
            " ",
            isClickable ? import_react192.default.createElement(internal_default4, { onFollow: () => item.Key && onDrilldown(item), variant: "link" }, item.Key) : item.Key
          );
        },
        minWidth: "250px"
      },
      {
        id: "LastModified",
        header: i18n("i18nStrings.columnObjectLastModified", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified),
        ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnObjectLastModified", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectLastModified)),
        sortingComparator: (a2, b) => compareDates(a2.LastModified, b.LastModified),
        cell: (item) => formatDefault(item.LastModified)
      },
      {
        id: "Size",
        header: i18n("i18nStrings.columnObjectSize", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize),
        ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnObjectSize", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnObjectSize)),
        sortingField: "Size",
        cell: (item) => formatSize(item.Size)
      }
    ],
    onSelect: (item) => {
      var _a2;
      return onSelect((_a2 = item === null || item === void 0 ? void 0 : item.Key) !== null && _a2 !== void 0 ? _a2 : "");
    }
  });
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/versions-table.js
var import_react193 = __toESM(require_react());
function VersionsTable({ forwardFocusRef, pathSegments, i18nStrings, isVisualRefresh, isItemDisabled, fetchData, visibleColumns, onSelect }) {
  var _a, _b, _c, _d;
  const i18n = useInternalI18n("s3-resource-selector");
  return import_react193.default.createElement(BasicS3Table, { forwardFocusRef, trackBy: "VersionId", fetchData: () => {
    const [bucketName, ...rest] = pathSegments;
    return fetchData(bucketName, joinObjectPath(rest));
  }, i18nStrings: Object.assign(Object.assign({}, getSharedI18Strings(i18n, i18nStrings)), { header: i18n("i18nStrings.selectionVersions", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions), loadingText: i18n("i18nStrings.selectionVersionsLoading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsLoading), filteringAriaLabel: (_a = i18n("i18nStrings.labelFiltering", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelFiltering, (format3) => (itemsType) => format3({ itemsType }))) === null || _a === void 0 ? void 0 : _a((_b = i18n("i18nStrings.selectionVersions", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersions)) !== null && _b !== void 0 ? _b : ""), filteringPlaceholder: i18n("i18nStrings.selectionVersionsSearchPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsSearchPlaceholder), emptyText: i18n("i18nStrings.selectionVersionsNoItems", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.selectionVersionsNoItems), selectionLabels: Object.assign(Object.assign({}, i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection), { selectionGroupLabel: i18n("i18nStrings.labelsVersionsSelection.selectionGroupLabel", (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection) === null || _c === void 0 ? void 0 : _c.selectionGroupLabel), itemSelectionLabel: i18n("i18nStrings.labelsVersionsSelection.itemSelectionLabel", (_d = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelsVersionsSelection) === null || _d === void 0 ? void 0 : _d.itemSelectionLabel, (format3) => (data, item) => {
    var _a2;
    return format3({ item__VersionId: (_a2 = item.VersionId) !== null && _a2 !== void 0 ? _a2 : "" });
  }) }) }), isVisualRefresh, visibleColumns, isItemDisabled, columnDefinitions: [
    {
      id: "ID",
      header: i18n("i18nStrings.columnVersionID", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID),
      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnVersionID", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionID)),
      sortingField: "VersionId",
      cell: (item) => item.VersionId,
      minWidth: "250px"
    },
    {
      id: "LastModified",
      header: i18n("i18nStrings.columnVersionLastModified", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified),
      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnVersionLastModified", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionLastModified)),
      sortingComparator: (a2, b) => compareDates(a2.LastModified, b.LastModified),
      cell: (item) => formatDefault(item.LastModified)
    },
    {
      id: "Size",
      header: i18n("i18nStrings.columnVersionSize", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize),
      ariaLabel: getColumnAriaLabel(i18n, i18nStrings, i18n("i18nStrings.columnVersionSize", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.columnVersionSize)),
      sortingField: "Size",
      cell: (item) => formatSize(item.Size)
    }
  ], onSelect: (item) => {
    var _a2;
    return onSelect((_a2 = item === null || item === void 0 ? void 0 : item.VersionId) !== null && _a2 !== void 0 ? _a2 : "");
  } });
}

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/styles.scoped.css";
var styles_css_default58 = {
  "modal-actions": "awsui_modal-actions_12hyz_1p88p_5",
  "submit-button": "awsui_submit-button_12hyz_1p88p_9"
};

// node_modules/@cloudscape-design/components/s3-resource-selector/s3-modal/index.js
function assertNever(_value) {
  return null;
}
var initialBrowseState = {
  selectedItem: null,
  currentView: "buckets",
  breadcrumbs: []
};
function s3BrowseReducer(state, action) {
  switch (action.type) {
    case "browse-buckets":
      return initialBrowseState;
    case "browse-objects":
      return {
        selectedItem: null,
        currentView: "objects",
        breadcrumbs: action.breadcrumbs
      };
    case "browse-versions":
      return {
        selectedItem: null,
        currentView: "versions",
        breadcrumbs: action.breadcrumbs
      };
    case "select-item":
      return Object.assign(Object.assign({}, state), { selectedItem: action.item });
    default:
      assertNever(action);
  }
  return state;
}
function createResourceInfo({ currentView, breadcrumbs, selectedItem }) {
  const prefix = "s3://";
  if (currentView === "versions") {
    return { uri: prefix + joinObjectPath(breadcrumbs), versionId: selectedItem !== null && selectedItem !== void 0 ? selectedItem : void 0 };
  }
  return { uri: prefix + joinObjectPath([...breadcrumbs, selectedItem]) };
}
function S3Modal({ i18nStrings, alert, selectableItemsTypes, fetchBuckets, bucketsVisibleColumns, bucketsIsItemDisabled, fetchObjects, objectsVisibleColumns, objectsIsItemDisabled, fetchVersions, versionsVisibleColumns, versionsIsItemDisabled, onSubmit, onDismiss }) {
  var _a;
  const [{ currentView, breadcrumbs, selectedItem }, dispatch] = (0, import_react194.useReducer)(s3BrowseReducer, initialBrowseState);
  const forwardFocusRef = (0, import_react194.useRef)(null);
  const i18n = useInternalI18n("s3-resource-selector");
  const isVisualRefresh = useVisualRefresh();
  useEffectOnUpdate(() => {
    var _a2;
    (_a2 = forwardFocusRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
  }, [breadcrumbs]);
  return import_react194.default.createElement(
    "div",
    null,
    import_react194.default.createElement(
      InternalModal,
      { visible: true, size: "max", closeAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelModalDismiss, onDismiss, header: i18n("i18nStrings.modalTitle", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalTitle), footer: import_react194.default.createElement(
        InternalSpaceBetween,
        { className: styles_css_default58["modal-actions"], size: "xs", direction: "horizontal" },
        import_react194.default.createElement(InternalButton, { variant: "link", formAction: "none", onClick: onDismiss }, i18n("i18nStrings.modalCancelButton", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalCancelButton)),
        import_react194.default.createElement(InternalButton, { variant: "primary", className: styles_css_default58["submit-button"], disabled: !selectedItem, formAction: "none", onClick: () => onSubmit(createResourceInfo({ currentView, breadcrumbs, selectedItem })) }, i18n("i18nStrings.modalSubmitButton", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalSubmitButton))
      ) },
      import_react194.default.createElement(
        InternalSpaceBetween,
        { size: isVisualRefresh ? "xxs" : "xs" },
        import_react194.default.createElement(InternalBreadcrumbGroup, { ariaLabel: i18n("i18nStrings.labelBreadcrumbs", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelBreadcrumbs), expandAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.labelExpandBreadcrumbs, onFollow: (event) => {
          event.preventDefault();
          event.detail.item.meta.onClick();
        }, items: [
          {
            text: (_a = i18n("i18nStrings.modalBreadcrumbRootItem", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.modalBreadcrumbRootItem)) !== null && _a !== void 0 ? _a : "",
            href: "",
            meta: { onClick: () => dispatch({ type: "browse-buckets" }) }
          },
          ...breadcrumbs.map((segment, index) => ({
            text: segment,
            href: "",
            meta: {
              onClick: () => dispatch({
                type: "browse-objects",
                breadcrumbs: breadcrumbs.slice(0, index + 1)
              })
            }
          }))
        ] }),
        alert,
        currentView === "buckets" ? import_react194.default.createElement(BucketsTable, { forwardFocusRef, fetchData: fetchBuckets, visibleColumns: bucketsVisibleColumns, isItemDisabled: bucketsIsItemDisabled, selectableItemsTypes, i18nStrings, isVisualRefresh, onDrilldown: (path2) => dispatch({
          type: "browse-objects",
          breadcrumbs: [path2]
        }), onSelect: (item) => dispatch({ type: "select-item", item }) }) : currentView === "objects" ? import_react194.default.createElement(ObjectsTable, { forwardFocusRef, pathSegments: breadcrumbs, fetchData: fetchObjects, visibleColumns: objectsVisibleColumns, isItemDisabled: objectsIsItemDisabled, selectableItemsTypes, i18nStrings, isVisualRefresh, onDrilldown: (item) => {
          dispatch({
            type: item.IsFolder ? "browse-objects" : "browse-versions",
            breadcrumbs: [...breadcrumbs, item.Key]
          });
        }, onSelect: (item) => dispatch({ type: "select-item", item }) }) : currentView === "versions" ? import_react194.default.createElement(VersionsTable, { forwardFocusRef, pathSegments: breadcrumbs, fetchData: fetchVersions, visibleColumns: versionsVisibleColumns, isItemDisabled: versionsIsItemDisabled, i18nStrings, isVisualRefresh, onSelect: (item) => dispatch({ type: "select-item", item }) }) : assertNever(currentView)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/s3-resource-selector/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/s3-resource-selector/styles.scoped.css";
var styles_css_default59 = {
  "root": "awsui_root_1u0yw_rfo7y_5",
  "alert": "awsui_alert_1u0yw_rfo7y_9"
};

// node_modules/@cloudscape-design/components/s3-resource-selector/index.js
var S3ResourceSelector = import_react195.default.forwardRef((_a, ref) => {
  var { i18nStrings, alert, resource, viewHref, invalid, selectableItemsTypes = [], inputAriaDescribedby, bucketsVisibleColumns = ["Name", "CreationDate"], bucketsIsItemDisabled, fetchBuckets, fetchObjects, objectsVisibleColumns = ["Key", "LastModified", "Size"], objectsIsItemDisabled, fetchVersions, versionsVisibleColumns = ["ID", "LastModified", "Size"], versionsIsItemDisabled, onChange, ariaLabel } = _a, rest = __rest(_a, ["i18nStrings", "alert", "resource", "viewHref", "invalid", "selectableItemsTypes", "inputAriaDescribedby", "bucketsVisibleColumns", "bucketsIsItemDisabled", "fetchBuckets", "fetchObjects", "objectsVisibleColumns", "objectsIsItemDisabled", "fetchVersions", "versionsVisibleColumns", "versionsIsItemDisabled", "onChange", "ariaLabel"]);
  checkSafeUrl("S3ResourceSelector", viewHref);
  const { __internalRootRef } = useBaseComponent("S3ResourceSelector");
  const [modalOpen, setModalOpen] = (0, import_react195.useState)(false);
  const inContextRef = (0, import_react195.useRef)(null);
  const modalWasSubmitted = (0, import_react195.useRef)(false);
  useForwardFocus(ref, inContextRef);
  const { ariaLabelledby, ariaDescribedby } = useFormFieldContext(rest);
  (0, import_react195.useEffect)(() => {
    var _a2;
    if (!modalOpen && modalWasSubmitted.current) {
      modalWasSubmitted.current = false;
      (_a2 = inContextRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  }, [modalOpen]);
  const baseProps = getBaseProps(rest);
  const modalProps = {
    alert,
    i18nStrings,
    fetchBuckets,
    selectableItemsTypes,
    bucketsVisibleColumns,
    bucketsIsItemDisabled,
    fetchObjects,
    objectsVisibleColumns,
    objectsIsItemDisabled,
    fetchVersions,
    versionsVisibleColumns,
    versionsIsItemDisabled,
    onSubmit: (resource2) => {
      fireNonCancelableEvent(onChange, { resource: resource2 });
      setModalOpen(false);
      modalWasSubmitted.current = true;
    },
    onDismiss: () => setModalOpen(false)
  };
  return import_react195.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default59.root, baseProps.className), ref: __internalRootRef, role: "group", "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "aria-label": ariaLabel }),
    import_react195.default.createElement(S3InContext, { ref: inContextRef, selectableItemsTypes, i18nStrings, resource, viewHref, invalid, inputAriaDescribedby, fetchVersions, onBrowse: () => setModalOpen(true), onChange: (resource2, errorText) => fireNonCancelableEvent(onChange, { resource: resource2, errorText }) }),
    !modalOpen && alert && import_react195.default.createElement(InternalBox, { className: styles_css_default59.alert, margin: { top: "s" } }, alert),
    modalOpen && import_react195.default.createElement(S3Modal, Object.assign({}, modalProps))
  );
});
applyDisplayName(S3ResourceSelector, "S3ResourceSelector");
var s3_resource_selector_default = S3ResourceSelector;

// node_modules/@cloudscape-design/components/segmented-control/index.js
var import_react196 = __toESM(require_react());
function SegmentedControl(props2) {
  const baseComponentProps = useBaseComponent("SegmentedControl");
  return import_react196.default.createElement(InternalSegmentedControl2, Object.assign({}, props2, baseComponentProps));
}
applyDisplayName(SegmentedControl, "SegmentedControl");

// node_modules/@cloudscape-design/components/select/index.js
var import_react197 = __toESM(require_react());
var Select = import_react197.default.forwardRef((_a, ref) => {
  var { options = [], filteringType = "none", statusType = "finished", triggerVariant = "label" } = _a, restProps = __rest(_a, ["options", "filteringType", "statusType", "triggerVariant"]);
  const baseComponentProps = useBaseComponent("Select");
  const externalProps = getExternalProps(restProps);
  return import_react197.default.createElement(internal_default14, Object.assign({ options, filteringType, statusType, triggerVariant }, externalProps, baseComponentProps, { ref }));
});
applyDisplayName(Select, "Select");
var select_default = Select;

// node_modules/@cloudscape-design/components/spinner/index.js
var import_react198 = __toESM(require_react());
function Spinner(_a) {
  var { size = "normal", variant = "normal" } = _a, props2 = __rest(_a, ["size", "variant"]);
  const baseComponentProps = useBaseComponent("Spinner");
  return import_react198.default.createElement(InternalSpinner, Object.assign({ size, variant }, props2, baseComponentProps));
}
applyDisplayName(Spinner, "Spinner");

// node_modules/@cloudscape-design/components/split-panel/index.js
var import_react208 = __toESM(require_react());

// node_modules/@cloudscape-design/components/split-panel/preferences-modal.js
var import_react205 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tiles/internal.js
var import_react200 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tiles/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/tiles/styles.scoped.css";
var styles_css_default60 = {
  "column-layout": "awsui_column-layout_vj6p7_b3hrm_93",
  "grid": "awsui_grid_vj6p7_b3hrm_106",
  "grid-no-gutters": "awsui_grid-no-gutters_vj6p7_b3hrm_111",
  "grid-variant-text-grid": "awsui_grid-variant-text-grid_vj6p7_b3hrm_114",
  "grid-breakpoint-default": "awsui_grid-breakpoint-default_vj6p7_b3hrm_121",
  "grid-columns-1": "awsui_grid-columns-1_vj6p7_b3hrm_124",
  "grid-breakpoint-xxs": "awsui_grid-breakpoint-xxs_vj6p7_b3hrm_124",
  "grid-breakpoint-xs": "awsui_grid-breakpoint-xs_vj6p7_b3hrm_127",
  "grid-columns-2": "awsui_grid-columns-2_vj6p7_b3hrm_130",
  "grid-columns-3": "awsui_grid-columns-3_vj6p7_b3hrm_136",
  "grid-columns-4": "awsui_grid-columns-4_vj6p7_b3hrm_142",
  "grid-vertical-borders": "awsui_grid-vertical-borders_vj6p7_b3hrm_155",
  "grid-horizontal-borders": "awsui_grid-horizontal-borders_vj6p7_b3hrm_188",
  "root": "awsui_root_vj6p7_b3hrm_242",
  "tile-container": "awsui_tile-container_vj6p7_b3hrm_259",
  "has-metadata": "awsui_has-metadata_vj6p7_b3hrm_269",
  "selected": "awsui_selected_vj6p7_b3hrm_272",
  "disabled": "awsui_disabled_vj6p7_b3hrm_276",
  "columns": "awsui_columns_vj6p7_b3hrm_291",
  "column-1": "awsui_column-1_vj6p7_b3hrm_296",
  "breakpoint-xs": "awsui_breakpoint-xs_vj6p7_b3hrm_303",
  "breakpoint-xxs": "awsui_breakpoint-xxs_vj6p7_b3hrm_308",
  "column-2": "awsui_column-2_vj6p7_b3hrm_313",
  "column-3": "awsui_column-3_vj6p7_b3hrm_330",
  "column-4": "awsui_column-4_vj6p7_b3hrm_347",
  "control": "awsui_control_vj6p7_b3hrm_365",
  "no-image": "awsui_no-image_vj6p7_b3hrm_369",
  "image": "awsui_image_vj6p7_b3hrm_373"
};

// node_modules/@cloudscape-design/components/tiles/tile.js
var import_react199 = __toESM(require_react());
var Tile = import_react199.default.forwardRef(({ item, selected, name, breakpoint, onChange }, forwardedRef) => {
  const internalRef = (0, import_react199.useRef)(null);
  const controlId = item.controlId || `${name}-value-${item.value}`;
  const mergedRef = useMergeRefs(internalRef, forwardedRef);
  return import_react199.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default60["tile-container"], { [styles_css_default60["has-metadata"]]: item.description || item.image }, { [styles_css_default60.selected]: selected }, { [styles_css_default60.disabled]: !!item.disabled }, styles_css_default60[`breakpoint-${breakpoint}`]), "data-value": item.value, onClick: () => {
      var _a;
      if (item.disabled) {
        return;
      }
      (_a = internalRef.current) === null || _a === void 0 ? void 0 : _a.focus();
      if (!selected) {
        fireNonCancelableEvent(onChange, { value: item.value });
      }
    } },
    import_react199.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default60.control, { [styles_css_default60["no-image"]]: !item.image }) },
      import_react199.default.createElement(radio_button_default, { checked: selected, ref: mergedRef, name, value: item.value, label: item.label, description: item.description, disabled: item.disabled, controlId })
    ),
    item.image && import_react199.default.createElement("div", { className: clsx_m_default(styles_css_default60.image, { [styles_css_default60.disabled]: !!item.disabled }) }, item.image)
  );
});

// node_modules/@cloudscape-design/components/tiles/internal.js
var COLUMN_TRIGGERS = ["default", "xxs", "xs"];
var InternalTiles = import_react200.default.forwardRef((_a, ref) => {
  var { name, value, items, ariaLabel, ariaRequired, ariaControls, columns, onChange, __internalRootRef = null } = _a, rest = __rest(_a, ["name", "value", "items", "ariaLabel", "ariaRequired", "ariaControls", "columns", "onChange", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const { ariaDescribedby, ariaLabelledby } = useFormFieldContext(rest);
  const generatedName = useUniqueId("awsui-tiles-");
  const [tileRef, tileRefIndex] = useRadioGroupForwardFocus(ref, items, value);
  const [breakpoint, breakpointRef] = useContainerBreakpoints(COLUMN_TRIGGERS);
  const mergedRef = useMergeRefs(breakpointRef, __internalRootRef);
  const columnCount = getColumnCount(items, columns);
  return import_react200.default.createElement(
    "div",
    Object.assign({ role: "radiogroup", "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, "aria-describedby": ariaDescribedby, "aria-required": ariaRequired, "aria-controls": ariaControls }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default60.root), ref: mergedRef }),
    import_react200.default.createElement("div", { className: clsx_m_default(styles_css_default60.columns, styles_css_default60[`column-${columnCount}`]) }, items && items.map((item, index) => import_react200.default.createElement(Tile, { ref: index === tileRefIndex ? tileRef : void 0, key: item.value, item, selected: item.value === value, name: name || generatedName, breakpoint, onChange })))
  );
});
function getColumnCount(items, columns) {
  if (columns) {
    return columns;
  }
  const nItems = items ? items.length : 0;
  const columnsLookup = {
    0: 1,
    1: 1,
    2: 2,
    4: 2,
    8: 2
  };
  return columnsLookup[nItems] || 3;
}
var internal_default20 = InternalTiles;

// node_modules/@cloudscape-design/components/split-panel/icons/side-position.js
var import_react201 = __toESM(require_react());
var sidePositionIcon = import_react201.default.createElement(
  "svg",
  { focusable: false, viewBox: "0 0 239 134", version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", "aria-hidden": "true" },
  import_react201.default.createElement(
    "g",
    { stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
    import_react201.default.createElement(
      "g",
      null,
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--layout-border"], strokeWidth: "2", x: "1", y: "1", width: "223", height: "125", rx: "2" }),
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--layout-background"], x: "11.25", y: "0", width: "203.4375", height: "125" }),
      import_react201.default.createElement("path", { className: styles_css_default2["preference-icon--layout-header"], d: "M2,0 L223,0 C224.104569,-2.02906125e-16 225,0.8954305 225,2 L225,10 L225,10 L0,10 L0,2 C-1.3527075e-16,0.8954305 0.8954305,2.02906125e-16 2,0 Z" })
    ),
    import_react201.default.createElement(
      "g",
      { transform: "translate(20.000000, 22.000000)" },
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--border"], strokeWidth: "2", x: "1", y: "1", width: "182", height: "110", rx: "2" }),
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--primary-button"], x: "152", y: "6", width: "26", height: "10" }),
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "122", y: "6", width: "26", height: "10" }),
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "92", y: "6", width: "26", height: "10" }),
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "122", y: "29", width: "55", height: "3" }),
      import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "92", y: "29", width: "26", height: "3" }),
      import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "19 29 49 29 49 32 19 32" }),
      import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "10 10 40 10 40 13 10 13" }),
      import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "10 29 13 29 13 32 10 32" }),
      import_react201.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "3", y1: "22.7619048", x2: "181", y2: "22.7619048", strokeWidth: "2", strokeLinecap: "square" }),
      import_react201.default.createElement(
        "g",
        { transform: "translate(3.000000, 37.285714)" },
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "119", y: "6", width: "55", height: "3" }),
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "89", y: "6", width: "26", height: "3" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "16 6 46 6 46 9 16 9" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "7 6 10 6 10 9 7 9" }),
        import_react201.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "0", y1: "0.666666667", x2: "178", y2: "0.666666667", strokeLinecap: "square" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(3.000000, 51.714286)" },
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "119", y: "6", width: "55", height: "3" }),
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "89", y: "6", width: "26", height: "3" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "16 6 46 6 46 9 16 9" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "7 6 10 6 10 9 7 9" }),
        import_react201.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "0", y1: "0.666666667", x2: "178", y2: "0.666666667", strokeLinecap: "square" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(3.000000, 80.571429)" },
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "119", y: "6", width: "55", height: "3" }),
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "89", y: "6", width: "26", height: "3" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "16 6 46 6 46 9 16 9" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "7 6 10 6 10 9 7 9" }),
        import_react201.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "0", y1: "0.666666667", x2: "178", y2: "0.666666667", strokeLinecap: "square" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(3.000000, 66.142857)" },
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "119", y: "6", width: "55", height: "3" }),
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "89", y: "6", width: "26", height: "3" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "16 6 46 6 46 9 16 9" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "7 6 10 6 10 9 7 9" }),
        import_react201.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "0", y1: "0.666666667", x2: "178", y2: "0.666666667", strokeLinecap: "square" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(3.000000, 95.000000)" },
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "119", y: "6", width: "55", height: "3" }),
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "89", y: "6", width: "26", height: "3" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "16 6 46 6 46 9 16 9" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "7 6 10 6 10 9 7 9" }),
        import_react201.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "0", y1: "0.666666667", x2: "178", y2: "0.666666667", strokeLinecap: "square" })
      )
    ),
    import_react201.default.createElement(
      "g",
      { transform: "translate(182.000000, 28.000000)" },
      import_react201.default.createElement(
        "g",
        null,
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--border"], strokeWidth: "2", x: "1", y: "1", width: "55", height: "97", rx: "2" }),
        import_react201.default.createElement("rect", { className: styles_css_default2["preference-icon--secondary"], x: "39.5474354", y: "5.86666667", width: "14", height: "6.41666667" }),
        import_react201.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "3.62672811 7.88333333 24.6267281 7.88333333 24.6267281 10.6333333 3.62672811 10.6333333" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(4.000000, 22.000000)", className: styles_css_default2["preference-icon--secondary"] },
        import_react201.default.createElement("polygon", { points: "0 0 23 0 23 2 0 2" }),
        import_react201.default.createElement("polygon", { points: "26 0 49 0 49 2 26 2" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(4.000000, 32.000000)", className: styles_css_default2["preference-icon--secondary"] },
        import_react201.default.createElement("polygon", { points: "0 0 23 0 23 2 0 2" }),
        import_react201.default.createElement("polygon", { points: "26 0 49 0 49 2 26 2" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(4.000000, 43.000000)", className: styles_css_default2["preference-icon--secondary"] },
        import_react201.default.createElement("polygon", { points: "0 0 23 0 23 2 0 2" }),
        import_react201.default.createElement("polygon", { points: "26 0 49 0 49 2 26 2" })
      ),
      import_react201.default.createElement(
        "g",
        { transform: "translate(4.000000, 51.000000)", className: styles_css_default2["preference-icon--secondary"] },
        import_react201.default.createElement("polygon", { points: "0 0 23 0 23 2 0 2" }),
        import_react201.default.createElement("polygon", { points: "26 0 49 0 49 2 26 2" })
      )
    )
  )
);
var side_position_default = sidePositionIcon;

// node_modules/@cloudscape-design/components/split-panel/icons/bottom-icon.js
var import_react202 = __toESM(require_react());
var bottomPositionIcon = import_react202.default.createElement(
  "svg",
  { focusable: false, viewBox: "0 0 240 134", version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", "aria-hidden": "true" },
  import_react202.default.createElement(
    "g",
    { stroke: "none", strokeWidth: "1", fill: "none", fillRule: "evenodd" },
    import_react202.default.createElement(
      "g",
      null,
      import_react202.default.createElement(
        "g",
        null,
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--layout-border"], strokeWidth: "2", x: "1", y: "1", width: "238", height: "125", rx: "2" }),
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--layout-background"], x: "12", y: "0", width: "217", height: "126" }),
        import_react202.default.createElement("path", { className: styles_css_default2["preference-icon--layout-header"], d: "M2,0 L238,0 C239.104569,-1.58997828e-14 240,0.8954305 240,2 L240,10 L240,10 L0,10 L0,2 C-1.3527075e-16,0.8954305 0.8954305,2.02906125e-16 2,0 Z" })
      ),
      import_react202.default.createElement(
        "g",
        { transform: "translate(28.000000, 22.000000)" },
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--border"], strokeWidth: "2", x: "1", y: "1", width: "182", height: "110", rx: "2" }),
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--primary-button"], x: "152", y: "6", width: "26", height: "10" }),
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "122", y: "6", width: "26", height: "10" }),
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "92", y: "6", width: "26", height: "10" }),
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "122", y: "29", width: "55", height: "3" }),
        import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "92", y: "29", width: "26", height: "3" }),
        import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "19 29 49 29 49 32 19 32" }),
        import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "10 10 40 10 40 13 10 13" }),
        import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "10 29 13 29 13 32 10 32" }),
        import_react202.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "3", y1: "22.7619048", x2: "181", y2: "22.7619048", strokeWidth: "2", strokeLinecap: "square" }),
        import_react202.default.createElement(
          "g",
          { transform: "translate(3.000000, 37.285714)" },
          import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "119", y: "6", width: "55", height: "3" }),
          import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--disabled-element"], x: "89", y: "6", width: "26", height: "3" }),
          import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "16 6 46 6 46 9 16 9" }),
          import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--disabled-element"], points: "7 6 10 6 10 9 7 9" }),
          import_react202.default.createElement("line", { className: styles_css_default2["preference-icon--separator"], x1: "0", y1: "0.666666667", x2: "178", y2: "0.666666667", strokeLinecap: "square" })
        )
      ),
      import_react202.default.createElement(
        "g",
        { transform: "translate(12.000000, 74.000000)" },
        import_react202.default.createElement(
          "g",
          null,
          import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--border"], strokeWidth: "2", x: "1", y: "1", width: "215", height: "58", rx: "2" }),
          import_react202.default.createElement("rect", { className: styles_css_default2["preference-icon--secondary"], x: "177", y: "8", width: "30.6630435", height: "10" }),
          import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "10 12 45.3804348 12 45.3804348 15 10 15" })
        ),
        import_react202.default.createElement(
          "g",
          { className: styles_css_default2["preference-icon--secondary"], transform: "translate(9.000000, 40.000000)" },
          import_react202.default.createElement("polygon", { points: "-3.55271368e-15 0 39 0 39 3 -3.55271368e-15 3" }),
          import_react202.default.createElement("polygon", { points: "53 0 92 0 92 3 53 3" }),
          import_react202.default.createElement("polygon", { points: "107 0 146 0 146 3 107 3" }),
          import_react202.default.createElement("polygon", { points: "160 0 199 0 199 3 160 3" }),
          import_react202.default.createElement("polygon", { points: "-3.55271368e-15 9 39 9 39 12 -3.55271368e-15 12" }),
          import_react202.default.createElement("polygon", { points: "53 9 92 9 92 12 53 12" }),
          import_react202.default.createElement("polygon", { points: "107 9 146 9 146 12 107 12" }),
          import_react202.default.createElement("polygon", { points: "160 9 199 9 199 12 160 12" })
        ),
        import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--focus-text"], points: "10 23 32 23 32 26 10 26" }),
        import_react202.default.createElement("polygon", { className: styles_css_default2["preference-icon--secondary"], points: "40 23 62 23 62 26 40 26" })
      )
    )
  )
);
var bottom_icon_default = bottomPositionIcon;

// node_modules/@cloudscape-design/components/split-panel/icons/side-position-refresh.js
var import_react203 = __toESM(require_react());
var getClassName = (suffix) => styles_css_default2[`preference-icon-refresh--${suffix}`];
var TableRow = ({ offset, separator = true, isHeader }) => {
  const offsetTop = 0.4482;
  const offsetBottom = 3.4482;
  return import_react203.default.createElement(
    "g",
    { transform: `translate(0, ${offset})`, className: getClassName(isHeader ? "column-header" : "disabled") },
    import_react203.default.createElement("path", { d: `M19 ${offsetTop}2H22V${offsetBottom}H19V${offsetTop}Z` }),
    import_react203.default.createElement("path", { d: `M27 ${offsetTop}H51V${offsetBottom}H27V${offsetTop}Z`, className: !isHeader ? getClassName("secondary") : void 0 }),
    import_react203.default.createElement("path", { d: `M90 ${offsetTop}H110V${offsetBottom}H90V${offsetTop}Z` }),
    import_react203.default.createElement("path", { d: `M113 ${offsetTop}H157V${offsetBottom}H113V${offsetTop}Z` }),
    separator && import_react203.default.createElement("path", { d: "M14 8H159.387", className: getClassName("separator"), strokeLinecap: "square" })
  );
};
var SidePanelRow = ({ offset }) => {
  return import_react203.default.createElement(
    "g",
    { transform: `translate(0, ${offset})`, className: getClassName("secondary") },
    import_react203.default.createElement("path", { d: "M177 0H190V3H177V0Z" }),
    import_react203.default.createElement("path", { d: "M195 0H208V3H195V0Z" })
  );
};
var bottomPositionIcon2 = import_react203.default.createElement(
  "svg",
  { focusable: false, viewBox: "0 0 230 128", version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", "aria-hidden": "true" },
  import_react203.default.createElement("path", { d: "M2 1H214C214.552 1 215 1.44772 215 2V126C215 126.552 214.552 127 214 127H2.00001C1.44772 127 1 126.552 1 126V2C1 1.44772 1.44772 1 2 1Z", className: getClassName("window"), strokeWidth: "2" }),
  import_react203.default.createElement(
    "g",
    { className: "awsui-context-top-navigation" },
    import_react203.default.createElement("rect", { x: "2", y: "2", width: "212", height: "6", className: getClassName("layout-top") })
  ),
  import_react203.default.createElement(
    "g",
    { className: "awsui-context-content-header" },
    import_react203.default.createElement("path", { d: "M2 8H214V23H2V8Z", className: getClassName("layout-main") }),
    import_react203.default.createElement(
      "g",
      { className: getClassName("default") },
      import_react203.default.createElement("path", { d: "M9 15.5C9 16.8807 7.88071 18 6.5 18C5.11929 18 4 16.8807 4 15.5C4 14.1193 5.11929 13 6.5 13C7.88071 13 9 14.1193 9 15.5Z", className: getClassName("disabled") }),
      import_react203.default.createElement("path", { d: "M16 14H46.1484V17H16V14Z" }),
      import_react203.default.createElement("path", { d: "M92 15.5C92 13.567 93.567 12 95.5 12H108.86C110.793 12 112.36 13.567 112.36 15.5C112.36 17.433 110.793 19 108.86 19H95.5C93.567 19 92 17.433 92 15.5Z" }),
      import_react203.default.createElement("path", { d: "M116 15.5C116 13.567 117.567 12 119.5 12H132.86C134.793 12 136.36 13.567 136.36 15.5C136.36 17.433 134.793 19 132.86 19H119.5C117.567 19 116 17.433 116 15.5Z" }),
      import_react203.default.createElement("path", { d: "M139 15.5C139 13.567 140.567 12 142.5 12H155.86C157.793 12 159.36 13.567 159.36 15.5C159.36 17.433 157.793 19 155.86 19H142.5C140.567 19 139 17.433 139 15.5Z", className: getClassName("primary") })
    )
  ),
  import_react203.default.createElement(TableRow, { offset: 27, isHeader: true }),
  import_react203.default.createElement(TableRow, { offset: 39 }),
  import_react203.default.createElement(TableRow, { offset: 51 }),
  import_react203.default.createElement(TableRow, { offset: 63 }),
  import_react203.default.createElement(TableRow, { offset: 75 }),
  import_react203.default.createElement(TableRow, { offset: 87 }),
  import_react203.default.createElement(TableRow, { offset: 99 }),
  import_react203.default.createElement(TableRow, { offset: 111, separator: false }),
  import_react203.default.createElement("rect", { x: "166", y: "13", width: "62", height: "108", rx: "5", className: getClassName("window"), strokeWidth: "2" }),
  import_react203.default.createElement("rect", { x: "169", y: "62", width: "3", height: "8", rx: "1.5", className: getClassName("input-default") }),
  import_react203.default.createElement("path", { d: "M216 14V120", className: getClassName("separator") }),
  import_react203.default.createElement(
    "g",
    { className: getClassName("disabled") },
    import_react203.default.createElement("path", { d: "M224 19.5C224 20.8807 222.881 22 221.5 22C220.119 22 219 20.8807 219 19.5C219 18.1193 220.119 17 221.5 17C222.881 17 224 18.1193 224 19.5Z" }),
    import_react203.default.createElement("path", { d: "M224 27.5C224 28.8807 222.881 30 221.5 30C220.119 30 219 28.8807 219 27.5C219 26.1193 220.119 25 221.5 25C222.881 25 224 26.1193 224 27.5Z" })
  ),
  import_react203.default.createElement("path", { d: "M177 23H191V28H177V23Z", className: getClassName("heading") }),
  import_react203.default.createElement(
    "g",
    { className: getClassName("secondary") },
    import_react203.default.createElement("path", { d: "M207 23H212V28H207V23Z" }),
    import_react203.default.createElement("path", { d: "M199 23H204V28H199V23Z" })
  ),
  import_react203.default.createElement(SidePanelRow, { offset: 36 }),
  import_react203.default.createElement(SidePanelRow, { offset: 48 }),
  import_react203.default.createElement(SidePanelRow, { offset: 60 }),
  import_react203.default.createElement(SidePanelRow, { offset: 72 })
);
var side_position_refresh_default = bottomPositionIcon2;

// node_modules/@cloudscape-design/components/split-panel/icons/bottom-icon-refresh.js
var import_react204 = __toESM(require_react());
var TableRow2 = ({ offset, isHeader }) => {
  const offsetTop = 0.4482;
  const offsetBottom = 3.4482;
  return import_react204.default.createElement(
    "g",
    { transform: `translate(0, ${offset})`, className: getClassName(isHeader ? "column-header" : "disabled") },
    import_react204.default.createElement("path", { d: `M31 ${offsetTop}H34V${offsetBottom}H31V${offsetTop}Z` }),
    import_react204.default.createElement("path", { d: `M39 ${offsetTop}H63V${offsetBottom}H39V${offsetTop}Z`, className: !isHeader ? getClassName("secondary") : void 0 }),
    import_react204.default.createElement("path", { d: `M135 ${offsetTop}H155V${offsetBottom}H135V${offsetTop}Z` }),
    import_react204.default.createElement("path", { d: `M158 ${offsetTop}H202V${offsetBottom}H158V${offsetTop}Z` }),
    import_react204.default.createElement("path", { d: "M26 8H204.388", className: getClassName("separator"), strokeLinecap: "square" })
  );
};
var SidePanelRow2 = ({ offset }) => {
  return import_react204.default.createElement(
    "g",
    { transform: `translate(0, ${offset})`, className: getClassName("secondary") },
    import_react204.default.createElement("path", { d: "M27 0H59V3H27V0Z" }),
    import_react204.default.createElement("path", { d: "M75 0H107V3H75V0Z" }),
    import_react204.default.createElement("path", { d: "M123 0H155V3H123V0Z" }),
    import_react204.default.createElement("path", { d: "M171 0H203V3H171V0Z" })
  );
};
var bottomPositionIcon3 = import_react204.default.createElement(
  "svg",
  { focusable: false, viewBox: "0 0 230 128", version: "1.1", xmlns: "http://www.w3.org/2000/svg", xmlnsXlink: "http://www.w3.org/1999/xlink", "aria-hidden": "true" },
  import_react204.default.createElement("path", { d: "M2 1H228C228.552 1 229 1.44772 229 2V117C229 117.552 228.552 118 228 118H2C1.44772 118 1 117.552 1 117V2C1 1.44772 1.44772 1 2 1Z", className: getClassName("window"), strokeWidth: "2" }),
  import_react204.default.createElement(
    "g",
    { className: "awsui-context-top-navigation" },
    import_react204.default.createElement("rect", { x: "2", y: "2", width: "226", height: "6", className: getClassName("layout-top") })
  ),
  import_react204.default.createElement(
    "g",
    { className: "awsui-context-content-header" },
    import_react204.default.createElement("path", { d: "M0 8H230V23H0V8Z", className: getClassName("layout-main") }),
    import_react204.default.createElement(
      "g",
      { className: getClassName("default") },
      import_react204.default.createElement("path", { d: "M9 15.5C9 16.8807 7.88071 18 6.5 18C5.11929 18 4 16.8807 4 15.5C4 14.1193 5.11929 13 6.5 13C7.88071 13 9 14.1193 9 15.5Z", className: getClassName("disabled") }),
      import_react204.default.createElement("path", { d: "M26 14H56.1484V17H26V14Z" }),
      import_react204.default.createElement("path", { d: "M139 15.5C139 13.567 140.567 12 142.5 12H155.86C157.793 12 159.36 13.567 159.36 15.5C159.36 17.433 157.793 19 155.86 19H142.5C140.567 19 139 17.433 139 15.5Z" }),
      import_react204.default.createElement("path", { d: "M163 15.5C163 13.567 164.567 12 166.5 12H179.86C181.793 12 183.36 13.567 183.36 15.5C183.36 17.433 181.793 19 179.86 19H166.5C164.567 19 163 17.433 163 15.5Z" }),
      import_react204.default.createElement("path", { d: "M186 15.5C186 13.567 187.567 12 189.5 12H202.86C204.793 12 206.36 13.567 206.36 15.5C206.36 17.433 204.793 19 202.86 19H189.5C187.567 19 186 17.433 186 15.5Z", className: getClassName("primary") }),
      import_react204.default.createElement("circle", { cx: "223.5", cy: "15.5", r: "2.5", className: getClassName("disabled") })
    )
  ),
  import_react204.default.createElement(TableRow2, { offset: 27, isHeader: true }),
  import_react204.default.createElement(TableRow2, { offset: 39 }),
  import_react204.default.createElement(TableRow2, { offset: 51 }),
  import_react204.default.createElement(TableRow2, { offset: 63 }),
  import_react204.default.createElement("rect", { x: "8", y: "75", width: "214", height: "52", rx: "5", className: getClassName("window"), strokeWidth: "2" }),
  import_react204.default.createElement("rect", { x: "111", y: "79", width: "8", height: "3", rx: "1.5", className: getClassName("input-default") }),
  import_react204.default.createElement("path", { d: "M27 87H57V92H27V87Z", className: getClassName("heading") }),
  import_react204.default.createElement(
    "g",
    { className: getClassName("secondary") },
    import_react204.default.createElement("path", { d: "M198 87H203V92H198V87Z" }),
    import_react204.default.createElement("path", { d: "M190 87H195V92H190V87Z" })
  ),
  import_react204.default.createElement(SidePanelRow2, { offset: 99 }),
  import_react204.default.createElement(SidePanelRow2, { offset: 106 }),
  import_react204.default.createElement(SidePanelRow2, { offset: 113 })
);
var bottom_icon_refresh_default = bottomPositionIcon3;

// node_modules/@cloudscape-design/components/split-panel/preferences-modal.js
var preferences_modal_default2 = (props2) => {
  const [position, setPosition] = (0, import_react205.useState)(props2.preferences.position);
  const onCancel = () => {
    setPosition(props2.preferences.position);
    props2.onDismiss();
  };
  const onConfirm = () => {
    props2.onConfirm({ position });
  };
  return import_react205.default.createElement(
    InternalModal,
    { size: "medium", visible: props2.visible, onDismiss: props2.onDismiss, header: props2.i18nStrings.header, closeAriaLabel: props2.i18nStrings.cancel, footer: import_react205.default.createElement(
      InternalBox,
      { float: "right" },
      import_react205.default.createElement(
        InternalSpaceBetween,
        { direction: "horizontal", size: "xs" },
        import_react205.default.createElement(InternalButton, { onClick: onCancel, formAction: "none", variant: "link" }, props2.i18nStrings.cancel),
        import_react205.default.createElement(InternalButton, { onClick: onConfirm, variant: "primary" }, props2.i18nStrings.confirm)
      )
    ), __internalRootRef: props2.__internalRootRef },
    import_react205.default.createElement(
      InternalFormField,
      { label: props2.i18nStrings.positionLabel, description: props2.i18nStrings.positionDescription },
      import_react205.default.createElement(internal_default20, { onChange: (e) => setPosition(e.detail.value), value: position, columns: 2, items: [
        {
          label: props2.i18nStrings.positionBottom,
          image: props2.isRefresh ? bottom_icon_refresh_default : bottom_icon_default,
          value: "bottom"
        },
        {
          label: props2.i18nStrings.positionSide,
          image: props2.isRefresh ? side_position_refresh_default : side_position_default,
          value: "side",
          disabled: props2.disabledSidePosition
        }
      ] })
    )
  );
};

// node_modules/@cloudscape-design/components/split-panel/side.js
var import_react206 = __toESM(require_react());
function SplitPanelContentSide({ baseProps, splitPanelRef, toggleRef, header, children, resizeHandle, isOpen, cappedSize, openButtonAriaLabel, panelHeaderId, onToggle }) {
  const { topOffset, bottomOffset } = useSplitPanelContext();
  const isRefresh = useVisualRefresh();
  return import_react206.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default2.drawer, styles_css_default2.root, styles_css_default2["position-side"], {
      [styles_css_default2["drawer-closed"]]: !isOpen
    }), style: {
      width: isOpen ? cappedSize : void 0,
      maxWidth: isRefresh ? "100%" : void 0
    }, ref: splitPanelRef }),
    import_react206.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default2["drawer-content-side"], {
        [styles_css_default2.refresh]: isRefresh
      }), style: {
        top: topOffset,
        bottom: bottomOffset
      }, onClick: () => !isOpen && onToggle(), "aria-labelledby": panelHeaderId, role: "region" },
      isOpen ? import_react206.default.createElement("div", { className: styles_css_default2["slider-wrapper-side"] }, resizeHandle) : import_react206.default.createElement(internal_default2, { className: clsx_m_default(styles_css_default2["open-button"], styles_css_default2["open-button-side"]), iconName: "angle-left", variant: "icon", formAction: "none", ariaLabel: openButtonAriaLabel, ariaExpanded: isOpen, ref: isRefresh ? null : toggleRef }),
      import_react206.default.createElement(
        "div",
        { className: styles_css_default2["content-side"], "aria-hidden": !isOpen },
        import_react206.default.createElement("div", { className: clsx_m_default(styles_css_default2["pane-header-wrapper-side"]) }, header),
        import_react206.default.createElement("hr", { className: styles_css_default2["header-divider"] }),
        import_react206.default.createElement("div", { className: clsx_m_default(styles_css_default2["pane-content-wrapper-side"]) }, children)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/split-panel/bottom.js
var import_react207 = __toESM(require_react());
function SplitPanelContentBottom({ baseProps, isOpen, state, transitioningElementRef, splitPanelRef, cappedSize, header, resizeHandle, children, appLayoutMaxWidth, panelHeaderId, onToggle }) {
  const isRefresh = useVisualRefresh();
  const { bottomOffset, leftOffset, rightOffset, disableContentPaddings, contentWrapperPaddings, isMobile, reportHeaderHeight } = useSplitPanelContext();
  const transitionContentBottomRef = useMergeRefs(splitPanelRef || null, transitioningElementRef);
  const headerRef = (0, import_react207.useRef)(null);
  useResizeObserver(headerRef, (entry) => reportHeaderHeight(entry.borderBoxHeight));
  (0, import_react207.useEffect)(() => {
    return () => reportHeaderHeight(0);
  }, []);
  const centeredMaxWidthClasses = clsx_m_default({
    [styles_css_default2["pane-bottom-center-align"]]: isRefresh,
    [styles_css_default2["pane-bottom-content-nav-padding"]]: contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedNav,
    [styles_css_default2["pane-bottom-content-tools-padding"]]: contentWrapperPaddings === null || contentWrapperPaddings === void 0 ? void 0 : contentWrapperPaddings.closedTools
  });
  return import_react207.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default2.root, styles_css_default2.drawer, styles_css_default2["position-bottom"], {
      [styles_css_default2["drawer-closed"]]: !isOpen,
      [styles_css_default2["drawer-mobile"]]: isMobile,
      [styles_css_default2["drawer-disable-content-paddings"]]: disableContentPaddings,
      [styles_css_default2.animating]: isRefresh && (state === "entering" || state === "exiting"),
      [styles_css_default2.refresh]: isRefresh
    }), onClick: () => !isOpen && onToggle(), style: {
      bottom: bottomOffset,
      left: leftOffset,
      right: rightOffset,
      height: isOpen ? cappedSize : void 0
    }, ref: transitionContentBottomRef }),
    isOpen && import_react207.default.createElement("div", { className: styles_css_default2["slider-wrapper-bottom"] }, resizeHandle),
    import_react207.default.createElement(
      "div",
      { className: styles_css_default2["drawer-content-bottom"], "aria-labelledby": panelHeaderId, role: "region" },
      import_react207.default.createElement("div", { className: clsx_m_default(styles_css_default2["pane-header-wrapper-bottom"], centeredMaxWidthClasses), ref: headerRef }, header),
      import_react207.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default2["content-bottom"], centeredMaxWidthClasses), "aria-hidden": !isOpen },
        import_react207.default.createElement("div", { className: clsx_m_default({ [styles_css_default2["content-bottom-max-width"]]: isRefresh }), style: appLayoutMaxWidth }, children)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/split-panel/index.js
var MIN_HEIGHT2 = 160;
var MIN_WIDTH = 280;
function SplitPanel(_a) {
  var { header, children, hidePreferencesButton = false, closeBehavior = "collapse", i18nStrings } = _a, restProps = __rest(_a, ["header", "children", "hidePreferencesButton", "closeBehavior", "i18nStrings"]);
  const isRefresh = useVisualRefresh();
  const { __internalRootRef } = useBaseComponent("SplitPanel");
  const { size, getMaxWidth, getMaxHeight, position, topOffset, bottomOffset, rightOffset, contentWidthStyles, isOpen, isForcedPosition, onPreferencesChange, onResize, onToggle, reportSize, setSplitPanelToggle, refs } = useSplitPanelContext();
  const baseProps = getBaseProps(restProps);
  const i18n = useInternalI18n("split-panel");
  const [isPreferencesOpen, setPreferencesOpen] = (0, import_react208.useState)(false);
  const [relativeSize, setRelativeSize] = (0, import_react208.useState)(0);
  const [maxSize, setMaxSize] = (0, import_react208.useState)(size);
  const minSize = position === "bottom" ? MIN_HEIGHT2 : MIN_WIDTH;
  const cappedSize = getLimitedValue(minSize, size, maxSize);
  const appLayoutMaxWidth = isRefresh && position === "bottom" ? contentWidthStyles : void 0;
  const openButtonAriaLabel = i18n("i18nStrings.openButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.openButtonAriaLabel);
  (0, import_react208.useEffect)(() => {
    setSplitPanelToggle({ displayed: closeBehavior === "collapse", ariaLabel: openButtonAriaLabel });
  }, [setSplitPanelToggle, openButtonAriaLabel, closeBehavior]);
  (0, import_react208.useEffect)(() => {
    const handle = requestAnimationFrame(() => {
      const maxSize2 = position === "bottom" ? getMaxHeight() : getMaxWidth();
      setRelativeSize((size - minSize) / (maxSize2 - minSize) * 100);
      setMaxSize(maxSize2);
    });
    return () => cancelAnimationFrame(handle);
  }, [size, minSize, position, getMaxHeight, getMaxWidth]);
  (0, import_react208.useEffect)(() => {
    reportSize(cappedSize);
  }, [reportSize, cappedSize]);
  (0, import_react208.useEffect)(() => {
    const handler = () => setMaxSize(position === "bottom" ? getMaxHeight() : getMaxWidth());
    window.addEventListener("resize", handler);
    return () => window.removeEventListener("resize", handler);
  }, [position, getMaxWidth, getMaxHeight]);
  const setSidePanelWidth = (width) => {
    const maxWidth = getMaxWidth();
    const size2 = getLimitedValue(MIN_WIDTH, width, maxWidth);
    if (isOpen && maxWidth >= MIN_WIDTH) {
      onResize({ size: size2 });
    }
  };
  const setBottomPanelHeight = (height) => {
    const maxHeight = getMaxHeight();
    const size2 = getLimitedValue(MIN_HEIGHT2, height, maxHeight);
    if (isOpen && maxHeight >= MIN_HEIGHT2) {
      onResize({ size: size2 });
    }
  };
  const splitPanelRefObject = (0, import_react208.useRef)(null);
  const sizeControlProps = {
    position,
    panelRef: splitPanelRefObject,
    handleRef: refs.slider,
    setSidePanelWidth,
    setBottomPanelHeight
  };
  const onSliderPointerDown = usePointerEvents(sizeControlProps);
  const onKeyDown = useKeyboardEvents(sizeControlProps);
  const wrappedChildren = import_react208.default.createElement(AppLayoutContext.Provider, { value: {
    stickyOffsetTop: topOffset,
    stickyOffsetBottom: bottomOffset
  } }, children);
  const panelHeaderId = useUniqueId("split-panel-header");
  const wrappedHeader = import_react208.default.createElement(
    "div",
    { className: styles_css_default2.header, style: appLayoutMaxWidth },
    import_react208.default.createElement("h2", { className: styles_css_default2["header-text"], id: panelHeaderId }, header),
    import_react208.default.createElement(
      "div",
      { className: styles_css_default2["header-actions"] },
      !hidePreferencesButton && isOpen && import_react208.default.createElement(
        import_react208.default.Fragment,
        null,
        import_react208.default.createElement(InternalButton, { className: styles_css_default2["preferences-button"], iconName: "settings", variant: "icon", onClick: () => setPreferencesOpen(true), formAction: "none", ariaLabel: i18n("i18nStrings.preferencesTitle", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesTitle), ref: refs.preferences }),
        import_react208.default.createElement("span", { className: styles_css_default2.divider })
      ),
      isOpen ? import_react208.default.createElement(InternalButton, { className: styles_css_default2["close-button"], iconName: isRefresh && closeBehavior === "collapse" ? position === "side" ? "angle-right" : "angle-down" : "close", variant: "icon", onClick: onToggle, formAction: "none", ariaLabel: i18n("i18nStrings.closeButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.closeButtonAriaLabel), ariaExpanded: isOpen }) : position === "side" ? null : import_react208.default.createElement(InternalButton, { className: styles_css_default2["open-button"], iconName: "angle-up", variant: "icon", formAction: "none", ariaLabel: i18n("i18nStrings.openButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.openButtonAriaLabel), ref: refs.toggle, ariaExpanded: isOpen })
    )
  );
  const resizeHandle = import_react208.default.createElement(
    "div",
    { ref: refs.slider, role: "slider", tabIndex: 0, "aria-label": i18n("i18nStrings.resizeHandleAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.resizeHandleAriaLabel), "aria-valuemax": 100, "aria-valuemin": 0, "aria-valuenow": position === "bottom" ? relativeSize : 100 - relativeSize, className: clsx_m_default(styles_css_default2.slider, styles_css_default2[`slider-${position}`]), onKeyDown, onPointerDown: onSliderPointerDown },
    import_react208.default.createElement(resize_handler_default, { className: clsx_m_default(styles_css_default2["slider-icon"], styles_css_default2[`slider-icon-${position}`]) })
  );
  (0, import_react208.useLayoutEffect)(() => {
    const root = __internalRootRef.current;
    if (root) {
      const property = "transform";
      const temporaryValue = "translateZ(0)";
      const valueBefore = root.style[property];
      root.style[property] = temporaryValue;
      void root.offsetHeight;
      root.style[property] = valueBefore;
    }
  }, [rightOffset, __internalRootRef]);
  const mergedRef = useMergeRefs(splitPanelRefObject, __internalRootRef);
  if (closeBehavior === "hide" && !isOpen) {
    return import_react208.default.createElement(import_react208.default.Fragment, null);
  }
  if (isRefresh && !isOpen && position === "side") {
    return import_react208.default.createElement(import_react208.default.Fragment, null);
  }
  return import_react208.default.createElement(Transition, { in: isOpen !== null && isOpen !== void 0 ? isOpen : false }, (state, transitioningElementRef) => import_react208.default.createElement(
    import_react208.default.Fragment,
    null,
    position === "side" && import_react208.default.createElement(SplitPanelContentSide, { resizeHandle, baseProps, isOpen, splitPanelRef: mergedRef, cappedSize, onToggle, openButtonAriaLabel: i18n("i18nStrings.openButtonAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.openButtonAriaLabel), toggleRef: refs.toggle, header: wrappedHeader, panelHeaderId }, wrappedChildren),
    position === "bottom" && import_react208.default.createElement(SplitPanelContentBottom, { resizeHandle, baseProps, isOpen, splitPanelRef: mergedRef, cappedSize, onToggle, header: wrappedHeader, panelHeaderId, state, transitioningElementRef, appLayoutMaxWidth }, wrappedChildren),
    isPreferencesOpen && import_react208.default.createElement(preferences_modal_default2, { visible: true, preferences: { position }, disabledSidePosition: position === "bottom" && isForcedPosition, isRefresh, i18nStrings: {
      header: i18n("i18nStrings.preferencesTitle", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesTitle),
      confirm: i18n("i18nStrings.preferencesConfirm", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesConfirm),
      cancel: i18n("i18nStrings.preferencesCancel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesCancel),
      positionLabel: i18n("i18nStrings.preferencesPositionLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesPositionLabel),
      positionDescription: i18n("i18nStrings.preferencesPositionDescription", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesPositionDescription),
      positionBottom: i18n("i18nStrings.preferencesPositionBottom", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesPositionBottom),
      positionSide: i18n("i18nStrings.preferencesPositionSide", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.preferencesPositionSide)
    }, onConfirm: (preferences) => {
      onPreferencesChange(Object.assign({}, preferences));
      setPreferencesOpen(false);
    }, onDismiss: () => {
      setPreferencesOpen(false);
    } })
  ));
}
applyDisplayName(SplitPanel, "SplitPanel");

// node_modules/@cloudscape-design/components/status-indicator/index.js
var import_react209 = __toESM(require_react());
function StatusIndicator2(_a) {
  var { type = "success", wrapText = true } = _a, props2 = __rest(_a, ["type", "wrapText"]);
  const baseComponentProps = useBaseComponent("StatusIndicator");
  return import_react209.default.createElement(StatusIndicator, Object.assign({ type, wrapText }, props2, baseComponentProps));
}
applyDisplayName(StatusIndicator2, "StatusIndicator");

// node_modules/@cloudscape-design/components/tabs/index.js
var import_react211 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tabs/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/tabs/styles.scoped.css";
var styles_css_default61 = {
  "tabs-header": "awsui_tabs-header_14rmt_1vtxb_186",
  "tabs-header-list": "awsui_tabs-header-list_14rmt_1vtxb_192",
  "pagination-button": "awsui_pagination-button_14rmt_1vtxb_207",
  "pagination-button-left": "awsui_pagination-button-left_14rmt_1vtxb_212",
  "pagination-button-left-scrollable": "awsui_pagination-button-left-scrollable_14rmt_1vtxb_215",
  "pagination-button-right": "awsui_pagination-button-right_14rmt_1vtxb_219",
  "pagination-button-right-scrollable": "awsui_pagination-button-right-scrollable_14rmt_1vtxb_222",
  "tabs-tab": "awsui_tabs-tab_14rmt_1vtxb_227",
  "tabs-tab-label": "awsui_tabs-tab-label_14rmt_1vtxb_238",
  "tabs-tab-link": "awsui_tabs-tab-link_14rmt_1vtxb_254",
  "tabs-tab-disabled": "awsui_tabs-tab-disabled_14rmt_1vtxb_313",
  "refresh": "awsui_refresh_14rmt_1vtxb_331",
  "tabs-tab-active": "awsui_tabs-tab-active_14rmt_1vtxb_345",
  "tabs-header-with-divider": "awsui_tabs-header-with-divider_14rmt_1vtxb_352",
  "root": "awsui_root_14rmt_1vtxb_356",
  "tabs": "awsui_tabs_14rmt_1vtxb_186",
  "tabs-content": "awsui_tabs-content_14rmt_1vtxb_375",
  "tabs-content-active": "awsui_tabs-content-active_14rmt_1vtxb_379",
  "tabs-content-wrapper": "awsui_tabs-content-wrapper_14rmt_1vtxb_389",
  "with-paddings": "awsui_with-paddings_14rmt_1vtxb_389",
  "tabs-container-content-wrapper": "awsui_tabs-container-content-wrapper_14rmt_1vtxb_393"
};

// node_modules/@cloudscape-design/components/tabs/tab-header-bar.js
var import_react210 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tabs/native-smooth-scroll-supported.js
function native_smooth_scroll_supported_default() {
  return "scrollBehavior" in document.documentElement.style;
}

// node_modules/@cloudscape-design/components/tabs/smooth-scroll.js
var getScrollSpeed = (pixels) => 15e-4 * Math.abs(pixels) + 0.558;
var getScrollTime = (pixels) => Math.round(Math.abs(pixels) / getScrollSpeed(pixels));
var now = () => window.performance ? window.performance.now() : Date.now();
var ease = (k2) => {
  return 0.5 * (1 - Math.cos(Math.PI * k2));
};
var step = (context) => {
  const time2 = now();
  const elapsed = Math.min((time2 - context.startTime) / context.scrollTime, 1);
  const value = ease(elapsed);
  const currentX = context.startX + (context.endX - context.startX) * value;
  context.scrollable.scrollLeft = currentX;
  if (currentX !== context.endX) {
    requestAnimationFrame(() => step(context));
  }
};
var simulateSmoothScroll = (element, endX) => {
  const startX = element.scrollLeft;
  step({
    scrollable: element,
    startX,
    endX,
    startTime: now(),
    scrollTime: getScrollTime(endX - startX)
  });
};
var smoothScroll = (element, to) => {
  if (isMotionDisabled(element)) {
    element.scrollLeft = to;
    return;
  }
  if (native_smooth_scroll_supported_default() && element.scrollTo) {
    element.scrollTo({
      left: to,
      behavior: "smooth"
    });
    return;
  }
  simulateSmoothScroll(element, to);
};
var smooth_scroll_default = smoothScroll;

// node_modules/@cloudscape-design/components/tabs/scroll-utils.js
var onPaginationClick = (headerBarRef, direction) => {
  if (!(headerBarRef === null || headerBarRef === void 0 ? void 0 : headerBarRef.current)) {
    return;
  }
  const element = headerBarRef.current;
  const paginatedSectionSize = Math.ceil(element.clientWidth * 0.75);
  if (direction === 1) {
    smooth_scroll_default(element, Math.min(element.scrollLeft + paginatedSectionSize, element.scrollWidth - element.offsetWidth));
  }
  if (direction === -1) {
    smooth_scroll_default(element, Math.max(element.scrollLeft - paginatedSectionSize, 0));
  }
};
var hasHorizontalOverflow = (headerBar, leftOverflowButton) => {
  const { offsetWidth, scrollWidth } = headerBar;
  const paginationButtonsWidth = leftOverflowButton.current && 2 * leftOverflowButton.current.offsetWidth;
  return paginationButtonsWidth ? scrollWidth > offsetWidth + paginationButtonsWidth : scrollWidth > offsetWidth;
};
var hasLeftOverflow = (headerBar) => {
  return headerBar.scrollLeft > 0;
};
var hasRightOverflow = (headerBar) => {
  const { offsetWidth, scrollLeft, scrollWidth } = headerBar;
  return Math.ceil(scrollLeft) < scrollWidth - offsetWidth;
};
var scrollIntoView = (tabHeader, headerBar, smooth = true) => {
  if (!tabHeader || !headerBar) {
    return;
  }
  const margin = 2;
  let updatedLeftScroll = headerBar.scrollLeft;
  updatedLeftScroll = Math.min(updatedLeftScroll, tabHeader.offsetLeft - margin);
  updatedLeftScroll = Math.max(updatedLeftScroll, tabHeader.offsetLeft + tabHeader.offsetWidth - headerBar.offsetWidth + margin);
  if (smooth) {
    smooth_scroll_default(headerBar, updatedLeftScroll);
  } else {
    headerBar.scrollLeft = updatedLeftScroll;
  }
};

// node_modules/@cloudscape-design/components/tabs/tab-header-bar.js
function TabHeaderBar({ onChange, activeTabId, tabs, variant, idNamespace, ariaLabel, ariaLabelledby, i18nStrings }) {
  const headerBarRef = (0, import_react210.useRef)(null);
  const activeTabHeaderRef = (0, import_react210.useRef)(null);
  const leftOverflowButton = (0, import_react210.useRef)(null);
  const i18n = useInternalI18n("tabs");
  const isVisualRefresh = useVisualRefresh();
  const [widthChange, containerRef] = useContainerQuery((rect) => rect.width);
  const tabRefs = (0, import_react210.useRef)(/* @__PURE__ */ new Map());
  const [horizontalOverflow, setHorizontalOverflow] = (0, import_react210.useState)(false);
  const [leftOverflow, setLeftOverflow] = (0, import_react210.useState)(false);
  const [rightOverflow, setRightOverflow] = (0, import_react210.useState)(false);
  (0, import_react210.useEffect)(() => {
    if (headerBarRef.current) {
      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, leftOverflowButton));
      setLeftOverflow(hasLeftOverflow(headerBarRef.current));
      setRightOverflow(hasRightOverflow(headerBarRef.current));
    }
  }, [widthChange, tabs]);
  const scrollIntoViewIfPossible = (smooth) => {
    if (!activeTabId) {
      return;
    }
    const activeTabRef = tabRefs.current.get(activeTabId);
    if (activeTabRef && headerBarRef.current) {
      scrollIntoView(activeTabRef, headerBarRef.current, smooth);
    }
  };
  (0, import_react210.useEffect)(() => {
    requestAnimationFrame(() => {
      scrollIntoViewIfPossible(false);
    });
  }, [horizontalOverflow, widthChange, tabs.length]);
  (0, import_react210.useEffect)(() => {
    scrollIntoViewIfPossible(true);
  }, [activeTabId]);
  (0, import_react210.useEffect)(() => {
    var _a, _b;
    if ((_a = headerBarRef.current) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {
      if (document.activeElement !== activeTabHeaderRef.current) {
        (_b = activeTabHeaderRef.current) === null || _b === void 0 ? void 0 : _b.focus({ preventScroll: true });
      }
    }
  }, [activeTabId]);
  const onScroll = () => {
    if (headerBarRef.current) {
      setLeftOverflow(hasLeftOverflow(headerBarRef.current));
      setRightOverflow(hasRightOverflow(headerBarRef.current));
    }
  };
  const classes = clsx_m_default({
    [styles_css_default61["tabs-header"]]: true,
    [styles_css_default61["tabs-header-with-divider"]]: variant === "default" || isVisualRefresh
  });
  const leftButtonClasses = clsx_m_default({
    [styles_css_default61["pagination-button"]]: true,
    [styles_css_default61["pagination-button-left"]]: true,
    [styles_css_default61["pagination-button-left-scrollable"]]: leftOverflow
  });
  const rightButtonClasses = clsx_m_default({
    [styles_css_default61["pagination-button"]]: true,
    [styles_css_default61["pagination-button-right"]]: true,
    [styles_css_default61["pagination-button-right-scrollable"]]: rightOverflow
  });
  return import_react210.default.createElement(
    "div",
    { className: classes, ref: containerRef },
    horizontalOverflow && import_react210.default.createElement(
      "span",
      { ref: leftOverflowButton, className: leftButtonClasses },
      import_react210.default.createElement(InternalButton, { formAction: "none", variant: "icon", iconName: "angle-left", disabled: !leftOverflow, onClick: () => onPaginationClick(headerBarRef, -1), ariaLabel: i18n("i18nStrings.scrollLeftAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollLeftAriaLabel) })
    ),
    import_react210.default.createElement("ul", { role: "tablist", className: styles_css_default61["tabs-header-list"], "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, ref: headerBarRef, onScroll }, tabs.map(renderTabHeader)),
    horizontalOverflow && import_react210.default.createElement(
      "span",
      { className: rightButtonClasses },
      import_react210.default.createElement(InternalButton, { formAction: "none", variant: "icon", iconName: "angle-right", disabled: !rightOverflow, onClick: () => onPaginationClick(headerBarRef, 1), ariaLabel: i18n("i18nStrings.scrollRightAriaLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollRightAriaLabel) })
    )
  );
  function renderTabHeader(tab) {
    const enabledTabsWithCurrentTab = tabs.filter((tab2) => !tab2.disabled || tab2.id === activeTabId);
    const highlightTab = function(enabledTabIndex) {
      const tab2 = enabledTabsWithCurrentTab[enabledTabIndex];
      if (tab2.id === activeTabId) {
        return;
      }
      onChange({ activeTabId: tab2.id, activeTabHref: tab2.href });
    };
    const handleKeyDown = function(event) {
      const { keyCode } = event;
      const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown];
      if (hasModifierKeys(event) || specialKeys.indexOf(keyCode) === -1) {
        return;
      }
      event.preventDefault();
      const activeIndex = enabledTabsWithCurrentTab.indexOf(tab);
      switch (keyCode) {
        case KeyCode.right:
          if (activeIndex + 1 === enabledTabsWithCurrentTab.length) {
            highlightTab(0);
          } else {
            highlightTab(activeIndex + 1);
          }
          return;
        case KeyCode.left:
          if (activeIndex === 0) {
            highlightTab(enabledTabsWithCurrentTab.length - 1);
          } else {
            highlightTab(activeIndex - 1);
          }
          return;
        case KeyCode.end:
          highlightTab(enabledTabsWithCurrentTab.length - 1);
          return;
        case KeyCode.home:
          highlightTab(0);
          return;
        case KeyCode.pageDown:
          if (rightOverflow) {
            onPaginationClick(headerBarRef, 1);
          }
          return;
        case KeyCode.pageUp:
          if (leftOverflow) {
            onPaginationClick(headerBarRef, -1);
          }
          return;
      }
    };
    const clickTab = (event) => {
      if (tab.disabled) {
        event.preventDefault();
        return;
      }
      const specialKey = !isPlainLeftClick(event);
      if (specialKey && tab.href) {
        return;
      }
      event.preventDefault();
      if (!tab.href) {
        const clickedTabRef = tabRefs.current.get(tab.id);
        if (clickedTabRef) {
          const childElement = clickedTabRef.firstChild;
          if (childElement && childElement !== document.activeElement) {
            childElement.focus({ preventScroll: true });
          }
        }
      }
      if (tab.id === activeTabId) {
        return;
      }
      onChange({ activeTabId: tab.id, activeTabHref: tab.href });
    };
    const classes2 = clsx_m_default({
      [styles_css_default61["tabs-tab-link"]]: true,
      [styles_css_default61.refresh]: isVisualRefresh,
      [styles_css_default61["tabs-tab-active"]]: activeTabId === tab.id && !tab.disabled,
      [styles_css_default61["tabs-tab-disabled"]]: tab.disabled
    });
    const commonProps = {
      className: classes2,
      role: "tab",
      "aria-selected": tab.id === activeTabId,
      "aria-controls": `${idNamespace}-${tab.id}-panel`,
      "data-testid": tab.id,
      id: getTabElementId({ namespace: idNamespace, tabId: tab.id }),
      children: import_react210.default.createElement("span", { className: styles_css_default61["tabs-tab-label"] }, tab.label)
    };
    if (tab.disabled) {
      commonProps["aria-disabled"] = "true";
    } else {
      commonProps.onClick = clickTab;
    }
    if (tab.id === activeTabId) {
      commonProps.ref = activeTabHeaderRef;
      commonProps.tabIndex = 0;
      commonProps.onKeyDown = (event) => handleKeyDown(event);
    } else {
      commonProps.tabIndex = -1;
    }
    let trigger = null;
    if (tab.href) {
      const anchorProps = commonProps;
      anchorProps.href = tab.href;
      trigger = import_react210.default.createElement("a", Object.assign({}, anchorProps));
    } else {
      const buttonProps = commonProps;
      buttonProps.type = "button";
      if (tab.disabled) {
        buttonProps.disabled = true;
      }
      trigger = import_react210.default.createElement("button", Object.assign({}, buttonProps));
    }
    return import_react210.default.createElement("li", { ref: (element) => tabRefs.current.set(tab.id, element), className: styles_css_default61["tabs-tab"], role: "presentation", key: tab.id }, trigger);
  }
}
function getTabElementId({ namespace, tabId }) {
  return namespace + "-" + tabId;
}

// node_modules/@cloudscape-design/components/tabs/index.js
var lastGeneratedId = 0;
var nextGeneratedId = () => `awsui-tabs-${lastGeneratedId++}-${Math.round(Math.random() * 1e4)}`;
function firstEnabledTab(tabs) {
  const enabledTabs = tabs.filter((tab) => !tab.disabled);
  if (enabledTabs.length > 0) {
    return enabledTabs[0];
  }
  return null;
}
function Tabs(_a) {
  var _b, _c;
  var { tabs, variant = "default", onChange, activeTabId: controlledTabId, ariaLabel, ariaLabelledby, disableContentPaddings = false, i18nStrings } = _a, rest = __rest(_a, ["tabs", "variant", "onChange", "activeTabId", "ariaLabel", "ariaLabelledby", "disableContentPaddings", "i18nStrings"]);
  for (const tab of tabs) {
    checkSafeUrl("Tabs", tab.href);
  }
  const { __internalRootRef } = useBaseComponent("Tabs");
  const [idNamespace] = (0, import_react211.useState)(() => nextGeneratedId());
  const [activeTabId, setActiveTabId] = useControllable(controlledTabId, onChange, (_c = (_b = firstEnabledTab(tabs)) === null || _b === void 0 ? void 0 : _b.id) !== null && _c !== void 0 ? _c : "", {
    componentName: "Tabs",
    controlledProp: "activeTabId",
    changeHandler: "onChange"
  });
  const baseProps = getBaseProps(rest);
  const content = () => {
    const selectedTab = tabs.filter((tab) => tab.id === activeTabId)[0];
    const renderContent = (tab) => {
      const isTabSelected = tab === selectedTab;
      const classes = clsx_m_default({
        [styles_css_default61["tabs-content"]]: true,
        [styles_css_default61["tabs-content-active"]]: isTabSelected
      });
      const contentAttributes = {
        className: classes,
        role: "tabpanel",
        id: `${idNamespace}-${tab.id}-panel`,
        key: `${idNamespace}-${tab.id}-panel`,
        tabIndex: 0,
        "aria-labelledby": getTabElementId({ namespace: idNamespace, tabId: tab.id })
      };
      const isContentShown = isTabSelected && !selectedTab.disabled;
      return import_react211.default.createElement("div", Object.assign({}, contentAttributes), isContentShown && selectedTab.content);
    };
    return import_react211.default.createElement("div", { className: clsx_m_default(variant === "container" || variant === "stacked" ? styles_css_default61["tabs-container-content-wrapper"] : styles_css_default61["tabs-content-wrapper"], {
      [styles_css_default61["with-paddings"]]: !disableContentPaddings
    }) }, tabs.map(renderContent));
  };
  const header = import_react211.default.createElement(TabHeaderBar, { activeTabId, variant, idNamespace, ariaLabel, ariaLabelledby, tabs, onChange: (changeDetail) => {
    setActiveTabId(changeDetail.activeTabId);
    fireNonCancelableEvent(onChange, changeDetail);
  }, i18nStrings });
  if (variant === "container" || variant === "stacked") {
    return import_react211.default.createElement(InternalContainer, Object.assign({ header, disableHeaderPaddings: true }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default61.root), __internalRootRef, disableContentPaddings: true, variant: variant === "stacked" ? "stacked" : "default" }), content());
  }
  return import_react211.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default61.root, styles_css_default61.tabs), ref: __internalRootRef }),
    header,
    content()
  );
}
applyDisplayName(Tabs, "Tabs");

// node_modules/@cloudscape-design/components/tag-editor/index.js
var import_react214 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tag-editor/internal.js
var import_react212 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tag-editor/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/tag-editor/styles.scoped.css";
var styles_css_default62 = {
  "root": "awsui_root_brdst_16qnr_93",
  "loading": "awsui_loading_brdst_16qnr_97",
  "undo-button": "awsui_undo-button_brdst_16qnr_101"
};

// node_modules/@cloudscape-design/components/tag-editor/internal.js
var TagControl = import_react212.default.forwardRef(({ row, value, readOnly, defaultOptions: defaultOptions2, placeholder, errorText, loadingText, suggestionText, tooManySuggestionText, limit, filteringKey, enteredTextLabel, clearAriaLabel, onChange, onBlur, onRequest, initialOptionsRef }, ref) => {
  const [options, setOptions] = (0, import_react212.useState)(defaultOptions2);
  const [statusType, setStatusType] = (0, import_react212.useState)();
  const requestCancelFnRef = (0, import_react212.useRef)({
    cancel: () => {
    },
    isCancelled: () => false
  });
  const latestFilteringQuery = (0, import_react212.useRef)({ key: void 0, value: void 0 });
  const isSameQuery = (key, value2) => latestFilteringQuery.current.key === key && latestFilteringQuery.current.value === value2;
  const onLoadItems = (filteringText) => {
    if (!onRequest || isSameQuery(filteringKey, filteringText) || requestCancelFnRef.current.isCancelled()) {
      return;
    }
    requestCancelFnRef.current.cancel();
    if (latestFilteringQuery.current.key !== filteringKey) {
      setOptions([]);
    } else if (filteringText === "" && (initialOptionsRef === null || initialOptionsRef === void 0 ? void 0 : initialOptionsRef.current) && initialOptionsRef.current.length > 0) {
      setOptions(initialOptionsRef.current);
    }
    setStatusType("loading");
    latestFilteringQuery.current = { key: filteringKey, value: filteringText };
    const { promise, cancel, isCancelled } = makeCancellable(onRequest(filteringText));
    promise.then((newValues) => {
      const newOptions = newValues.map((value2) => ({ value: value2 }));
      setStatusType(void 0);
      setOptions(newOptions);
      if (initialOptionsRef) {
        initialOptionsRef.current = newOptions;
      }
    }).catch((err) => {
      if (!(err instanceof PromiseCancelledSignal)) {
        setStatusType("error");
      }
    });
    requestCancelFnRef.current = { cancel, isCancelled };
  };
  return import_react212.default.createElement(internal_default13, { ref, value, readOnly, statusType, options: options.length < limit ? options : [], empty: options.length < limit ? suggestionText : tooManySuggestionText, placeholder, errorText, loadingText, enteredTextLabel, clearAriaLabel, onChange: ({ detail }) => onChange(detail.value, row), onBlur: () => onBlur === null || onBlur === void 0 ? void 0 : onBlur(row), onFocus: () => {
    onLoadItems("");
  }, onLoadItems: ({ detail }) => {
    onLoadItems(detail.filteringText);
  } });
});
var UndoButton = import_react212.default.forwardRef(({ children, onClick }, ref) => {
  return import_react212.default.createElement("a", { ref, role: "button", tabIndex: 0, className: styles_css_default62["undo-button"], onClick, onKeyDown: (event) => {
    if (event.keyCode === KeyCode.space || event.keyCode === KeyCode.enter) {
      event.preventDefault();
    }
    if (event.keyCode === KeyCode.enter) {
      onClick();
    }
  }, onKeyUp: (event) => {
    if (event.keyCode === KeyCode.space) {
      onClick();
    }
  } }, children);
});

// node_modules/@cloudscape-design/components/tag-editor/validation.js
var ALLOWED_UNICODE_CHARS = "\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7B9\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u30000-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D58-\\u0D5E\\u0D66-\\u0D78\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19";
var DEFAULT_CHAR_REGEX = new RegExp(`^([A-Za-z${ALLOWED_UNICODE_CHARS}_.:/=+\\-@]*)$`);
var SYSTEM_TAG_PREFIX = "aws:";
var MAX_KEY_LENGTH = 128;
var MAX_VALUE_LENGTH = 256;
function validate2(tags, keyDirtyState, i18n, i18nStrings, charRegex = DEFAULT_CHAR_REGEX) {
  const tagKeysCache = {};
  tags.forEach((tag) => {
    var _a;
    if (tag.key && !tag.markedForRemoval) {
      tagKeysCache[tag.key] = ((_a = tagKeysCache[tag.key]) !== null && _a !== void 0 ? _a : 0) + 1;
    }
  });
  return tags.map((tag, i) => {
    let keyError, valueError;
    if (keyDirtyState[i] && emptyKeyCheck(tag.key)) {
      keyError = i18n("i18nStrings.emptyKeyError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.emptyKeyError);
    } else if (awsPrefixCheck(tag.key)) {
      keyError = i18n("i18nStrings.awsPrefixError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.awsPrefixError);
    } else if (invalidCharCheck(tag.key, charRegex)) {
      keyError = i18n("i18nStrings.invalidKeyError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.invalidKeyError);
    } else if (maxKeyLengthCheck(tag.key)) {
      keyError = i18n("i18nStrings.maxKeyCharLengthError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.maxKeyCharLengthError);
    } else if (duplicateKeyCheck(tag.key, tagKeysCache)) {
      keyError = i18n("i18nStrings.duplicateKeyError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.duplicateKeyError);
    }
    if (!tag.markedForRemoval) {
      if (invalidCharCheck(tag.value, charRegex)) {
        valueError = i18n("i18nStrings.invalidValueError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.invalidValueError);
      } else if (maxValueLengthCheck(tag.value)) {
        valueError = i18n("i18nStrings.maxValueCharLengthError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.maxValueCharLengthError);
      }
    }
    if (keyError || valueError) {
      return { key: keyError, value: valueError };
    }
  });
}
var awsPrefixCheck = (value) => {
  return value.toLowerCase().indexOf(SYSTEM_TAG_PREFIX) === 0;
};
var emptyKeyCheck = (value) => {
  return !value || value.trim().length === 0;
};
var maxKeyLengthCheck = (value) => {
  return value && value.length > MAX_KEY_LENGTH;
};
var duplicateKeyCheck = (value, keyCache) => {
  var _a;
  return ((_a = keyCache === null || keyCache === void 0 ? void 0 : keyCache[value]) !== null && _a !== void 0 ? _a : 0) > 1;
};
var maxValueLengthCheck = (value) => {
  return value && value.length > MAX_VALUE_LENGTH;
};
var invalidCharCheck = (value, validCharRegex = DEFAULT_CHAR_REGEX) => {
  if (!value || !validCharRegex) {
    return false;
  }
  return !validCharRegex.test(value);
};

// node_modules/@cloudscape-design/components/tag-editor/utils.js
var import_react213 = __toESM(require_react());
function findIndex2(array, condition) {
  for (let i = 0; i < array.length; i++) {
    if (condition(array[i])) {
      return i;
    }
  }
  return -1;
}
function makeMemoizedArray(prev, next, isEqual2) {
  for (let i = 0; i < Math.max(prev.length, next.length); i++) {
    if (i === next.length) {
      return prev.slice(0, i);
    }
    if (i === prev.length) {
      return [...prev.slice(0, i), ...next.slice(i)];
    }
    if (!isEqual2(prev[i], next[i])) {
      return [...prev.slice(0, i), next[i], ...makeMemoizedArray(prev.slice(i + 1), next.slice(i + 1), isEqual2)];
    }
  }
  return prev;
}
function useMemoizedArray(array, isEqual2) {
  const ref = (0, import_react213.useRef)(array);
  const updated = makeMemoizedArray(ref.current, array, isEqual2);
  (0, import_react213.useEffect)(() => {
    ref.current = updated;
  }, [updated]);
  return updated;
}

// node_modules/@cloudscape-design/components/tag-editor/index.js
var isItemRemovable = ({ tag }) => !tag.markedForRemoval;
var TagEditor = import_react214.default.forwardRef((_a, ref) => {
  var _b, _c, _d, _e, _f, _g;
  var { tags = [], i18nStrings, loading = false, tagLimit = 50, allowedCharacterPattern, keysRequest, valuesRequest, onChange } = _a, restProps = __rest(_a, ["tags", "i18nStrings", "loading", "tagLimit", "allowedCharacterPattern", "keysRequest", "valuesRequest", "onChange"]);
  const baseComponentProps = useBaseComponent("TagEditor");
  const i18n = useInternalI18n("tag-editor");
  const remainingTags = tagLimit - tags.filter((tag) => !tag.markedForRemoval).length;
  const attributeEditorRef = (0, import_react214.useRef)(null);
  const keyInputRefs = (0, import_react214.useRef)([]);
  const valueInputRefs = (0, import_react214.useRef)([]);
  const undoButtonRefs = (0, import_react214.useRef)([]);
  const initialKeyOptionsRef = (0, import_react214.useRef)([]);
  const keyDirtyStateRef = (0, import_react214.useRef)([]);
  const focusEventRef = (0, import_react214.useRef)();
  (0, import_react214.useLayoutEffect)(() => {
    var _a2;
    (_a2 = focusEventRef.current) === null || _a2 === void 0 ? void 0 : _a2.apply(void 0);
    focusEventRef.current = void 0;
  });
  const errors = validate2(tags, keyDirtyStateRef.current, i18n, i18nStrings, allowedCharacterPattern ? new RegExp(allowedCharacterPattern) : void 0);
  const internalTags = useMemoizedArray(tags.map((tag, i) => ({ tag, error: errors[i] })), (prev, next) => {
    var _a2, _b2, _c2, _d2;
    return prev.tag === next.tag && ((_a2 = prev.error) === null || _a2 === void 0 ? void 0 : _a2.key) === ((_b2 = next.error) === null || _b2 === void 0 ? void 0 : _b2.key) && ((_c2 = prev.error) === null || _c2 === void 0 ? void 0 : _c2.value) === ((_d2 = next.error) === null || _d2 === void 0 ? void 0 : _d2.value);
  });
  (0, import_react214.useImperativeHandle)(ref, () => ({
    focus() {
      var _a2, _b2;
      const errorIndex = findIndex2(internalTags, ({ error }) => (error === null || error === void 0 ? void 0 : error.key) || (error === null || error === void 0 ? void 0 : error.value));
      if (errorIndex !== -1) {
        const refArray = ((_a2 = internalTags[errorIndex].error) === null || _a2 === void 0 ? void 0 : _a2.key) ? keyInputRefs : valueInputRefs;
        (_b2 = refArray.current[errorIndex]) === null || _b2 === void 0 ? void 0 : _b2.focus();
      }
    }
  }), [internalTags]);
  const validateAndFire = (0, import_react214.useCallback)((newTags) => {
    fireNonCancelableEvent(onChange, {
      tags: newTags,
      valid: !validate2(newTags, keyDirtyStateRef.current, i18n, i18nStrings, allowedCharacterPattern ? new RegExp(allowedCharacterPattern) : void 0).some((error) => error)
    });
  }, [onChange, i18n, i18nStrings, allowedCharacterPattern]);
  const onAddButtonClick = () => {
    validateAndFire([...tags, { key: "", value: "", existing: false }]);
    focusEventRef.current = () => {
      var _a2;
      (_a2 = keyInputRefs.current[tags.length]) === null || _a2 === void 0 ? void 0 : _a2.focus();
    };
  };
  const onRemoveButtonClick = useStableEventHandler(({ detail }) => {
    var _a2, _b2, _c2, _d2, _e2;
    const existing = tags[detail.itemIndex].existing;
    validateAndFire([
      ...tags.slice(0, detail.itemIndex),
      ...existing ? [Object.assign(Object.assign({}, tags[detail.itemIndex]), { markedForRemoval: true })] : [],
      ...tags.slice(detail.itemIndex + 1)
    ]);
    if (existing) {
      focusEventRef.current = () => {
        var _a3;
        (_a3 = undoButtonRefs.current[detail.itemIndex]) === null || _a3 === void 0 ? void 0 : _a3.focus();
      };
    } else {
      keyDirtyStateRef.current.splice(detail.itemIndex, 1);
      const nextKey = keyInputRefs.current[detail.itemIndex + 1];
      if (nextKey) {
        (_a2 = keyInputRefs.current[detail.itemIndex]) === null || _a2 === void 0 ? void 0 : _a2.focus();
      } else if (detail.itemIndex > 0) {
        const previousIsExisting = tags[detail.itemIndex - 1].existing;
        if (previousIsExisting) {
          if (tags[detail.itemIndex - 1].markedForRemoval) {
            (_b2 = undoButtonRefs.current[detail.itemIndex - 1]) === null || _b2 === void 0 ? void 0 : _b2.focus();
          } else {
            (_c2 = valueInputRefs.current[detail.itemIndex - 1]) === null || _c2 === void 0 ? void 0 : _c2.focus();
          }
        } else {
          (_d2 = keyInputRefs.current[detail.itemIndex - 1]) === null || _d2 === void 0 ? void 0 : _d2.focus();
        }
      } else {
        (_e2 = attributeEditorRef.current) === null || _e2 === void 0 ? void 0 : _e2.focusAddButton();
      }
    }
  });
  const onKeyChange = useStableEventHandler((value, row) => {
    keyDirtyStateRef.current[row] = true;
    validateAndFire([...tags.slice(0, row), Object.assign(Object.assign({}, tags[row]), { key: value }), ...tags.slice(row + 1)]);
  });
  const onKeyBlur = useStableEventHandler((row) => {
    keyDirtyStateRef.current[row] = true;
    validateAndFire([...tags]);
  });
  const onValueChange = useStableEventHandler((value, row) => {
    validateAndFire([...tags.slice(0, row), Object.assign(Object.assign({}, tags[row]), { value }), ...tags.slice(row + 1)]);
  });
  const onUndoRemoval = useStableEventHandler((row) => {
    validateAndFire([...tags.slice(0, row), Object.assign(Object.assign({}, tags[row]), { markedForRemoval: false }), ...tags.slice(row + 1)]);
    focusEventRef.current = () => {
      var _a2;
      (_a2 = attributeEditorRef.current) === null || _a2 === void 0 ? void 0 : _a2.focusRemoveButton(row);
    };
  });
  const definition = (0, import_react214.useMemo)(() => [
    {
      label: i18n("i18nStrings.keyHeader", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.keyHeader),
      control: ({ tag }, row) => import_react214.default.createElement(TagControl, { row, value: tag.key, readOnly: tag.existing, limit: 200, defaultOptions: [], placeholder: i18n("i18nStrings.keyPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.keyPlaceholder), errorText: i18n("i18nStrings.keysSuggestionError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.keysSuggestionError), loadingText: i18n("i18nStrings.keysSuggestionLoading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.keysSuggestionLoading), suggestionText: i18n("i18nStrings.keySuggestion", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.keySuggestion), tooManySuggestionText: i18n("i18nStrings.tooManyKeysSuggestion", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tooManyKeysSuggestion), enteredTextLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.enteredKeyLabel, clearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearAriaLabel, onRequest: keysRequest, onChange: onKeyChange, onBlur: onKeyBlur, initialOptionsRef: initialKeyOptionsRef, ref: (ref2) => {
        keyInputRefs.current[row] = ref2;
      } }),
      errorText: ({ error }) => error === null || error === void 0 ? void 0 : error.key
    },
    {
      label: import_react214.default.createElement(
        import_react214.default.Fragment,
        null,
        i18n("i18nStrings.valueHeader", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.valueHeader),
        " -",
        " ",
        import_react214.default.createElement("i", null, i18n("i18nStrings.optional", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.optional))
      ),
      control: ({ tag }, row) => {
        var _a2;
        return tag.markedForRemoval ? import_react214.default.createElement(
          "div",
          { role: "alert" },
          import_react214.default.createElement(
            InternalBox,
            { margin: { top: "xxs" } },
            i18n("i18nStrings.undoPrompt", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.undoPrompt),
            " ",
            import_react214.default.createElement(UndoButton, { onClick: () => onUndoRemoval(row), ref: (elem) => {
              undoButtonRefs.current[row] = elem;
            } }, i18n("i18nStrings.undoButton", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.undoButton))
          )
        ) : import_react214.default.createElement(TagControl, { row, value: tag.value, readOnly: false, limit: 200, defaultOptions: (_a2 = tag.valueSuggestionOptions) !== null && _a2 !== void 0 ? _a2 : [], placeholder: i18n("i18nStrings.valuePlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.valuePlaceholder), errorText: i18n("i18nStrings.valuesSuggestionError", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.valuesSuggestionError), loadingText: i18n("i18nStrings.valuesSuggestionLoading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.valuesSuggestionLoading), suggestionText: i18n("i18nStrings.valueSuggestion", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.valueSuggestion), tooManySuggestionText: i18n("i18nStrings.tooManyValuesSuggestion", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tooManyValuesSuggestion), enteredTextLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.enteredValueLabel, clearAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.clearAriaLabel, filteringKey: tag.key, onRequest: valuesRequest && ((value) => valuesRequest(tag.key, value)), onChange: onValueChange, ref: (ref2) => {
          valueInputRefs.current[row] = ref2;
        } });
      },
      errorText: ({ error }) => error === null || error === void 0 ? void 0 : error.value
    }
  ], [i18n, i18nStrings, keysRequest, onKeyChange, onKeyBlur, valuesRequest, onValueChange, onUndoRemoval]);
  const forwardedI18nStrings = (0, import_react214.useMemo)(() => ({
    errorIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel,
    itemRemovedAriaLive: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.itemRemovedAriaLive,
    removeButtonAriaLabel: i18n("i18nStrings.removeButtonAriaLabel", (i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.removeButtonAriaLabel) && (({ tag }) => i18nStrings.removeButtonAriaLabel(tag)), (format3) => ({ tag }) => format3({ tag__key: tag.key }))
  }), [i18nStrings, i18n]);
  if (loading) {
    return import_react214.default.createElement(
      "div",
      { className: styles_css_default62.root, ref: baseComponentProps.__internalRootRef },
      import_react214.default.createElement(
        StatusIndicator,
        { className: styles_css_default62.loading, type: "loading" },
        import_react214.default.createElement(live_region_default, { visible: true }, i18n("i18nStrings.loading", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.loading))
      )
    );
  }
  const baseProps = getBaseProps(restProps);
  return import_react214.default.createElement(internal_default12, Object.assign({}, baseProps, baseComponentProps, { ref: attributeEditorRef, className: clsx_m_default(styles_css_default62.root, baseProps.className), items: internalTags, isItemRemovable, onAddButtonClick, onRemoveButtonClick, addButtonText: (_b = i18n("i18nStrings.addButton", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.addButton)) !== null && _b !== void 0 ? _b : "", removeButtonText: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.removeButton, disableAddButton: remainingTags <= 0, empty: i18n("i18nStrings.emptyTags", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.emptyTags), additionalInfo: remainingTags < 0 ? import_react214.default.createElement(FormFieldError, { errorIconAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.errorIconAriaLabel }, (_d = i18n("i18nStrings.tagLimitExceeded", (_c = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tagLimitExceeded) === null || _c === void 0 ? void 0 : _c.call(i18nStrings, tagLimit), (format3) => format3({ tagLimit }))) !== null && _d !== void 0 ? _d : "") : remainingTags === 0 ? (_f = i18n("i18nStrings.tagLimitReached", (_e = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tagLimitReached) === null || _e === void 0 ? void 0 : _e.call(i18nStrings, tagLimit), (format3) => format3({ tagLimit }))) !== null && _f !== void 0 ? _f : "" : i18n("i18nStrings.tagLimit", (_g = i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tagLimit) === null || _g === void 0 ? void 0 : _g.call(i18nStrings, remainingTags, tagLimit), (format3) => format3({ tagLimitAvailable: `${remainingTags === tagLimit}`, availableTags: remainingTags, tagLimit })), definition, i18nStrings: forwardedI18nStrings }));
});
applyDisplayName(TagEditor, "TagEditor");
var tag_editor_default = TagEditor;

// node_modules/@cloudscape-design/components/text-content/index.js
var import_react215 = __toESM(require_react());

// node_modules/@cloudscape-design/components/text-content/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/text-content/styles.scoped.css";
var styles_css_default63 = {
  "text-content": "awsui_text-content_6absk_1gnti_94"
};

// node_modules/@cloudscape-design/components/text-content/index.js
function TextContent(_a) {
  var { children } = _a, props2 = __rest(_a, ["children"]);
  const { __internalRootRef } = useBaseComponent("TextContent");
  const baseProps = getBaseProps(props2);
  const className = clsx_m_default(baseProps.className, styles_css_default63["text-content"]);
  return import_react215.default.createElement("div", Object.assign({}, baseProps, { className, ref: __internalRootRef }), children);
}
applyDisplayName(TextContent, "TextContent");

// node_modules/@cloudscape-design/components/text-filter/index.js
var import_react216 = __toESM(require_react());
var TextFilter = import_react216.default.forwardRef((props2, ref) => {
  const baseComponentProps = useBaseComponent("TextFilter");
  return import_react216.default.createElement(internal_default19, Object.assign({}, props2, baseComponentProps, { ref }));
});
applyDisplayName(TextFilter, "TextFilter");
var text_filter_default = TextFilter;

// node_modules/@cloudscape-design/components/textarea/index.js
var import_react217 = __toESM(require_react());

// node_modules/@cloudscape-design/components/textarea/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/textarea/styles.scoped.css";
var styles_css_default64 = {
  "root": "awsui_root_qk1j1_195j8_93",
  "textarea": "awsui_textarea_qk1j1_195j8_97",
  "textarea-readonly": "awsui_textarea-readonly_qk1j1_195j8_123",
  "textarea-invalid": "awsui_textarea-invalid_qk1j1_195j8_159"
};

// node_modules/@cloudscape-design/components/textarea/index.js
var Textarea = import_react217.default.forwardRef((_a, ref) => {
  var { value, autoComplete = true, disabled, readOnly, disableBrowserAutocorrect, disableBrowserSpellcheck, spellcheck, onKeyDown, onKeyUp, onChange, onBlur, onFocus, ariaRequired, name, rows, placeholder, autoFocus, ariaLabel } = _a, rest = __rest(_a, ["value", "autoComplete", "disabled", "readOnly", "disableBrowserAutocorrect", "disableBrowserSpellcheck", "spellcheck", "onKeyDown", "onKeyUp", "onChange", "onBlur", "onFocus", "ariaRequired", "name", "rows", "placeholder", "autoFocus", "ariaLabel"]);
  const { __internalRootRef } = useBaseComponent("Textarea");
  const { ariaLabelledby, ariaDescribedby, controlId, invalid } = useFormFieldContext(rest);
  const baseProps = getBaseProps(rest);
  const textareaRef = (0, import_react217.useRef)(null);
  useForwardFocus(ref, textareaRef);
  const attributes = {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    "aria-describedby": ariaDescribedby,
    "aria-required": ariaRequired ? "true" : void 0,
    "aria-invalid": invalid ? "true" : void 0,
    name,
    placeholder,
    autoFocus,
    className: clsx_m_default(styles_css_default64.textarea, {
      [styles_css_default64["textarea-readonly"]]: readOnly,
      [styles_css_default64["textarea-invalid"]]: invalid
    }),
    autoComplete: convertAutoComplete(autoComplete),
    spellCheck: spellcheck,
    disabled,
    readOnly: readOnly ? true : void 0,
    rows: rows || 3,
    onKeyDown: onKeyDown && ((event) => fireKeyboardEvent(onKeyDown, event)),
    onKeyUp: onKeyUp && ((event) => fireKeyboardEvent(onKeyUp, event)),
    value: value || "",
    onChange: onChange && ((event) => fireNonCancelableEvent(onChange, { value: event.target.value })),
    onBlur: onBlur && (() => fireNonCancelableEvent(onBlur)),
    onFocus: onFocus && (() => fireNonCancelableEvent(onFocus))
  };
  if (disableBrowserAutocorrect) {
    attributes.autoCorrect = "off";
    attributes.autoCapitalize = "off";
  }
  if (disableBrowserSpellcheck) {
    attributes.spellCheck = "false";
  }
  return import_react217.default.createElement(
    "span",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default64.root, baseProps.className), ref: __internalRootRef }),
    import_react217.default.createElement("textarea", Object.assign({ ref: textareaRef, id: controlId }, attributes))
  );
});
applyDisplayName(Textarea, "Textarea");
var textarea_default = Textarea;

// node_modules/@cloudscape-design/components/tiles/index.js
var import_react218 = __toESM(require_react());
var Tiles = import_react218.default.forwardRef((props2, ref) => {
  const baseComponentProps = useBaseComponent("Tiles");
  return import_react218.default.createElement(internal_default20, Object.assign({ ref }, props2, baseComponentProps));
});
applyDisplayName(Tiles, "Tiles");
var tiles_default = Tiles;

// node_modules/@cloudscape-design/components/time-input/index.js
var import_react219 = __toESM(require_react());
var TimeInput = import_react219.default.forwardRef((_a, ref) => {
  var { format: format3 = "hh:mm:ss", use24Hour = true, autoComplete = true } = _a, props2 = __rest(_a, ["format", "use24Hour", "autoComplete"]);
  const baseComponentProps = useBaseComponent("TimeInput");
  return import_react219.default.createElement(internal_default16, Object.assign({ format: format3, use24Hour, autoComplete }, props2, baseComponentProps, { ref }));
});
applyDisplayName(TimeInput, "TimeInput");
var time_input_default = TimeInput;

// node_modules/@cloudscape-design/components/toggle/index.js
var import_react220 = __toESM(require_react());
var Toggle = import_react220.default.forwardRef((props2, ref) => {
  const baseComponentProps = useBaseComponent("Toggle");
  return import_react220.default.createElement(internal_default8, Object.assign({}, props2, baseComponentProps, { ref }));
});
applyDisplayName(Toggle, "Toggle");
var toggle_default = Toggle;

// node_modules/@cloudscape-design/components/token-group/index.js
var import_react221 = __toESM(require_react());
function TokenGroup(_a) {
  var { items = [], alignment = "horizontal" } = _a, props2 = __rest(_a, ["items", "alignment"]);
  const baseComponentProps = useBaseComponent("TokenGroup");
  return import_react221.default.createElement(InternalTokenGroup, Object.assign({ items, alignment }, props2, baseComponentProps));
}
applyDisplayName(TokenGroup, "TokenGroup");

// node_modules/@cloudscape-design/components/tutorial-panel/index.js
var import_react227 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tutorial-panel/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/tutorial-panel/styles.scoped.css";
var styles_css_default65 = {
  "tutorial-panel": "awsui_tutorial-panel_1oin5_2qg7z_93"
};

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-list/index.js
var import_react222 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-list/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-list/styles.scoped.css";
var styles_css_default66 = {
  "content-enter": "awsui_content-enter_ig8mp_1hce7_93",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_ig8mp_1hce7_1",
  "tutorial-list": "awsui_tutorial-list_ig8mp_1hce7_119",
  "tutorial-box": "awsui_tutorial-box_ig8mp_1hce7_134",
  "tutorial-box-title": "awsui_tutorial-box-title_ig8mp_1hce7_154",
  "tutorial-description-plaintext": "awsui_tutorial-description-plaintext_ig8mp_1hce7_160",
  "tutorial-description": "awsui_tutorial-description_ig8mp_1hce7_160",
  "expandable-section": "awsui_expandable-section_ig8mp_1hce7_172",
  "expanded": "awsui_expanded_ig8mp_1hce7_176",
  "button-wrapper": "awsui_button-wrapper_ig8mp_1hce7_180",
  "start": "awsui_start_ig8mp_1hce7_184",
  "expand-button": "awsui_expand-button_ig8mp_1hce7_188",
  "collapse-button": "awsui_collapse-button_ig8mp_1hce7_192",
  "learn-more-link": "awsui_learn-more-link_ig8mp_1hce7_196",
  "title": "awsui_title_ig8mp_1hce7_200",
  "prerequisites-alert": "awsui_prerequisites-alert_ig8mp_1hce7_204",
  "completed": "awsui_completed_ig8mp_1hce7_208",
  "download-link": "awsui_download-link_ig8mp_1hce7_212"
};

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-list/index.js
function TutorialList({ i18nStrings, tutorials, loading = false, onStartTutorial, downloadUrl }) {
  checkSafeUrl("TutorialPanel", downloadUrl);
  const isRefresh = useVisualRefresh();
  return import_react222.default.createElement(
    import_react222.default.Fragment,
    null,
    import_react222.default.createElement(
      InternalSpaceBetween,
      { size: "s" },
      import_react222.default.createElement(
        InternalSpaceBetween,
        { size: "m" },
        import_react222.default.createElement(InternalBox, { variant: "h2", fontSize: isRefresh ? "heading-m" : "heading-l", padding: { bottom: "n" } }, i18nStrings.tutorialListTitle),
        import_react222.default.createElement(InternalBox, { variant: "p", color: "text-body-secondary", padding: "n" }, i18nStrings.tutorialListDescription)
      ),
      import_react222.default.createElement(
        InternalSpaceBetween,
        { size: "l" },
        downloadUrl && import_react222.default.createElement(
          "a",
          { href: downloadUrl, target: "_blank", rel: "noopener noreferrer", className: styles_css_default66["download-link"], "aria-label": i18nStrings.labelTutorialListDownloadLink },
          import_react222.default.createElement(internal_default, { name: "download" }),
          import_react222.default.createElement(InternalBox, { padding: { left: "xs" }, color: "inherit", fontWeight: "bold", display: "inline" }, i18nStrings.tutorialListDownloadLinkText)
        ),
        loading ? import_react222.default.createElement(
          StatusIndicator,
          { type: "loading" },
          import_react222.default.createElement(live_region_default, { visible: true }, i18nStrings.loadingText)
        ) : import_react222.default.createElement("ul", { className: styles_css_default66["tutorial-list"], role: "list" }, tutorials.map((tutorial, index) => import_react222.default.createElement(Tutorial, { tutorial, key: index, onStartTutorial, i18nStrings })))
      )
    )
  );
}
function Tutorial({ tutorial, onStartTutorial: onStartTutorialEventHandler, i18nStrings }) {
  var _a;
  checkSafeUrl("TutorialPanel", tutorial.learnMoreUrl);
  const controlId = useUniqueId();
  const triggerControldId = useUniqueId();
  const headerId = useUniqueId();
  const isRefresh = useVisualRefresh();
  const onStartTutorial = (0, import_react222.useCallback)(() => {
    fireNonCancelableEvent(onStartTutorialEventHandler, { tutorial });
  }, [onStartTutorialEventHandler, tutorial]);
  const [expanded, setExpanded] = (0, import_react222.useState)(!tutorial.prerequisitesNeeded && !tutorial.completed);
  const onClick = (0, import_react222.useCallback)(() => {
    setExpanded((expanded2) => !expanded2);
  }, []);
  return import_react222.default.createElement(
    "li",
    { className: styles_css_default66["tutorial-box"], role: "listitem" },
    import_react222.default.createElement(
      InternalSpaceBetween,
      { size: "xs" },
      import_react222.default.createElement(
        "div",
        { className: styles_css_default66["tutorial-box-title"] },
        import_react222.default.createElement(InternalBox, { variant: "h3", fontSize: isRefresh ? "heading-s" : "heading-m", id: headerId, margin: { right: "xs" }, padding: "n", className: styles_css_default66.title }, tutorial.title),
        import_react222.default.createElement(
          "div",
          { className: styles_css_default66["button-wrapper"] },
          import_react222.default.createElement(InternalButton, { id: triggerControldId, variant: "icon", ariaExpanded: expanded, __nativeAttributes: {
            "aria-controls": controlId,
            "aria-labelledby": headerId
          }, formAction: "none", onClick, className: expanded ? styles_css_default66["collapse-button"] : styles_css_default66["expand-button"], iconName: expanded ? "angle-up" : "angle-down" })
        )
      ),
      tutorial.completed ? import_react222.default.createElement(StatusIndicator, { __size: "inherit", type: "success", className: styles_css_default66.completed, wrapText: true }, i18nStrings.tutorialCompletedText) : null
    ),
    import_react222.default.createElement(
      "div",
      { "aria-live": "polite" },
      import_react222.default.createElement(
        CSSTransition_default,
        { in: expanded, timeout: 30, classNames: { enter: styles_css_default66["content-enter"] } },
        import_react222.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default66["expandable-section"], expanded && styles_css_default66.expanded), id: controlId },
          import_react222.default.createElement(
            InternalSpaceBetween,
            { size: "l" },
            import_react222.default.createElement(
              InternalSpaceBetween,
              { size: "m" },
              tutorial.prerequisitesNeeded && tutorial.prerequisitesAlert && import_react222.default.createElement(InternalAlert, { type: "info", className: styles_css_default66["prerequisites-alert"] }, tutorial.prerequisitesAlert),
              import_react222.default.createElement(
                InternalSpaceBetween,
                { size: "s" },
                import_react222.default.createElement(
                  InternalBox,
                  { color: "text-body-secondary" },
                  import_react222.default.createElement("div", { className: clsx_m_default(styles_css_default66["tutorial-description"], typeof tutorial.description === "string" && styles_css_default66["tutorial-description-plaintext"]) }, tutorial.description)
                ),
                tutorial.learnMoreUrl && import_react222.default.createElement(internal_default4, { href: tutorial.learnMoreUrl, className: styles_css_default66["learn-more-link"], externalIconAriaLabel: i18nStrings.labelLearnMoreExternalIcon, ariaLabel: i18nStrings.labelLearnMoreLink, external: true }, i18nStrings.learnMoreLinkText)
              )
            ),
            import_react222.default.createElement(
              InternalBox,
              { margin: { bottom: "xxs" } },
              import_react222.default.createElement(InternalButton, { onClick: onStartTutorial, disabled: (_a = tutorial.prerequisitesNeeded) !== null && _a !== void 0 ? _a : false, formAction: "none", className: styles_css_default66.start }, tutorial.completed ? i18nStrings.restartTutorialButtonText : i18nStrings.startTutorialButtonText)
            )
          )
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/index.js
var import_react226 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/styles.scoped.css";
var styles_css_default67 = {
  "tutorial-list": "awsui_tutorial-list_1u70p_1v9rp_93",
  "tutorial-title": "awsui_tutorial-title_1u70p_1v9rp_108",
  "task": "awsui_task_1u70p_1v9rp_115",
  "task-title": "awsui_task-title_1u70p_1v9rp_123",
  "task-title--status": "awsui_task-title--status_1u70p_1v9rp_131",
  "current-task": "awsui_current-task_1u70p_1v9rp_135",
  "successful-task": "awsui_successful-task_1u70p_1v9rp_139",
  "congratulation-message": "awsui_congratulation-message_1u70p_1v9rp_143",
  "congratulation-message--status": "awsui_congratulation-message--status_1u70p_1v9rp_151",
  "plaintext-congratulation-description": "awsui_plaintext-congratulation-description_1u70p_1v9rp_155",
  "divider": "awsui_divider_1u70p_1v9rp_159",
  "step-list": "awsui_step-list_1u70p_1v9rp_163",
  "step": "awsui_step_1u70p_1v9rp_163",
  "expandable-section-wrapper": "awsui_expandable-section-wrapper_1u70p_1v9rp_172",
  "expandable-section-header": "awsui_expandable-section-header_1u70p_1v9rp_176",
  "step-title": "awsui_step-title_1u70p_1v9rp_181",
  "feedback-link": "awsui_feedback-link_1u70p_1v9rp_182",
  "dismiss-button": "awsui_dismiss-button_1u70p_1v9rp_183",
  "completion-screen-title": "awsui_completion-screen-title_1u70p_1v9rp_184",
  "completion-screen-description": "awsui_completion-screen-description_1u70p_1v9rp_185"
};

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/congratulation-screen.js
var import_react223 = __toESM(require_react());
function CongratulationScreen({ children, onFeedbackClick, i18nStrings }) {
  return import_react223.default.createElement(
    InternalSpaceBetween,
    { size: "xxl" },
    import_react223.default.createElement(
      InternalSpaceBetween,
      { size: "xl" },
      import_react223.default.createElement(
        "div",
        { className: styles_css_default67["congratulation-message"] },
        import_react223.default.createElement(StatusIndicator, { __size: "inherit", type: "success", className: styles_css_default67["congratulation-message--status"] }),
        import_react223.default.createElement("div", { className: styles_css_default67["completion-screen-title"] }, i18nStrings.completionScreenTitle)
      ),
      import_react223.default.createElement(
        InternalBox,
        { color: "text-body-secondary" },
        import_react223.default.createElement("div", { className: clsx_m_default({
          [styles_css_default67["completion-screen-description"]]: true,
          [styles_css_default67["plaintext-congratulation-description"]]: typeof children === "string"
        }) }, children)
      )
    ),
    import_react223.default.createElement("div", { className: styles_css_default67.divider }),
    onFeedbackClick && import_react223.default.createElement(internal_default4, { onFollow: onFeedbackClick, className: styles_css_default67["feedback-link"] }, i18nStrings.feedbackLinkText)
  );
}

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/task-list.js
var import_react225 = __toESM(require_react());

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/task.js
var import_react224 = __toESM(require_react());
function getStatusIndicatorType(taskIndex, currentTaskIndex) {
  if (taskIndex < currentTaskIndex) {
    return "success";
  }
  if (taskIndex === currentTaskIndex) {
    return "in-progress";
  }
  return "pending";
}
function Task({ task, taskIndex, currentTaskIndex, expanded, onToggleExpand, i18nStrings }) {
  const statusIndicatorType = getStatusIndicatorType(taskIndex, currentTaskIndex);
  const onExpandChange = (0, import_react224.useCallback)(() => {
    onToggleExpand(taskIndex);
  }, [onToggleExpand, taskIndex]);
  return import_react224.default.createElement(
    "li",
    { className: styles_css_default67.task },
    import_react224.default.createElement(
      InternalSpaceBetween,
      { size: "xxs" },
      import_react224.default.createElement(
        "div",
        { className: styles_css_default67["task-title"] },
        import_react224.default.createElement(StatusIndicator, { __size: "inherit", type: statusIndicatorType, iconAriaLabel: i18nStrings.labelsTaskStatus[statusIndicatorType], className: styles_css_default67["task-title--status"] }),
        import_react224.default.createElement(InternalBox, { variant: "h3", padding: { left: "xxxs", vertical: "n" }, fontSize: "heading-s", color: taskIndex < currentTaskIndex ? "text-status-success" : "text-status-inactive" }, i18nStrings.taskTitle(taskIndex, task.title))
      ),
      import_react224.default.createElement(
        "div",
        { className: styles_css_default67["expandable-section-wrapper"] },
        import_react224.default.createElement(
          InternalExpandableSection,
          { header: import_react224.default.createElement("span", { className: styles_css_default67["expandable-section-header"] }, i18nStrings.labelTotalSteps(task.steps.length)), expanded, onChange: onExpandChange, headerAriaLabel: joinStrings(i18nStrings.taskTitle(taskIndex, task.title), i18nStrings.labelTotalSteps(task.steps.length)) },
          import_react224.default.createElement("ol", { className: styles_css_default67["step-list"] }, task.steps.map((step2, stepIndex) => import_react224.default.createElement(
            "li",
            { key: stepIndex, className: styles_css_default67.step },
            import_react224.default.createElement(InternalBox, { color: "text-body-secondary", fontSize: "body-m", padding: { left: "l" }, className: styles_css_default67["step-title"] }, i18nStrings.stepTitle(stepIndex, step2.title))
          )))
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/task-list.js
function TaskList({ tasks, onExitTutorial, currentGlobalStepIndex, i18nStrings }) {
  const currentTaskIndex = getStepInfo(tasks, currentGlobalStepIndex !== null && currentGlobalStepIndex !== void 0 ? currentGlobalStepIndex : 0).taskIndex;
  const [expandedTasks, setExpandedTasks] = (0, import_react225.useState)({ [currentTaskIndex]: true });
  const onToggleExpand = (0, import_react225.useCallback)((stepIndex) => {
    setExpandedTasks((prevTasks) => Object.assign(Object.assign({}, prevTasks), { [stepIndex]: !prevTasks[stepIndex] }));
  }, []);
  (0, import_react225.useEffect)(() => {
    setExpandedTasks({ [currentTaskIndex]: true });
  }, [currentTaskIndex]);
  return import_react225.default.createElement(
    InternalSpaceBetween,
    { size: "xxl" },
    import_react225.default.createElement("ol", { className: styles_css_default67["tutorial-list"] }, tasks.map((task, index) => {
      var _a;
      return import_react225.default.createElement(Task, { task, key: index, taskIndex: index, currentTaskIndex, expanded: (_a = expandedTasks[index]) !== null && _a !== void 0 ? _a : false, onToggleExpand, i18nStrings });
    })),
    import_react225.default.createElement(
      InternalBox,
      { margin: { top: "xxxs" } },
      import_react225.default.createElement(InternalButton, { onClick: onExitTutorial, formAction: "none", className: styles_css_default67["dismiss-button"] }, i18nStrings.dismissTutorialButtonText)
    )
  );
}

// node_modules/@cloudscape-design/components/tutorial-panel/components/tutorial-detail-view/index.js
function TutorialDetailView({ tutorial, onExitTutorial: onExitTutorialHandler, currentStepIndex = 0, onFeedbackClick: onFeedbackClickHandler, i18nStrings }) {
  const isRefresh = useVisualRefresh();
  const onExitTutorial = (0, import_react226.useCallback)(() => {
    fireNonCancelableEvent(onExitTutorialHandler, { tutorial });
  }, [onExitTutorialHandler, tutorial]);
  const onFeedbackClick = (0, import_react226.useMemo)(() => onFeedbackClickHandler && (() => fireNonCancelableEvent(onFeedbackClickHandler, { tutorial })), [onFeedbackClickHandler, tutorial]);
  return import_react226.default.createElement(
    import_react226.default.Fragment,
    null,
    import_react226.default.createElement(
      InternalSpaceBetween,
      { size: "xl" },
      import_react226.default.createElement(
        "div",
        { className: styles_css_default67["tutorial-title"] },
        import_react226.default.createElement(InternalButton, { variant: "icon", onClick: onExitTutorial, ariaLabel: i18nStrings.labelExitTutorial, formAction: "none", iconName: "arrow-left" }),
        import_react226.default.createElement(InternalBox, { variant: "h2", fontSize: isRefresh ? "heading-m" : "heading-l", padding: { top: "xxs" }, margin: { left: "s" } }, tutorial.title)
      ),
      import_react226.default.createElement(
        "div",
        null,
        import_react226.default.createElement("div", { role: "status" }, tutorial.completed && import_react226.default.createElement(CongratulationScreen, { onFeedbackClick, i18nStrings }, tutorial.completedScreenDescription)),
        !tutorial.completed && import_react226.default.createElement(TaskList, { tasks: tutorial.tasks, onExitTutorial, currentGlobalStepIndex: currentStepIndex, i18nStrings })
      )
    )
  );
}

// node_modules/@cloudscape-design/components/tutorial-panel/index.js
function TutorialPanel(_a) {
  var { i18nStrings, loading, tutorials, onFeedbackClick, downloadUrl } = _a, restProps = __rest(_a, ["i18nStrings", "loading", "tutorials", "onFeedbackClick", "downloadUrl"]);
  const { __internalRootRef } = useBaseComponent("TutorialPanel");
  const baseProps = getBaseProps(restProps);
  const context = (0, import_react227.useContext)(hotspotContext);
  return import_react227.default.createElement(
    import_react227.default.Fragment,
    null,
    import_react227.default.createElement("div", Object.assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default65["tutorial-panel"]), ref: __internalRootRef }), context.currentTutorial ? import_react227.default.createElement(TutorialDetailView, { i18nStrings, tutorial: context.currentTutorial, onExitTutorial: context.onExitTutorial, currentStepIndex: context.currentStepIndex, onFeedbackClick }) : import_react227.default.createElement(TutorialList, { i18nStrings, tutorials, loading, onStartTutorial: context.onStartTutorial, downloadUrl }))
  );
}
applyDisplayName(TutorialPanel, "TutorialPanel");

// node_modules/@cloudscape-design/components/wizard/index.js
var import_react234 = __toESM(require_react());

// node_modules/@cloudscape-design/components/wizard/internal.js
var import_react233 = __toESM(require_react());

// node_modules/@cloudscape-design/components/wizard/wizard-form.js
var import_react231 = __toESM(require_react());

// node_modules/@cloudscape-design/components/wizard/wizard-actions.js
var import_react229 = __toESM(require_react());

// node_modules/@cloudscape-design/components/wizard/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/cloudscape/node_modules/@cloudscape-design/components/wizard/styles.scoped.css";
var styles_css_default68 = {
  "root": "awsui_root_1xupv_1233m_94",
  "wizard": "awsui_wizard_1xupv_1233m_107",
  "refresh": "awsui_refresh_1xupv_1233m_107",
  "small-container": "awsui_small-container_1xupv_1233m_114",
  "navigation": "awsui_navigation_1xupv_1233m_123",
  "number": "awsui_number_1xupv_1233m_185",
  "circle": "awsui_circle_1xupv_1233m_201",
  "title": "awsui_title_1xupv_1233m_209",
  "active": "awsui_active_1xupv_1233m_238",
  "disabled": "awsui_disabled_1xupv_1233m_249",
  "enabled": "awsui_enabled_1xupv_1233m_259",
  "form": "awsui_form_1xupv_1233m_301",
  "form-header": "awsui_form-header_1xupv_1233m_307",
  "background": "awsui_background_1xupv_1233m_318",
  "form-header-content": "awsui_form-header-content_1xupv_1233m_330",
  "form-component": "awsui_form-component_1xupv_1233m_334",
  "hidden": "awsui_hidden_1xupv_1233m_348",
  "collapsed-steps": "awsui_collapsed-steps_1xupv_1233m_352",
  "collapsed-steps-hidden": "awsui_collapsed-steps-hidden_1xupv_1233m_357",
  "form-header-component-wrapper": "awsui_form-header-component-wrapper_1xupv_1233m_361",
  "form-header-component": "awsui_form-header-component_1xupv_1233m_361",
  "navigation-link": "awsui_navigation-link_1xupv_1233m_374",
  "navigation-link-item": "awsui_navigation-link-item_1xupv_1233m_375",
  "navigation-link-label": "awsui_navigation-link-label_1xupv_1233m_376",
  "navigation-link-active": "awsui_navigation-link-active_1xupv_1233m_380",
  "navigation-link-disabled": "awsui_navigation-link-disabled_1xupv_1233m_385",
  "cancel-button": "awsui_cancel-button_1xupv_1233m_389",
  "previous-button": "awsui_previous-button_1xupv_1233m_390",
  "primary-button": "awsui_primary-button_1xupv_1233m_391",
  "skip-to-button": "awsui_skip-to-button_1xupv_1233m_392",
  "action-buttons": "awsui_action-buttons_1xupv_1233m_396"
};

// node_modules/@cloudscape-design/components/wizard/unmount.js
var import_react228 = __toESM(require_react());
var Unmount = class extends import_react228.default.Component {
  componentWillUnmount() {
    this.props.onUnmount();
  }
  render() {
    return this.props.children;
  }
};

// node_modules/@cloudscape-design/components/wizard/wizard-actions.js
function WizardActions({ cancelButtonText, onCancelClick, isPrimaryLoading, primaryButtonText, primaryButtonLoadingText, onPrimaryClick, showPrevious, previousButtonText, onPreviousClick, showSkipTo, skipToButtonText, onSkipToClick }) {
  const containerRef = (0, import_react229.useRef)(null);
  const primaryButtonRef = (0, import_react229.useRef)(null);
  const onPreviousUnmount = () => {
    var _a, _b;
    if (((_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${styles_css_default68["previous-button"]}`)) === document.activeElement) {
      (_b = primaryButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();
    }
  };
  const onSkipUnmount = () => {
    var _a, _b;
    if (((_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${styles_css_default68["skip-to-button"]}`)) === document.activeElement) {
      (_b = primaryButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();
    }
  };
  return import_react229.default.createElement(
    "div",
    { ref: containerRef },
    import_react229.default.createElement(
      InternalSpaceBetween,
      { direction: "horizontal", size: "xs", className: styles_css_default68["action-buttons"] },
      import_react229.default.createElement(InternalButton, { className: styles_css_default68["cancel-button"], variant: "link", formAction: "none", onClick: onCancelClick }, cancelButtonText),
      showSkipTo && skipToButtonText && import_react229.default.createElement(
        Unmount,
        { onUnmount: onSkipUnmount },
        import_react229.default.createElement(InternalButton, { className: styles_css_default68["skip-to-button"], onClick: onSkipToClick, formAction: "none", disabled: isPrimaryLoading }, skipToButtonText)
      ),
      showPrevious && import_react229.default.createElement(
        Unmount,
        { onUnmount: onPreviousUnmount },
        import_react229.default.createElement(InternalButton, { className: styles_css_default68["previous-button"], onClick: onPreviousClick, formAction: "none", disabled: isPrimaryLoading }, previousButtonText)
      ),
      import_react229.default.createElement(InternalButton, { ref: primaryButtonRef, className: styles_css_default68["primary-button"], variant: "primary", formAction: "none", onClick: onPrimaryClick, loading: isPrimaryLoading, loadingText: primaryButtonLoadingText }, primaryButtonText)
    )
  );
}

// node_modules/@cloudscape-design/components/wizard/wizard-form-header.js
var import_react230 = __toESM(require_react());
function WizardFormHeader({ children, isVisualRefresh }) {
  const overlapElement = useDynamicOverlap();
  return import_react230.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default68["form-header"], isVisualRefresh && styles_css_default68["form-header-refresh"], isVisualRefresh && "awsui-context-content-header"), ref: overlapElement },
    import_react230.default.createElement("div", { className: clsx_m_default(styles_css_default68["form-header-content"]) }, children)
  );
}

// node_modules/@cloudscape-design/components/wizard/wizard-form.js
function WizardForm({ steps, activeStepIndex, isVisualRefresh, showCollapsedSteps, i18nStrings, isPrimaryLoading, allowSkipTo, secondaryActions, onCancelClick, onPreviousClick, onPrimaryClick, onSkipToClick }) {
  var _a;
  const { title, info, description, content, errorText, isOptional } = steps[activeStepIndex] || {};
  const isLastStep = activeStepIndex >= steps.length - 1;
  const skipToTargetIndex = findSkipToTargetIndex(steps, activeStepIndex);
  const isMobile = useMobile();
  const stepHeaderRef = (0, import_react231.useRef)(null);
  useEffectOnUpdate(() => {
    var _a2;
    if (stepHeaderRef && stepHeaderRef.current) {
      (_a2 = stepHeaderRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  }, [activeStepIndex]);
  const showSkipTo = allowSkipTo && skipToTargetIndex !== -1;
  const skipToButtonText = skipToTargetIndex !== -1 && i18nStrings.skipToButtonLabel ? i18nStrings.skipToButtonLabel(steps[skipToTargetIndex], skipToTargetIndex + 1) : void 0;
  return import_react231.default.createElement(
    import_react231.default.Fragment,
    null,
    import_react231.default.createElement(
      WizardFormHeader,
      { isMobile: isMobile || showCollapsedSteps, isVisualRefresh },
      import_react231.default.createElement("div", { className: clsx_m_default(styles_css_default68["collapsed-steps"], !showCollapsedSteps && styles_css_default68["collapsed-steps-hidden"]) }, (_a = i18nStrings.collapsedStepsLabel) === null || _a === void 0 ? void 0 : _a.call(i18nStrings, activeStepIndex + 1, steps.length)),
      import_react231.default.createElement(
        InternalHeader,
        { className: styles_css_default68["form-header-component"], variant: "h1", description, info },
        import_react231.default.createElement(
          "span",
          { className: styles_css_default68["form-header-component-wrapper"], tabIndex: -1, ref: stepHeaderRef },
          title,
          isOptional && import_react231.default.createElement("i", null, ` - ${i18nStrings.optional}`)
        )
      )
    ),
    import_react231.default.createElement(AnalyticsFunnelStep, { stepNameSelector: `.${styles_css_default68["form-header-component-wrapper"]}`, stepNumber: activeStepIndex + 1 }, ({ funnelStepProps }) => import_react231.default.createElement(InternalForm, Object.assign({ className: clsx_m_default(styles_css_default68["form-component"]), actions: import_react231.default.createElement(WizardActions, { cancelButtonText: i18nStrings.cancelButton, primaryButtonText: isLastStep ? i18nStrings.submitButton : i18nStrings.nextButton, primaryButtonLoadingText: isLastStep ? i18nStrings.submitButtonLoadingAnnouncement : i18nStrings.nextButtonLoadingAnnouncement, previousButtonText: i18nStrings.previousButton, onCancelClick, onPreviousClick, onPrimaryClick, onSkipToClick: () => onSkipToClick(skipToTargetIndex), showPrevious: activeStepIndex !== 0, isPrimaryLoading, showSkipTo, skipToButtonText }), secondaryActions, errorText, errorIconAriaLabel: i18nStrings.errorIconAriaLabel }, funnelStepProps), content))
  );
}
function findSkipToTargetIndex(steps, activeStepIndex) {
  let nextRequiredStepIndex = activeStepIndex;
  do {
    nextRequiredStepIndex++;
  } while (nextRequiredStepIndex < steps.length - 1 && steps[nextRequiredStepIndex].isOptional);
  return nextRequiredStepIndex > activeStepIndex + 1 ? nextRequiredStepIndex : -1;
}

// node_modules/@cloudscape-design/components/wizard/wizard-navigation.js
var import_react232 = __toESM(require_react());
var Statuses;
(function(Statuses2) {
  Statuses2["Active"] = "active";
  Statuses2["Unvisited"] = "unvisited";
  Statuses2["Visited"] = "visited";
  Statuses2["Next"] = "next";
})(Statuses || (Statuses = {}));
function Navigation({ activeStepIndex, farthestStepIndex, allowSkipTo, hidden, i18nStrings, isVisualRefresh, isLoadingNextStep, onStepClick, onSkipToClick, steps }) {
  return import_react232.default.createElement(
    "nav",
    { className: clsx_m_default(styles_css_default68.navigation, hidden && styles_css_default68.hidden, isVisualRefresh && styles_css_default68.refresh), "aria-label": i18nStrings.navigationAriaLabel },
    import_react232.default.createElement("ul", null, steps.map((step2, index) => isVisualRefresh ? import_react232.default.createElement(NavigationStepVisualRefresh, { i18nStrings, index, key: index, onStepClick, onSkipToClick, status: getStatus(index), step: step2 }) : import_react232.default.createElement(NavigationStepClassic, { i18nStrings, index, key: index, onStepClick, onSkipToClick, status: getStatus(index), step: step2 })))
  );
  function getStatus(index) {
    if (activeStepIndex === index) {
      return Statuses.Active;
    }
    if (isLoadingNextStep) {
      return Statuses.Unvisited;
    }
    if (farthestStepIndex >= index) {
      return Statuses.Visited;
    }
    if (allowSkipTo && canSkip(activeStepIndex + 1, index)) {
      return Statuses.Next;
    }
    return Statuses.Unvisited;
  }
  function canSkip(fromIndex, toIndex) {
    let index = fromIndex;
    do {
      if (!steps[index].isOptional) {
        return false;
      }
      index++;
    } while (index < toIndex);
    return true;
  }
}
function NavigationStepVisualRefresh({ i18nStrings, index, onStepClick, onSkipToClick, status, step: step2 }) {
  function handleStepInteraction() {
    if (status === Statuses.Visited) {
      onStepClick(index);
    }
    if (status === Statuses.Next) {
      onSkipToClick(index);
    }
  }
  const state = {
    active: "active",
    unvisited: "disabled",
    visited: "enabled",
    next: "enabled"
  }[status];
  const linkClassName = clsx_m_default(styles_css_default68["navigation-link"], {
    [styles_css_default68["navigation-link-active"]]: status === Statuses.Active,
    [styles_css_default68["navigation-link-disabled"]]: status === Statuses.Unvisited
  });
  return import_react232.default.createElement(
    "li",
    { className: clsx_m_default(styles_css_default68[`${state}`], styles_css_default68["navigation-link-item"]) },
    import_react232.default.createElement("hr", null),
    import_react232.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default68.number, styles_css_default68["navigation-link-label"]) },
      i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1),
      step2.isOptional && import_react232.default.createElement("i", null, ` - ${i18nStrings.optional}`)
    ),
    import_react232.default.createElement(
      "a",
      { className: linkClassName, "aria-current": status === Statuses.Active ? "step" : void 0, "aria-disabled": status === Statuses.Unvisited ? "true" : void 0, onClick: (event) => {
        event.preventDefault();
        handleStepInteraction();
      }, onKeyDown: (event) => {
        if (event.key === " " || event.key === "Enter") {
          event.preventDefault();
        }
        if (event.key === "Enter") {
          handleStepInteraction();
        }
      }, onKeyUp: (event) => {
        if (event.key === " ") {
          handleStepInteraction();
        }
      }, role: "button", tabIndex: status === Statuses.Visited || status === Statuses.Next ? 0 : void 0 },
      import_react232.default.createElement("div", { className: clsx_m_default(styles_css_default68.circle) }),
      import_react232.default.createElement("span", { className: clsx_m_default(styles_css_default68.title) }, step2.title)
    )
  );
}
function NavigationStepClassic({ i18nStrings, index, onStepClick, onSkipToClick, status, step: step2 }) {
  const spanClassName = clsx_m_default(styles_css_default68["navigation-link"], status === Statuses.Active ? styles_css_default68["navigation-link-active"] : styles_css_default68["navigation-link-disabled"]);
  return import_react232.default.createElement(
    "li",
    { className: styles_css_default68["navigation-link-item"] },
    import_react232.default.createElement(
      InternalBox,
      { variant: "small", className: styles_css_default68["navigation-link-label"], display: "block", margin: { bottom: "xxs" } },
      i18nStrings.stepNumberLabel && i18nStrings.stepNumberLabel(index + 1),
      step2.isOptional && import_react232.default.createElement("i", null, ` - ${i18nStrings.optional}`)
    ),
    import_react232.default.createElement("div", null, status === Statuses.Visited || status === Statuses.Next ? import_react232.default.createElement(internal_default4, { className: clsx_m_default(styles_css_default68["navigation-link"]), onFollow: (evt) => {
      evt.preventDefault();
      status === Statuses.Visited ? onStepClick(index) : onSkipToClick(index);
    } }, step2.title) : import_react232.default.createElement("span", { className: spanClassName, "aria-current": status === Statuses.Active ? "step" : void 0, "aria-disabled": status === Statuses.Active ? void 0 : "true" }, step2.title))
  );
}

// node_modules/@cloudscape-design/components/wizard/internal.js
function InternalWizard(_a) {
  var _b, _c;
  var { steps, activeStepIndex: controlledActiveStepIndex, isLoadingNextStep = false, allowSkipTo = false, secondaryActions, onCancel, onSubmit, onNavigate, __internalRootRef } = _a, rest = __rest(_a, ["steps", "activeStepIndex", "isLoadingNextStep", "allowSkipTo", "secondaryActions", "onCancel", "onSubmit", "onNavigate", "__internalRootRef"]);
  const baseProps = getBaseProps(rest);
  const [breakpoint, breakpointsRef] = useContainerBreakpoints(["xs"]);
  const ref = useMergeRefs(breakpointsRef, __internalRootRef);
  const smallContainer = breakpoint === "default";
  const [activeStepIndex, setActiveStepIndex] = useControllable(controlledActiveStepIndex, onNavigate, 0, {
    componentName: "Wizard",
    controlledProp: "activeStepIndex",
    changeHandler: "onNavigate"
  });
  const { funnelInteractionId, funnelSubmit, funnelCancel, funnelProps, funnelNextOrSubmitAttempt } = useFunnel();
  const actualActiveStepIndex = activeStepIndex ? Math.min(activeStepIndex, steps.length - 1) : 0;
  const farthestStepIndex = (0, import_react233.useRef)(actualActiveStepIndex);
  farthestStepIndex.current = Math.max(farthestStepIndex.current, actualActiveStepIndex);
  const isVisualRefresh = useVisualRefresh();
  const isLastStep = actualActiveStepIndex >= steps.length - 1;
  const navigationEvent = (requestedStepIndex, reason) => {
    if (funnelInteractionId) {
      const stepNameSelector = `.${styles_css_default68["form-header-component-wrapper"]}`;
      const stepName = getNameFromSelector(stepNameSelector);
      FunnelMetrics.funnelStepNavigation({
        navigationType: reason,
        funnelInteractionId,
        stepNumber: actualActiveStepIndex + 1,
        stepName,
        stepNameSelector,
        destinationStepNumber: requestedStepIndex + 1,
        subStepAllSelector: getSubStepAllSelector()
      });
    }
    setActiveStepIndex(requestedStepIndex);
    fireNonCancelableEvent(onNavigate, { requestedStepIndex, reason });
  };
  const onStepClick = (stepIndex) => navigationEvent(stepIndex, "step");
  const onSkipToClick = (stepIndex) => navigationEvent(stepIndex, "skip");
  const onCancelClick = () => {
    funnelCancel();
    fireNonCancelableEvent(onCancel);
  };
  const onPreviousClick = () => navigationEvent(actualActiveStepIndex - 1, "previous");
  const onPrimaryClick = () => {
    funnelNextOrSubmitAttempt();
    if (isLastStep) {
      funnelSubmit();
      fireNonCancelableEvent(onSubmit);
    } else {
      navigationEvent(actualActiveStepIndex + 1, "next");
    }
  };
  const i18n = useInternalI18n("wizard");
  const skipToButtonLabel = i18n("i18nStrings.skipToButtonLabel", rest.i18nStrings.skipToButtonLabel, (format3) => (task) => format3({ task__title: task.title }));
  const i18nStrings = Object.assign(Object.assign({}, rest.i18nStrings), { skipToButtonLabel, stepNumberLabel: i18n("i18nStrings.stepNumberLabel", (_b = rest.i18nStrings) === null || _b === void 0 ? void 0 : _b.stepNumberLabel, (format3) => (stepNumber) => format3({ stepNumber })), collapsedStepsLabel: i18n("i18nStrings.collapsedStepsLabel", (_c = rest.i18nStrings) === null || _c === void 0 ? void 0 : _c.collapsedStepsLabel, (format3) => (stepNumber, stepsCount) => format3({ stepNumber, stepsCount })), navigationAriaLabel: i18n("i18nStrings.navigationAriaLabel", rest.i18nStrings.navigationAriaLabel), cancelButton: i18n("i18nStrings.cancelButton", rest.i18nStrings.cancelButton), previousButton: i18n("i18nStrings.previousButton", rest.i18nStrings.previousButton), nextButton: i18n("i18nStrings.nextButton", rest.i18nStrings.nextButton), optional: i18n("i18nStrings.optional", rest.i18nStrings.optional) });
  if (activeStepIndex && activeStepIndex >= steps.length) {
    warnOnce("Wizard", `You have set \`activeStepIndex\` to ${activeStepIndex} but you have provided only ${steps.length} steps. Its value is ignored and the component uses ${steps.length - 1} instead.`);
  }
  if (allowSkipTo && !skipToButtonLabel) {
    warnOnce("Wizard", `You have set \`allowSkipTo\` but you have not provided \`i18nStrings.skipToButtonLabel\`. The skip-to button will not be rendered.`);
  }
  return import_react233.default.createElement(
    "div",
    Object.assign({}, baseProps, funnelProps, { ref, className: clsx_m_default(styles_css_default68.root, baseProps.className) }),
    import_react233.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default68.wizard, isVisualRefresh && styles_css_default68.refresh, smallContainer && styles_css_default68["small-container"]) },
      import_react233.default.createElement(Navigation, { activeStepIndex: actualActiveStepIndex, farthestStepIndex: farthestStepIndex.current, allowSkipTo, hidden: smallContainer, i18nStrings, isVisualRefresh, isLoadingNextStep, onStepClick, onSkipToClick, steps }),
      import_react233.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default68.form, isVisualRefresh && styles_css_default68.refresh, smallContainer && styles_css_default68["small-container"]) },
        isVisualRefresh && import_react233.default.createElement("div", { className: clsx_m_default(styles_css_default68.background, "awsui-context-content-header") }),
        import_react233.default.createElement(WizardForm, { steps, isVisualRefresh, showCollapsedSteps: smallContainer, i18nStrings, activeStepIndex: actualActiveStepIndex, isPrimaryLoading: isLoadingNextStep, allowSkipTo, secondaryActions, onCancelClick, onPreviousClick, onSkipToClick, onPrimaryClick })
      )
    )
  );
}

// node_modules/@cloudscape-design/components/wizard/index.js
function Wizard(_a) {
  var { isLoadingNextStep = false, allowSkipTo = false } = _a, props2 = __rest(_a, ["isLoadingNextStep", "allowSkipTo"]);
  const baseComponentProps = useBaseComponent("Wizard");
  const externalProps = getExternalProps(props2);
  return import_react234.default.createElement(
    AnalyticsFunnel,
    { funnelType: "multi-page", optionalStepNumbers: props2.steps.map((step2, index) => step2.isOptional ? index : -1).filter((step2) => step2 !== -1), totalFunnelSteps: props2.steps.length },
    import_react234.default.createElement(InternalWizard, Object.assign({ isLoadingNextStep, allowSkipTo }, externalProps, baseComponentProps))
  );
}
applyDisplayName(Wizard, "Wizard");
var wizard_default = Wizard;
export {
  Alert,
  AnnotationContext,
  app_layout_default as AppLayout,
  area_chart_default as AreaChart,
  attribute_editor_default as AttributeEditor,
  autosuggest_default as Autosuggest,
  Badge,
  bar_chart_default as BarChart,
  Box,
  BreadcrumbGroup,
  button_default as Button,
  button_dropdown_default as ButtonDropdown,
  Calendar2 as Calendar,
  cards_default as Cards,
  checkbox_default as Checkbox,
  code_editor_default as CodeEditor,
  CollectionPreferences,
  ColumnLayout2 as ColumnLayout,
  Container,
  ContentLayout,
  date_input_default as DateInput,
  date_picker_default as DatePicker,
  date_range_picker_default as DateRangePicker,
  ExpandableSection,
  file_upload_default as FileUpload,
  Flashbar,
  Form,
  FormField,
  Grid3 as Grid,
  Header,
  HelpPanel,
  Hotspot,
  Icon,
  input_default as Input,
  line_chart_default as LineChart,
  link_default as Link,
  mixed_line_bar_chart_default as MixedLineBarChart,
  Modal,
  multiselect_default as Multiselect,
  Pagination,
  pie_chart_default2 as PieChart,
  Popover,
  ProgressBar,
  property_filter_default as PropertyFilter,
  radio_group_default as RadioGroup,
  s3_resource_selector_default as S3ResourceSelector,
  SegmentedControl,
  select_default as Select,
  SideNavigation,
  SpaceBetween,
  Spinner,
  SplitPanel,
  StatusIndicator2 as StatusIndicator,
  table_default as Table,
  Tabs,
  tag_editor_default as TagEditor,
  TextContent,
  text_filter_default as TextFilter,
  textarea_default as Textarea,
  tiles_default as Tiles,
  time_input_default as TimeInput,
  toggle_default as Toggle,
  TokenGroup,
  TopNavigation,
  TutorialPanel,
  wizard_default as Wizard
};
//# sourceMappingURL=@cloudscape-design_components.js.map

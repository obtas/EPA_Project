{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/button-dropdown/button-dropdown/internal.tsx", "../../@cloudscape-design/components/button-dropdown/styles.css.js", "../../@cloudscape-design/components/button-dropdown/button-dropdown/items-list.tsx", "../../@cloudscape-design/components/button-dropdown/item-element/button-dropdown/item-element/index.tsx", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/utils.ts", "../../@cloudscape-design/components/button-dropdown/item-element/styles.css.js", "../../@cloudscape-design/components/button-dropdown/button-dropdown/tooltip.tsx", "../../@cloudscape-design/components/popover/popover/arrow.tsx", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/use-hidden-description.tsx", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/menu-item.ts", "../../@cloudscape-design/components/button-dropdown/category-elements/button-dropdown/category-elements/expandable-category-element.tsx", "../../@cloudscape-design/components/button-dropdown/category-elements/styles.css.js", "../../@cloudscape-design/components/button-dropdown/category-elements/button-dropdown/category-elements/category-element.tsx", "../../@cloudscape-design/components/button-dropdown/category-elements/button-dropdown/category-elements/mobile-expandable-category-element.tsx", "../../@cloudscape-design/components/button-dropdown/mobile-expandable-group/button-dropdown/mobile-expandable-group/mobile-expandable-group.tsx", "../../@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.css.js", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/use-highlighted-menu.ts", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/create-items-tree.ts", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/move-highlight.ts", "../../@cloudscape-design/components/button-dropdown/utils/button-dropdown/utils/use-button-dropdown.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { ButtonDropdownProps, InternalButtonDropdownProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport Dropdown from '../internal/components/dropdown';\nimport ItemsList from './items-list';\nimport { useButtonDropdown } from './utils/use-button-dropdown';\nimport OptionsList from '../internal/components/options-list';\nimport { InternalButton } from '../button/internal';\nimport { ButtonProps } from '../button/interfaces';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useForwardFocus from '../internal/hooks/forward-focus';\nimport InternalBox from '../box/internal';\nimport { checkSafeUrl } from '../internal/utils/check-safe-url';\nimport { useFunnel } from '../internal/analytics/hooks/use-funnel.js';\n\nconst InternalButtonDropdown = React.forwardRef(\n  (\n    {\n      items,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      expandableGroups = false,\n      children,\n      onItemClick,\n      onItemFollow,\n      customTriggerBuilder,\n      expandToViewport,\n      ariaLabel,\n      title,\n      description,\n      preferCenter,\n      __internalRootRef,\n      ...props\n    }: InternalButtonDropdownProps,\n    ref: React.Ref<ButtonDropdownProps.Ref>\n  ) => {\n    const isInRestrictedView = useMobile();\n    const dropdownId = useUniqueId('dropdown');\n    for (const item of items) {\n      checkSafeUrl('ButtonDropdown', item.href);\n    }\n\n    const {\n      isOpen,\n      targetItem,\n      isHighlighted,\n      isKeyboardHighlight,\n      isExpanded,\n      highlightItem,\n      onKeyDown,\n      onKeyUp,\n      onItemActivate,\n      onGroupToggle,\n      toggleDropdown,\n      setIsUsingMouse,\n    } = useButtonDropdown({\n      items,\n      onItemClick,\n      onItemFollow,\n      onReturnFocus: () => dropdownRef.current?.focus(),\n      expandToViewport,\n      hasExpandableGroups: expandableGroups,\n      isInRestrictedView,\n    });\n\n    const handleMouseEvent = () => {\n      setIsUsingMouse(true);\n    };\n\n    const baseProps = getBaseProps(props);\n\n    const dropdownRef = useRef<HTMLElement>(null);\n\n    useForwardFocus(ref, dropdownRef);\n\n    const clickHandler = () => {\n      if (!loading && !disabled) {\n        // Prevent moving highlight on mobiles to avoid disabled state reason popup if defined.\n        toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });\n      }\n    };\n\n    const canBeOpened = !loading && !disabled;\n\n    const triggerVariant = variant === 'navigation' ? undefined : variant === 'inline-icon' ? 'inline-icon' : variant;\n    const iconProps: Partial<ButtonProps & { __iconClass?: string }> =\n      variant === 'icon' || variant === 'inline-icon'\n        ? {\n            iconName: 'ellipsis',\n          }\n        : {\n            iconName: 'caret-down-filled',\n            iconAlign: 'right',\n            __iconClass: canBeOpened && isOpen ? styles['rotate-up'] : styles['rotate-down'],\n          };\n\n    const trigger = customTriggerBuilder ? (\n      customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen, ariaLabel)\n    ) : (\n      <InternalButton\n        ref={dropdownRef}\n        {...iconProps}\n        variant={triggerVariant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        onClick={(event: Event) => {\n          event.preventDefault();\n          clickHandler();\n        }}\n        ariaLabel={ariaLabel}\n        aria-haspopup={true}\n        ariaExpanded={canBeOpened && isOpen}\n        formAction=\"none\"\n      >\n        {children}\n      </InternalButton>\n    );\n\n    const hasHeader = title || description;\n    const headerId = useUniqueId('awsui-button-dropdown__header');\n\n    const { loadingButtonCount } = useFunnel();\n    useEffect(() => {\n      if (loading) {\n        loadingButtonCount.current++;\n        return () => {\n          // eslint-disable-next-line react-hooks/exhaustive-deps\n          loadingButtonCount.current--;\n        };\n      }\n    }, [loading, loadingButtonCount]);\n\n    return (\n      <div\n        {...baseProps}\n        onKeyDown={onKeyDown}\n        onKeyUp={onKeyUp}\n        onMouseDown={handleMouseEvent}\n        onMouseMove={handleMouseEvent}\n        className={clsx(styles['button-dropdown'], styles[`variant-${variant}`], baseProps.className)}\n        aria-owns={expandToViewport && isOpen ? dropdownId : undefined}\n        ref={__internalRootRef}\n      >\n        <Dropdown\n          open={canBeOpened && isOpen}\n          stretchWidth={false}\n          stretchTriggerHeight={variant === 'navigation'}\n          expandToViewport={expandToViewport}\n          preferCenter={preferCenter}\n          onDropdownClose={() => toggleDropdown()}\n          trigger={trigger}\n          dropdownId={dropdownId}\n        >\n          {hasHeader && (\n            <div className={styles.header} id={headerId}>\n              {title && (\n                <div className={styles.title}>\n                  <InternalBox\n                    fontSize=\"heading-s\"\n                    fontWeight=\"bold\"\n                    color=\"inherit\"\n                    tagOverride=\"h2\"\n                    margin={{ vertical: 'n', horizontal: 'n' }}\n                  >\n                    {title}\n                  </InternalBox>\n                </div>\n              )}\n              {description && (\n                <InternalBox fontSize=\"body-s\">\n                  <span className={styles.description}>{description}</span>\n                </InternalBox>\n              )}\n            </div>\n          )}\n          <OptionsList\n            open={canBeOpened && isOpen}\n            position=\"static\"\n            role=\"menu\"\n            decreaseTopMargin={true}\n            ariaLabelledby={hasHeader ? headerId : undefined}\n            statusType=\"finished\"\n          >\n            <ItemsList\n              items={items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              hasExpandableGroups={expandableGroups}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              expandToViewport={expandToViewport}\n              variant={variant}\n            />\n          </OptionsList>\n        </Dropdown>\n      </div>\n    );\n  }\n);\n\nexport default InternalButtonDropdown;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"button-dropdown\": \"awsui_button-dropdown_sne0l_14ox4_93\",\n  \"items-list-container\": \"awsui_items-list-container_sne0l_14ox4_97\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_sne0l_14ox4_1\",\n  \"rotate-up\": \"awsui_rotate-up_sne0l_14ox4_114\",\n  \"rotate-down\": \"awsui_rotate-down_sne0l_14ox4_129\",\n  \"header\": \"awsui_header_sne0l_14ox4_144\",\n  \"title\": \"awsui_title_sne0l_14ox4_153\",\n  \"description\": \"awsui_description_sne0l_14ox4_154\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ItemListProps } from './interfaces';\nimport ItemElement from './item-element';\nimport ExpandableCategoryElement from './category-elements/expandable-category-element';\nimport CategoryElement from './category-elements/category-element';\nimport { isItemGroup } from './utils/utils';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport MobileExpandableCategoryElement from './category-elements/mobile-expandable-category-element';\n\nexport default function ItemsList({\n  items,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  categoryDisabled = false,\n  hasExpandableGroups = false,\n  hasCategoryHeader = false,\n  expandToViewport = false,\n  variant = 'normal',\n}: ItemListProps) {\n  const isMobile = useMobile();\n\n  const elements = items.map((item, index) => {\n    if (!isItemGroup(item)) {\n      return (\n        <ItemElement\n          key={index}\n          item={item}\n          onItemActivate={onItemActivate}\n          disabled={item.disabled ?? categoryDisabled}\n          highlighted={isHighlighted(item)}\n          isKeyboardHighlighted={isKeyboardHighlight(item)}\n          highlightItem={highlightItem}\n          first={index === 0 || isItemGroup(items[index - 1])}\n          last={index === items.length - 1 || isItemGroup(items[index + 1])}\n          hasCategoryHeader={hasCategoryHeader}\n          variant={variant}\n        />\n      );\n    }\n    if (hasExpandableGroups) {\n      return item.text ? (\n        isMobile ? (\n          <MobileExpandableCategoryElement\n            key={index}\n            item={item}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isKeyboardHighlight={isKeyboardHighlight}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            disabled={item.disabled ?? false}\n            variant={variant}\n          />\n        ) : (\n          <ExpandableCategoryElement\n            key={index}\n            item={item}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isKeyboardHighlight={isKeyboardHighlight}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            disabled={item.disabled ?? false}\n            expandToViewport={expandToViewport}\n            variant={variant}\n          />\n        )\n      ) : null;\n    }\n    return (\n      <CategoryElement\n        key={index}\n        item={item}\n        onItemActivate={onItemActivate}\n        onGroupToggle={onGroupToggle}\n        targetItem={targetItem}\n        isHighlighted={isHighlighted}\n        isKeyboardHighlight={isKeyboardHighlight}\n        isExpanded={isExpanded}\n        highlightItem={highlightItem}\n        disabled={item.disabled ?? false}\n        variant={variant}\n      />\n    );\n  });\n\n  return <>{elements}</>;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport { ItemProps } from '../interfaces';\nimport { isLinkItem } from '../utils/utils';\nimport styles from './styles.css.js';\nimport Tooltip from '../tooltip';\n\nimport { ButtonDropdownProps } from '../interfaces';\nimport { getItemTarget } from '../utils/utils';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport InternalIcon, { InternalIconProps } from '../../icon/internal';\nimport { useDropdownContext } from '../../internal/components/dropdown/context';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nconst ItemElement = ({\n  item,\n  disabled,\n  onItemActivate,\n  highlighted,\n  highlightItem,\n  first = false,\n  last,\n  hasCategoryHeader,\n  isKeyboardHighlighted = false,\n  variant = 'normal',\n}: ItemProps) => {\n  const isLink = isLinkItem(item);\n  const onClick = (event: React.MouseEvent) => {\n    // Stop propagation to parent node and handle event exclusively in here. This ensures\n    // that no group will interfere with the default behavior of links\n    event.stopPropagation();\n    if (!isLink) {\n      event.preventDefault();\n    }\n    if (!disabled) {\n      onItemActivate(item, event);\n    }\n  };\n\n  const onHover = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  return (\n    <li\n      className={clsx(styles['item-element'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles.disabled]: disabled,\n        [styles.first]: first,\n        [styles.last]: last,\n        [styles['has-category-header']]: hasCategoryHeader,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      data-description={item.description}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      <MenuItem item={item} disabled={disabled} highlighted={highlighted} />\n    </li>\n  );\n};\n\ninterface MenuItemProps {\n  item: ButtonDropdownProps.Item;\n  disabled: boolean;\n  highlighted: boolean;\n}\n\nfunction MenuItem({ item, disabled, highlighted }: MenuItemProps) {\n  const menuItemRef = useRef<(HTMLSpanElement & HTMLAnchorElement) | null>(null);\n\n  useEffect(() => {\n    if (highlighted && menuItemRef.current) {\n      menuItemRef.current.focus();\n    }\n  }, [highlighted]);\n\n  const isDisabledWithReason = disabled && item.disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const menuItemProps: React.HTMLAttributes<HTMLSpanElement & HTMLAnchorElement> = {\n    className: styles['menu-item'],\n    lang: item.lang,\n    ref: menuItemRef,\n    // We are using the roving tabindex technique to manage the focus state of the dropdown.\n    // The current element will always have tabindex=0 which means that it can be tabbed to,\n    // while all other items have tabindex=-1 so we can focus them when necessary.\n    tabIndex: highlighted ? 0 : -1,\n    ...getMenuItemProps({ disabled }),\n    ...(isDisabledWithReason ? targetProps : {}),\n  };\n\n  const menuItem = isLinkItem(item) ? (\n    <a\n      {...menuItemProps}\n      href={!disabled ? item.href : undefined}\n      target={getItemTarget(item)}\n      rel={item.external ? 'noopener noreferrer' : undefined}\n    >\n      <MenuItemContent item={item} disabled={disabled} />\n    </a>\n  ) : (\n    <span {...menuItemProps}>\n      <MenuItemContent item={item} disabled={disabled} />\n    </span>\n  );\n\n  const { position } = useDropdownContext();\n  const tooltipPosition = position === 'bottom-left' || position === 'top-left' ? 'left' : 'right';\n  return isDisabledWithReason ? (\n    <Tooltip content={item.disabledReason} position={tooltipPosition}>\n      {menuItem}\n      {descriptionEl}\n    </Tooltip>\n  ) : (\n    menuItem\n  );\n}\n\nconst MenuItemContent = ({ item, disabled }: { item: ButtonDropdownProps.Item; disabled: boolean }) => {\n  const hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);\n  const hasExternal = isLinkItem(item) && item.external;\n  return (\n    <>\n      {hasIcon && <MenuItemIcon name={item.iconName} url={item.iconUrl} svg={item.iconSvg} alt={item.iconAlt} />}{' '}\n      {item.text} {hasExternal && <ExternalIcon disabled={disabled} ariaLabel={item.externalIconAriaLabel} />}\n    </>\n  );\n};\n\nconst MenuItemIcon = (props: InternalIconProps) => (\n  <span className={styles.icon}>\n    <InternalIcon {...props} />\n  </span>\n);\n\nconst ExternalIcon = ({ disabled, ariaLabel }: { disabled: boolean; ariaLabel?: string }) => {\n  const icon = <InternalIcon variant={disabled ? 'disabled' : 'normal'} name=\"external\" />;\n  return (\n    <span className={styles['external-icon']} role={ariaLabel ? 'img' : undefined} aria-label={ariaLabel}>\n      {icon}\n    </span>\n  );\n};\n\nexport default ItemElement;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ButtonDropdownProps, LinkItem } from '../interfaces';\n\nexport const isItemGroup = (item: ButtonDropdownProps.ItemOrGroup): item is ButtonDropdownProps.ItemGroup =>\n  item && (item as ButtonDropdownProps.ItemGroup).items !== undefined;\n\nexport const isLinkItem = (item: LinkItem | ButtonDropdownProps.ItemOrGroup): item is LinkItem =>\n  item && (item as LinkItem).href !== undefined;\n\nexport const getItemTarget = (item: ButtonDropdownProps.Item) => (item.external ? '_blank' : undefined);\n\nexport function indexIncludes(source: number[], target: number[]) {\n  for (let index = 0; index < source.length; index++) {\n    if (source[index] !== target[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function indexEquals(left: number[], right: number[]) {\n  if (left.length !== right.length) {\n    return false;\n  }\n\n  for (let index = 0; index < left.length; index++) {\n    if (left[index] !== right[index]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"item-element\": \"awsui_item-element_93a1u_afloc_93\",\n  \"disabled\": \"awsui_disabled_93a1u_afloc_103\",\n  \"last\": \"awsui_last_93a1u_afloc_110\",\n  \"highlighted\": \"awsui_highlighted_93a1u_afloc_113\",\n  \"variant-icon\": \"awsui_variant-icon_93a1u_afloc_117\",\n  \"variant-normal\": \"awsui_variant-normal_93a1u_afloc_117\",\n  \"variant-primary\": \"awsui_variant-primary_93a1u_afloc_117\",\n  \"is-focused\": \"awsui_is-focused_93a1u_afloc_127\",\n  \"variant-navigation\": \"awsui_variant-navigation_93a1u_afloc_131\",\n  \"first\": \"awsui_first_93a1u_afloc_134\",\n  \"has-category-header\": \"awsui_has-category-header_93a1u_afloc_134\",\n  \"menu-item\": \"awsui_menu-item_93a1u_afloc_148\",\n  \"icon\": \"awsui_icon_93a1u_afloc_166\",\n  \"external-icon\": \"awsui_external-icon_93a1u_afloc_171\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEventHandler, useRef, useState } from 'react';\n\nimport Arrow from '../popover/arrow';\nimport PopoverContainer from '../popover/container';\nimport PopoverBody from '../popover/body';\nimport Portal from '../internal/components/portal';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useReducedMotion } from '../internal/hooks/use-visual-mode';\n\nexport interface TooltipProps {\n  children?: React.ReactNode;\n  content?: React.ReactNode;\n  position?: 'top' | 'right' | 'bottom' | 'left';\n}\n\nconst DEFAULT_OPEN_TIMEOUT_IN_MS = 120;\n\nexport default function Tooltip({ children, content, position = 'right' }: TooltipProps) {\n  const ref = useRef<HTMLSpanElement | null>(null);\n  const isReducedMotion = useReducedMotion(ref);\n  const { open, triggerProps } = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS);\n  const portalClasses = usePortalModeClasses(ref);\n\n  return (\n    <span ref={ref} {...triggerProps}>\n      {children}\n      {open && (\n        <Portal>\n          <span className={portalClasses}>\n            <PopoverContainer\n              size=\"small\"\n              fixedWidth={false}\n              position={position}\n              trackRef={ref}\n              arrow={position => <Arrow position={position} />}\n              renderWithPortal={true}\n              zIndex={7000}\n            >\n              <PopoverBody\n                dismissButton={false}\n                dismissAriaLabel={undefined}\n                header={null}\n                onDismiss={() => {}}\n                overflowVisible=\"both\"\n              >\n                <span data-testid=\"button-dropdown-disabled-reason\" role=\"tooltip\">\n                  {content}\n                </span>\n              </PopoverBody>\n            </PopoverContainer>\n          </span>\n        </Portal>\n      )}\n    </span>\n  );\n}\n\nfunction useTooltipOpen(timeout: number) {\n  const handle = useRef<number>();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const close = () => {\n    clearTimeout(handle.current);\n    setIsOpen(false);\n  };\n  const open = () => setIsOpen(true);\n  const openDelayed = () => {\n    handle.current = setTimeout(open, timeout);\n  };\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (isOpen && isEscape(e.key)) {\n      e.preventDefault();\n      e.stopPropagation();\n      close();\n    }\n  };\n\n  const onFocus = openDelayed;\n  const onBlur = close;\n\n  return {\n    open: isOpen,\n    triggerProps: {\n      onBlur,\n      onFocus,\n      onKeyDown,\n    },\n  };\n}\n\nconst isEscape = (key: string) => key === 'Escape' || key === 'Esc';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './styles.css.js';\nimport { InternalPosition } from './interfaces';\n\nexport interface ArrowProps {\n  position: InternalPosition | null;\n}\n\nconst Arrow = (props: ArrowProps) => (\n  <div className={clsx(styles.arrow, props.position && styles[`arrow-position-${props.position}`])}>\n    <div className={styles['arrow-outer']} />\n    <div className={styles['arrow-inner']} />\n  </div>\n);\n\nexport default React.memo(Arrow);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\n\nexport default function useHiddenDescription(description?: string) {\n  const id = useUniqueId();\n  return {\n    targetProps: {\n      'aria-describedby': description ? id : undefined,\n    },\n    descriptionEl: description ? (\n      <span id={id} hidden={true}>\n        {description}\n      </span>\n    ) : null,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nexport interface GetMenuItemPropsParams {\n  disabled: boolean;\n  parent?: boolean;\n  expanded?: boolean;\n}\n/**\n * @returns attributes for a menuitem widget given parameters\n */\nexport const getMenuItemProps: (params: GetMenuItemPropsParams) => React.HTMLProps<HTMLElement> = ({\n  disabled,\n  parent,\n  expanded,\n}: GetMenuItemPropsParams) => ({\n  role: 'menuitem',\n  'aria-disabled': disabled ? 'true' : undefined,\n  'aria-haspopup': parent ? 'true' : undefined,\n  'aria-expanded': expanded ? 'true' : parent ? 'false' : undefined,\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport Dropdown from '../../internal/components/dropdown';\nimport { CategoryProps } from '../interfaces';\nimport useHiddenDescription from '../utils/use-hidden-description';\nimport Tooltip from '../tooltip.js';\nimport { getMenuItemProps } from '../utils/menu-item';\n\nconst ExpandableCategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  disabled,\n  expandToViewport,\n  variant,\n}: CategoryProps) => {\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef<HTMLSpanElement>(null);\n  const ref = useRef<HTMLLIElement>(null);\n\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  const onClick: React.MouseEventHandler = event => {\n    if (!disabled) {\n      event.preventDefault();\n      onGroupToggle(item, event);\n      triggerRef.current?.focus();\n    }\n  };\n\n  const onHover = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && (\n    <span\n      className={clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      // We are using the roving tabindex technique to manage the focus state of the dropdown.\n      // The current element will always have tabindex=0 which means that it can be tabbed to,\n      // while all other items have tabindex=-1 so we can focus them when necessary.\n      tabIndex={highlighted ? 0 : -1}\n      ref={triggerRef}\n      {...getMenuItemProps({ parent: true, expanded, disabled })}\n      {...(isDisabledWithReason ? targetProps : {})}\n    >\n      {item.text}\n      <span className={clsx(styles['expand-icon'], styles['expand-icon-right'])}>\n        <InternalIcon name=\"caret-down-filled\" />\n      </span>\n    </span>\n  );\n\n  let content: React.ReactNode;\n  // If the category element is disabled, we do not render a dropdown.\n  // Screenreaders are confused by additional sections\n  if (isDisabledWithReason) {\n    content = (\n      <Tooltip content={item.disabledReason}>\n        {trigger}\n        {descriptionEl}\n      </Tooltip>\n    );\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = (\n      <Dropdown\n        open={expanded}\n        stretchWidth={false}\n        interior={true}\n        expandToViewport={expandToViewport}\n        trigger={trigger}\n      >\n        {item.items && expanded && (\n          <ul role=\"menu\" aria-label={item.text} className={clsx(styles['items-list-container'])}>\n            <ItemsList\n              items={item.items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              variant={variant}\n            />\n          </ul>\n        )}\n      </Dropdown>\n    );\n  }\n\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n        [styles.expanded]: expanded,\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted,\n      })}\n      role=\"presentation\"\n      data-testid={item.id}\n      ref={ref}\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n    >\n      {content}\n    </li>\n  );\n};\n\nexport default ExpandableCategoryElement;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"header\": \"awsui_header_16mm3_3iz83_93\",\n  \"disabled\": \"awsui_disabled_16mm3_3iz83_108\",\n  \"expandable-header\": \"awsui_expandable-header_16mm3_3iz83_112\",\n  \"rolled-down\": \"awsui_rolled-down_16mm3_3iz83_123\",\n  \"highlighted\": \"awsui_highlighted_16mm3_3iz83_126\",\n  \"is-focused\": \"awsui_is-focused_16mm3_3iz83_139\",\n  \"variant-navigation\": \"awsui_variant-navigation_16mm3_3iz83_143\",\n  \"category\": \"awsui_category_16mm3_3iz83_155\",\n  \"expandable\": \"awsui_expandable_16mm3_3iz83_112\",\n  \"expand-icon\": \"awsui_expand-icon_16mm3_3iz83_176\",\n  \"expand-icon-up\": \"awsui_expand-icon-up_16mm3_3iz83_183\",\n  \"expand-icon-right\": \"awsui_expand-icon-right_16mm3_3iz83_186\",\n  \"items-list-container\": \"awsui_items-list-container_16mm3_3iz83_200\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CategoryProps } from '../interfaces';\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport ItemsList from '../items-list';\n\nconst CategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  disabled,\n  variant,\n}: CategoryProps) => {\n  // Hide the category title element from screen readers because it will be\n  // provided as an ARIA label.\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], disabled && styles.disabled)}\n      role=\"presentation\"\n      aria-disabled={disabled ? 'true' : undefined}\n    >\n      {item.text && (\n        <p className={clsx(styles.header, { [styles.disabled]: disabled })} aria-hidden=\"true\">\n          {item.text}\n        </p>\n      )}\n      <ul className={clsx(styles['items-list-container'])} role=\"group\" aria-label={item.text}>\n        {item.items && (\n          <ItemsList\n            items={item.items}\n            onItemActivate={onItemActivate}\n            onGroupToggle={onGroupToggle}\n            targetItem={targetItem}\n            isHighlighted={isHighlighted}\n            isKeyboardHighlight={isKeyboardHighlight}\n            isExpanded={isExpanded}\n            highlightItem={highlightItem}\n            categoryDisabled={disabled}\n            hasCategoryHeader={!!item.text}\n            variant={variant}\n          />\n        )}\n      </ul>\n    </li>\n  );\n};\n\nexport default CategoryElement;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nimport InternalIcon from '../../icon/internal';\nimport ItemsList from '../items-list';\nimport MobileExpandableGroup from '../mobile-expandable-group/mobile-expandable-group';\nimport { CategoryProps } from '../interfaces';\nimport Tooltip from '../tooltip.js';\nimport useHiddenDescription from '../utils/use-hidden-description.js';\nimport { getMenuItemProps } from '../utils/menu-item.js';\n\nconst MobileExpandableCategoryElement = ({\n  item,\n  onItemActivate,\n  onGroupToggle,\n  targetItem,\n  isHighlighted,\n  isKeyboardHighlight,\n  isExpanded,\n  highlightItem,\n  disabled,\n  variant,\n}: CategoryProps) => {\n  const highlighted = isHighlighted(item);\n  const expanded = isExpanded(item);\n  const isKeyboardHighlighted = isKeyboardHighlight(item);\n  const triggerRef = React.useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    if (triggerRef.current && highlighted && !expanded) {\n      triggerRef.current.focus();\n    }\n  }, [expanded, highlighted]);\n\n  const onClick = (e: React.MouseEvent) => {\n    if (!disabled) {\n      e.preventDefault();\n      onGroupToggle(item, e);\n    }\n  };\n\n  const onHover = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    highlightItem(item);\n  };\n\n  const isDisabledWithReason = !!item.disabledReason && item.disabled;\n  const { targetProps, descriptionEl } = useHiddenDescription(item.disabledReason);\n  const trigger = item.text && (\n    <span\n      className={clsx(styles.header, styles['expandable-header'], styles[`variant-${variant}`], {\n        [styles.highlighted]: highlighted,\n        [styles['rolled-down']]: expanded,\n        [styles.disabled]: disabled,\n        [styles['is-focused']]: isKeyboardHighlighted,\n      })}\n      // We are using the roving tabindex technique to manage the focus state of the dropdown.\n      // The current element will always have tabindex=0 which means that it can be tabbed to,\n      // while all other items have tabindex=-1 so we can focus them when necessary.\n      tabIndex={highlighted ? 0 : -1}\n      ref={triggerRef}\n      {...getMenuItemProps({ parent: true, disabled, expanded })}\n      {...(isDisabledWithReason ? targetProps : {})}\n    >\n      {item.text}\n      <span\n        className={clsx(styles['expand-icon'], {\n          [styles['expand-icon-up']]: expanded,\n        })}\n      >\n        <InternalIcon name=\"caret-down-filled\" />\n      </span>\n    </span>\n  );\n\n  let content: React.ReactNode;\n\n  if (isDisabledWithReason) {\n    content = (\n      <>\n        {descriptionEl}\n        <Tooltip content={item.disabledReason}>{trigger}</Tooltip>\n      </>\n    );\n  } else if (disabled) {\n    content = trigger;\n  } else {\n    content = (\n      <MobileExpandableGroup open={expanded} trigger={trigger}>\n        {item.items && expanded && (\n          <ul role=\"menu\" aria-label={item.text} className={clsx(styles['items-list-container'])}>\n            <ItemsList\n              items={item.items}\n              onItemActivate={onItemActivate}\n              onGroupToggle={onGroupToggle}\n              targetItem={targetItem}\n              isHighlighted={isHighlighted}\n              isKeyboardHighlight={isKeyboardHighlight}\n              isExpanded={isExpanded}\n              highlightItem={highlightItem}\n              hasCategoryHeader={true}\n              variant={variant}\n            />\n          </ul>\n        )}\n      </MobileExpandableGroup>\n    );\n  }\n\n  return (\n    <li\n      className={clsx(styles.category, styles[`variant-${variant}`], styles.expandable, {\n        [styles.expanded]: expanded,\n        [styles.disabled]: disabled,\n        [styles.highlighted]: highlighted || expanded,\n        [styles.expandable]: true,\n      })}\n      role=\"presentation\"\n      onClick={onClick}\n      onMouseEnter={onHover}\n      onTouchStart={onHover}\n      data-testid={item.id}\n    >\n      {content}\n    </li>\n  );\n};\n\nexport default MobileExpandableCategoryElement;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nexport interface MobileExpandableGroupProps {\n  /**\n   * Trigger element.\n   */\n  trigger: React.ReactNode;\n  /**\n   * mobile expandable groups content elements.\n   */\n  children?: React.ReactNode;\n  /**\n   * Open state of the mobile expandable groups.\n   */\n  open?: boolean;\n}\n\nconst MobileExpandableGroup = ({ children, trigger, open }: MobileExpandableGroupProps) => {\n  return (\n    <div className={clsx(styles.root)}>\n      <div className={styles.trigger}>{trigger}</div>\n      <div className={clsx(styles.dropdown, { [styles.open]: open })} data-open={open}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default MobileExpandableGroup;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_14cnr_c6muv_93\",\n  \"trigger\": \"awsui_trigger_14cnr_c6muv_108\",\n  \"dropdown\": \"awsui_dropdown_14cnr_c6muv_111\",\n  \"nowrap\": \"awsui_nowrap_14cnr_c6muv_122\",\n  \"open\": \"awsui_open_14cnr_c6muv_125\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState, useMemo, useCallback } from 'react';\n\nimport { indexIncludes, indexEquals } from './utils';\nimport { ButtonDropdownProps, HighlightProps } from '../interfaces';\nimport createItemsTree, { TreeIndex } from './create-items-tree';\nimport moveHighlightOneStep from './move-highlight';\n\ninterface UseHighlightedMenuOptions {\n  items: ButtonDropdownProps.Items;\n  hasExpandableGroups: boolean;\n  isInRestrictedView?: boolean;\n}\n\ninterface UseHighlightedMenuApi extends HighlightProps {\n  moveHighlight: (direction: -1 | 1) => void;\n  expandGroup: (group?: ButtonDropdownProps.ItemGroup) => void;\n  collapseGroup: () => void;\n  reset: () => void;\n  setIsUsingMouse: (isUsingMouse: boolean) => void;\n}\n\nexport default function useHighlightedMenu({\n  items,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n}: UseHighlightedMenuOptions): UseHighlightedMenuApi {\n  const [targetIndex, setTargetIndex] = useState<TreeIndex>([]);\n  const [expandedIndex, setExpandedIndex] = useState<TreeIndex>([]);\n  const [isUsingMouse, setIsUsingMouse] = useState<boolean>(true);\n\n  const { getItem, getItemIndex, getSequentialIndex, getParentIndex } = useMemo(() => createItemsTree(items), [items]);\n\n  const targetItem = useMemo(() => getItem(targetIndex), [targetIndex, getItem]);\n\n  const isHighlighted = useCallback(\n    (item: ButtonDropdownProps.ItemOrGroup) => {\n      const index = getItemIndex(item);\n      return indexIncludes(index, targetIndex);\n    },\n    [targetIndex, getItemIndex]\n  );\n\n  // check if keyboard focus is on the element\n  const isKeyboardHighlight = useCallback(\n    (item: ButtonDropdownProps.ItemOrGroup) => {\n      const index = getItemIndex(item);\n      return !isUsingMouse && indexEquals(index, targetIndex);\n    },\n    [targetIndex, getItemIndex, isUsingMouse]\n  );\n\n  const isExpanded = useCallback(\n    (group: ButtonDropdownProps.ItemGroup) => {\n      const index = getItemIndex(group);\n\n      return indexIncludes(index, expandedIndex);\n    },\n    [expandedIndex, getItemIndex]\n  );\n\n  const moveHighlight = useCallback(\n    (direction: -1 | 1) => {\n      const getNext = (index: TreeIndex) => {\n        const nextIndex = getSequentialIndex(index, direction);\n        const item = getItem(nextIndex || [-1]);\n\n        if (!nextIndex || !item) {\n          return null;\n        }\n\n        const parentIndex = getParentIndex(item);\n        const parentItem = parentIndex && getItem(parentIndex);\n\n        return { index: nextIndex, item, parent: parentItem || undefined };\n      };\n\n      const nextIndex = moveHighlightOneStep({\n        startIndex: targetIndex,\n        expandedIndex,\n        getNext,\n        hasExpandableGroups,\n        isInRestrictedView,\n      });\n\n      if (nextIndex) {\n        setTargetIndex(nextIndex);\n      }\n    },\n    [targetIndex, expandedIndex, getItem, getSequentialIndex, getParentIndex, hasExpandableGroups, isInRestrictedView]\n  );\n\n  const highlightItem = useCallback(\n    (item: ButtonDropdownProps.ItemOrGroup) => {\n      setTargetIndex(getItemIndex(item));\n    },\n    [getItemIndex]\n  );\n\n  const expandGroup = useCallback(\n    (group?: ButtonDropdownProps.ItemGroup) => {\n      const groupIndex = group ? getItemIndex(group) : targetIndex;\n      const firstChildIndex = [...groupIndex, 0];\n\n      // move to the first child item unless in restricted mode\n      setTargetIndex(isInRestrictedView ? groupIndex : firstChildIndex);\n      setExpandedIndex(groupIndex);\n    },\n    [targetIndex, getItemIndex, isInRestrictedView]\n  );\n\n  const collapseGroup = useCallback(() => {\n    if (expandedIndex.length > 0) {\n      setTargetIndex(expandedIndex);\n      setExpandedIndex(expandedIndex.slice(0, -1));\n    }\n  }, [expandedIndex]);\n\n  const reset = useCallback(() => {\n    setTargetIndex([]);\n    setExpandedIndex([]);\n  }, []);\n\n  return {\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    moveHighlight,\n    highlightItem,\n    expandGroup,\n    collapseGroup,\n    reset,\n    setIsUsingMouse,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup } from './utils';\nimport { ButtonDropdownProps } from '../interfaces';\n\n// The function turns a tree of items into a structure optimized for lookup of\n// items and corresponding indices as well as iteration on indices in the given order.\n\n// As trees are multidimensional, the index is represented as an array\nexport type TreeIndex = number[];\n\ninterface ItemsTreeApi {\n  // Returns an item for the given tree index or null if not found\n  getItem: (index: TreeIndex) => ButtonDropdownProps.ItemOrGroup | null;\n  // Returns the tree index of the given item. The item must be present\n  // in the tree (referential comparison), or an error will be thrown\n  getItemIndex: (item: ButtonDropdownProps.ItemOrGroup) => TreeIndex;\n  // Returns the index of next or previous sequential node or null if out of bounds\n  getSequentialIndex: (index: TreeIndex, direction: -1 | 1) => TreeIndex | null;\n  // Returns parent tree index of a given item or null if no parent is present\n  getParentIndex: (item: ButtonDropdownProps.ItemOrGroup) => TreeIndex | null;\n}\n\nexport default function createItemsTree(items: ButtonDropdownProps.Items): ItemsTreeApi {\n  const itemToIndex = new Map<ButtonDropdownProps.ItemOrGroup, string>();\n  const indexToItem = new Map<string, ButtonDropdownProps.ItemOrGroup>();\n  const flatIndices: string[] = [];\n\n  traverseItems(items, (item, index) => {\n    const indexKey = stringifyIndex(index);\n    itemToIndex.set(item, indexKey);\n    indexToItem.set(indexKey, item);\n    flatIndices.push(indexKey);\n  });\n\n  return {\n    getItem: (index: TreeIndex): ButtonDropdownProps.ItemOrGroup | null => {\n      const indexKey = stringifyIndex(index);\n\n      return indexToItem.get(indexKey) || null;\n    },\n    getItemIndex: (item: ButtonDropdownProps.ItemOrGroup): TreeIndex => {\n      const indexKey = itemToIndex.get(item);\n\n      if (!indexKey) {\n        throw new Error('Invariant violation: item is not found.');\n      }\n\n      return parseIndex(indexKey);\n    },\n    getSequentialIndex: (index: TreeIndex, direction: -1 | 1): TreeIndex | null => {\n      const indexKey = stringifyIndex(index);\n      const position = flatIndices.indexOf(indexKey);\n\n      const nextIndexKey = flatIndices[position + direction];\n\n      if (!nextIndexKey) {\n        return null;\n      }\n\n      return parseIndex(nextIndexKey);\n    },\n    getParentIndex: (item: ButtonDropdownProps.ItemOrGroup): TreeIndex | null => {\n      const indexKey = itemToIndex.get(item);\n\n      if (!indexKey) {\n        throw new Error('Invariant violation: item is not found.');\n      }\n\n      const index = parseIndex(indexKey);\n\n      // No parent\n      if (index.length === 1) {\n        return null;\n      }\n\n      return index.slice(0, index.length - 1);\n    },\n  };\n}\n\nfunction traverseItems(\n  items: ButtonDropdownProps.Items,\n  act: (item: ButtonDropdownProps.ItemOrGroup, index: TreeIndex) => void,\n  parentIndex: TreeIndex = []\n) {\n  items.forEach((item, index) => {\n    const itemIndex = [...parentIndex, index];\n    act(item, itemIndex);\n\n    if (isItemGroup(item)) {\n      traverseItems(item.items, act, itemIndex);\n    }\n  });\n}\n\nfunction stringifyIndex(index: TreeIndex): string {\n  return index.join('-');\n}\n\nfunction parseIndex(index: string): TreeIndex {\n  return index.split('-').map(it => parseInt(it));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup, indexEquals } from './utils';\nimport { ButtonDropdownProps } from '../interfaces';\nimport { TreeIndex } from './create-items-tree';\n\n// While every menu item except the edge ones have successors and predecessors,\n// there are rules determining what items are eligible for highlighting for the\n// given set of conditions. The function implements all these rules.\n\ninterface MoveHighlightProps {\n  startIndex: TreeIndex;\n  expandedIndex: TreeIndex;\n  getNext: (index: TreeIndex) => {\n    index: TreeIndex;\n    item: ButtonDropdownProps.ItemOrGroup;\n    parent?: ButtonDropdownProps.ItemOrGroup;\n  } | null;\n  hasExpandableGroups: boolean;\n  isInRestrictedView: boolean;\n}\n\nexport default function moveHighlight({\n  startIndex,\n  expandedIndex,\n  getNext,\n  hasExpandableGroups,\n  isInRestrictedView,\n}: MoveHighlightProps): TreeIndex | null {\n  const tryMove = (currentIndex: TreeIndex): TreeIndex | null => {\n    const next = getNext(currentIndex);\n\n    if (!next) {\n      return null;\n    }\n\n    // Prevents stepping into disabled expandable groups. However,\n    // it's possible to navigate nested groups.\n    if (next.parent?.disabled && hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // it is not allowed to highlight groups when non-expandable\n    if (isItemGroup(next.item) && !hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // can only move within same parent unless is in restricted view\n    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {\n      return tryMove(next.index);\n    }\n\n    // in restricted view can only navigate to children if group is expanded\n    if (\n      hasExpandableGroups &&\n      isInRestrictedView &&\n      !isSameLevel(next.index, expandedIndex) &&\n      !isIncluded(expandedIndex, next.index)\n    ) {\n      return tryMove(next.index);\n    }\n\n    return next.index;\n  };\n\n  return tryMove(startIndex);\n}\n\nfunction isSameParent(left: TreeIndex, right: TreeIndex) {\n  return indexEquals(left.slice(0, -1), right.slice(0, -1));\n}\n\nfunction isSameLevel(left: TreeIndex, right: TreeIndex) {\n  return left.length === right.length;\n}\n\nfunction isIncluded(parent: TreeIndex, child: TreeIndex) {\n  return indexEquals(parent, child.slice(0, -1));\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { ButtonDropdownProps, ButtonDropdownSettings, GroupToggle, HighlightProps, ItemActivate } from '../interfaces';\nimport { fireCancelableEvent, CancelableEventHandler, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\n\ninterface UseButtonDropdownOptions extends ButtonDropdownSettings {\n  items: ButtonDropdownProps.Items;\n  onItemClick?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onItemFollow?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onReturnFocus: () => void;\n  expandToViewport?: boolean;\n}\n\ninterface UseButtonDropdownApi extends HighlightProps {\n  isOpen: boolean;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  onKeyUp: (event: React.KeyboardEvent) => void;\n  onItemActivate: ItemActivate;\n  onGroupToggle: GroupToggle;\n  toggleDropdown: (options?: { moveHighlightOnOpen?: boolean }) => void;\n  setIsUsingMouse: (isUsingMouse: boolean) => void;\n}\n\nexport function useButtonDropdown({\n  items,\n  onItemClick,\n  onItemFollow,\n  onReturnFocus,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n  expandToViewport = false,\n}: UseButtonDropdownOptions): UseButtonDropdownApi {\n  const {\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    moveHighlight,\n    expandGroup,\n    collapseGroup,\n    reset,\n    setIsUsingMouse,\n  } = useHighlightedMenu({\n    items,\n    hasExpandableGroups,\n    isInRestrictedView,\n  });\n\n  const { isOpen, closeDropdown, ...openStateProps } = useOpenState({ onClose: reset });\n  const toggleDropdown = (options: { moveHighlightOnOpen?: boolean } = {}) => {\n    const moveHighlightOnOpen = options.moveHighlightOnOpen ?? true;\n    if (!isOpen && moveHighlightOnOpen) {\n      moveHighlight(1);\n    }\n    openStateProps.toggleDropdown();\n  };\n\n  const onGroupToggle: GroupToggle = item => (!isExpanded(item) ? expandGroup(item) : collapseGroup());\n\n  const onItemActivate: ItemActivate = (item, event) => {\n    const details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item),\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    onReturnFocus();\n    closeDropdown();\n  };\n\n  const doVerticalNavigation = (direction: -1 | 1) => {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n\n  const openAndSelectFirst = (event: React.KeyboardEvent) => {\n    toggleDropdown();\n    event.preventDefault();\n  };\n\n  const actOnParentDropdown = (event: React.KeyboardEvent) => {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n\n  const activate = (event: React.KeyboardEvent, isEnter?: boolean) => {\n    setIsUsingMouse(false);\n\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    setIsUsingMouse(false);\n    switch (event.keyCode) {\n      case KeyCode.down: {\n        doVerticalNavigation(1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.up: {\n        doVerticalNavigation(-1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.space: {\n        // Prevent scrolling the list of items and highlighting the trigger\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.enter: {\n        if (!targetItem?.disabled) {\n          activate(event, true);\n        }\n        break;\n      }\n      case KeyCode.left:\n      case KeyCode.right: {\n        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n          expandGroup();\n        } else if (hasExpandableGroups) {\n          collapseGroup();\n        }\n\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.escape: {\n        onReturnFocus();\n        closeDropdown();\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.tab: {\n        // When expanded to viewport the focus can't move naturally to the next element.\n        // Returning the focus to the trigger instead.\n        if (expandToViewport) {\n          onReturnFocus();\n        }\n        closeDropdown();\n        break;\n      }\n    }\n  };\n  const onKeyUp = (event: React.KeyboardEvent) => {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !targetItem?.disabled) {\n      activate(event);\n    }\n  };\n\n  return {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isKeyboardHighlight,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n    setIsUsingMouse,\n  };\n}\n"],
  "mappings": "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",
  "names": ["import_react", "styles_css_default", "import_react", "import_react", "styles_css_default", "import_react", "React", "React", "position", "import_react", "React", "React", "styles_css_default", "import_react", "styles_css_default", "React", "styles_css_default", "import_react", "React", "styles_css_default", "import_react", "import_react", "styles_css_default", "React", "styles_css_default", "React", "styles_css_default", "React", "import_react", "moveHighlight", "nextIndex", "moveHighlight", "_a", "React", "_a", "styles_css_default", "internal_default"]
}

{
  "version": 3,
  "sources": ["../../src/internal/components/screenreader-only/index.tsx", "../../@cloudscape-design/components/internal/components/screenreader-only/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport clsx from 'clsx';\nimport React from 'react';\nimport styles from './styles.css.js';\n\nexport interface ScreenreaderOnlyProps {\n  id?: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\n/**\n * Makes content now shown on a screen but still announced by screen-reader users.\n * The component is suitable when the aria-label cannot be used, e.g. to avoid elemnts being announced as \"blank\".\n *\n * To exclude screenreader-only content use `:not(.${screenreaderOnlyStyles.root})` selector, for example:\n *\n * ```\n * import screenreaderOnlyStyles from '~internal/components/screenreader-only/styles.css.js'\n *\n * let visibleContent = wrapper.find(`${styles.label}`).find(`:not(.${screenreaderOnlyStyles.root})`).getElement().textContent\n *\n * let screenreaderContent = wrapper.find(`${styles.label}`).find(`.${screenreaderOnlyStyles.root}`).getElement().textContent\n * ```\n */\nexport default function ScreenreaderOnly(props: ScreenreaderOnlyProps) {\n  return <span {...props} className={clsx(styles.root, props.className)} />;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_xttbq_1yl3y_93\"\n};\n  "],
  "mappings": ";;;;;;;;;;;;AAIA,mBAAkB;;;ACHd,OAAO;AACP,IAAO,qBAAQ;AAAA,EACjB,QAAQ;AACV;;;ADuBc,SAAP,iBAAkC,OAA4B;AACnE,SAAO,aAAAA,QAAA,cAAA,QAAA,SAAA,CAAA,GAAU,OAAK,EAAE,WAAW,eAAK,mBAAO,MAAM,MAAM,SAAS,EAAC,CAAA,CAAA;AACvE;",
  "names": ["React"]
}

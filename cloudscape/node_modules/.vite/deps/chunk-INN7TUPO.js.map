{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/internal/hooks/use-merge-refs/internal/hooks/use-merge-refs/index.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useMemo } from 'react';\n\n/**\n * useMergeRefs merges multiple refs into single ref callback.\n *\n * For example\n *  const mergedRef = useMergeRefs(ref1, ref2, ref3)\n *  <div ref={refs}>...</div>\n */\nexport function useMergeRefs<T = any>(\n  ...refs: Array<React.RefCallback<T> | React.MutableRefObject<T> | null | undefined>\n): React.RefCallback<T> | null {\n  return useMemo(() => {\n    if (refs.every(ref => ref === null || ref === undefined)) {\n      return null;\n    }\n    return (value: T | null) => {\n      refs.forEach(ref => {\n        if (typeof ref === 'function') {\n          ref(value);\n        } else if (ref !== null && ref !== undefined) {\n          (ref as React.MutableRefObject<any>).current = value;\n        }\n      });\n    };\n    // ESLint expects an array literal which we can not provide here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}\n"],
  "mappings": ";;;;;;AAEA,mBAA+B;AASzB,SAAU,gBACX,MAAgF;AAEnF,aAAO,sBAAQ,MAAK;AAClB,QAAI,KAAK,MAAM,SAAO,QAAQ,QAAQ,QAAQ,MAAS,GAAG;AACxD,aAAO;;AAET,WAAO,CAAC,UAAmB;AACzB,WAAK,QAAQ,SAAM;AACjB,YAAI,OAAO,QAAQ,YAAY;AAC7B,cAAI,KAAK;mBACA,QAAQ,QAAQ,QAAQ,QAAW;AAC3C,cAAoC,UAAU;;MAEnD,CAAC;IACH;EAGF,GAAG,IAAI;AACT;",
  "names": []
}

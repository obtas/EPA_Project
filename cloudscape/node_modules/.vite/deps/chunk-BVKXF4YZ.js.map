{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/internal/components/dropdown/styles.css.js", "../../@cloudscape-design/components/internal/components/dropdown/internal/components/dropdown/index.tsx", "../../@cloudscape-design/components/internal/components/dropdown/internal/components/dropdown/dropdown-fit-handler.ts", "../../@cloudscape-design/components/internal/hooks/use-portal-mode-classes/internal/hooks/use-portal-mode-classes/index.ts", "../../@cloudscape-design/components/internal/components/dropdown/internal/components/dropdown/context.tsx", "../../@cloudscape-design/components/internal/components/options-list/utils/internal/components/options-list/utils/use-open-state.ts", "../../@cloudscape-design/components/internal/components/options-list/internal/components/options-list/index.tsx", "../../@cloudscape-design/components/internal/components/options-list/styles.css.js"],
  "sourcesContent": ["\n    import './styles.scoped.css';\n    export default {\n  \"dropdown-content-wrapper\": \"awsui_dropdown-content-wrapper_qwoo0_np0k9_93\",\n  \"awsui-motion-fade-in-dropdown\": \"awsui_awsui-motion-fade-in-dropdown_qwoo0_np0k9_1\",\n  \"refresh\": \"awsui_refresh_qwoo0_np0k9_114\",\n  \"awsui-motion-fade-in-0\": \"awsui_awsui-motion-fade-in-0_qwoo0_np0k9_1\",\n  \"root\": \"awsui_root_qwoo0_np0k9_143\",\n  \"interior\": \"awsui_interior_qwoo0_np0k9_157\",\n  \"dropdown\": \"awsui_dropdown_qwoo0_np0k9_93\",\n  \"use-portal\": \"awsui_use-portal_qwoo0_np0k9_168\",\n  \"dropdown-drop-up\": \"awsui_dropdown-drop-up_qwoo0_np0k9_213\",\n  \"with-limited-width\": \"awsui_with-limited-width_qwoo0_np0k9_217\",\n  \"dropdown-drop-left\": \"awsui_dropdown-drop-left_qwoo0_np0k9_220\",\n  \"dropdown-drop-right\": \"awsui_dropdown-drop-right_qwoo0_np0k9_223\",\n  \"occupy-entire-width\": \"awsui_occupy-entire-width_qwoo0_np0k9_226\",\n  \"hide-upper-border\": \"awsui_hide-upper-border_qwoo0_np0k9_229\",\n  \"open\": \"awsui_open_qwoo0_np0k9_236\",\n  \"nowrap\": \"awsui_nowrap_qwoo0_np0k9_245\",\n  \"is-empty\": \"awsui_is-empty_qwoo0_np0k9_249\",\n  \"dropdown-content\": \"awsui_dropdown-content_qwoo0_np0k9_93\",\n  \"ie11-wrapper\": \"awsui_ie11-wrapper_qwoo0_np0k9_259\",\n  \"stretch-trigger-height\": \"awsui_stretch-trigger-height_qwoo0_np0k9_263\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport styles from './styles.css.js';\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { fireNonCancelableEvent } from '../../events';\nimport { DropdownProps } from './interfaces';\nimport { DropdownPosition, InteriorDropdownPosition, calculatePosition } from './dropdown-fit-handler';\nimport { Transition, TransitionStatus } from '../transition';\nimport { useVisualRefresh } from '../../hooks/use-visual-mode';\nimport { usePortalModeClasses } from '../../hooks/use-portal-mode-classes';\nimport { DropdownContextProvider, DropdownContextProviderProps } from './context';\nimport { useMobile } from '../../hooks/use-mobile';\nimport TabTrap from '../tab-trap/index.js';\nimport { getFirstFocusable, getLastFocusable } from '../focus-lock/utils.js';\nimport { useUniqueId } from '../../hooks/use-unique-id/index.js';\n\ninterface DropdownContainerProps {\n  children?: React.ReactNode;\n  renderWithPortal?: boolean;\n  id?: string;\n  referrerId?: string;\n  open?: boolean;\n}\n\nconst DropdownContainer = ({ children, renderWithPortal = false, id, referrerId, open }: DropdownContainerProps) => {\n  if (renderWithPortal) {\n    if (open) {\n      return createPortal(\n        <div id={id} data-awsui-referrer-id={referrerId}>\n          {children}\n        </div>,\n        document.body\n      );\n    } else {\n      return null;\n    }\n  } else {\n    return <>{children}</>;\n  }\n};\n\ninterface TransitionContentProps {\n  state: TransitionStatus;\n  transitionRef: React.MutableRefObject<any>;\n  dropdownClasses: string;\n  stretchWidth: boolean;\n  interior: boolean;\n  isRefresh: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  verticalContainerRef: React.RefObject<HTMLDivElement>;\n  expandToViewport?: boolean;\n  header?: React.ReactNode;\n  children?: React.ReactNode;\n  footer?: React.ReactNode;\n  position?: DropdownContextProviderProps['position'];\n  open?: boolean;\n  onMouseDown?: React.MouseEventHandler<Element>;\n}\n\nconst TransitionContent = ({\n  state,\n  transitionRef,\n  dropdownClasses,\n  stretchWidth,\n  interior,\n  isRefresh,\n  dropdownRef,\n  verticalContainerRef,\n  expandToViewport,\n  header,\n  children,\n  footer,\n  position,\n  open,\n  onMouseDown,\n}: TransitionContentProps) => {\n  const contentRef = useMergeRefs(dropdownRef, transitionRef);\n  return (\n    <div\n      className={clsx(styles.dropdown, dropdownClasses, {\n        [styles.open]: open,\n        [styles['with-limited-width']]: !stretchWidth,\n        [styles['hide-upper-border']]: stretchWidth,\n        [styles.interior]: interior,\n        [styles['is-empty']]: !header && !children,\n        [styles.refresh]: isRefresh,\n        [styles['use-portal']]: expandToViewport && !interior,\n      })}\n      ref={contentRef}\n      data-open={open}\n      data-animating={state !== 'exited'}\n      aria-hidden={!open}\n      onMouseDown={onMouseDown}\n    >\n      <div className={clsx(styles['dropdown-content-wrapper'], isRefresh && styles.refresh)}>\n        <div className={styles['ie11-wrapper']}>\n          <div ref={verticalContainerRef} className={styles['dropdown-content']}>\n            <DropdownContextProvider position={position}>\n              {header}\n              {children}\n              {footer}\n            </DropdownContextProvider>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Dropdown = ({\n  children,\n  trigger,\n  open,\n  onDropdownClose,\n  onMouseDown,\n  header,\n  footer,\n  dropdownId,\n  stretchTriggerHeight = false,\n  stretchWidth = true,\n  stretchHeight = false,\n  stretchToTriggerWidth = true,\n  expandToViewport = false,\n  preferCenter = false,\n  interior = false,\n  minWidth,\n  scrollable = true,\n  loopFocus = expandToViewport,\n  onFocus,\n  onBlur,\n  contentKey,\n}: DropdownProps) => {\n  const wrapperRef = useRef<HTMLDivElement | null>(null);\n  const triggerRef = useRef<HTMLDivElement | null>(null);\n  const dropdownRef = useRef<HTMLDivElement | null>(null);\n  const dropdownContainerRef = useRef<HTMLDivElement | null>(null);\n  // This container is only needed to apply max-height to. We can't move max-height to it's parent\n  // because of an IE11 issue with flexbox. https://github.com/philipwalton/flexbugs/issues/216\n  const verticalContainerRef = useRef<HTMLDivElement>(null);\n  // To keep track of the initial position (drop up/down) which is kept the same during fixed repositioning\n  const fixedPosition = useRef<DropdownPosition | null>(null);\n\n  const isRefresh = useVisualRefresh();\n\n  const dropdownClasses = usePortalModeClasses(triggerRef);\n  const [position, setPosition] = useState<DropdownContextProviderProps['position']>('bottom-right');\n\n  const isMobile = useMobile();\n\n  const setDropdownPosition = (\n    position: DropdownPosition | InteriorDropdownPosition,\n    triggerBox: DOMRect,\n    target: HTMLDivElement,\n    verticalContainer: HTMLDivElement\n  ) => {\n    const entireWidth = !interior && stretchWidth;\n    if (!stretchWidth) {\n      // 1px offset for dropdowns where the dropdown itself needs a border, rather than on the items\n      verticalContainer.style.maxHeight = `${parseInt(position.height) + 1}px`;\n    } else {\n      verticalContainer.style.maxHeight = position.height;\n    }\n\n    if (entireWidth && !expandToViewport) {\n      if (stretchToTriggerWidth) {\n        target.classList.add(styles['occupy-entire-width']);\n      }\n    } else {\n      target.style.width = position.width;\n    }\n    // Using styles for main dropdown to adjust its position as preferred alternative\n    if (position.dropUp && !interior) {\n      target.classList.add(styles['dropdown-drop-up']);\n      if (!expandToViewport) {\n        target.style.bottom = '100%';\n      }\n    } else {\n      target.classList.remove(styles['dropdown-drop-up']);\n    }\n    target.classList.add(position.dropLeft ? styles['dropdown-drop-left'] : styles['dropdown-drop-right']);\n\n    if (position.left && position.left !== 'auto') {\n      target.style.left = position.left;\n    }\n\n    // Position normal overflow dropdowns with fixed positioning relative to viewport\n    if (expandToViewport && !interior) {\n      target.style.position = 'fixed';\n      if (position.dropUp) {\n        target.style.bottom = `calc(100% - ${triggerBox.top}px)`;\n      } else {\n        target.style.top = `${triggerBox.bottom}px`;\n      }\n      if (position.dropLeft) {\n        target.style.left = `calc(${triggerBox.right}px - ${position.width})`;\n      } else {\n        target.style.left = `${triggerBox.left}px`;\n      }\n      // Keep track of the initial dropdown position and direction.\n      // Dropdown direction doesn't need to change as the user scrolls, just needs to stay attached to the trigger.\n      fixedPosition.current = position;\n      return;\n    }\n\n    // For an interior dropdown (the fly out) we need exact values for positioning\n    // and classes are not enough\n    // usage of relative position is impossible due to overwrite of overflow-x\n    if (interior && isInteriorPosition(position)) {\n      if (position.dropUp) {\n        target.style.bottom = position.bottom;\n      } else {\n        target.style.top = position.top;\n      }\n      target.style.left = position.left;\n    }\n\n    if (position.dropUp && position.dropLeft) {\n      setPosition('top-left');\n    } else if (position.dropUp) {\n      setPosition('top-right');\n    } else if (position.dropLeft) {\n      setPosition('bottom-left');\n    } else {\n      setPosition('bottom-right');\n    }\n  };\n\n  const isOutsideDropdown = (element: Element) =>\n    (!wrapperRef.current || !wrapperRef.current.contains(element)) &&\n    (!dropdownContainerRef.current || !dropdownContainerRef.current.contains(element));\n\n  const focusHandler = (event: React.FocusEvent) => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onFocus, event);\n    }\n  };\n\n  const blurHandler = (event: React.FocusEvent) => {\n    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {\n      fireNonCancelableEvent(onBlur, event);\n    }\n  };\n\n  useLayoutEffect(() => {\n    const onDropdownOpen = () => {\n      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {\n        // calculate scroll width only for dropdowns that has a scrollbar and ignore it for date picker components\n        if (scrollable) {\n          dropdownRef.current.classList.add(styles.nowrap);\n        }\n        setDropdownPosition(\n          ...calculatePosition(\n            dropdownRef.current,\n            triggerRef.current,\n            verticalContainerRef.current,\n            interior,\n            expandToViewport,\n            preferCenter,\n            stretchWidth,\n            stretchHeight,\n            isMobile,\n            minWidth\n          ),\n          dropdownRef.current,\n          verticalContainerRef.current\n        );\n        if (scrollable) {\n          dropdownRef.current.classList.remove(styles.nowrap);\n        }\n      }\n    };\n    onDropdownOpen();\n\n    if (open) {\n      // window may scroll when dropdown opens, for example when soft keyboard shows up\n      window.addEventListener('scroll', onDropdownOpen);\n      // only listen to window scroll within very short time after the dropdown opens\n      // do not want to interfere dropdown position on scroll afterwards\n      const timeoutId = setTimeout(() => {\n        window.removeEventListener('scroll', onDropdownOpen);\n      }, 500);\n\n      return () => {\n        clearTimeout(timeoutId);\n        window.removeEventListener('scroll', onDropdownOpen);\n      };\n    }\n    // See AWSUI-13040\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);\n\n  // subscribe to outside click\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const clickListener = (e: MouseEvent) => {\n      if (!dropdownRef.current?.contains(e.target as Node) && !triggerRef.current?.contains(e.target as Node)) {\n        fireNonCancelableEvent(onDropdownClose);\n      }\n    };\n    window.addEventListener('click', clickListener, true);\n\n    return () => {\n      window.removeEventListener('click', clickListener, true);\n    };\n  }, [open, onDropdownClose]);\n\n  // sync dropdown position on scroll and resize\n  useLayoutEffect(() => {\n    if (!expandToViewport || !open) {\n      return;\n    }\n    const updateDropdownPosition = () => {\n      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {\n        const triggerRect = triggerRef.current.getBoundingClientRect();\n        const target = dropdownRef.current;\n        if (fixedPosition.current) {\n          if (fixedPosition.current.dropUp) {\n            dropdownRef.current.style.bottom = `calc(100% - ${triggerRect.top}px)`;\n          } else {\n            target.style.top = `${triggerRect.bottom}px`;\n          }\n          if (fixedPosition.current.dropLeft) {\n            target.style.left = `calc(${triggerRect.right}px - ${fixedPosition.current.width})`;\n          } else {\n            target.style.left = `${triggerRect.left}px`;\n          }\n        }\n      }\n    };\n\n    updateDropdownPosition();\n\n    window.addEventListener('scroll', updateDropdownPosition, true);\n    window.addEventListener('resize', updateDropdownPosition, true);\n    return () => {\n      window.removeEventListener('scroll', updateDropdownPosition, true);\n      window.removeEventListener('resize', updateDropdownPosition, true);\n    };\n  }, [open, expandToViewport]);\n\n  const referrerId = useUniqueId();\n\n  return (\n    <div\n      className={clsx(\n        styles.root,\n        interior && styles.interior,\n        stretchTriggerHeight && styles['stretch-trigger-height']\n      )}\n      ref={wrapperRef}\n      onFocus={focusHandler}\n      onBlur={blurHandler}\n    >\n      <div id={referrerId} className={clsx(stretchTriggerHeight && styles['stretch-trigger-height'])} ref={triggerRef}>\n        {trigger}\n      </div>\n\n      <TabTrap\n        focusNextCallback={() => dropdownRef.current && getFirstFocusable(dropdownRef.current)?.focus()}\n        disabled={!open || !loopFocus}\n      />\n\n      <DropdownContainer\n        renderWithPortal={expandToViewport && !interior}\n        id={dropdownId}\n        referrerId={referrerId}\n        open={open}\n      >\n        <Transition in={open ?? false} exit={false}>\n          {(state, ref) => (\n            <div ref={dropdownContainerRef}>\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getLastFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !loopFocus}\n              />\n\n              <TransitionContent\n                state={state}\n                transitionRef={ref}\n                dropdownClasses={dropdownClasses}\n                open={open}\n                stretchWidth={stretchWidth}\n                interior={interior}\n                header={header}\n                expandToViewport={expandToViewport}\n                footer={footer}\n                onMouseDown={onMouseDown}\n                isRefresh={isRefresh}\n                dropdownRef={dropdownRef}\n                verticalContainerRef={verticalContainerRef}\n                position={position}\n              >\n                {children}\n              </TransitionContent>\n\n              <TabTrap\n                focusNextCallback={() => triggerRef.current && getFirstFocusable(triggerRef.current)?.focus()}\n                disabled={!open || !loopFocus}\n              />\n            </div>\n          )}\n        </Transition>\n      </DropdownContainer>\n    </div>\n  );\n};\n\nconst isInteriorPosition = (\n  position: DropdownPosition | InteriorDropdownPosition\n): position is InteriorDropdownPosition => (position as InteriorDropdownPosition).bottom !== undefined;\n\nexport default Dropdown;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { Dimensions, getOverflowParents, getOverflowParentDimensions } from '../../utils/scrollable-containers';\nimport styles from './styles.css.js';\n\nconst AVAILABLE_SPACE_RESERVE_DEFAULT = 50;\nconst AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19; // 50 - 31\nconst AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;\n\ninterface AvailableSpace {\n  above: number;\n  below: number;\n  left: number;\n  right: number;\n}\nexport interface DropdownPosition {\n  height: string;\n  width: string;\n  dropUp: boolean;\n  dropLeft: boolean;\n  left: string;\n}\nexport interface InteriorDropdownPosition extends DropdownPosition {\n  bottom: string;\n  top: string;\n}\n\nconst getClosestParentDimensions = (element: HTMLElement): any => {\n  const parents = getOverflowParents(element).map(el => {\n    const { height, width, top, left } = el.getBoundingClientRect();\n    return {\n      height,\n      width,\n      top,\n      left,\n    };\n  });\n\n  return parents.shift();\n};\n\nexport const getAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): AvailableSpace => {\n  const availableSpaceReserveVertical = stretchHeight\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const availableSpaceReserveHorizontal = stretchWidth\n    ? 0\n    : isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const { bottom: triggerBottom, left: triggerLeft, right: triggerRight } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const offsetTop = triggerBottom - overflowParent.top;\n      const currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;\n      const currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;\n      const currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;\n      const currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getInteriorAvailableSpace = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): AvailableSpace => {\n  const AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile\n    ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL\n    : AVAILABLE_SPACE_RESERVE_DEFAULT;\n  const {\n    bottom: triggerBottom,\n    top: triggerTop,\n    left: triggerLeft,\n    right: triggerRight,\n  } = trigger.getBoundingClientRect();\n\n  return overflowParents.reduce(\n    ({ above, below, left, right }, overflowParent) => {\n      const currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;\n      const currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n      const currentRight =\n        overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;\n\n      return {\n        above: Math.min(above, currentAbove),\n        below: Math.min(below, currentBelow),\n        left: Math.min(left, currentLeft),\n        right: Math.min(right, currentRight),\n      };\n    },\n    { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE }\n  );\n};\n\nexport const getDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  minWidth?: number,\n  preferCenter = false,\n  stretchWidth = false,\n  stretchHeight = false,\n  isMobile?: boolean\n): DropdownPosition => {\n  const availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);\n  const triggerWidth = trigger.getBoundingClientRect().width;\n  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;\n  const requiredWidth = dropdown.getBoundingClientRect().width;\n  // dropdown should not be smaller than the trigger\n  const idealWidth = Math.max(requiredWidth, minWidth);\n\n  let dropLeft: boolean;\n  let left: number | null = null;\n  let width = idealWidth;\n\n  //1. Can it be positioned with ideal width to the right?\n  if (idealWidth <= availableSpace.right) {\n    dropLeft = false;\n    //2. Can it be positioned with ideal width to the left?\n  } else if (idealWidth <= availableSpace.left) {\n    dropLeft = true;\n    //3. Fit into biggest available space either on left or right\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right, minWidth);\n  }\n\n  if (preferCenter) {\n    const spillOver = (idealWidth - triggerWidth) / 2;\n\n    // availableSpace always includes the trigger width, but we want to exclude that\n    const availableOutsideLeft = availableSpace.left - triggerWidth;\n    const availableOutsideRight = availableSpace.right - triggerWidth;\n\n    const fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;\n    if (fitsInCenter) {\n      left = -spillOver;\n    }\n  }\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    left: left === null ? 'auto' : `${left}px`,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n  };\n};\n\nexport const getInteriorDropdownPosition = (\n  trigger: HTMLElement,\n  dropdown: HTMLElement,\n  overflowParents: ReadonlyArray<Dimensions>,\n  isMobile?: boolean\n): InteriorDropdownPosition => {\n  const availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);\n  const { bottom: triggerBottom, top: triggerTop, width: triggerWidth } = trigger.getBoundingClientRect();\n  const { top: parentDropdownTop, height: parentDropdownHeight } = getClosestParentDimensions(trigger);\n\n  let dropLeft;\n\n  let width = dropdown.getBoundingClientRect().width;\n  const top = triggerTop - parentDropdownTop;\n  if (width <= availableSpace.right) {\n    dropLeft = false;\n  } else if (width <= availableSpace.left) {\n    dropLeft = true;\n  } else {\n    dropLeft = availableSpace.left > availableSpace.right;\n    width = Math.max(availableSpace.left, availableSpace.right);\n  }\n\n  const left = dropLeft ? 0 - width : triggerWidth;\n\n  const dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;\n  const bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;\n  const availableHeight = dropUp ? availableSpace.above : availableSpace.below;\n  // Try and crop the bottom item when all options can't be displayed, affordance for \"there's more\"\n  const croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;\n\n  return {\n    dropUp,\n    dropLeft,\n    height: `${croppedHeight}px`,\n    width: `${width}px`,\n    top: `${top}px`,\n    bottom: `${bottom}px`,\n    left: `${left}px`,\n  };\n};\n\nexport const calculatePosition = (\n  dropdownElement: HTMLDivElement,\n  triggerElement: HTMLDivElement,\n  verticalContainerElement: HTMLDivElement,\n  interior: boolean,\n  expandToViewport: boolean,\n  preferCenter: boolean,\n  stretchWidth: boolean,\n  stretchHeight: boolean,\n  isMobile: boolean,\n  minWidth?: number\n): [DropdownPosition, DOMRect] => {\n  // cleaning previously assigned values,\n  // so that they are not reused in case of screen resize and similar events\n  verticalContainerElement.style.maxHeight = '';\n  dropdownElement.style.width = '';\n  dropdownElement.style.top = '';\n  dropdownElement.style.bottom = '';\n  dropdownElement.style.left = '';\n\n  dropdownElement.classList.remove(styles['dropdown-drop-left']);\n  dropdownElement.classList.remove(styles['dropdown-drop-right']);\n  dropdownElement.classList.remove(styles['dropdown-drop-up']);\n\n  const overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);\n  const position = interior\n    ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile)\n    : getDropdownPosition(\n        triggerElement,\n        dropdownElement,\n        overflowParents,\n        minWidth,\n        preferCenter,\n        stretchWidth,\n        stretchHeight,\n        isMobile\n      );\n  const triggerBox = triggerElement.getBoundingClientRect();\n  return [position, triggerBox];\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useVisualContext } from '../../components/visual-context';\nimport { useCurrentMode, useDensityMode, useVisualRefresh } from '../use-visual-mode';\n\nexport function usePortalModeClasses(ref: React.RefObject<HTMLElement>) {\n  const colorMode = useCurrentMode(ref);\n  const densityMode = useDensityMode(ref);\n  const context = useVisualContext(ref);\n  const visualRefresh = useVisualRefresh();\n  return clsx({\n    'awsui-polaris-dark-mode awsui-dark-mode': colorMode === 'dark',\n    'awsui-polaris-compact-mode awsui-compact-mode': densityMode === 'compact',\n    'awsui-visual-refresh': visualRefresh,\n    [`awsui-context-${context}`]: context,\n  });\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\n\ntype Position = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';\n\nconst DropdownContext = React.createContext<{ position: Position }>({\n  position: 'bottom-right',\n});\n\nexport interface DropdownContextProviderProps {\n  position?: Position;\n  children?: React.ReactNode;\n}\n\nexport function DropdownContextProvider({ children, position = 'bottom-right' }: DropdownContextProviderProps) {\n  return <DropdownContext.Provider value={{ position }}>{children}</DropdownContext.Provider>;\n}\n\nexport function useDropdownContext() {\n  return useContext(DropdownContext);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useState } from 'react';\n\ninterface OpenStateProps {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const useOpenState = ({ onOpen, onClose }: OpenStateProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openDropdown = () => {\n    if (!isOpen) {\n      setIsOpen(true);\n      onOpen?.();\n    }\n  };\n\n  const closeDropdown = () => {\n    if (isOpen) {\n      setIsOpen(false);\n      onClose?.();\n    }\n  };\n\n  const toggleDropdown = () => {\n    if (isOpen) {\n      closeDropdown();\n    } else {\n      openDropdown();\n    }\n  };\n\n  return { isOpen, openDropdown, closeDropdown, toggleDropdown };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport { useMergeRefs } from '../../hooks/use-merge-refs';\nimport React, { useEffect, useRef } from 'react';\nimport { BaseComponentProps, getBaseProps } from '../../base-component';\nimport {\n  fireNonCancelableEvent,\n  NonCancelableEventHandler,\n  CancelableEventHandler,\n  BaseKeyDetail,\n  fireKeyboardEvent,\n} from '../../events';\nimport { findUpUntil } from '../../utils/dom';\nimport styles from './styles.css.js';\nimport { useStableEventHandler } from '../../hooks/use-stable-event-handler';\nimport { DropdownStatusProps } from '../dropdown-status';\n\nexport interface OptionsListProps extends BaseComponentProps {\n  open?: boolean;\n  statusType: DropdownStatusProps.StatusType;\n  /**\n   * Options list\n   */\n  children: React.ReactNode;\n  nativeAttributes?: Record<string, any>;\n  /**\n   * Called when more items need to be loaded.\n   */\n  onLoadMore?: NonCancelableEventHandler;\n  onKeyDown?: CancelableEventHandler<BaseKeyDetail>;\n  onBlur?: NonCancelableEventHandler<{ relatedTarget: Node | null }>;\n  onFocus?: NonCancelableEventHandler;\n  onMouseUp?: (itemIndex: number) => void;\n  onMouseMove?: (itemIndex: number) => void;\n  position?: React.CSSProperties['position'];\n  role?: 'listbox' | 'list' | 'menu';\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  decreaseTopMargin?: boolean;\n}\n\nconst BOTTOM_TRIGGER_OFFSET = 80;\n\nconst getItemIndex = (containerRef: React.RefObject<HTMLElement>, event: React.MouseEvent) => {\n  const target = findUpUntil(\n    event.target as HTMLElement,\n    element => element === containerRef.current || !!element.dataset.mouseTarget\n  );\n  const mouseTarget = target?.dataset.mouseTarget;\n  return mouseTarget ? parseInt(mouseTarget) : -1;\n};\n\nconst OptionsList = (\n  {\n    open,\n    statusType,\n    children,\n    nativeAttributes = {},\n    onKeyDown,\n    onBlur,\n    onFocus,\n    onLoadMore,\n    onMouseUp,\n    onMouseMove,\n    position = 'relative',\n    role = 'listbox',\n    decreaseTopMargin = false,\n    ariaLabelledby,\n    ariaDescribedby,\n    ...restProps\n  }: OptionsListProps,\n  ref: React.Ref<HTMLUListElement>\n) => {\n  const baseProps = getBaseProps(restProps);\n  const menuRef = useRef<HTMLUListElement>(null);\n\n  const handleScroll = useStableEventHandler(() => {\n    const scrollContainer = menuRef?.current;\n    if (scrollContainer) {\n      const bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;\n      const remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;\n      if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {\n        fireNonCancelableEvent(onLoadMore);\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (open && statusType === 'pending') {\n      handleScroll();\n    }\n  }, [open, statusType, handleScroll]);\n\n  const className = clsx(styles['options-list'], {\n    [styles['decrease-top-margin']]: decreaseTopMargin,\n  });\n\n  const mergedRef = useMergeRefs(ref, menuRef);\n\n  return (\n    <ul\n      {...baseProps}\n      {...nativeAttributes}\n      className={className}\n      ref={mergedRef}\n      style={{ position }}\n      role={role}\n      onScroll={handleScroll}\n      onKeyDown={event => onKeyDown && fireKeyboardEvent(onKeyDown, event)}\n      onMouseMove={event => onMouseMove?.(getItemIndex(menuRef, event))}\n      onMouseUp={event => onMouseUp?.(getItemIndex(menuRef, event))}\n      onBlur={event => fireNonCancelableEvent(onBlur, { relatedTarget: event.relatedTarget })}\n      onFocus={() => fireNonCancelableEvent(onFocus)}\n      tabIndex={-1}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n    >\n      {open && children}\n    </ul>\n  );\n};\n\nexport default React.forwardRef(OptionsList);\n", "\n    import './styles.scoped.css';\n    export default {\n  \"options-list\": \"awsui_options-list_19gcf_4c10m_93\",\n  \"decrease-top-margin\": \"awsui_decrease-top-margin_19gcf_4c10m_115\"\n};\n  "],
  "mappings": "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",
  "names": ["import_react", "React", "React", "position", "import_react", "import_react", "styles_css_default", "styles_css_default", "React"]
}

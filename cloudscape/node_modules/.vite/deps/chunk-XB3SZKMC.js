import {
  InternalContainer
} from "./chunk-56AI5YJ6.js";
import {
  Description,
  InternalHeader
} from "./chunk-7534UZLX.js";
import {
  useControllable
} from "./chunk-FA4MCMIV.js";
import {
  useUniqueId
} from "./chunk-ZOQJCCJI.js";
import {
  InternalBox
} from "./chunk-HPKX24BK.js";
import {
  CSSTransition_default
} from "./chunk-4BMHMQ7J.js";
import {
  checkSafeUrl
} from "./chunk-JPGUN2BY.js";
import {
  fireCancelableEvent,
  fireNonCancelableEvent,
  isPlainLeftClick
} from "./chunk-CTALK4OT.js";
import {
  internal_default
} from "./chunk-CRWXG7GH.js";
import {
  KeyCode,
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  isDevelopment,
  useBaseComponent,
  warnOnce
} from "./chunk-BATVD76T.js";
import {
  __toESM,
  require_react
} from "./chunk-C3URVCCN.js";

// node_modules/@cloudscape-design/components/side-navigation/index.js
var import_react5 = __toESM(require_react());

// node_modules/@cloudscape-design/components/side-navigation/internal.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/expandable-section/internal.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/expandable-section/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/expandable-section/styles.scoped.css";
var styles_css_default = {
  "content-enter": "awsui_content-enter_gwq0h_1brli_97",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_gwq0h_1brli_1",
  "trigger-expanded": "awsui_trigger-expanded_gwq0h_1brli_119",
  "icon": "awsui_icon_gwq0h_1brli_133",
  "root": "awsui_root_gwq0h_1brli_151",
  "expand-button": "awsui_expand-button_gwq0h_1brli_168",
  "expanded": "awsui_expanded_gwq0h_1brli_175",
  "icon-container": "awsui_icon-container_gwq0h_1brli_179",
  "icon-container-container": "awsui_icon-container-container_gwq0h_1brli_184",
  "wrapper": "awsui_wrapper_gwq0h_1brli_188",
  "wrapper-default": "awsui_wrapper-default_gwq0h_1brli_195",
  "wrapper-footer": "awsui_wrapper-footer_gwq0h_1brli_195",
  "wrapper-navigation": "awsui_wrapper-navigation_gwq0h_1brli_198",
  "wrapper-container": "awsui_wrapper-container_gwq0h_1brli_201",
  "header-deprecated": "awsui_header-deprecated_gwq0h_1brli_217",
  "wrapper-expanded": "awsui_wrapper-expanded_gwq0h_1brli_248",
  "header": "awsui_header_gwq0h_1brli_217",
  "header-wrapper": "awsui_header-wrapper_gwq0h_1brli_255",
  "header-button": "awsui_header-button_gwq0h_1brli_265",
  "header-container-button": "awsui_header-container-button_gwq0h_1brli_265",
  "header-container": "awsui_header-container_gwq0h_1brli_265",
  "header-navigation": "awsui_header-navigation_gwq0h_1brli_297",
  "header-text": "awsui_header-text_gwq0h_1brli_329",
  "content": "awsui_content_gwq0h_1brli_97",
  "content-default": "awsui_content-default_gwq0h_1brli_336",
  "content-footer": "awsui_content-footer_gwq0h_1brli_339",
  "content-expanded": "awsui_content-expanded_gwq0h_1brli_342",
  "focusable": "awsui_focusable_gwq0h_1brli_346",
  "click-target": "awsui_click-target_gwq0h_1brli_357"
};

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-container.js
var import_react = __toESM(require_react());
var ExpandableSectionContainer = (_a) => {
  var { className, children, header, variant, expanded, disableContentPaddings, __internalRootRef } = _a, rest = __rest(_a, ["className", "children", "header", "variant", "expanded", "disableContentPaddings", "__internalRootRef"]);
  if (variant === "container" || variant === "stacked") {
    return import_react.default.createElement(InternalContainer, Object.assign({}, rest, { className, header, variant: variant === "stacked" ? "stacked" : "default", disableContentPaddings: disableContentPaddings || !expanded, disableHeaderPaddings: true, __hiddenContent: !expanded, __internalRootRef }), children);
  }
  return import_react.default.createElement(
    "div",
    Object.assign({ className }, rest, { ref: __internalRootRef }),
    header,
    children
  );
};

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-header.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/expandable-section/utils.js
function variantSupportsDescription(variant) {
  return variant === "container" || variant === "default" || variant === "footer";
}

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-header.js
var componentName = "ExpandableSection";
var ExpandableDeprecatedHeader = ({ id, className, onClick, ariaLabel, ariaControls, expanded, children, icon, onKeyUp, onKeyDown, variant }) => {
  return import_react2.default.createElement(
    "div",
    { id, role: "button", className: clsx_m_default(className, styles_css_default["expand-button"], styles_css_default["click-target"], styles_css_default["header-deprecated"]), tabIndex: 0, onKeyUp, onKeyDown, onClick, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded },
    import_react2.default.createElement("div", { className: clsx_m_default(styles_css_default["icon-container"], styles_css_default[`icon-container-${variant}`]) }, icon),
    children
  );
};
var ExpandableNavigationHeader = ({ id, className, onClick, ariaLabelledBy, ariaLabel, ariaControls, expanded, children, icon }) => {
  return import_react2.default.createElement(
    "div",
    { id, className: clsx_m_default(className, styles_css_default["click-target"]), onClick },
    import_react2.default.createElement("button", { className: clsx_m_default(styles_css_default["icon-container"], styles_css_default["expand-button"]), "aria-labelledby": ariaLabelledBy, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded, type: "button" }, icon),
    children
  );
};
var ExpandableHeaderTextWrapper = ({ id, descriptionId, className, onClick, ariaLabel, ariaControls, expanded, children, icon, headerDescription, headerCounter, headerInfo, headerActions, variant, headingTagOverride, onKeyUp, onKeyDown }) => {
  const isContainer = variant === "container";
  const HeadingTag = headingTagOverride || "div";
  const hasInteractiveElements = isContainer && (headerInfo || headerActions);
  const listeners = { onClick, onKeyDown, onKeyUp };
  const description = variantSupportsDescription(variant) && headerDescription && import_react2.default.createElement("span", { id: descriptionId, className: styles_css_default[`description-${variant}`] }, headerDescription);
  const headerButtonListeners = hasInteractiveElements ? listeners : void 0;
  const headingTagListeners = !headerButtonListeners && !isContainer && description ? listeners : void 0;
  const wrapperListeners = !headerButtonListeners && !headingTagListeners ? listeners : void 0;
  const headerButton = import_react2.default.createElement(
    "span",
    Object.assign({ className: clsx_m_default(styles_css_default["expand-button"], isContainer ? styles_css_default["header-container-button"] : styles_css_default["header-button"], headerButtonListeners && styles_css_default["click-target"]), role: "button", tabIndex: 0, "aria-label": ariaLabel, "aria-labelledby": !ariaLabel && description ? id : void 0, "aria-describedby": description ? descriptionId : void 0, "aria-controls": ariaControls, "aria-expanded": expanded }, headerButtonListeners),
    import_react2.default.createElement("span", { className: clsx_m_default(styles_css_default["icon-container"], styles_css_default[`icon-container-${variant}`]) }, icon),
    import_react2.default.createElement("span", { id, className: styles_css_default["header-text"] }, children)
  );
  return import_react2.default.createElement("div", Object.assign({ className: clsx_m_default(className, wrapperListeners && styles_css_default["click-target"]) }, wrapperListeners), isContainer ? import_react2.default.createElement(InternalHeader, { variant: "h2", description, counter: headerCounter, info: headerInfo, actions: headerActions, headingTagOverride }, headerButton) : import_react2.default.createElement(
    import_react2.default.Fragment,
    null,
    import_react2.default.createElement(HeadingTag, Object.assign({ className: clsx_m_default(styles_css_default["header-wrapper"], headingTagListeners && styles_css_default["click-target"]) }, headingTagListeners), headerButton),
    description && import_react2.default.createElement(Description, { variantOverride: "h3" }, description)
  ));
};
var ExpandableSectionHeader = ({ id, descriptionId, className, variant, header, headerText, headerDescription, headerCounter, headerInfo, headerActions, headingTagOverride, expanded, ariaControls, ariaLabel, ariaLabelledBy, onKeyUp, onKeyDown, onClick }) => {
  const icon = import_react2.default.createElement(internal_default, { size: variant === "container" ? "medium" : "normal", className: clsx_m_default(styles_css_default.icon, expanded && styles_css_default.expanded), name: "caret-down-filled" });
  const defaultHeaderProps = {
    id,
    icon,
    expanded,
    ariaControls,
    ariaLabel,
    onClick,
    variant
  };
  if ((headerCounter || headerInfo || headerActions) && variant !== "container" && isDevelopment) {
    warnOnce(componentName, 'The `headerCounter`, `headerInfo` and `headerActions` props are only supported for the "container" variant.');
  }
  if (headerDescription && !variantSupportsDescription(variant) && isDevelopment) {
    warnOnce(componentName, `The \`headerDescription\` prop is not supported for the ${variant} variant.`);
  }
  const wrapperClassName = clsx_m_default(styles_css_default.wrapper, styles_css_default[`wrapper-${variant}`], expanded && styles_css_default["wrapper-expanded"]);
  if (variant === "navigation") {
    return import_react2.default.createElement(ExpandableNavigationHeader, Object.assign({ className: clsx_m_default(className, wrapperClassName), ariaLabelledBy }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header);
  }
  if (headerText) {
    return import_react2.default.createElement(ExpandableHeaderTextWrapper, Object.assign({ className: clsx_m_default(className, wrapperClassName, expanded && styles_css_default.expanded), descriptionId, headerDescription, headerCounter, headerInfo, headerActions, headingTagOverride, onKeyUp, onKeyDown }, defaultHeaderProps), headerText);
  }
  if (variant === "container" && header && isDevelopment) {
    warnOnce(componentName, "Use `headerText` instead of `header` to provide the button within the heading for a11y.");
  }
  return import_react2.default.createElement(ExpandableDeprecatedHeader, Object.assign({ className: clsx_m_default(className, wrapperClassName, styles_css_default.focusable, expanded && styles_css_default.expanded), onKeyUp, onKeyDown }, defaultHeaderProps), header);
};

// node_modules/@cloudscape-design/components/expandable-section/internal.js
function InternalExpandableSection(_a) {
  var { expanded: controlledExpanded, defaultExpanded, onChange, variant = "default", children, header, headerText, headerCounter, headerDescription, headerInfo, headerActions, headingTagOverride, disableContentPaddings, headerAriaLabel, __internalRootRef } = _a, props = __rest(_a, ["expanded", "defaultExpanded", "onChange", "variant", "children", "header", "headerText", "headerCounter", "headerDescription", "headerInfo", "headerActions", "headingTagOverride", "disableContentPaddings", "headerAriaLabel", "__internalRootRef"]);
  const ref = (0, import_react3.useRef)(null);
  const controlId = useUniqueId();
  const triggerControlId = `${controlId}-trigger`;
  const descriptionId = `${controlId}-description`;
  const baseProps = getBaseProps(props);
  const [expanded, setExpanded] = useControllable(controlledExpanded, onChange, defaultExpanded, {
    componentName: "ExpandableSection",
    controlledProp: "expanded",
    changeHandler: "onChange"
  });
  const onExpandChange = (0, import_react3.useCallback)((expanded2) => {
    setExpanded(expanded2);
    fireNonCancelableEvent(onChange, { expanded: expanded2 });
  }, [onChange, setExpanded]);
  const onClick = (0, import_react3.useCallback)(() => {
    onExpandChange(!expanded);
  }, [onExpandChange, expanded]);
  const onKeyUp = (0, import_react3.useCallback)((event) => {
    const interactionKeys = [KeyCode.enter, KeyCode.space];
    if (interactionKeys.indexOf(event.keyCode) !== -1) {
      onExpandChange(!expanded);
    }
  }, [onExpandChange, expanded]);
  const onKeyDown = (0, import_react3.useCallback)((event) => {
    if (event.keyCode === KeyCode.space) {
      event.preventDefault();
    }
  }, []);
  const triggerProps = {
    ariaControls: controlId,
    ariaLabel: headerAriaLabel,
    ariaLabelledBy: headerAriaLabel ? void 0 : triggerControlId,
    onKeyUp,
    onKeyDown,
    onClick
  };
  const baseVariant = variant === "stacked" ? "container" : variant;
  return import_react3.default.createElement(
    ExpandableSectionContainer,
    Object.assign({}, baseProps, { expanded, className: clsx_m_default(baseProps.className, styles_css_default.root), variant, disableContentPaddings, header: import_react3.default.createElement(ExpandableSectionHeader, Object.assign({ id: triggerControlId, descriptionId, className: clsx_m_default(styles_css_default.header, styles_css_default[`header-${baseVariant}`]), variant: baseVariant, expanded: !!expanded, header, headerText, headerDescription, headerCounter, headerInfo, headerActions, headingTagOverride }, triggerProps)), __internalRootRef }),
    import_react3.default.createElement(
      CSSTransition_default,
      { in: expanded, timeout: 30, classNames: { enter: styles_css_default["content-enter"] }, nodeRef: ref },
      import_react3.default.createElement("div", { id: controlId, ref, className: clsx_m_default(styles_css_default.content, styles_css_default[`content-${baseVariant}`], expanded && styles_css_default["content-expanded"]), role: "group", "aria-label": triggerProps.ariaLabel, "aria-labelledby": triggerProps.ariaLabelledBy, "aria-describedby": variantSupportsDescription(baseVariant) && headerDescription ? descriptionId : void 0 }, children)
    )
  );
}

// node_modules/@cloudscape-design/components/side-navigation/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/side-navigation/styles.scoped.css";
var styles_css_default2 = {
  "root": "awsui_root_l0dv0_1yrqj_93",
  "header": "awsui_header_l0dv0_1yrqj_109",
  "header-link": "awsui_header-link_l0dv0_1yrqj_120",
  "header-link--has-logo": "awsui_header-link--has-logo_l0dv0_1yrqj_130",
  "header-link-text": "awsui_header-link-text_l0dv0_1yrqj_130",
  "header-logo": "awsui_header-logo_l0dv0_1yrqj_134",
  "header-logo--stretched": "awsui_header-logo--stretched_l0dv0_1yrqj_140",
  "list-container": "awsui_list-container_l0dv0_1yrqj_145",
  "list": "awsui_list_l0dv0_1yrqj_145",
  "list-variant-root": "awsui_list-variant-root_l0dv0_1yrqj_155",
  "list-variant-root--last": "awsui_list-variant-root--last_l0dv0_1yrqj_159",
  "list-variant-expandable-link-group": "awsui_list-variant-expandable-link-group_l0dv0_1yrqj_163",
  "list-item": "awsui_list-item_l0dv0_1yrqj_167",
  "section": "awsui_section_l0dv0_1yrqj_173",
  "expandable-link-group": "awsui_expandable-link-group_l0dv0_1yrqj_174",
  "section--no-ident": "awsui_section--no-ident_l0dv0_1yrqj_177",
  "expandable-link-group--no-ident": "awsui_expandable-link-group--no-ident_l0dv0_1yrqj_178",
  "list-variant-section-group": "awsui_list-variant-section-group_l0dv0_1yrqj_191",
  "section-group": "awsui_section-group_l0dv0_1yrqj_196",
  "section-group-title": "awsui_section-group-title_l0dv0_1yrqj_206",
  "link": "awsui_link_l0dv0_1yrqj_210",
  "link-active": "awsui_link-active_l0dv0_1yrqj_219",
  "info": "awsui_info_l0dv0_1yrqj_253",
  "external-icon": "awsui_external-icon_l0dv0_1yrqj_257",
  "divider": "awsui_divider_l0dv0_1yrqj_261",
  "divider-default": "awsui_divider-default_l0dv0_1yrqj_266",
  "divider-header": "awsui_divider-header_l0dv0_1yrqj_270"
};

// node_modules/@cloudscape-design/components/side-navigation/util.js
function hasActiveLink(items, activeHref) {
  for (const item of items) {
    if ((item.type === "link" || item.type === "link-group" || item.type === "expandable-link-group") && item.href === activeHref) {
      return true;
    }
    if ((item.type === "section" || item.type === "link-group" || item.type === "expandable-link-group") && hasActiveLink(item.items, activeHref)) {
      return true;
    }
  }
  return false;
}
function generateExpandableItemsMapping(items, mapping = /* @__PURE__ */ new WeakMap(), expandableParents = []) {
  items.forEach((item) => {
    const nextLevelParents = expandableParents.slice();
    if (item.type === "section" || item.type === "expandable-link-group") {
      mapping.set(item, expandableParents);
      nextLevelParents.unshift(item);
    }
    if (item.type === "section" || item.type === "link-group" || item.type === "expandable-link-group") {
      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);
    }
  });
  return mapping;
}
function checkDuplicateHrefs(items) {
  const hrefs = /* @__PURE__ */ new Set();
  const queue = items.slice();
  while (queue.length > 0) {
    const item = queue.shift();
    if ("href" in item) {
      if (hrefs.has(item.href)) {
        warnOnce("SideNavigation", `duplicate href in "${item.text}": ${item.href}`);
      }
      hrefs.add(item.href);
    }
    if ("items" in item) {
      queue.push(...item.items);
    }
  }
}

// node_modules/@cloudscape-design/components/side-navigation/internal.js
function Header({ definition, activeHref, fireFollow }) {
  checkSafeUrl("SideNavigation", definition.href);
  const onClick = (0, import_react4.useCallback)((event) => {
    if (isPlainLeftClick(event)) {
      fireFollow(definition, event);
    }
  }, [fireFollow, definition]);
  return import_react4.default.createElement(
    import_react4.default.Fragment,
    null,
    import_react4.default.createElement(
      "h2",
      { className: styles_css_default2.header },
      import_react4.default.createElement(
        "a",
        { href: definition.href, className: clsx_m_default(styles_css_default2["header-link"], { [styles_css_default2["header-link--has-logo"]]: !!definition.logo }), "aria-current": definition.href === activeHref ? "page" : void 0, onClick },
        definition.logo && import_react4.default.createElement("img", Object.assign({ className: clsx_m_default(styles_css_default2["header-logo"], {
          [styles_css_default2["header-logo--stretched"]]: !definition.text
        }) }, definition.logo)),
        import_react4.default.createElement("span", { className: styles_css_default2["header-link-text"] }, definition.text)
      )
    ),
    import_react4.default.createElement(Divider, { isPresentational: true, variant: "header" })
  );
}
function NavigationItemsList({ items, variant, activeHref, fireChange, fireFollow }) {
  const lists = [];
  let currentListIndex = 0;
  lists[currentListIndex] = {
    listVariant: variant,
    items: []
  };
  items.forEach((item, index) => {
    var _a, _b, _c, _d, _e;
    const itemid = index + 1;
    switch (item.type) {
      case "divider": {
        const dividerIndex = lists.length;
        lists[dividerIndex] = {
          element: import_react4.default.createElement(
            "div",
            { "data-itemid": `item-${itemid}` },
            import_react4.default.createElement(Divider, { variant: "default" })
          )
        };
        currentListIndex = lists.length;
        lists[currentListIndex] = {
          listVariant: variant,
          items: []
        };
        return;
      }
      case "link": {
        (_a = lists[currentListIndex].items) === null || _a === void 0 ? void 0 : _a.push({
          element: import_react4.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default2["list-item"] },
            import_react4.default.createElement(Link, { definition: item, activeHref, fireChange, fireFollow })
          )
        });
        return;
      }
      case "section": {
        (_b = lists[currentListIndex].items) === null || _b === void 0 ? void 0 : _b.push({
          element: import_react4.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default2["list-item"] },
            import_react4.default.createElement(Section, { definition: item, activeHref, variant, fireChange, fireFollow })
          )
        });
        return;
      }
      case "section-group": {
        (_c = lists[currentListIndex].items) === null || _c === void 0 ? void 0 : _c.push({
          element: import_react4.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default2["list-item"] },
            import_react4.default.createElement(SectionGroup, { definition: item, activeHref, fireChange, fireFollow })
          )
        });
        return;
      }
      case "link-group": {
        (_d = lists[currentListIndex].items) === null || _d === void 0 ? void 0 : _d.push({
          element: import_react4.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default2["list-item"] },
            import_react4.default.createElement(LinkGroup, { definition: item, activeHref, fireChange, fireFollow })
          )
        });
        return;
      }
      case "expandable-link-group": {
        (_e = lists[currentListIndex].items) === null || _e === void 0 ? void 0 : _e.push({
          element: import_react4.default.createElement(
            "li",
            { key: index, "data-itemid": `item-${itemid}`, className: styles_css_default2["list-item"] },
            import_react4.default.createElement(ExpandableLinkGroup, { definition: item, activeHref, fireChange, fireFollow, variant })
          )
        });
        return;
      }
    }
  });
  const lastListIndex = lists.length - 1;
  return import_react4.default.createElement(import_react4.default.Fragment, null, lists.map((list, index) => {
    if (!list.items || list.items.length === 0) {
      return import_react4.default.createElement("div", { key: `hr-${index}`, className: clsx_m_default(styles_css_default2.list, styles_css_default2[`list-variant-${variant}`], {
        [styles_css_default2["list-variant-root--last"]]: list.listVariant === "root" && index === lastListIndex
      }) }, list.element);
    } else {
      return import_react4.default.createElement("ul", { key: `list-${index}`, className: clsx_m_default(styles_css_default2.list, styles_css_default2[`list-variant-${list.listVariant}`], {
        [styles_css_default2["list-variant-root--last"]]: list.listVariant === "root" && index === lastListIndex
      }) }, list.items.map((item) => item.element));
    }
  }));
}
function Divider({ variant = "default", isPresentational = false }) {
  return import_react4.default.createElement("hr", { className: clsx_m_default(styles_css_default2.divider, styles_css_default2[`divider-${variant}`]), role: isPresentational ? "presentation" : void 0 });
}
function Link({ definition, expanded, activeHref, fireFollow }) {
  checkSafeUrl("SideNavigation", definition.href);
  const isActive = definition.href === activeHref;
  const onClick = (0, import_react4.useCallback)((event) => {
    event.stopPropagation();
    if (isPlainLeftClick(event)) {
      fireFollow(definition, event);
    }
  }, [fireFollow, definition]);
  return import_react4.default.createElement(
    import_react4.default.Fragment,
    null,
    import_react4.default.createElement(
      "a",
      { href: definition.href, className: clsx_m_default(styles_css_default2.link, { [styles_css_default2["link-active"]]: isActive }), target: definition.external ? "_blank" : void 0, rel: definition.external ? "noopener noreferrer" : void 0, "aria-expanded": expanded, "aria-current": definition.href === activeHref ? "page" : void 0, onClick },
      definition.text,
      definition.external && import_react4.default.createElement(
        "span",
        { "aria-label": definition.externalIconAriaLabel, role: definition.externalIconAriaLabel ? "img" : void 0 },
        import_react4.default.createElement(internal_default, { name: "external", className: styles_css_default2["external-icon"] })
      )
    ),
    definition.info && import_react4.default.createElement("span", { className: styles_css_default2.info }, definition.info)
  );
}
function Section({ definition, activeHref, fireFollow, fireChange, variant }) {
  var _a;
  const [expanded, setExpanded] = (0, import_react4.useState)((_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : true);
  const onExpandedChange = (0, import_react4.useCallback)((e) => {
    fireChange(definition, e.detail.expanded);
    setExpanded(e.detail.expanded);
  }, [definition, fireChange]);
  (0, import_react4.useEffect)(() => {
    var _a2;
    setExpanded((_a2 = definition.defaultExpanded) !== null && _a2 !== void 0 ? _a2 : true);
  }, [definition]);
  return import_react4.default.createElement(
    InternalExpandableSection,
    { variant: "footer", expanded, onChange: onExpandedChange, className: clsx_m_default(styles_css_default2.section, variant === "section-group" && styles_css_default2["section--no-ident"]), headerText: definition.text },
    import_react4.default.createElement(NavigationItemsList, { variant: "section", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function SectionGroup({ definition, activeHref, fireFollow, fireChange }) {
  return import_react4.default.createElement(
    "div",
    { className: styles_css_default2["section-group"] },
    import_react4.default.createElement(InternalBox, { className: styles_css_default2["section-group-title"], variant: "h3" }, definition.title),
    import_react4.default.createElement(NavigationItemsList, { variant: "section-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function LinkGroup({ definition, activeHref, fireFollow, fireChange }) {
  checkSafeUrl("SideNavigation", definition.href);
  return import_react4.default.createElement(
    import_react4.default.Fragment,
    null,
    import_react4.default.createElement(Link, { definition: { type: "link", href: definition.href, text: definition.text, info: definition.info }, fireFollow: (_, event) => fireFollow(definition, event), fireChange, activeHref }),
    import_react4.default.createElement(NavigationItemsList, { variant: "link-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function ExpandableLinkGroup({ definition, fireFollow, fireChange, activeHref, variant }) {
  const containsActiveLink = (0, import_react4.useMemo)(() => {
    return activeHref ? hasActiveLink(definition.items, activeHref) : false;
  }, [activeHref, definition.items]);
  const [expanded, setExpanded] = (0, import_react4.useState)(() => {
    var _a;
    return (_a = definition.defaultExpanded) !== null && _a !== void 0 ? _a : definition.href === activeHref || containsActiveLink;
  });
  const [userExpanded, setUserExpanded] = (0, import_react4.useState)();
  (0, import_react4.useEffect)(() => setUserExpanded(void 0), [definition]);
  (0, import_react4.useEffect)(() => {
    setExpanded(definition.href === activeHref || containsActiveLink);
  }, [definition.href, containsActiveLink, activeHref]);
  (0, import_react4.useEffect)(() => {
    if (definition.defaultExpanded !== void 0) {
      setExpanded(definition.defaultExpanded);
    }
  }, [definition]);
  const onExpandedChange = (0, import_react4.useCallback)((e) => {
    fireChange(definition, e.detail.expanded);
    setUserExpanded(e.detail.expanded);
  }, [definition, fireChange]);
  const onHeaderFollow = (_, event) => {
    fireFollow(definition, event);
    setUserExpanded(true);
    if (!expanded) {
      fireChange(definition, true);
    }
  };
  return import_react4.default.createElement(
    InternalExpandableSection,
    { className: clsx_m_default(styles_css_default2["expandable-link-group"], variant === "section-group" && styles_css_default2["expandable-link-group--no-ident"]), variant: "navigation", expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, onChange: onExpandedChange, headerText: import_react4.default.createElement(Link, { definition: { type: "link", href: definition.href, text: definition.text }, expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, fireFollow: onHeaderFollow, fireChange, activeHref }) },
    import_react4.default.createElement(NavigationItemsList, { variant: "expandable-link-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}

// node_modules/@cloudscape-design/components/side-navigation/index.js
function SideNavigation(_a) {
  var { header, activeHref, items = [], onFollow, onChange } = _a, props = __rest(_a, ["header", "activeHref", "items", "onFollow", "onChange"]);
  const { __internalRootRef } = useBaseComponent("SideNavigation");
  const baseProps = getBaseProps(props);
  const parentMap = (0, import_react5.useMemo)(() => generateExpandableItemsMapping(items), [items]);
  if (isDevelopment) {
    (0, import_react5.useEffect)(() => checkDuplicateHrefs(items), [items]);
  }
  const onChangeHandler = (0, import_react5.useCallback)((item, expanded) => {
    fireNonCancelableEvent(onChange, { item, expanded, expandableParents: parentMap.get(item) });
  }, [onChange, parentMap]);
  const onFollowHandler = (0, import_react5.useCallback)((item, sourceEvent) => {
    fireCancelableEvent(onFollow, item, sourceEvent);
  }, [onFollow]);
  return import_react5.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default2.root, baseProps.className), ref: __internalRootRef }),
    header && import_react5.default.createElement(Header, { definition: header, activeHref, fireChange: onChangeHandler, fireFollow: onFollowHandler }),
    items && import_react5.default.createElement(
      "div",
      { className: styles_css_default2["list-container"] },
      import_react5.default.createElement(NavigationItemsList, { variant: "root", items, fireFollow: onFollowHandler, fireChange: onChangeHandler, activeHref })
    )
  );
}
applyDisplayName(SideNavigation, "SideNavigation");

export {
  InternalExpandableSection,
  SideNavigation
};
//# sourceMappingURL=chunk-XB3SZKMC.js.map

import {
  useUniqueId
} from "./chunk-ZOQJCCJI.js";
import {
  fireNonCancelableEvent
} from "./chunk-CTALK4OT.js";
import {
  useMergeRefs
} from "./chunk-INN7TUPO.js";
import {
  __rest,
  clsx_m_default,
  useVisualRefresh
} from "./chunk-BATVD76T.js";
import {
  __toESM,
  require_react
} from "./chunk-C3URVCCN.js";

// node_modules/@cloudscape-design/components/radio-group/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/radio-group/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_1mabk_139mc_93",
  "radio": "awsui_radio_1mabk_139mc_107",
  "radio--has-description": "awsui_radio--has-description_1mabk_139mc_115",
  "radio-control": "awsui_radio-control_1mabk_139mc_119",
  "outline": "awsui_outline_1mabk_139mc_127",
  "styled-circle-border": "awsui_styled-circle-border_1mabk_139mc_146",
  "styled-circle-disabled": "awsui_styled-circle-disabled_1mabk_139mc_150",
  "styled-circle-fill": "awsui_styled-circle-fill_1mabk_139mc_155",
  "styled-circle-checked": "awsui_styled-circle-checked_1mabk_139mc_161"
};

// node_modules/@cloudscape-design/components/radio-group/radio-button.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.scoped.css";
var styles_css_default2 = {
  "content": "awsui_content_1wepg_1ahh8_93",
  "description": "awsui_description_1wepg_1ahh8_94",
  "label": "awsui_label_1wepg_1ahh8_95",
  "outline": "awsui_outline_1wepg_1ahh8_99",
  "show-outline": "awsui_show-outline_1wepg_1ahh8_102",
  "native-input": "awsui_native-input_1wepg_1ahh8_106",
  "wrapper": "awsui_wrapper_1wepg_1ahh8_110",
  "label-wrapper": "awsui_label-wrapper_1wepg_1ahh8_117",
  "empty-content": "awsui_empty-content_1wepg_1ahh8_129",
  "description-bottom-padding": "awsui_description-bottom-padding_1wepg_1ahh8_139",
  "label-disabled": "awsui_label-disabled_1wepg_1ahh8_147",
  "description-disabled": "awsui_description-disabled_1wepg_1ahh8_148",
  "control": "awsui_control_1wepg_1ahh8_153"
};

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
function joinString(values) {
  return values.filter((value) => !!value).join(" ");
}
function AbstractSwitch(_a) {
  var { controlId, controlClassName, outlineClassName, showOutline, disabled, nativeControl, styledControl, label, description, descriptionBottomPadding, ariaLabel, ariaLabelledby, ariaDescribedby, ariaControls, onClick, __internalRootRef } = _a, rest = __rest(_a, ["controlId", "controlClassName", "outlineClassName", "showOutline", "disabled", "nativeControl", "styledControl", "label", "description", "descriptionBottomPadding", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "ariaControls", "onClick", "__internalRootRef"]);
  const uniqueId = useUniqueId();
  const id = controlId || uniqueId;
  const labelId = `${id}-label`;
  const descriptionId = `${id}-description`;
  const ariaLabelledByIds = [];
  if (label) {
    ariaLabelledByIds.push(labelId);
  }
  if (ariaLabelledby) {
    ariaLabelledByIds.push(ariaLabelledby);
  }
  const ariaDescriptions = [];
  if (ariaDescribedby) {
    ariaDescriptions.push(ariaDescribedby);
  }
  if (description) {
    ariaDescriptions.push(descriptionId);
  }
  return import_react.default.createElement(
    "span",
    Object.assign({}, rest, { className: clsx_m_default(styles_css_default2.wrapper, rest.className), ref: __internalRootRef }),
    import_react.default.createElement(
      "span",
      { className: styles_css_default2["label-wrapper"], "aria-disabled": disabled ? "true" : void 0, onClick: disabled ? void 0 : onClick },
      import_react.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default2.control, controlClassName) },
        styledControl,
        nativeControl({
          id,
          disabled,
          className: styles_css_default2["native-input"],
          "aria-describedby": ariaDescriptions.length ? joinString(ariaDescriptions) : void 0,
          "aria-labelledby": ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : void 0,
          "aria-label": ariaLabel,
          "aria-controls": ariaControls
        }),
        import_react.default.createElement("span", { className: clsx_m_default(styles_css_default2.outline, outlineClassName, showOutline && styles_css_default2["show-outline"]) })
      ),
      import_react.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default2.content, !label && !description && styles_css_default2["empty-content"]) },
        label && import_react.default.createElement("span", { id: labelId, className: clsx_m_default(styles_css_default2.label, { [styles_css_default2["label-disabled"]]: disabled }) }, label),
        description && import_react.default.createElement("span", { id: descriptionId, className: clsx_m_default(styles_css_default2.description, {
          [styles_css_default2["description-disabled"]]: disabled,
          [styles_css_default2["description-bottom-padding"]]: descriptionBottomPadding
        }) }, description)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/radio-group/radio-button.js
var radio_button_default = import_react2.default.forwardRef(function RadioButton({ name, label, value, checked, description, disabled, controlId, onChange }, ref) {
  const isVisualRefresh = useVisualRefresh();
  const radioButtonRef = (0, import_react2.useRef)(null);
  const mergedRefs = useMergeRefs(radioButtonRef, ref);
  return import_react2.default.createElement(AbstractSwitch, { className: clsx_m_default(styles_css_default.radio, description && styles_css_default["radio--has-description"]), controlClassName: styles_css_default["radio-control"], outlineClassName: styles_css_default.outline, label, description, disabled, controlId, nativeControl: (nativeControlProps) => import_react2.default.createElement("input", Object.assign({}, nativeControlProps, {
    type: "radio",
    ref: mergedRefs,
    name,
    value,
    checked,
    onChange: () => {
    }
  })), onClick: () => {
    var _a;
    (_a = radioButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    if (checked) {
      return;
    }
    fireNonCancelableEvent(onChange, { value });
  }, styledControl: import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 100 100", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { className: clsx_m_default(styles_css_default["styled-circle-border"], { [styles_css_default["styled-circle-disabled"]]: disabled }), strokeWidth: isVisualRefresh ? 12 : 8, cx: 50, cy: 50, r: isVisualRefresh ? 44 : 46 }),
    import_react2.default.createElement("circle", { className: clsx_m_default(styles_css_default["styled-circle-fill"], {
      [styles_css_default["styled-circle-disabled"]]: disabled,
      [styles_css_default["styled-circle-checked"]]: checked
    }), strokeWidth: 30, cx: 50, cy: 50, r: 35 })
  ) });
});

export {
  AbstractSwitch,
  styles_css_default,
  radio_button_default
};
//# sourceMappingURL=chunk-GX6DEPST.js.map

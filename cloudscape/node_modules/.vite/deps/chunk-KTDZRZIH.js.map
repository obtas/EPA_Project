{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/button/button/index.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { ButtonProps } from './interfaces';\nimport { InternalButton } from './internal';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { ButtonProps };\n\nconst Button = React.forwardRef(\n  (\n    {\n      children,\n      iconName,\n      iconAlign = 'left',\n      iconUrl,\n      iconSvg,\n      iconAlt,\n      variant = 'normal',\n      loading = false,\n      loadingText,\n      disabled = false,\n      wrapText = true,\n      href,\n      target,\n      rel,\n      download,\n      formAction = 'submit',\n      ariaLabel,\n      ariaDescribedby,\n      onClick,\n      onFollow,\n      ariaExpanded,\n      fullWidth,\n      form,\n      ...props\n    }: ButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Button');\n    const baseProps = getBaseProps(props);\n    return (\n      <InternalButton\n        {...baseProps}\n        {...baseComponentProps}\n        ref={ref}\n        iconName={iconName}\n        iconAlign={iconAlign}\n        iconUrl={iconUrl}\n        iconSvg={iconSvg}\n        iconAlt={iconAlt}\n        variant={variant}\n        loading={loading}\n        loadingText={loadingText}\n        disabled={disabled}\n        wrapText={wrapText}\n        href={href}\n        target={target}\n        rel={rel}\n        download={download}\n        formAction={formAction}\n        ariaLabel={ariaLabel}\n        ariaDescribedby={ariaDescribedby}\n        onClick={onClick}\n        onFollow={onFollow}\n        ariaExpanded={ariaExpanded}\n        fullWidth={fullWidth}\n        form={form}\n      >\n        {children}\n      </InternalButton>\n    );\n  }\n);\n\napplyDisplayName(Button, 'Button');\nexport default Button;\n"],
  "mappings": ";;;;;;;;;;;;;;;AAEA,mBAAkB;AASlB,IAAM,SAAS,aAAAA,QAAM,WACnB,CACE,IA0BA,QACE;MA3BF,EACE,UACA,UACA,YAAY,QACZ,SACA,SACA,SACA,UAAU,UACV,UAAU,OACV,aACA,WAAW,OACX,WAAW,MACX,MACA,QACA,KACA,UACA,aAAa,UACb,WACA,iBACA,SACA,UACA,cACA,WACA,KAAI,IAAA,IACD,QAAK,OAAA,IAxBV,CAAA,YAAA,YAAA,aAAA,WAAA,WAAA,WAAA,WAAA,WAAA,eAAA,YAAA,YAAA,QAAA,UAAA,OAAA,YAAA,cAAA,aAAA,mBAAA,WAAA,YAAA,gBAAA,aAAA,MAAA,CAyBC;AAGD,QAAM,qBAAqB,iBAAiB,QAAQ;AACpD,QAAM,YAAY,aAAa,KAAK;AACpC,SACE,aAAAA,QAAA,cAAC,gBAAc,OAAA,OAAA,CAAA,GACT,WACA,oBAAkB,EACtB,KACA,UACA,WACA,SACA,SACA,SACA,SACA,SACA,aACA,UACA,UACA,MACA,QACA,KACA,UACA,YACA,WACA,iBACA,SACA,UACA,cACA,WACA,KAAU,CAAA,GAET,QAAQ;AAGf,CAAC;AAGH,iBAAiB,QAAQ,QAAQ;AACjC,IAAA,iBAAe;",
  "names": ["React"]
}

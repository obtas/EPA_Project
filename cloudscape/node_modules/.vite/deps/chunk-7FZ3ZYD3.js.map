{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/internal/analytics/hooks/internal/analytics/hooks/use-funnel.ts", "../../@cloudscape-design/components/internal/analytics/context/internal/analytics/context/analytics-context.ts", "../../@cloudscape-design/components/internal/analytics/internal/analytics/index.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useContext, useRef } from 'react';\nimport { FunnelContext, FunnelStepContext, FunnelSubStepContext } from '../context/analytics-context';\nimport { DATA_ATTR_FUNNEL_INTERACTION_ID, DATA_ATTR_FUNNEL_SUBSTEP, getSubStepAllSelector } from '../selectors';\nimport { FunnelMetrics } from '../';\n\n/**\n * Custom React Hook to manage and interact with FunnelSubStep.\n * This hook will provide necessary properties and methods required\n * to track and manage interactions with a FunnelSubStep component.\n *\n * The `onFocus` method is used to track the beginning of interaction with the FunnelSubStep.\n * The `onBlur` method is used to track the completion of interaction with the FunnelSubStep.\n * The subStepId is a unique identifier for the funnel sub-step.\n * The subStepRef is a reference to the DOM element of the funnel sub-step.\n */\nexport const useFunnelSubStep = () => {\n  const subStepRef = useRef<HTMLDivElement | null>(null);\n  const context = useContext(FunnelSubStepContext);\n  const { funnelInteractionId, subStepId, subStepSelector, subStepNameSelector, stepNumber, stepNameSelector } =\n    context;\n\n  const { funnelState } = useFunnel();\n\n  const onFocus = (event: React.FocusEvent<HTMLDivElement>) => {\n    if (\n      funnelInteractionId &&\n      subStepRef.current &&\n      (!event.relatedTarget || !subStepRef.current.contains(event.relatedTarget as Node)) &&\n      funnelState.current === 'default'\n    ) {\n      FunnelMetrics.funnelSubStepStart({\n        funnelInteractionId,\n        subStepSelector,\n        subStepNameSelector,\n        stepNumber,\n        stepNameSelector,\n        subStepAllSelector: getSubStepAllSelector(),\n      });\n    }\n  };\n\n  const onBlur = (event: React.FocusEvent<HTMLDivElement>) => {\n    if (\n      funnelInteractionId &&\n      subStepRef.current &&\n      !subStepRef.current.contains(event.relatedTarget) &&\n      funnelState.current === 'default'\n    ) {\n      FunnelMetrics.funnelSubStepComplete({\n        funnelInteractionId,\n        subStepSelector,\n        subStepNameSelector,\n        stepNumber,\n        stepNameSelector,\n        subStepAllSelector: getSubStepAllSelector(),\n      });\n    }\n  };\n\n  const funnelSubStepProps: Record<string, any> = funnelInteractionId\n    ? {\n        [DATA_ATTR_FUNNEL_SUBSTEP]: subStepId,\n        onFocus,\n        onBlur,\n      }\n    : {};\n\n  return { funnelSubStepProps, subStepRef, ...context };\n};\n\n/**\n * Custom React Hook to manage and interact with FunnelStep.\n * This hook will provide necessary properties required to track\n * and manage interactions with a FunnelStep component.\n *\n * The 'data-analytics-funnel-step' property of funnelStepProps is used to track the index of the current step in the funnel.\n * The context contains additional properties of the FunnelStep.\n */\nexport const useFunnelStep = () => {\n  const context = useContext(FunnelStepContext);\n  return context;\n};\n\n/**\n * Custom React Hook to manage and interact with Funnel.\n * This hook will provide necessary properties required to track\n * and manage interactions with a Funnel component.\n *\n * The 'data-analytics-funnel-interaction-id' property of funnelProps is used to track the unique identifier of the current interaction with the funnel.\n */\nexport const useFunnel = () => {\n  const context = useContext(FunnelContext);\n  const funnelProps: Record<string, string | number | boolean | undefined> = context.funnelInteractionId\n    ? {\n        [DATA_ATTR_FUNNEL_INTERACTION_ID]: context.funnelInteractionId,\n      }\n    : {};\n\n  return { funnelProps, ...context };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { MutableRefObject, RefObject, createContext } from 'react';\nimport { FunnelType } from '../interfaces';\n\nexport interface BaseContextProps {\n  funnelInteractionId: string | undefined;\n}\n\nexport type FunnelState = 'default' | 'validating' | 'complete' | 'cancelled';\n\nexport interface FunnelContextValue extends BaseContextProps {\n  funnelType: FunnelType;\n  optionalStepNumbers: number[];\n  totalFunnelSteps: number;\n  funnelSubmit: () => void;\n  funnelCancel: () => void;\n  setFunnelInteractionId: (funnelInteractionId: string) => void;\n  submissionAttempt: number;\n  funnelNextOrSubmitAttempt: () => void;\n  funnelState: RefObject<FunnelState>;\n  errorCount: MutableRefObject<number>;\n  loadingButtonCount: MutableRefObject<number>;\n}\n\nexport interface FunnelStepContextValue extends BaseContextProps {\n  stepNameSelector: string;\n  stepNumber: number;\n  funnelStepProps?: Record<string, string | number | boolean | undefined>;\n}\n\nexport interface FunnelSubStepContextValue extends FunnelStepContextValue {\n  subStepId: string;\n  subStepSelector: string;\n  subStepNameSelector: string;\n  stepNumber: number;\n  funnelSubStepProps?: Record<string, string | number | boolean | undefined>;\n}\n\n/* istanbul ignore next */\nexport const FunnelContext = createContext<FunnelContextValue>({\n  funnelInteractionId: undefined,\n  setFunnelInteractionId: () => {},\n  funnelType: 'single-page',\n  optionalStepNumbers: [],\n  totalFunnelSteps: 0,\n  funnelSubmit: () => {},\n  funnelCancel: () => {},\n  submissionAttempt: 0,\n  funnelNextOrSubmitAttempt: () => {},\n  funnelState: { current: 'default' },\n  errorCount: { current: 0 },\n  loadingButtonCount: { current: 0 },\n});\n\nexport const FunnelStepContext = createContext<FunnelStepContextValue>({\n  funnelInteractionId: undefined,\n  stepNameSelector: '',\n  stepNumber: 0,\n  funnelStepProps: {},\n});\n\nexport const FunnelSubStepContext = createContext<FunnelSubStepContextValue>({\n  funnelInteractionId: undefined,\n  subStepId: '',\n  stepNumber: 0,\n  stepNameSelector: '',\n  subStepSelector: '',\n  subStepNameSelector: '',\n  funnelStepProps: {},\n});\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/* istanbul ignore file */\n\nimport { IFunnelMetrics } from './interfaces';\n\nexport function setFunnelMetrics(funnelMetrics: IFunnelMetrics) {\n  FunnelMetrics = funnelMetrics;\n}\n\n/**\n * This is a stub implementation of the FunnelMetrics interface and will be replaced during\n * build time with the actual implementation.\n */\nexport let FunnelMetrics: IFunnelMetrics = {\n  funnelStart(): string {\n    return '';\n  },\n\n  funnelError(): void {},\n  funnelComplete(): void {},\n  funnelSuccessful(): void {},\n  funnelCancelled(): void {},\n  funnelStepStart(): void {},\n  funnelStepComplete(): void {},\n  funnelStepNavigation(): void {},\n  funnelSubStepStart(): void {},\n  funnelSubStepComplete(): void {},\n  funnelSubStepError(): void {},\n  helpPanelInteracted(): void {},\n  externalLinkInteracted(): void {},\n};\n"],
  "mappings": ";;;;;;;;;;;AAGA,IAAAA,gBAAmC;;;ACDnC,mBAA2D;AAsCpD,IAAM,oBAAgB,4BAAkC;EAC7D,qBAAqB;EACrB,wBAAwB,MAAK;EAAE;EAC/B,YAAY;EACZ,qBAAqB,CAAA;EACrB,kBAAkB;EAClB,cAAc,MAAK;EAAE;EACrB,cAAc,MAAK;EAAE;EACrB,mBAAmB;EACnB,2BAA2B,MAAK;EAAE;EAClC,aAAa,EAAE,SAAS,UAAS;EACjC,YAAY,EAAE,SAAS,EAAC;EACxB,oBAAoB,EAAE,SAAS,EAAC;CACjC;AAEM,IAAM,wBAAoB,4BAAsC;EACrE,qBAAqB;EACrB,kBAAkB;EAClB,YAAY;EACZ,iBAAiB,CAAA;CAClB;AAEM,IAAM,2BAAuB,4BAAyC;EAC3E,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;EACjB,qBAAqB;EACrB,iBAAiB,CAAA;CAClB;;;ACxDM,IAAI,gBAAgC;EACzC,cAAW;AACT,WAAO;EACT;EAEA,cAAW;EAAU;EACrB,iBAAc;EAAU;EACxB,mBAAgB;EAAU;EAC1B,kBAAe;EAAU;EACzB,kBAAe;EAAU;EACzB,qBAAkB;EAAU;EAC5B,uBAAoB;EAAU;EAC9B,qBAAkB;EAAU;EAC5B,wBAAqB;EAAU;EAC/B,qBAAkB;EAAU;EAC5B,sBAAmB;EAAU;EAC7B,yBAAsB;EAAU;;;;AFZ3B,IAAM,mBAAmB,MAAK;AACnC,QAAM,iBAAa,sBAA8B,IAAI;AACrD,QAAM,cAAU,0BAAW,oBAAoB;AAC/C,QAAM,EAAE,qBAAqB,WAAW,iBAAiB,qBAAqB,YAAY,iBAAgB,IACxG;AAEF,QAAM,EAAE,YAAW,IAAK,UAAS;AAEjC,QAAM,UAAU,CAAC,UAA2C;AAC1D,QACE,uBACA,WAAW,YACV,CAAC,MAAM,iBAAiB,CAAC,WAAW,QAAQ,SAAS,MAAM,aAAqB,MACjF,YAAY,YAAY,WACxB;AACA,oBAAc,mBAAmB;QAC/B;QACA;QACA;QACA;QACA;QACA,oBAAoB,sBAAqB;OAC1C;;EAEL;AAEA,QAAM,SAAS,CAAC,UAA2C;AACzD,QACE,uBACA,WAAW,WACX,CAAC,WAAW,QAAQ,SAAS,MAAM,aAAa,KAChD,YAAY,YAAY,WACxB;AACA,oBAAc,sBAAsB;QAClC;QACA;QACA;QACA;QACA;QACA,oBAAoB,sBAAqB;OAC1C;;EAEL;AAEA,QAAM,qBAA0C,sBAC5C;IACE,CAAC,2BAA2B;IAC5B;IACA;MAEF,CAAA;AAEJ,SAAA,OAAA,OAAA,EAAS,oBAAoB,WAAU,GAAK,OAAO;AACrD;AAUO,IAAM,gBAAgB,MAAK;AAChC,QAAM,cAAU,0BAAW,iBAAiB;AAC5C,SAAO;AACT;AASO,IAAM,YAAY,MAAK;AAC5B,QAAM,cAAU,0BAAW,aAAa;AACxC,QAAM,cAAqE,QAAQ,sBAC/E;IACE,CAAC,kCAAkC,QAAQ;MAE7C,CAAA;AAEJ,SAAA,OAAA,OAAA,EAAS,YAAW,GAAK,OAAO;AAClC;",
  "names": ["import_react"]
}

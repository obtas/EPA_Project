{
  "version": 3,
  "sources": ["../../@cloudscape-design/components/internal/hooks/forward-focus/internal/hooks/forward-focus/radio-group.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useImperativeHandle, useRef } from 'react';\n\nexport interface ForwardFocusRef {\n  focus(): void;\n}\n\n/**\n * Focus forwarding helper for radio groups where only the first selected\n * child element should be focused.\n */\nexport default function useRadioGroupForwardFocus(\n  forwardedRef: React.Ref<ForwardFocusRef>,\n  items: ReadonlyArray<{ value: string }> | undefined,\n  value: string | null\n): [React.Ref<HTMLInputElement>, number] {\n  const itemRef = useRef<HTMLInputElement | null>(null);\n  const itemIndex = items && findIndex(items, item => item.value === value);\n  useImperativeHandle(forwardedRef, () => ({\n    focus() {\n      itemRef.current?.focus();\n    },\n  }));\n\n  return [itemRef, itemIndex !== undefined && itemIndex !== -1 ? itemIndex : 0];\n}\n\nfunction findIndex<T>(items: ReadonlyArray<T>, predicate: (t: T) => any): number {\n  for (let i = 0; i < items.length; i++) {\n    if (predicate(items[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\n"],
  "mappings": ";;;;;;AAEA,mBAAmD;AAUrC,SAAP,0BACL,cACA,OACA,OAAoB;AAEpB,QAAM,cAAU,qBAAgC,IAAI;AACpD,QAAM,YAAY,SAAS,UAAU,OAAO,UAAQ,KAAK,UAAU,KAAK;AACxE,wCAAoB,cAAc,OAAO;IACvC,QAAK;;AACH,OAAA,KAAA,QAAQ,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,MAAK;IACxB;IACA;AAEF,SAAO,CAAC,SAAS,cAAc,UAAa,cAAc,KAAK,YAAY,CAAC;AAC9E;AAEA,SAAS,UAAa,OAAyB,WAAwB;AACrE,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,QAAI,UAAU,MAAM,EAAE,GAAG;AACvB,aAAO;;;AAGX,SAAO;AACT;",
  "names": []
}

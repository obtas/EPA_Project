import {
  internal_default as internal_default2
} from "./chunk-2XZ7DUT6.js";
import {
  nodeBelongs
} from "./chunk-SQLMETPT.js";
import {
  InternalFormField
} from "./chunk-7PHO4AKW.js";
import {
  StatusIndicator
} from "./chunk-Q3RNZ4T5.js";
import {
  InternalSpaceBetween
} from "./chunk-Y4PSRXA7.js";
import {
  internal_default
} from "./chunk-MIT655T7.js";
import {
  useControllable
} from "./chunk-FA4MCMIV.js";
import {
  PopoverBody,
  PopoverContainer,
  styles_css_default
} from "./chunk-5MQZRYSX.js";
import {
  live_region_default
} from "./chunk-H6LQFJLG.js";
import {
  useInternalI18n
} from "./chunk-VOJM65QS.js";
import {
  useUniqueId
} from "./chunk-ZOQJCCJI.js";
import {
  InternalBox
} from "./chunk-HPKX24BK.js";
import {
  fireNonCancelableEvent
} from "./chunk-CTALK4OT.js";
import {
  useContainerQuery,
  useResizeObserver
} from "./chunk-6QG3XHFW.js";
import {
  useMergeRefs
} from "./chunk-INN7TUPO.js";
import {
  KeyCode,
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  isModifierKey,
  nodeContains,
  parseCssVariable,
  useBaseComponent,
  useVisualRefresh
} from "./chunk-BATVD76T.js";
import {
  __toESM,
  require_react
} from "./chunk-C3URVCCN.js";

// node_modules/@cloudscape-design/components/pie-chart/index.js
var import_react15 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-legend/index.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-series-marker/index.js
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-series-marker/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-series-marker/styles.scoped.css";
var styles_css_default2 = {
  "marker": "awsui_marker_1isd1_1r4od_93",
  "marker--line": "awsui_marker--line_1isd1_1r4od_111",
  "marker--rectangle": "awsui_marker--rectangle_1isd1_1r4od_115",
  "marker--hollow-rectangle": "awsui_marker--hollow-rectangle_1isd1_1r4od_119",
  "marker--dashed": "awsui_marker--dashed_1isd1_1r4od_131"
};

// node_modules/@cloudscape-design/components/internal/components/chart-series-marker/index.js
var chart_series_marker_default = (0, import_react.memo)(ChartSeriesMarker);
function ChartSeriesMarker({ type = "line", color }) {
  return import_react.default.createElement("span", { className: clsx_m_default(styles_css_default2.marker, styles_css_default2[`marker--${type}`]), style: { backgroundColor: color }, "aria-hidden": "true" });
}

// node_modules/@cloudscape-design/components/internal/components/chart-legend/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-legend/styles.scoped.css";
var styles_css_default3 = {
  "marker": "awsui_marker_1kjc7_18vim_93",
  "root": "awsui_root_1kjc7_18vim_111",
  "title": "awsui_title_1kjc7_18vim_127",
  "list": "awsui_list_1kjc7_18vim_131",
  "marker--dimmed": "awsui_marker--dimmed_1kjc7_18vim_173",
  "marker--highlighted": "awsui_marker--highlighted_1kjc7_18vim_176"
};

// node_modules/@cloudscape-design/components/internal/components/chart-legend/index.js
var chart_legend_default = (0, import_react2.memo)(ChartLegend);
function ChartLegend({ series, onHighlightChange, highlightedSeries, legendTitle, ariaLabel, plotContainerRef }) {
  const i18n = useInternalI18n("[charts]");
  const containerRef = (0, import_react2.useRef)(null);
  const segmentsRef = (0, import_react2.useRef)([]);
  const highlightedSeriesIndex = findSeriesIndex(series, highlightedSeries);
  const highlightLeft = () => {
    var _a;
    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;
    const nextIndex = currentIndex - 1 >= 0 ? currentIndex - 1 : series.length - 1;
    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();
  };
  const highlightRight = () => {
    var _a;
    const currentIndex = highlightedSeriesIndex !== null && highlightedSeriesIndex !== void 0 ? highlightedSeriesIndex : 0;
    const nextIndex = currentIndex + 1 < series.length ? currentIndex + 1 : 0;
    (_a = segmentsRef.current[nextIndex]) === null || _a === void 0 ? void 0 : _a.focus();
  };
  const handleKeyPress = (event) => {
    if (event.keyCode === KeyCode.right || event.keyCode === KeyCode.left) {
      event.preventDefault();
      switch (event.keyCode) {
        case KeyCode.left:
          return highlightLeft();
        case KeyCode.right:
          return highlightRight();
        default:
          return;
      }
    }
  };
  const handleSelection = (index) => {
    if (series[index].datum !== highlightedSeries) {
      onHighlightChange(series[index].datum);
    }
  };
  const handleBlur = (event) => {
    var _a;
    if (event.relatedTarget === null || containerRef.current && !containerRef.current.contains(event.relatedTarget) && !((_a = plotContainerRef === null || plotContainerRef === void 0 ? void 0 : plotContainerRef.current) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {
      onHighlightChange(null);
    }
  };
  const handleMouseOver = (s2) => {
    if (s2 !== highlightedSeries) {
      onHighlightChange(s2);
    }
  };
  const handleMouseLeave = () => {
    onHighlightChange(null);
  };
  return import_react2.default.createElement(
    import_react2.default.Fragment,
    null,
    import_react2.default.createElement(
      "div",
      { ref: containerRef, role: "toolbar", "aria-label": legendTitle || i18n("i18nStrings.legendAriaLabel", ariaLabel), className: styles_css_default3.root, onKeyDown: handleKeyPress, onBlur: handleBlur },
      legendTitle && import_react2.default.createElement(InternalBox, { fontWeight: "bold", className: styles_css_default3.title }, legendTitle),
      import_react2.default.createElement("div", { className: styles_css_default3.list }, series.map((s2, index) => {
        const someHighlighted = highlightedSeries !== null;
        const isHighlighted = highlightedSeries === s2.datum;
        const isDimmed = someHighlighted && !isHighlighted;
        return import_react2.default.createElement(
          "div",
          { role: "button", key: index, "aria-pressed": isHighlighted, className: clsx_m_default(styles_css_default3.marker, {
            [styles_css_default3["marker--dimmed"]]: isDimmed,
            [styles_css_default3["marker--highlighted"]]: isHighlighted
          }), ref: (elem) => {
            if (elem) {
              segmentsRef.current[index] = elem;
            } else {
              delete segmentsRef.current[index];
            }
          }, tabIndex: index === highlightedSeriesIndex || highlightedSeriesIndex === void 0 && index === 0 ? 0 : -1, onFocus: () => handleSelection(index), onClick: () => handleSelection(index), onMouseOver: () => handleMouseOver(s2.datum), onMouseLeave: handleMouseLeave },
          import_react2.default.createElement(chart_series_marker_default, { color: s2.color, type: s2.type }),
          " ",
          s2.label
        );
      }))
    )
  );
}
function findSeriesIndex(series, targetSeries) {
  for (let index = 0; index < series.length; index++) {
    if (series[index].datum === targetSeries) {
      return index;
    }
  }
  return void 0;
}

// node_modules/@cloudscape-design/components/internal/components/chart-filter/index.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-filter/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-filter/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_1px7g_cxrz1_93",
  "chart-filter": "awsui_chart-filter_1px7g_cxrz1_106",
  "custom-icon-wrapper": "awsui_custom-icon-wrapper_1px7g_cxrz1_110"
};

// node_modules/@cloudscape-design/components/internal/components/chart-filter/index.js
var chart_filter_default = (0, import_react3.memo)(ChartFilter);
function ChartFilter(_a) {
  var { series, i18nStrings, selectedSeries, onChange } = _a, restProps = __rest(_a, ["series", "i18nStrings", "selectedSeries", "onChange"]);
  const baseProps = getBaseProps(restProps);
  const className = clsx_m_default(baseProps.className, styles_css_default4.root);
  const i18n = useInternalI18n("[charts]");
  const defaultOptions = series.map((d, i) => ({
    label: d.label,
    value: "" + i,
    datum: d.datum,
    __customIcon: import_react3.default.createElement(
      "span",
      { className: styles_css_default4["custom-icon-wrapper"] },
      import_react3.default.createElement(chart_series_marker_default, { color: d.color, type: d.type })
    )
  }));
  const selectedOptions = defaultOptions.filter((option) => (selectedSeries === null || selectedSeries === void 0 ? void 0 : selectedSeries.indexOf(option.datum)) !== -1);
  const updateSelection = (0, import_react3.useCallback)(({ detail: { selectedOptions: selectedOptions2 } }) => {
    const selectedSeries2 = defaultOptions.filter((option) => selectedOptions2.indexOf(option) !== -1).map((option) => option.datum);
    onChange(selectedSeries2);
  }, [onChange, defaultOptions]);
  return import_react3.default.createElement(
    InternalFormField,
    Object.assign({}, baseProps, { label: i18n("i18nStrings.filterLabel", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterLabel), className }),
    import_react3.default.createElement(internal_default2, { placeholder: i18n("i18nStrings.filterPlaceholder", i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterPlaceholder), options: defaultOptions, selectedOptions, onChange: updateSelection, className: styles_css_default4["chart-filter"], selectedAriaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.filterSelectedAriaLabel, hideTokens: true })
  );
}

// node_modules/d3-path/src/path.js
var pi = Math.PI;
var tau = 2 * pi;
var epsilon = 1e-6;
var tauEpsilon = tau - epsilon;
function Path() {
  this._x0 = this._y0 = this._x1 = this._y1 = null;
  this._ = "";
}
function path() {
  return new Path();
}
Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x2, y2) {
    this._ += "M" + (this._x0 = this._x1 = +x2) + "," + (this._y0 = this._y1 = +y2);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x2, y2) {
    this._ += "L" + (this._x1 = +x2) + "," + (this._y1 = +y2);
  },
  quadraticCurveTo: function(x1, y1, x2, y2) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x2) + "," + (this._y1 = +y2);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x3) + "," + (this._y1 = +y3);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else if (!(l01_2 > epsilon))
      ;
    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    } else {
      var x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
      if (Math.abs(t01 - 1) > epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }
      this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x2, y2, r, a0, a1, ccw) {
    x2 = +x2, y2 = +y2, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x2 + dx, y0 = y2 + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
    if (r < 0)
      throw new Error("negative radius: " + r);
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
      this._ += "L" + x0 + "," + y0;
    }
    if (!r)
      return;
    if (da < 0)
      da = da % tau + tau;
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x2 - dx) + "," + (y2 - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } else if (da > epsilon) {
      this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x2 + r * Math.cos(a1)) + "," + (this._y1 = y2 + r * Math.sin(a1));
    }
  },
  rect: function(x2, y2, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x2) + "," + (this._y0 = this._y1 = +y2) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function() {
    return this._;
  }
};
var path_default = path;

// node_modules/d3-shape/src/constant.js
function constant_default(x2) {
  return function constant() {
    return x2;
  };
}

// node_modules/d3-shape/src/math.js
var abs = Math.abs;
var atan2 = Math.atan2;
var cos = Math.cos;
var max = Math.max;
var min = Math.min;
var sin = Math.sin;
var sqrt = Math.sqrt;
var epsilon2 = 1e-12;
var pi2 = Math.PI;
var halfPi = pi2 / 2;
var tau2 = 2 * pi2;
function acos(x2) {
  return x2 > 1 ? 0 : x2 < -1 ? pi2 : Math.acos(x2);
}
function asin(x2) {
  return x2 >= 1 ? halfPi : x2 <= -1 ? -halfPi : Math.asin(x2);
}

// node_modules/d3-shape/src/arc.js
function arcInnerRadius(d) {
  return d.innerRadius;
}
function arcOuterRadius(d) {
  return d.outerRadius;
}
function arcStartAngle(d) {
  return d.startAngle;
}
function arcEndAngle(d) {
  return d.endAngle;
}
function arcPadAngle(d) {
  return d && d.padAngle;
}
function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0, x32 = x3 - x2, y32 = y3 - y2, t = y32 * x10 - x32 * y10;
  if (t * t < epsilon2)
    return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1, y01 = y0 - y1, lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x11 = x0 + ox, y11 = y0 + oy, x10 = x1 + ox, y10 = y1 + oy, x00 = (x11 + x10) / 2, y00 = (y11 + y10) / 2, dx = x10 - x11, dy = y10 - y11, d2 = dx * dx + dy * dy, r = r1 - rc, D = x11 * y10 - x10 * y11, d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x00, dy0 = cy0 - y00, dx1 = cx1 - x00, dy1 = cy1 - y00;
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1)
    cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}
function arc_default() {
  var innerRadius = arcInnerRadius, outerRadius = arcOuterRadius, cornerRadius = constant_default(0), padRadius = null, startAngle = arcStartAngle, endAngle = arcEndAngle, padAngle = arcPadAngle, context = null;
  function arc() {
    var buffer, r, r0 = +innerRadius.apply(this, arguments), r1 = +outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) - halfPi, a1 = endAngle.apply(this, arguments) - halfPi, da = abs(a1 - a0), cw = a1 > a0;
    if (!context)
      context = buffer = path_default();
    if (r1 < r0)
      r = r1, r1 = r0, r0 = r;
    if (!(r1 > epsilon2))
      context.moveTo(0, 0);
    else if (da > tau2 - epsilon2) {
      context.moveTo(r1 * cos(a0), r1 * sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon2) {
        context.moveTo(r0 * cos(a1), r0 * sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    } else {
      var a01 = a0, a11 = a1, a00 = a0, a10 = a1, da0 = da, da1 = da, ap = padAngle.apply(this, arguments) / 2, rp = ap > epsilon2 && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)), rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)), rc0 = rc, rc1 = rc, t0, t1;
      if (rp > epsilon2) {
        var p0 = asin(rp / r0 * sin(ap)), p1 = asin(rp / r1 * sin(ap));
        if ((da0 -= p0 * 2) > epsilon2)
          p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;
        else
          da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon2)
          p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;
        else
          da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }
      var x01 = r1 * cos(a01), y01 = r1 * sin(a01), x10 = r0 * cos(a10), y10 = r0 * sin(a10);
      if (rc > epsilon2) {
        var x11 = r1 * cos(a11), y11 = r1 * sin(a11), x00 = r0 * cos(a00), y00 = r0 * sin(a00), oc;
        if (da < pi2 && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0], ay = y01 - oc[1], bx = x11 - oc[0], by = y11 - oc[1], kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2), lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = min(rc, (r0 - lc) / (kc - 1));
          rc1 = min(rc, (r1 - lc) / (kc + 1));
        }
      }
      if (!(da1 > epsilon2))
        context.moveTo(x01, y01);
      else if (rc1 > epsilon2) {
        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
        if (rc1 < rc)
          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);
        else {
          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
        }
      } else
        context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
      if (!(r0 > epsilon2) || !(da0 > epsilon2))
        context.lineTo(x10, y10);
      else if (rc0 > epsilon2) {
        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
        if (rc0 < rc)
          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);
        else {
          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
        }
      } else
        context.arc(0, 0, r0, a10, a00, cw);
    }
    context.closePath();
    if (buffer)
      return context = null, buffer + "" || null;
  }
  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a2 = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi2 / 2;
    return [cos(a2) * r, sin(a2) * r];
  };
  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant_default(+_), arc) : innerRadius;
  };
  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant_default(+_), arc) : outerRadius;
  };
  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant_default(+_), arc) : cornerRadius;
  };
  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant_default(+_), arc) : padRadius;
  };
  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant_default(+_), arc) : startAngle;
  };
  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant_default(+_), arc) : endAngle;
  };
  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant_default(+_), arc) : padAngle;
  };
  arc.context = function(_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };
  return arc;
}

// node_modules/d3-shape/src/curve/linear.js
function Linear(context) {
  this._context = context;
}
Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default:
        this._context.lineTo(x2, y2);
        break;
    }
  }
};
function linear_default(context) {
  return new Linear(context);
}

// node_modules/d3-shape/src/point.js
function x(p) {
  return p[0];
}
function y(p) {
  return p[1];
}

// node_modules/d3-shape/src/line.js
function line_default() {
  var x2 = x, y2 = y, defined = constant_default(true), context = null, curve = linear_default, output = null;
  function line(data) {
    var i, n = data.length, d, defined0 = false, buffer;
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0)
          output.lineStart();
        else
          output.lineEnd();
      }
      if (defined0)
        output.point(+x2(d, i, data), +y2(d, i, data));
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  line.x = function(_) {
    return arguments.length ? (x2 = typeof _ === "function" ? _ : constant_default(+_), line) : x2;
  };
  line.y = function(_) {
    return arguments.length ? (y2 = typeof _ === "function" ? _ : constant_default(+_), line) : y2;
  };
  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default(!!_), line) : defined;
  };
  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };
  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };
  return line;
}

// node_modules/d3-shape/src/area.js
function area_default() {
  var x0 = x, x1 = null, y0 = constant_default(0), y1 = y, defined = constant_default(true), context = null, curve = linear_default, output = null;
  function area(data) {
    var i, j, k2, n = data.length, d, defined0 = false, buffer, x0z = new Array(n), y0z = new Array(n);
    if (context == null)
      output = curve(buffer = path_default());
    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k2 = i - 1; k2 >= j; --k2) {
            output.point(x0z[k2], y0z[k2]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }
    if (buffer)
      return output = null, buffer + "" || null;
  }
  function arealine() {
    return line_default().defined(defined).curve(curve).context(context);
  }
  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant_default(+_), x1 = null, area) : x0;
  };
  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : constant_default(+_), area) : x0;
  };
  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant_default(+_), area) : x1;
  };
  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant_default(+_), y1 = null, area) : y0;
  };
  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : constant_default(+_), area) : y0;
  };
  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant_default(+_), area) : y1;
  };
  area.lineX0 = area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };
  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };
  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };
  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : constant_default(!!_), area) : defined;
  };
  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };
  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };
  return area;
}

// node_modules/d3-shape/src/descending.js
function descending_default(a2, b) {
  return b < a2 ? -1 : b > a2 ? 1 : b >= a2 ? 0 : NaN;
}

// node_modules/d3-shape/src/identity.js
function identity_default(d) {
  return d;
}

// node_modules/d3-shape/src/pie.js
function pie_default() {
  var value = identity_default, sortValues = descending_default, sort = null, startAngle = constant_default(0), endAngle = constant_default(tau2), padAngle = constant_default(0);
  function pie(data) {
    var i, n = data.length, j, k2, sum2 = 0, index = new Array(n), arcs = new Array(n), a0 = +startAngle.apply(this, arguments), da = Math.min(tau2, Math.max(-tau2, endAngle.apply(this, arguments) - a0)), a1, p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)), pa = p * (da < 0 ? -1 : 1), v;
    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum2 += v;
      }
    }
    if (sortValues != null)
      index.sort(function(i2, j2) {
        return sortValues(arcs[i2], arcs[j2]);
      });
    else if (sort != null)
      index.sort(function(i2, j2) {
        return sort(data[i2], data[j2]);
      });
    for (i = 0, k2 = sum2 ? (da - n * pa) / sum2 : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k2 : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }
    return arcs;
  }
  pie.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : constant_default(+_), pie) : value;
  };
  pie.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };
  pie.sort = function(_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };
  pie.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant_default(+_), pie) : startAngle;
  };
  pie.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant_default(+_), pie) : endAngle;
  };
  pie.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant_default(+_), pie) : padAngle;
  };
  return pie;
}

// node_modules/d3-shape/src/curve/radial.js
var curveRadialLinear = curveRadial(linear_default);
function Radial(curve) {
  this._curve = curve;
}
Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a2, r) {
    this._curve.point(r * Math.sin(a2), r * -Math.cos(a2));
  }
};
function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }
  radial._curve = curve;
  return radial;
}

// node_modules/d3-shape/src/array.js
var slice = Array.prototype.slice;

// node_modules/d3-shape/src/symbol/diamond.js
var tan30 = Math.sqrt(1 / 3);
var tan30_2 = tan30 * 2;

// node_modules/d3-shape/src/symbol/star.js
var kr = Math.sin(pi2 / 10) / Math.sin(7 * pi2 / 10);
var kx = Math.sin(tau2 / 10) * kr;
var ky = -Math.cos(tau2 / 10) * kr;

// node_modules/d3-shape/src/symbol/triangle.js
var sqrt3 = Math.sqrt(3);

// node_modules/d3-shape/src/symbol/wye.js
var s = Math.sqrt(3) / 2;
var k = 1 / Math.sqrt(12);
var a = (k / 2 + 1) * 3;

// node_modules/d3-shape/src/noop.js
function noop_default() {
}

// node_modules/d3-shape/src/curve/basis.js
function point(that, x2, y2) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x2) / 6,
    (that._y0 + 4 * that._y1 + y2) / 6
  );
}
function Basis(context) {
  this._context = context;
}
Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);
      default:
        point(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/basisClosed.js
function BasisClosed(context) {
  this._context = context;
}
BasisClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x2, this._y2 = y2;
        break;
      case 1:
        this._point = 2;
        this._x3 = x2, this._y3 = y2;
        break;
      case 2:
        this._point = 3;
        this._x4 = x2, this._y4 = y2;
        this._context.moveTo((this._x0 + 4 * this._x1 + x2) / 6, (this._y0 + 4 * this._y1 + y2) / 6);
        break;
      default:
        point(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/basisOpen.js
function BasisOpen(context) {
  this._context = context;
}
BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x2) / 6, y0 = (this._y0 + 4 * this._y1 + y2) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;
      case 3:
        this._point = 4;
      default:
        point(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
  }
};

// node_modules/d3-shape/src/curve/bundle.js
function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}
Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, j = x2.length - 1;
    if (j > 0) {
      var x0 = x2[0], y0 = y2[0], dx = x2[j] - x0, dy = y2[j] - y0, i = -1, t;
      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x2[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y2[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }
    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
var bundle_default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }
  bundle.beta = function(beta2) {
    return custom(+beta2);
  };
  return bundle;
}(0.85);

// node_modules/d3-shape/src/curve/cardinal.js
function point2(that, x2, y2) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x2),
    that._y2 + that._k * (that._y1 - y2),
    that._x2,
    that._y2
  );
}
function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        point2(this, this._x1, this._y1);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        this._x1 = x2, this._y1 = y2;
        break;
      case 2:
        this._point = 3;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinal_default = function custom2(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom2(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalClosed.js
function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x2, this._y3 = y2;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x2, this._y4 = y2);
        break;
      case 2:
        this._point = 3;
        this._x5 = x2, this._y5 = y2;
        break;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinalClosed_default = function custom3(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom3(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/cardinalOpen.js
function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}
CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point2(this, x2, y2);
        break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var cardinalOpen_default = function custom4(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }
  cardinal.tension = function(tension2) {
    return custom4(+tension2);
  };
  return cardinal;
}(0);

// node_modules/d3-shape/src/curve/catmullRom.js
function point3(that, x2, y2) {
  var x1 = that._x1, y1 = that._y1, x22 = that._x2, y22 = that._y2;
  if (that._l01_a > epsilon2) {
    var a2 = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a, n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a2 - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a2 - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }
  if (that._l23_a > epsilon2) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a, m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x22 = (x22 * b + that._x1 * that._l23_2a - x2 * that._l12_2a) / m;
    y22 = (y22 * b + that._y1 * that._l23_2a - y2 * that._l12_2a) / m;
  }
  that._context.bezierCurveTo(x1, y1, x22, y22, that._x2, that._y2);
}
function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);
        break;
      case 3:
        this.point(this._x2, this._y2);
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
      default:
        point3(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRom_default = function custom5(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom5(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomClosed.js
function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x2, this._y3 = y2;
        break;
      case 1:
        this._point = 2;
        this._context.moveTo(this._x4 = x2, this._y4 = y2);
        break;
      case 2:
        this._point = 3;
        this._x5 = x2, this._y5 = y2;
        break;
      default:
        point3(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRomClosed_default = function custom6(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom6(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/catmullRomOpen.js
function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}
CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function() {
    if (this._line || this._line !== 0 && this._point === 3)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point) {
      var x23 = this._x2 - x2, y23 = this._y2 - y2;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }
    switch (this._point) {
      case 0:
        this._point = 1;
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;
      case 3:
        this._point = 4;
      default:
        point3(this, x2, y2);
        break;
    }
    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x2;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y2;
  }
};
var catmullRomOpen_default = function custom7(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
  }
  catmullRom.alpha = function(alpha2) {
    return custom7(+alpha2);
  };
  return catmullRom;
}(0.5);

// node_modules/d3-shape/src/curve/linearClosed.js
function LinearClosed(context) {
  this._context = context;
}
LinearClosed.prototype = {
  areaStart: noop_default,
  areaEnd: noop_default,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point)
      this._context.closePath();
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    if (this._point)
      this._context.lineTo(x2, y2);
    else
      this._point = 1, this._context.moveTo(x2, y2);
  }
};

// node_modules/d3-shape/src/curve/monotone.js
function sign(x2) {
  return x2 < 0 ? -1 : 1;
}
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0, h1 = x2 - that._x1, s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0), s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0), p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}
function point4(that, t0, t1) {
  var x0 = that._x0, y0 = that._y0, x1 = that._x1, y1 = that._y1, dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}
function MonotoneX(context) {
  this._context = context;
}
MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);
        break;
      case 3:
        point4(this, this._t0, slope2(this, this._t0));
        break;
    }
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    var t1 = NaN;
    x2 = +x2, y2 = +y2;
    if (x2 === this._x1 && y2 === this._y1)
      return;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
        break;
      case 2:
        this._point = 3;
        point4(this, slope2(this, t1 = slope3(this, x2, y2)), t1);
        break;
      default:
        point4(this, this._t0, t1 = slope3(this, x2, y2));
        break;
    }
    this._x0 = this._x1, this._x1 = x2;
    this._y0 = this._y1, this._y1 = y2;
    this._t0 = t1;
  }
};
function MonotoneY(context) {
  this._context = new ReflectContext(context);
}
(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x2, y2) {
  MonotoneX.prototype.point.call(this, y2, x2);
};
function ReflectContext(context) {
  this._context = context;
}
ReflectContext.prototype = {
  moveTo: function(x2, y2) {
    this._context.moveTo(y2, x2);
  },
  closePath: function() {
    this._context.closePath();
  },
  lineTo: function(x2, y2) {
    this._context.lineTo(y2, x2);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x3, y3) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y3, x3);
  }
};

// node_modules/d3-shape/src/curve/natural.js
function Natural(context) {
  this._context = context;
}
Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x2 = this._x, y2 = this._y, n = x2.length;
    if (n) {
      this._line ? this._context.lineTo(x2[0], y2[0]) : this._context.moveTo(x2[0], y2[0]);
      if (n === 2) {
        this._context.lineTo(x2[1], y2[1]);
      } else {
        var px = controlPoints(x2), py = controlPoints(y2);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x2[i1], y2[i1]);
        }
      }
    }
    if (this._line || this._line !== 0 && n === 1)
      this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x2, y2) {
    this._x.push(+x2);
    this._y.push(+y2);
  }
};
function controlPoints(x2) {
  var i, n = x2.length - 1, m, a2 = new Array(n), b = new Array(n), r = new Array(n);
  a2[0] = 0, b[0] = 2, r[0] = x2[0] + 2 * x2[1];
  for (i = 1; i < n - 1; ++i)
    a2[i] = 1, b[i] = 4, r[i] = 4 * x2[i] + 2 * x2[i + 1];
  a2[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x2[n - 1] + x2[n];
  for (i = 1; i < n; ++i)
    m = a2[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a2[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i)
    a2[i] = (r[i] - a2[i + 1]) / b[i];
  b[n - 1] = (x2[n] + a2[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i)
    b[i] = 2 * x2[i + 1] - a2[i + 1];
  return [a2, b];
}

// node_modules/d3-shape/src/curve/step.js
function Step(context, t) {
  this._context = context;
  this._t = t;
}
Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2)
      this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1)
      this._context.closePath();
    if (this._line >= 0)
      this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x2, y2) {
    x2 = +x2, y2 = +y2;
    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x2, y2) : this._context.moveTo(x2, y2);
        break;
      case 1:
        this._point = 2;
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y2);
          this._context.lineTo(x2, y2);
        } else {
          var x1 = this._x * (1 - this._t) + x2 * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y2);
        }
        break;
      }
    }
    this._x = x2, this._y = y2;
  }
};

// node_modules/@cloudscape-design/components/pie-chart/pie-chart.js
var import_react12 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-popover/index.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-popover/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-popover/styles.scoped.css";
var styles_css_default5 = {
  "root": "awsui_root_1t44z_1qi46_93",
  "hover-area": "awsui_hover-area_1t44z_1qi46_107",
  "popover-body": "awsui_popover-body_1t44z_1qi46_113"
};

// node_modules/@cloudscape-design/components/internal/components/chart-popover/index.js
var chart_popover_default = import_react4.default.forwardRef(ChartPopover);
function ChartPopover(_a, ref) {
  var { position = "right", size = "medium", fixedWidth = false, dismissButton = false, dismissAriaLabel, children, title, trackRef, trackKey, onDismiss, container, onMouseEnter, onMouseLeave } = _a, restProps = __rest(_a, ["position", "size", "fixedWidth", "dismissButton", "dismissAriaLabel", "children", "title", "trackRef", "trackKey", "onDismiss", "container", "onMouseEnter", "onMouseLeave"]);
  const baseProps = getBaseProps(restProps);
  const popoverObjectRef = (0, import_react4.useRef)(null);
  const popoverRef = useMergeRefs(popoverObjectRef, ref);
  (0, import_react4.useEffect)(() => {
    const onDocumentClick = (event) => {
      if (event.target && !nodeBelongs(popoverObjectRef.current, event.target) && !nodeContains(container, event.target)) {
        onDismiss(true);
      }
    };
    document.addEventListener("mousedown", onDocumentClick, { capture: true });
    return () => {
      document.removeEventListener("mousedown", onDocumentClick, { capture: true });
    };
  }, [container, onDismiss]);
  return import_react4.default.createElement(
    "div",
    Object.assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, styles_css_default5.root, baseProps.className, { [styles_css_default5.dismissable]: dismissButton }), ref: popoverRef, onMouseEnter, onMouseLeave }),
    import_react4.default.createElement(
      PopoverContainer,
      { size, fixedWidth, position, trackRef, trackKey, arrow: (position2) => import_react4.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default.arrow, styles_css_default[`arrow-position-${position2}`]) },
        import_react4.default.createElement("div", { className: styles_css_default["arrow-outer"] }),
        import_react4.default.createElement("div", { className: styles_css_default["arrow-inner"] })
      ) },
      import_react4.default.createElement(
        "div",
        { className: styles_css_default5["hover-area"] },
        import_react4.default.createElement(PopoverBody, { dismissButton, dismissAriaLabel, header: title, onDismiss, overflowVisible: "content", className: styles_css_default5["popover-body"] }, children)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/internal/components/chart-series-details/index.js
var import_react5 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-series-details/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-series-details/styles.scoped.css";
var styles_css_default6 = {
  "dimmed": "awsui_dimmed_10ipo_1a267_93",
  "root": "awsui_root_10ipo_1a267_122",
  "list": "awsui_list_10ipo_1a267_135",
  "list-item": "awsui_list-item_10ipo_1a267_142",
  "key": "awsui_key_10ipo_1a267_147"
};

// node_modules/@cloudscape-design/components/internal/components/chart-series-details/index.js
var chart_series_details_default = (0, import_react5.memo)(ChartSeriesDetails);
function ChartSeriesDetails(_a) {
  var { details } = _a, restProps = __rest(_a, ["details"]);
  const baseProps = getBaseProps(restProps);
  const className = clsx_m_default(baseProps.className, styles_css_default6.root);
  return import_react5.default.createElement(
    "div",
    Object.assign({}, baseProps, { className }),
    import_react5.default.createElement("ul", { className: styles_css_default6.list }, details.map(({ key, value, markerType, color, isDimmed }, index) => import_react5.default.createElement(
      "li",
      { key: index, className: clsx_m_default({
        [styles_css_default6.dimmed]: isDimmed,
        [styles_css_default6["list-item"]]: true
      }) },
      import_react5.default.createElement(
        "div",
        { className: styles_css_default6.key },
        markerType && color && import_react5.default.createElement(chart_series_marker_default, { type: markerType, color }),
        import_react5.default.createElement("span", null, key)
      ),
      import_react5.default.createElement(InternalBox, { textAlign: "right" }, value)
    )))
  );
}

// node_modules/@cloudscape-design/components/pie-chart/labels.js
var import_react7 = __toESM(require_react());

// node_modules/@cloudscape-design/components/pie-chart/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/pie-chart/styles.scoped.css";
var styles_css_default7 = {
  "segment__path": "awsui_segment__path_1edmh_u8hsy_97",
  "segment": "awsui_segment_1edmh_u8hsy_97",
  "segment__hover": "awsui_segment__hover_1edmh_u8hsy_124",
  "label": "awsui_label_1edmh_u8hsy_138",
  "root": "awsui_root_1edmh_u8hsy_156",
  "content": "awsui_content_1edmh_u8hsy_160",
  "content--small": "awsui_content--small_1edmh_u8hsy_160",
  "content--without-labels": "awsui_content--without-labels_1edmh_u8hsy_163",
  "content--medium": "awsui_content--medium_1edmh_u8hsy_166",
  "content--large": "awsui_content--large_1edmh_u8hsy_172",
  "status-container": "awsui_status-container_1edmh_u8hsy_179",
  "chart-container": "awsui_chart-container_1edmh_u8hsy_183",
  "inner-content": "awsui_inner-content_1edmh_u8hsy_188",
  "segment__highlight": "awsui_segment__highlight_1edmh_u8hsy_202",
  "segment--dimmed": "awsui_segment--dimmed_1edmh_u8hsy_217",
  "segment--highlighted": "awsui_segment--highlighted_1edmh_u8hsy_220",
  "label--dimmed": "awsui_label--dimmed_1edmh_u8hsy_237",
  "label--align-right": "awsui_label--align-right_1edmh_u8hsy_240",
  "label-text": "awsui_label-text_1edmh_u8hsy_248",
  "label__description": "awsui_label__description_1edmh_u8hsy_256",
  "label-line": "awsui_label-line_1edmh_u8hsy_263",
  "label--highlighted": "awsui_label--highlighted_1edmh_u8hsy_267",
  "popover-header": "awsui_popover-header_1edmh_u8hsy_271"
};

// node_modules/@cloudscape-design/components/pie-chart/utils.js
var dimensionsBySize = {
  small: {
    innerRadius: 33,
    outerRadius: 50,
    innerLabelPadding: 8,
    padding: 8,
    paddingLabels: 44
  },
  medium: {
    innerRadius: 66,
    outerRadius: 100,
    innerLabelPadding: 12,
    padding: 12,
    paddingLabels: 44
  },
  large: {
    innerRadius: 93,
    outerRadius: 140,
    innerLabelPadding: 12,
    padding: 12,
    paddingLabels: 44
  }
};
var refreshDimensionsBySize = {
  small: Object.assign(Object.assign({}, dimensionsBySize.small), { innerRadius: 38, cornerRadius: 3 }),
  medium: Object.assign(Object.assign({}, dimensionsBySize.medium), { innerRadius: 75, cornerRadius: 4 }),
  large: Object.assign(Object.assign({}, dimensionsBySize.large), { innerRadius: 105, cornerRadius: 5 })
};
var defaultDetails = (i18n, i18nStrings) => (datum, dataSum) => [
  { key: i18n("i18nStrings.detailsValue", i18nStrings.detailsValue) || "", value: datum.value },
  {
    key: i18n("i18nStrings.detailsPercentage", i18nStrings.detailsPercentage) || "",
    value: `${(datum.value * 100 / dataSum).toFixed(0)}%`
  }
];
var balanceLabelNodes = (nodes, markers, leftSide) => {
  var _a;
  const MARGIN = 10;
  let previousBBox = null;
  let i = leftSide ? nodes.length - 1 : 0;
  while (leftSide && i >= 0 || !leftSide && i < nodes.length) {
    const node = nodes[i];
    const x2 = parseFloat(node.getAttribute("data-x") || "0");
    const y2 = parseFloat(node.getAttribute("data-y") || "0");
    const box = {
      x: x2,
      y: y2,
      height: node.getBoundingClientRect().height
    };
    const marker = markers[i];
    if (leftSide) {
      i--;
    } else {
      i++;
    }
    if (!previousBBox) {
      previousBBox = box;
      node.setAttribute("transform", "");
      continue;
    }
    if (!leftSide && box.x < 0 || leftSide && box.x >= 0) {
      break;
    }
    node.setAttribute("transform", "");
    const offset = previousBBox.y + previousBBox.height + MARGIN - box.y;
    if (offset > 0) {
      node.setAttribute("transform", `translate(0 ${offset})`);
      const lineNode = (_a = node.parentNode) === null || _a === void 0 ? void 0 : _a.querySelector(`.${styles_css_default7["label-line"]}`);
      if (lineNode) {
        const { endY } = marker;
        lineNode.setAttribute("y2", "" + (endY + offset));
      }
      box.y += offset;
    }
    previousBBox = box;
  }
};

// node_modules/@cloudscape-design/components/pie-chart/responsive-text.js
var import_react6 = __toESM(require_react());
var responsive_text_default = (0, import_react6.memo)(ResponsiveText);
function ResponsiveText({ x: x2, y: y2, rightSide, className, children, containerBoundaries }) {
  const actualRef = (0, import_react6.useRef)(null);
  const virtualRef = (0, import_react6.useRef)(null);
  (0, import_react6.useEffect)(() => {
    const timeoutId = setTimeout(() => {
      const groupRect = virtualRef.current.getBoundingClientRect();
      const visibleWidth = containerBoundaries ? getVisibleWidth(groupRect, containerBoundaries) : 0;
      renderTextContent(actualRef.current, children, visibleWidth);
    }, 25);
    return () => clearTimeout(timeoutId);
  });
  return import_react6.default.createElement(
    import_react6.default.Fragment,
    null,
    import_react6.default.createElement("text", { ref: virtualRef, x: x2, y: y2, style: { textAnchor: rightSide ? "start" : "end", visibility: "hidden" }, "aria-hidden": "true", className }, children),
    import_react6.default.createElement("text", { ref: actualRef, x: x2, y: y2, style: { textAnchor: rightSide ? "start" : "end" }, className }, children)
  );
}
function getVisibleWidth(element, container) {
  if (element.left < container.left) {
    return element.right - container.left;
  } else if (element.right > container.right) {
    return container.right - element.left;
  } else {
    return container.right - container.left;
  }
}
function renderTextContent(textNode, text, visibleWidth) {
  let visibleLength = text.length;
  while (visibleLength >= 0) {
    textNode.textContent = truncateText(text, visibleLength);
    if (!textNode.getComputedTextLength || textNode.getComputedTextLength() <= visibleWidth) {
      return;
    } else {
      visibleLength--;
    }
  }
}
function truncateText(text, maxLength) {
  if (text.length === maxLength) {
    return text;
  }
  return text.slice(0, maxLength) + "\u2026";
}

// node_modules/@cloudscape-design/components/pie-chart/labels.js
function LabelElement({ x: x2, y: y2, hideTitles, hideDescriptions, rightSide, title, description, containerBoundaries }) {
  return import_react7.default.createElement(
    "g",
    { className: styles_css_default7["label-text"], transform: "", "data-x": x2, "data-y": y2 },
    !hideTitles && import_react7.default.createElement(responsive_text_default, { x: x2, y: y2, rightSide, containerBoundaries }, title),
    !hideDescriptions && description && import_react7.default.createElement(responsive_text_default, { x: x2, y: y2 + (hideTitles ? 0 : 18), rightSide, className: styles_css_default7.label__description, containerBoundaries }, description)
  );
}
var labels_default = ({ pieData, size, highlightedSegment, segmentDescription, visibleDataSum, hideTitles, hideDescriptions, containerRef }) => {
  const containerBoundaries = useElementBoundaries(containerRef);
  const markers = (0, import_react7.useMemo)(() => {
    const { outerRadius: radius, innerLabelPadding } = dimensionsBySize[size];
    const arcMarkerStart = arc_default().innerRadius(radius - 1).outerRadius(radius - 1);
    const arcMarkerBreak = arc_default().innerRadius(radius + innerLabelPadding).outerRadius(radius + innerLabelPadding);
    return pieData.map((datum, i) => {
      const labelDatum = pieData[i];
      const midAngle = labelDatum.startAngle + (labelDatum.endAngle - labelDatum.startAngle) / 2;
      arcMarkerBreak.outerRadius(radius + 20 * (0.5 * Math.cos(2 * midAngle) + 0.5));
      arcMarkerBreak.innerRadius(radius + 20 * (0.5 * Math.cos(2 * midAngle) + 0.5));
      const [startX, startY] = arcMarkerStart.centroid(datum);
      const [breakX, breakY] = arcMarkerBreak.centroid(datum);
      const rightSide = midAngle < Math.PI;
      const endX = (radius + 20) * (rightSide ? 1 : -1);
      const textX = endX + 5 * (rightSide ? 1 : -1);
      return {
        startX,
        startY,
        breakX,
        breakY,
        endX,
        endY: breakY,
        textX,
        textY: breakY,
        rightSide,
        datum
      };
    });
  }, [pieData, size]);
  const rootRef = (0, import_react7.useRef)(null);
  (0, import_react7.useLayoutEffect)(() => {
    if (!rootRef.current) {
      return;
    }
    const labelNodes = rootRef.current.querySelectorAll(`.${styles_css_default7["label-text"]}`);
    balanceLabelNodes(labelNodes, markers, false);
    balanceLabelNodes(labelNodes, markers, true);
  }, [markers, pieData]);
  return import_react7.default.createElement("g", { className: styles_css_default7.markers, "aria-hidden": "true", ref: rootRef }, markers.map(({ startX, startY, breakX, breakY, endX, endY, textX, textY, rightSide, datum }) => {
    const segment = datum.data.datum;
    const description = segmentDescription === null || segmentDescription === void 0 ? void 0 : segmentDescription(segment, visibleDataSum);
    if (hideTitles && !description || hideDescriptions && !segment.title) {
      return null;
    }
    return import_react7.default.createElement(
      "g",
      { key: datum.data.index, className: clsx_m_default(styles_css_default7.label, {
        [styles_css_default7["label--highlighted"]]: highlightedSegment === segment,
        [styles_css_default7["label--dimmed"]]: highlightedSegment !== null && highlightedSegment !== segment,
        [styles_css_default7["label--align-right"]]: !rightSide
      }) },
      import_react7.default.createElement("line", { x1: startX, y1: startY, x2: breakX, y2: breakY }),
      import_react7.default.createElement("line", { x1: breakX, y1: breakY, x2: endX, y2: endY, className: styles_css_default7["label-line"] }),
      import_react7.default.createElement(LabelElement, { x: textX, y: textY, rightSide, title: segment.title, description, hideTitles, hideDescriptions, containerBoundaries })
    );
  }));
};
function useElementBoundaries(ref) {
  const [state, setState] = (0, import_react7.useState)({ left: 0, right: 0 });
  useResizeObserver(ref, (entry) => {
    const elementRect = entry.target.getBoundingClientRect();
    setState({ left: elementRect.left, right: elementRect.right });
  });
  return state;
}

// node_modules/@cloudscape-design/components/pie-chart/segments.js
var import_react8 = __toESM(require_react());
function Segments({ pieData, highlightedSegment, size, variant, focusedSegmentRef, popoverTrackRef, segmentAriaRoleDescription, onMouseDown, onMouseOver, onMouseOut }) {
  const i18n = useInternalI18n("pie-chart");
  const isRefresh = useVisualRefresh();
  const { arcFactory, highlightedArcFactory } = (0, import_react8.useMemo)(() => {
    const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];
    const radius = dimensions.outerRadius;
    const innerRadius = variant === "pie" ? 0 : dimensions.innerRadius;
    const cornerRadius = dimensions.cornerRadius || 0;
    const arcFactory2 = arc_default().innerRadius(innerRadius).outerRadius(radius).cornerRadius(cornerRadius);
    const highlightedArcFactory2 = arc_default().innerRadius(radius + 4).outerRadius(radius + 6);
    return {
      arcFactory: arcFactory2,
      highlightedArcFactory: highlightedArcFactory2
    };
  }, [size, variant, isRefresh]);
  const centroid = (0, import_react8.useMemo)(() => {
    for (const datum of pieData) {
      if (datum.data.datum === highlightedSegment) {
        const [centroidLeft, centroidTop] = arcFactory.centroid(datum);
        return { cx: centroidLeft, cy: centroidTop };
      }
    }
    return null;
  }, [highlightedSegment, pieData, arcFactory]);
  return import_react8.default.createElement(
    "g",
    { onMouseLeave: (event) => onMouseOut(event) },
    pieData.map((datum) => {
      const isHighlighted = highlightedSegment === datum.data.datum;
      const isDimmed = highlightedSegment !== null && !isHighlighted;
      const arcPath = arcFactory(datum) || void 0;
      const highlightedPath = highlightedArcFactory(datum) || void 0;
      return import_react8.default.createElement(
        "g",
        { key: datum.data.index, onMouseDown: (e) => {
          onMouseDown(datum.data);
          e.preventDefault();
        }, onMouseOver: () => onMouseOver(datum.data), className: clsx_m_default(styles_css_default7.segment, {
          [styles_css_default7["segment--highlighted"]]: isHighlighted,
          [styles_css_default7["segment--dimmed"]]: isDimmed
        }), ref: isHighlighted ? focusedSegmentRef : void 0, "aria-label": `${datum.data.datum.title} (${datum.data.datum.value})`, role: "button", "aria-roledescription": i18n("i18nStrings.segmentAriaRoleDescription", segmentAriaRoleDescription) },
        import_react8.default.createElement("path", { d: arcPath, fill: datum.data.color, className: styles_css_default7.segment__path, "aria-hidden": "true" }),
        import_react8.default.createElement("path", { d: highlightedPath, fill: datum.data.color, className: clsx_m_default(styles_css_default7.segment__path, styles_css_default7.segment__highlight), "aria-hidden": "true" })
      );
    }),
    import_react8.default.createElement("circle", Object.assign({}, centroid, { ref: popoverTrackRef, r: "1", opacity: "0", "aria-hidden": "true" }))
  );
}

// node_modules/@cloudscape-design/components/internal/components/chart-plot/index.js
var import_react11 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-plot/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-plot/styles.scoped.css";
var styles_css_default8 = {
  "root": "awsui_root_1fcus_1f1k0_93",
  "clickable": "awsui_clickable_1fcus_1f1k0_102",
  "precise": "awsui_precise_1fcus_1f1k0_106",
  "focus-outline": "awsui_focus-outline_1fcus_1f1k0_110",
  "application": "awsui_application_1fcus_1f1k0_119"
};

// node_modules/@cloudscape-design/components/internal/components/chart-plot/application-controller.js
var import_react9 = __toESM(require_react());
var application_controller_default = (0, import_react9.forwardRef)(ApplicationController);
function ApplicationController({ activeElementKey, activeElementRef, onFocus, onBlur, onKeyDown }, ref) {
  const containerRef = (0, import_react9.useRef)(null);
  const applicationRef = (0, import_react9.useRef)(null);
  const focusTransitionRef = (0, import_react9.useRef)(false);
  const [isFocused, setFocused] = (0, import_react9.useState)(false);
  const onApplicationFocus = (0, import_react9.useCallback)((event) => {
    if (focusTransitionRef.current === false) {
      setFocused(true);
      onFocus && onFocus(event);
    } else {
      focusTransitionRef.current = false;
    }
  }, [onFocus]);
  const onApplicationBlur = (0, import_react9.useCallback)((event) => {
    if (focusTransitionRef.current === false) {
      setFocused(false);
      onBlur && onBlur(event);
      muteApplication(applicationRef.current);
    }
  }, [onBlur]);
  const onApplicationKeyDown = onKeyDown;
  (0, import_react9.useImperativeHandle)(ref, () => ({
    focus: () => focusApplication(applicationRef.current, (activeElementRef === null || activeElementRef === void 0 ? void 0 : activeElementRef.current) || null)
  }), [activeElementRef]);
  (0, import_react9.useEffect)(() => {
    if (!isFocused || focusTransitionRef.current === true) {
      return;
    }
    const timeoutId = setTimeout(() => {
      focusTransitionRef.current = true;
      containerRef.current.removeChild(applicationRef.current);
      containerRef.current.appendChild(applicationRef.current);
      focusApplication(applicationRef.current, (activeElementRef === null || activeElementRef === void 0 ? void 0 : activeElementRef.current) || null);
    }, 0);
    return () => clearTimeout(timeoutId);
  }, [isFocused, activeElementKey, activeElementRef]);
  return import_react9.default.createElement(
    "g",
    { ref: containerRef },
    import_react9.default.createElement("g", { tabIndex: -1, ref: applicationRef, onFocus: onApplicationFocus, onBlur: onApplicationBlur, onKeyDown: onApplicationKeyDown, className: styles_css_default8.application })
  );
}
function focusApplication(app, target) {
  for (const attributeName of getAttributeNames(app)) {
    if (attributeName === "role" || attributeName.slice(0, 4) === "aria") {
      app.removeAttribute(attributeName);
    }
  }
  if (target) {
    for (const attributeName of getAttributeNames(target)) {
      if (attributeName === "role" || attributeName.slice(0, 4) === "aria") {
        const attributeValue = target.getAttribute(attributeName);
        attributeValue && app.setAttribute(attributeName, attributeValue);
      }
    }
  }
  app.tabIndex = 0;
  app.setAttribute("focusable", "true");
  app.setAttribute("aria-hidden", "false");
  app.focus({ preventScroll: true });
}
function muteApplication(app) {
  for (const attributeName of getAttributeNames(app)) {
    if (attributeName === "role" || attributeName.slice(0, 4) === "aria") {
      app.removeAttribute(attributeName);
    }
  }
  app.tabIndex = -1;
  app.setAttribute("focusable", "false");
  app.setAttribute("aria-hidden", "true");
}
function getAttributeNames(element) {
  const attributes = element.attributes;
  const result = new Array(attributes.length);
  for (let i = 0; i < attributes.length; i++) {
    result[i] = attributes[i].name;
  }
  return result;
}

// node_modules/@cloudscape-design/components/internal/components/chart-plot/focus-outline.js
var import_react10 = __toESM(require_react());
function useFocusVisibleState() {
  const [focusVisible, setFocusVisible] = (0, import_react10.useState)(false);
  (0, import_react10.useEffect)(() => {
    function handleMousedown() {
      return setFocusVisible(false);
    }
    function handleKeydown(event) {
      if (!isModifierKey(event)) {
        setFocusVisible(true);
      }
    }
    document.addEventListener("mousedown", handleMousedown);
    document.addEventListener("keydown", handleKeydown);
    return () => {
      document.removeEventListener("mousedown", handleMousedown);
      document.removeEventListener("keydown", handleKeydown);
    };
  });
  return focusVisible;
}
function FocusOutline({ elementKey, elementRef, offset = 0 }) {
  const ref = (0, import_react10.useRef)(null);
  const focusVisible = useFocusVisibleState();
  (0, import_react10.useEffect)(() => {
    if (!ref.current) {
      return;
    }
    if (focusVisible && elementKey && elementRef && elementRef.current && elementRef.current.getBBox) {
      const element = elementRef.current.getBBox();
      showOutline(ref.current, element, offset);
    } else {
      hideOutline(ref.current);
    }
  }, [focusVisible, elementKey, elementRef, offset]);
  return import_react10.default.createElement("rect", { ref, "aria-hidden": "true", className: styles_css_default8["focus-outline"], rx: "2" });
}
function showOutline(el, position, offset) {
  const offsetX = typeof offset === "number" ? offset : offset.x;
  const offsetY = typeof offset === "number" ? offset : offset.y;
  el.setAttribute("x", (position.x - offsetX).toString());
  el.setAttribute("y", (position.y - offsetY).toString());
  el.setAttribute("width", (position.width + 2 * offsetX).toString());
  el.setAttribute("height", (position.height + 2 * offsetY).toString());
  el.style.visibility = "visible";
}
function hideOutline(el) {
  el.style.visibility = "hidden";
  el.removeAttribute("x");
  el.removeAttribute("y");
  el.removeAttribute("width");
  el.removeAttribute("height");
}

// node_modules/@cloudscape-design/components/internal/components/chart-plot/index.js
var DEFAULT_PLOT_FOCUS_OFFSET = 3;
var DEFAULT_ELEMENT_FOCUS_OFFSET = 3;
var chart_plot_default = (0, import_react11.forwardRef)(ChartPlot);
function ChartPlot(_a, ref) {
  var { width, height, transform, offsetTop, offsetBottom, offsetLeft, offsetRight, ariaLabel, ariaLabelledby, ariaRoleDescription, ariaDescription, ariaDescribedby, activeElementKey, activeElementRef, ariaLiveRegion, isClickable, isPrecise, children, onMouseDown, onKeyDown, onFocus, onBlur, focusOffset = DEFAULT_PLOT_FOCUS_OFFSET, activeElementFocusOffset = DEFAULT_ELEMENT_FOCUS_OFFSET } = _a, restProps = __rest(_a, ["width", "height", "transform", "offsetTop", "offsetBottom", "offsetLeft", "offsetRight", "ariaLabel", "ariaLabelledby", "ariaRoleDescription", "ariaDescription", "ariaDescribedby", "activeElementKey", "activeElementRef", "ariaLiveRegion", "isClickable", "isPrecise", "children", "onMouseDown", "onKeyDown", "onFocus", "onBlur", "focusOffset", "activeElementFocusOffset"]);
  const i18n = useInternalI18n("[charts]");
  const svgRef = (0, import_react11.useRef)(null);
  const applicationRef = (0, import_react11.useRef)(null);
  const plotClickedRef = (0, import_react11.useRef)(false);
  const [isPlotFocused, setPlotFocused] = (0, import_react11.useState)(false);
  const [isApplicationFocused, setApplicationFocused] = (0, import_react11.useState)(false);
  const internalDescriptionId = useUniqueId("awsui-chart-plot__description");
  const ariaDescriptionId = [ariaDescription && internalDescriptionId, ariaDescribedby].filter(Boolean).join(" ");
  (0, import_react11.useImperativeHandle)(ref, () => ({
    svg: svgRef.current,
    focusPlot: () => svgRef.current.focus(),
    focusApplication: () => applicationRef.current.focus()
  }));
  const onPlotMouseDown = (event) => {
    onMouseDown && onMouseDown(event);
    plotClickedRef.current = true;
  };
  const onPlotFocus = (event) => {
    if (event.target === svgRef.current && !plotClickedRef.current) {
      setPlotFocused(true);
    } else if (plotClickedRef.current) {
      applicationRef.current.focus();
    }
  };
  const onPlotBlur = (event) => {
    if (event.target === svgRef.current) {
      setPlotFocused(false);
    }
  };
  const onPlotKeyDown = (event) => {
    if (isPlotFocused) {
      const codes = [KeyCode.space, KeyCode.enter, KeyCode.up, KeyCode.left, KeyCode.right, KeyCode.down];
      if (codes.indexOf(event.keyCode) !== -1) {
        applicationRef.current.focus();
      }
    }
  };
  const onApplicationFocus = (event) => {
    onFocus && onFocus(event, plotClickedRef.current ? "mouse" : "keyboard");
    plotClickedRef.current = false;
    setApplicationFocused(true);
  };
  const onApplicationBlur = (event) => {
    onBlur && onBlur(event);
    setApplicationFocused(false);
  };
  const onApplicationKeyDown = onKeyDown;
  const plotFocusable = !isApplicationFocused;
  const plotTabIndex = plotFocusable ? 0 : -1;
  const plotAria = !isApplicationFocused ? {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    "aria-describedby": ariaDescriptionId,
    "aria-roledescription": i18n("i18nStrings.chartAriaRoleDescription", ariaRoleDescription)
  } : {};
  return import_react11.default.createElement(
    import_react11.default.Fragment,
    null,
    import_react11.default.createElement(
      "svg",
      Object.assign({}, restProps, { focusable: plotFocusable, tabIndex: plotTabIndex, role: "application", "aria-hidden": "false" }, plotAria, { ref: svgRef, width, height, style: {
        marginTop: offsetTop,
        marginBottom: offsetBottom,
        marginLeft: offsetLeft,
        marginRight: offsetRight
      }, className: clsx_m_default(styles_css_default8.root, {
        [styles_css_default8.clickable]: isClickable,
        [styles_css_default8.precise]: isPrecise
      }), onMouseDown: onPlotMouseDown, onFocus: onPlotFocus, onBlur: onPlotBlur, onKeyDown: onPlotKeyDown }),
      import_react11.default.createElement(FocusOutline, { elementRef: svgRef, elementKey: isPlotFocused, offset: focusOffset }),
      import_react11.default.createElement(
        "g",
        { transform },
        import_react11.default.createElement(application_controller_default, { activeElementKey: activeElementKey || null, activeElementRef, ref: applicationRef, onFocus: onApplicationFocus, onBlur: onApplicationBlur, onKeyDown: onApplicationKeyDown }),
        ariaDescription && plotFocusable && import_react11.default.createElement("desc", { "aria-hidden": "true", id: internalDescriptionId }, ariaDescription),
        children,
        import_react11.default.createElement(FocusOutline, { elementRef: activeElementRef, elementKey: isApplicationFocused && activeElementKey, offset: activeElementFocusOffset })
      )
    ),
    import_react11.default.createElement(live_region_default, null, ariaLiveRegion)
  );
}

// node_modules/@cloudscape-design/components/pie-chart/pie-chart.js
var pie_chart_default = ({ variant, size, i18nStrings, ariaLabel, ariaLabelledby, ariaDescription, innerMetricValue, innerMetricDescription, hideTitles, hideDescriptions, detailPopoverContent, detailPopoverSize, detailPopoverFooter, width, segmentDescription, highlightedSegment, onHighlightChange, legendSegment, pinnedSegment, setPinnedSegment, pieData, dataSum }) => {
  var _a;
  const plotRef = (0, import_react12.useRef)(null);
  const containerRef = (0, import_react12.useRef)(null);
  const focusedSegmentRef = (0, import_react12.useRef)(null);
  const popoverTrackRef = (0, import_react12.useRef)(null);
  const popoverRef = (0, import_react12.useRef)(null);
  const isRefresh = useVisualRefresh();
  const dimensions = isRefresh ? refreshDimensionsBySize[size] : dimensionsBySize[size];
  const radius = dimensions.outerRadius;
  const hasLabels = !(hideTitles && hideDescriptions);
  const height = 2 * (radius + dimensions.padding + (hasLabels ? dimensions.paddingLabels : 0));
  const hasInnerContent = variant === "donut" && (innerMetricValue || innerMetricDescription && size !== "small");
  const innerMetricId = useUniqueId("awsui-pie-chart__inner");
  const [isTooltipOpen, setTooltipOpen] = (0, import_react12.useState)(false);
  const [tooltipData, setTooltipData] = (0, import_react12.useState)();
  const highlightedSegmentIndex = (0, import_react12.useMemo)(() => {
    for (let index = 0; index < pieData.length; index++) {
      if (pieData[index].data.datum === highlightedSegment) {
        return index;
      }
    }
    return null;
  }, [pieData, highlightedSegment]);
  const detailPopoverFooterContent = (0, import_react12.useMemo)(() => detailPopoverFooter && highlightedSegment ? detailPopoverFooter(highlightedSegment) : null, [detailPopoverFooter, highlightedSegment]);
  const i18n = useInternalI18n("pie-chart");
  const detailFunction = detailPopoverContent || defaultDetails(i18n, i18nStrings);
  const details = tooltipData ? detailFunction(tooltipData.datum, dataSum) : [];
  const tooltipContent = tooltipData && import_react12.default.createElement(chart_series_details_default, { details });
  const popoverDismissedRecently = (0, import_react12.useRef)(false);
  const escapePressed = (0, import_react12.useRef)(false);
  const highlightSegment = (0, import_react12.useCallback)((internalDatum) => {
    const segment = internalDatum.datum;
    if (segment !== highlightedSegment) {
      onHighlightChange(segment);
    }
    if (popoverTrackRef.current) {
      setTooltipData({
        datum: internalDatum.datum,
        series: {
          color: internalDatum.color,
          index: internalDatum.index,
          label: internalDatum.datum.title,
          markerType: "rectangle"
        },
        trackRef: popoverTrackRef
      });
      setTooltipOpen(true);
    }
  }, [highlightedSegment, setTooltipOpen, onHighlightChange]);
  const clearHighlightedSegment = (0, import_react12.useCallback)(() => {
    setTooltipOpen(false);
    onHighlightChange(null);
  }, [onHighlightChange, setTooltipOpen]);
  (0, import_react12.useEffect)(() => {
    const onKeyDown2 = (event) => {
      if (event.key === "Escape") {
        clearHighlightedSegment();
        escapePressed.current = true;
      }
    };
    document.addEventListener("keydown", onKeyDown2);
    return () => document.removeEventListener("keydown", onKeyDown2);
  }, [clearHighlightedSegment]);
  const onMouseDown = (0, import_react12.useCallback)((internalDatum) => {
    if (pinnedSegment === internalDatum.datum) {
      setPinnedSegment(null);
      clearHighlightedSegment();
    } else {
      setPinnedSegment(internalDatum.datum);
      highlightSegment(internalDatum);
    }
  }, [pinnedSegment, clearHighlightedSegment, setPinnedSegment, highlightSegment]);
  const onMouseOver = (0, import_react12.useCallback)((internalDatum) => {
    if (escapePressed.current) {
      escapePressed.current = false;
      return;
    }
    if (pinnedSegment !== null) {
      return;
    }
    highlightSegment(internalDatum);
  }, [pinnedSegment, highlightSegment]);
  const onMouseOut = (0, import_react12.useCallback)((event) => {
    var _a2;
    if (pinnedSegment !== null || ((_a2 = popoverRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(event.relatedTarget))) {
      return;
    }
    clearHighlightedSegment();
  }, [pinnedSegment, clearHighlightedSegment]);
  const onKeyDown = (0, import_react12.useCallback)((event) => {
    const keyCode = event.keyCode;
    if (keyCode !== KeyCode.right && keyCode !== KeyCode.left && keyCode !== KeyCode.enter && keyCode !== KeyCode.space) {
      return;
    }
    event.preventDefault();
    let nextIndex = highlightedSegmentIndex || 0;
    const MAX = pieData.length - 1;
    if (keyCode === KeyCode.right) {
      nextIndex++;
      if (nextIndex > MAX) {
        nextIndex = 0;
      }
    } else if (keyCode === KeyCode.left) {
      nextIndex--;
      if (nextIndex < 0) {
        nextIndex = MAX;
      }
    }
    if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {
      setPinnedSegment(pieData[nextIndex].data.datum);
    }
    highlightSegment(pieData[nextIndex].data);
  }, [setPinnedSegment, highlightSegment, pieData, highlightedSegmentIndex]);
  const onFocus = (0, import_react12.useCallback)((_event, target) => {
    if (pinnedSegment !== null || popoverDismissedRecently.current || target === "mouse") {
      return;
    }
    const segment = highlightedSegment || legendSegment || pieData[0].data.datum;
    const matched = pieData.filter((d) => d.data.datum === segment);
    highlightSegment(matched[0].data);
  }, [pinnedSegment, pieData, highlightSegment, highlightedSegment, legendSegment]);
  const onBlur = (0, import_react12.useCallback)((event) => {
    const blurTarget = event.relatedTarget || event.target;
    if (blurTarget === null || !(blurTarget instanceof Element) || !nodeBelongs(containerRef.current, blurTarget)) {
      setTooltipOpen(false);
      setPinnedSegment(null);
    }
  }, [setPinnedSegment]);
  const onPopoverDismiss = (outsideClick) => {
    setTooltipOpen(false);
    setPinnedSegment(null);
    if (!outsideClick) {
      setTimeout(() => {
        popoverDismissedRecently.current = true;
        plotRef.current.focusApplication();
        popoverDismissedRecently.current = false;
      }, 0);
    } else {
      onHighlightChange(null);
    }
  };
  const onPopoverLeave = (event) => {
    if (pinnedSegment !== null || focusedSegmentRef.current.contains(event.relatedTarget)) {
      return;
    }
    clearHighlightedSegment();
  };
  return import_react12.default.createElement(
    "div",
    { className: styles_css_default7["chart-container"], ref: containerRef },
    import_react12.default.createElement(
      chart_plot_default,
      { ref: plotRef, width, height, transform: `translate(${width / 2} ${height / 2})`, isPrecise: true, isClickable: !isTooltipOpen, ariaLabel, ariaLabelledby, ariaDescription, ariaDescribedby: hasInnerContent ? innerMetricId : void 0, ariaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.chartAriaRoleDescription, ariaLiveRegion: tooltipContent, activeElementRef: focusedSegmentRef, activeElementKey: highlightedSegmentIndex === null || highlightedSegmentIndex === void 0 ? void 0 : highlightedSegmentIndex.toString(), onFocus, onBlur, onKeyDown, onMouseOut },
      import_react12.default.createElement(Segments, { pieData, size, variant, focusedSegmentRef, popoverTrackRef, highlightedSegment, segmentAriaRoleDescription: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.segmentAriaRoleDescription, onMouseDown, onMouseOver, onMouseOut }),
      hasLabels && import_react12.default.createElement(labels_default, { pieData, size, segmentDescription, visibleDataSum: dataSum, hideTitles, hideDescriptions, highlightedSegment, containerRef })
    ),
    hasInnerContent && import_react12.default.createElement(
      "div",
      { className: styles_css_default7["inner-content"], id: innerMetricId },
      innerMetricValue && import_react12.default.createElement(InternalBox, { variant: size === "small" ? "h3" : "h1", tagOverride: "div", color: "inherit", padding: "n" }, innerMetricValue),
      innerMetricDescription && size !== "small" && import_react12.default.createElement(InternalBox, { variant: "h3", color: "text-body-secondary", tagOverride: "div", padding: "n" }, innerMetricDescription)
    ),
    isTooltipOpen && tooltipData && import_react12.default.createElement(
      chart_popover_default,
      { ref: popoverRef, title: tooltipData.series && import_react12.default.createElement(
        InternalBox,
        { className: styles_css_default7["popover-header"], variant: "strong" },
        import_react12.default.createElement(chart_series_marker_default, { color: tooltipData.series.color, type: tooltipData.series.markerType }),
        " ",
        tooltipData.series.label
      ), trackRef: tooltipData.trackRef, trackKey: tooltipData.series.index, dismissButton: pinnedSegment !== null, dismissAriaLabel: i18nStrings.detailPopoverDismissAriaLabel, onDismiss: onPopoverDismiss, container: ((_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.svg) || null, size: detailPopoverSize, onMouseLeave: onPopoverLeave },
      tooltipContent,
      detailPopoverFooterContent && import_react12.default.createElement(InternalBox, { margin: { top: "s" } }, detailPopoverFooterContent)
    )
  );
};

// node_modules/@cloudscape-design/components/internal/generated/styles/tokens.js
var colorChartsThresholdNeutral = "var(--color-charts-threshold-neutral-fe7vxm, #5f6b7a)";
var colorChartsPaletteCategorical1 = "var(--color-charts-palette-categorical-1-s02edj, #688ae8)";
var colorChartsPaletteCategorical2 = "var(--color-charts-palette-categorical-2-hd7uud, #c33d69)";
var colorChartsPaletteCategorical3 = "var(--color-charts-palette-categorical-3-tm6hrf, #2ea597)";
var colorChartsPaletteCategorical4 = "var(--color-charts-palette-categorical-4-fqnj32, #8456ce)";
var colorChartsPaletteCategorical5 = "var(--color-charts-palette-categorical-5-h9jmtt, #e07941)";
var colorChartsPaletteCategorical6 = "var(--color-charts-palette-categorical-6-z7e3fr, #3759ce)";
var colorChartsPaletteCategorical7 = "var(--color-charts-palette-categorical-7-4w1lrz, #962249)";
var colorChartsPaletteCategorical8 = "var(--color-charts-palette-categorical-8-xesix1, #096f64)";
var colorChartsPaletteCategorical9 = "var(--color-charts-palette-categorical-9-93ht36, #6237a7)";
var colorChartsPaletteCategorical10 = "var(--color-charts-palette-categorical-10-wus8nq, #a84401)";
var colorChartsPaletteCategorical11 = "var(--color-charts-palette-categorical-11-uh7roa, #273ea5)";
var colorChartsPaletteCategorical12 = "var(--color-charts-palette-categorical-12-ywqdlz, #780d35)";
var colorChartsPaletteCategorical13 = "var(--color-charts-palette-categorical-13-0aws3q, #03524a)";
var colorChartsPaletteCategorical14 = "var(--color-charts-palette-categorical-14-5l0pt5, #4a238b)";
var colorChartsPaletteCategorical15 = "var(--color-charts-palette-categorical-15-glpjzo, #7e3103)";
var colorChartsPaletteCategorical16 = "var(--color-charts-palette-categorical-16-73ijrp, #1b2b88)";
var colorChartsPaletteCategorical17 = "var(--color-charts-palette-categorical-17-ltabw6, #ce567c)";
var colorChartsPaletteCategorical18 = "var(--color-charts-palette-categorical-18-fog2ah, #003e38)";
var colorChartsPaletteCategorical19 = "var(--color-charts-palette-categorical-19-ig4cn5, #9469d6)";
var colorChartsPaletteCategorical20 = "var(--color-charts-palette-categorical-20-ta856w, #602400)";
var colorChartsPaletteCategorical21 = "var(--color-charts-palette-categorical-21-ta0h08, #4066df)";
var colorChartsPaletteCategorical22 = "var(--color-charts-palette-categorical-22-lj462v, #a32952)";
var colorChartsPaletteCategorical23 = "var(--color-charts-palette-categorical-23-35jyqu, #0d7d70)";
var colorChartsPaletteCategorical24 = "var(--color-charts-palette-categorical-24-eem6bw, #6b40b2)";
var colorChartsPaletteCategorical25 = "var(--color-charts-palette-categorical-25-w302xt, #bc4d01)";
var colorChartsPaletteCategorical26 = "var(--color-charts-palette-categorical-26-6ughlw, #2c46b1)";
var colorChartsPaletteCategorical27 = "var(--color-charts-palette-categorical-27-57l9xa, #81143b)";
var colorChartsPaletteCategorical28 = "var(--color-charts-palette-categorical-28-4q0mir, #045b52)";
var colorChartsPaletteCategorical29 = "var(--color-charts-palette-categorical-29-cnn7dg, #512994)";
var colorChartsPaletteCategorical30 = "var(--color-charts-palette-categorical-30-eix60t, #8a3603)";
var colorChartsPaletteCategorical31 = "var(--color-charts-palette-categorical-31-jthnv1, #1f3191)";
var colorChartsPaletteCategorical32 = "var(--color-charts-palette-categorical-32-h40wuu, #da7596)";
var colorChartsPaletteCategorical33 = "var(--color-charts-palette-categorical-33-1iyt0i, #01443e)";
var colorChartsPaletteCategorical34 = "var(--color-charts-palette-categorical-34-eut0yx, #a783e1)";
var colorChartsPaletteCategorical35 = "var(--color-charts-palette-categorical-35-utj4hw, #692801)";
var colorChartsPaletteCategorical36 = "var(--color-charts-palette-categorical-36-mjb3b0, #5978e3)";
var colorChartsPaletteCategorical37 = "var(--color-charts-palette-categorical-37-6rz96d, #b1325c)";
var colorChartsPaletteCategorical38 = "var(--color-charts-palette-categorical-38-s8j0ph, #1c8e81)";
var colorChartsPaletteCategorical39 = "var(--color-charts-palette-categorical-39-5l5hgh, #7749bf)";
var colorChartsPaletteCategorical40 = "var(--color-charts-palette-categorical-40-2i7lp3, #cc5f21)";
var colorChartsPaletteCategorical41 = "var(--color-charts-palette-categorical-41-lozcy4, #314fbf)";
var colorChartsPaletteCategorical42 = "var(--color-charts-palette-categorical-42-qzrtzy, #8b1b42)";
var colorChartsPaletteCategorical43 = "var(--color-charts-palette-categorical-43-sq9ksf, #06645a)";
var colorChartsPaletteCategorical44 = "var(--color-charts-palette-categorical-44-2mlngi, #59309d)";
var colorChartsPaletteCategorical45 = "var(--color-charts-palette-categorical-45-irkhaj, #983c02)";
var colorChartsPaletteCategorical46 = "var(--color-charts-palette-categorical-46-r0hukp, #23379b)";
var colorChartsPaletteCategorical47 = "var(--color-charts-palette-categorical-47-l2wh9o, #6f062f)";
var colorChartsPaletteCategorical48 = "var(--color-charts-palette-categorical-48-k8gno4, #014b44)";
var colorChartsPaletteCategorical49 = "var(--color-charts-palette-categorical-49-e507mj, #431d84)";
var colorChartsPaletteCategorical50 = "var(--color-charts-palette-categorical-50-hfws7f, #732c02)";

// node_modules/@cloudscape-design/components/internal/styles/colors.js
var categoryPalette = [
  colorChartsPaletteCategorical1,
  colorChartsPaletteCategorical2,
  colorChartsPaletteCategorical3,
  colorChartsPaletteCategorical4,
  colorChartsPaletteCategorical5,
  colorChartsPaletteCategorical6,
  colorChartsPaletteCategorical7,
  colorChartsPaletteCategorical8,
  colorChartsPaletteCategorical9,
  colorChartsPaletteCategorical10,
  colorChartsPaletteCategorical11,
  colorChartsPaletteCategorical12,
  colorChartsPaletteCategorical13,
  colorChartsPaletteCategorical14,
  colorChartsPaletteCategorical15,
  colorChartsPaletteCategorical16,
  colorChartsPaletteCategorical17,
  colorChartsPaletteCategorical18,
  colorChartsPaletteCategorical19,
  colorChartsPaletteCategorical20,
  colorChartsPaletteCategorical21,
  colorChartsPaletteCategorical22,
  colorChartsPaletteCategorical23,
  colorChartsPaletteCategorical24,
  colorChartsPaletteCategorical25,
  colorChartsPaletteCategorical26,
  colorChartsPaletteCategorical27,
  colorChartsPaletteCategorical28,
  colorChartsPaletteCategorical29,
  colorChartsPaletteCategorical30,
  colorChartsPaletteCategorical31,
  colorChartsPaletteCategorical32,
  colorChartsPaletteCategorical33,
  colorChartsPaletteCategorical34,
  colorChartsPaletteCategorical35,
  colorChartsPaletteCategorical36,
  colorChartsPaletteCategorical37,
  colorChartsPaletteCategorical38,
  colorChartsPaletteCategorical39,
  colorChartsPaletteCategorical40,
  colorChartsPaletteCategorical41,
  colorChartsPaletteCategorical42,
  colorChartsPaletteCategorical43,
  colorChartsPaletteCategorical44,
  colorChartsPaletteCategorical45,
  colorChartsPaletteCategorical46,
  colorChartsPaletteCategorical47,
  colorChartsPaletteCategorical48,
  colorChartsPaletteCategorical49,
  colorChartsPaletteCategorical50
];

// node_modules/@cloudscape-design/components/internal/utils/create-category-color-scale.js
function createCategoryColorScale(items, isThreshold = () => false, getOwnColor = () => null) {
  const colors = [];
  let categoryIndex = 0;
  for (const it of items) {
    const ownColor = getOwnColor(it);
    const defaultColor = isThreshold(it) ? colorChartsThresholdNeutral : categoryPalette[categoryIndex % categoryPalette.length];
    colors.push(parseCssVariable(ownColor || defaultColor));
    if (!isThreshold(it) && !ownColor) {
      categoryIndex++;
    }
  }
  return colors;
}

// node_modules/@cloudscape-design/components/internal/utils/use-container-width.js
function useContainerWidth(defaultValue = 0, threshold = 1) {
  const [width, ref] = useContainerQuery((rect, prev) => {
    if (prev === null) {
      return rect.width;
    }
    return Math.abs(prev - rect.width) >= threshold ? rect.width : prev;
  });
  return [width !== null && width !== void 0 ? width : defaultValue, ref];
}

// node_modules/@cloudscape-design/components/internal/components/chart-wrapper/index.js
var import_react13 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-wrapper/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-wrapper/styles.scoped.css";
var styles_css_default9 = {
  "wrapper": "awsui_wrapper_z5mul_1gdaf_93",
  "has-default-filter": "awsui_has-default-filter_z5mul_1gdaf_108",
  "content": "awsui_content_z5mul_1gdaf_112",
  "content--reserve-filter": "awsui_content--reserve-filter_z5mul_1gdaf_119",
  "content--reserve-legend": "awsui_content--reserve-legend_z5mul_1gdaf_123",
  "filter-container": "awsui_filter-container_z5mul_1gdaf_127"
};

// node_modules/@cloudscape-design/components/internal/components/chart-wrapper/index.js
var ChartWrapper = (0, import_react13.forwardRef)((_a, ref) => {
  var { defaultFilter, additionalFilters, reserveFilterSpace, reserveLegendSpace, chartStatus, chart, legend, onBlur, contentClassName, contentMinHeight } = _a, props = __rest(_a, ["defaultFilter", "additionalFilters", "reserveFilterSpace", "reserveLegendSpace", "chartStatus", "chart", "legend", "onBlur", "contentClassName", "contentMinHeight"]);
  const baseProps = getBaseProps(props);
  return import_react13.default.createElement(
    "div",
    Object.assign({ ref }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default9.wrapper), onBlur }),
    (defaultFilter || additionalFilters) && import_react13.default.createElement(
      InternalBox,
      { className: styles_css_default9["filter-container"], margin: { bottom: "l" } },
      import_react13.default.createElement(
        InternalSpaceBetween,
        { size: "l", direction: "horizontal", className: clsx_m_default({ [styles_css_default9["has-default-filter"]]: !!defaultFilter }) },
        defaultFilter,
        additionalFilters
      )
    ),
    import_react13.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default9.content, contentClassName, {
        [styles_css_default9["content--reserve-filter"]]: reserveFilterSpace,
        [styles_css_default9["content--reserve-legend"]]: reserveLegendSpace
      }), style: { minHeight: contentMinHeight } },
      chartStatus,
      chart
    ),
    legend && import_react13.default.createElement(InternalBox, { margin: { top: "m" } }, legend)
  );
});

// node_modules/@cloudscape-design/components/internal/components/chart-status-container/index.js
var import_react14 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/chart-status-container/styles.css.js
import "/local/home/samilafo/final_epa_project/cloudscape_wrkshp/cloudscape-design-system-workshop/node_modules/@cloudscape-design/components/internal/components/chart-status-container/styles.scoped.css";
var styles_css_default10 = {
  "root": "awsui_root_11n0s_hifrk_9",
  "empty": "awsui_empty_11n0s_hifrk_13"
};

// node_modules/@cloudscape-design/components/internal/components/chart-status-container/index.js
function getChartStatus({ externalData, visibleData, statusType }) {
  const isEmpty = !visibleData || visibleData.length === 0;
  const isNoMatch = isEmpty && visibleData.length !== externalData.length;
  const showChart = statusType === "finished" && !isEmpty;
  return { isEmpty, isNoMatch, showChart };
}
function ChartStatusContainer({ statusType, errorText, loadingText, recoveryText, noMatch, empty, onRecoveryClick, isNoMatch, isEmpty, showChart }) {
  const i18n = useInternalI18n("[charts]");
  const statusContainer = (0, import_react14.useMemo)(() => {
    const handleRecoveryClick = (event) => {
      event.preventDefault();
      fireNonCancelableEvent(onRecoveryClick);
    };
    if (statusType === "error") {
      const renderedRecoveryText = i18n("recoveryText", recoveryText);
      return import_react14.default.createElement(
        "span",
        null,
        import_react14.default.createElement(StatusIndicator, { type: "error" }, i18n("errorText", errorText)),
        " ",
        !!renderedRecoveryText && !!onRecoveryClick && import_react14.default.createElement(internal_default, { onFollow: handleRecoveryClick, variant: "recovery" }, renderedRecoveryText)
      );
    }
    if (statusType === "loading") {
      return import_react14.default.createElement(StatusIndicator, { type: "loading" }, i18n("loadingText", loadingText));
    }
    if (isNoMatch) {
      return import_react14.default.createElement("div", { className: styles_css_default10.empty }, noMatch);
    }
    if (isEmpty) {
      return import_react14.default.createElement("div", { className: styles_css_default10.empty }, empty);
    }
  }, [i18n, statusType, onRecoveryClick, isEmpty, isNoMatch, recoveryText, loadingText, errorText, empty, noMatch]);
  return import_react14.default.createElement("div", { className: styles_css_default10.root, "aria-live": "polite", "aria-atomic": "true" }, !showChart && statusContainer);
}

// node_modules/@cloudscape-design/components/pie-chart/index.js
var PieChart = function PieChart2(_a) {
  var { variant = "pie", size = "medium", hideTitles = false, hideDescriptions = false, hideLegend = false, hideFilter = false, statusType = "finished", data: externalData = [], i18nStrings = {}, highlightedSegment: controlledHighlightedSegment, visibleSegments: controlledVisibleSegments, onHighlightChange: controlledOnHighlightChange, onFilterChange, additionalFilters, legendTitle, detailPopoverSize = "medium" } = _a, props = __rest(_a, ["variant", "size", "hideTitles", "hideDescriptions", "hideLegend", "hideFilter", "statusType", "data", "i18nStrings", "highlightedSegment", "visibleSegments", "onHighlightChange", "onFilterChange", "additionalFilters", "legendTitle", "detailPopoverSize"]);
  const { __internalRootRef = null } = useBaseComponent("PieChart");
  const baseProps = getBaseProps(props);
  const containerRef = (0, import_react15.useRef)(null);
  const [containerWidth, measureRef] = useContainerWidth();
  const data = (0, import_react15.useMemo)(() => {
    const colors = createCategoryColorScale(externalData, void 0, (it) => it.color || null);
    return externalData.map((datum, i) => ({
      index: i,
      color: colors[i],
      datum
    }));
  }, [externalData]);
  const [highlightedSegment = null, setHighlightedSegment] = useControllable(controlledHighlightedSegment, controlledOnHighlightChange, null, {
    componentName: "PieChart",
    controlledProp: "highlightedSegment",
    changeHandler: "onHighlightChange"
  });
  const [legendSegment, setLegendSegment] = (0, import_react15.useState)(highlightedSegment);
  (0, import_react15.useEffect)(() => {
    setLegendSegment(controlledHighlightedSegment || null);
  }, [controlledHighlightedSegment]);
  const [visibleSegments, setVisibleSegments] = useControllable(controlledVisibleSegments, onFilterChange, externalData, {
    componentName: "PieChart",
    controlledProp: "visibleSegments",
    changeHandler: "onFilterChange"
  });
  const [pinnedSegment, setPinnedSegment] = (0, import_react15.useState)(null);
  const visibleData = (0, import_react15.useMemo)(() => data.filter((d) => (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1), [data, visibleSegments]);
  const filterItems = data === null || data === void 0 ? void 0 : data.map((data2) => ({
    label: data2.datum.title,
    color: data2.color,
    type: "rectangle",
    datum: data2.datum
  }));
  const legendItems = filterItems.filter((d) => (visibleSegments === null || visibleSegments === void 0 ? void 0 : visibleSegments.indexOf(d.datum)) !== -1);
  const filterChange = (0, import_react15.useCallback)((selectedSeries) => {
    setVisibleSegments(selectedSeries);
    fireNonCancelableEvent(onFilterChange, {
      visibleSegments: selectedSeries
    });
  }, [setVisibleSegments, onFilterChange]);
  const onHighlightChange = (0, import_react15.useCallback)((segment) => {
    setLegendSegment(segment);
    setHighlightedSegment(segment);
    fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSegment: segment });
  }, [controlledOnHighlightChange, setHighlightedSegment]);
  const onBlur = (event) => {
    if (event.relatedTarget && !nodeBelongs(containerRef.current, event.relatedTarget)) {
      highlightedSegment && onHighlightChange(null);
      setLegendSegment(null);
    }
  };
  const mergedRef = useMergeRefs(containerRef, measureRef, __internalRootRef);
  const { pieData, dataSum } = (0, import_react15.useMemo)(() => {
    const dataSum2 = visibleData.reduce((sum2, d) => sum2 + d.datum.value, 0);
    const pieFactory = pie_default().value((d) => d.datum.value < dataSum2 / 100 ? dataSum2 / 100 : d.datum.value).sort(null);
    const pieData2 = pieFactory(visibleData.filter((d) => d.datum.value > 0));
    return { pieData: pieData2, dataSum: dataSum2 };
  }, [visibleData]);
  const hasNoData = !externalData || externalData.length === 0;
  const { isEmpty, showChart } = getChartStatus({ externalData: data, visibleData: pieData, statusType });
  const isNoMatch = isEmpty && visibleData.length !== data.length;
  const showFilters = statusType === "finished" && !hasNoData && (additionalFilters || !hideFilter);
  const reserveLegendSpace = !showChart && !hideLegend;
  const reserveFilterSpace = statusType !== "finished" && !isNoMatch && (!hideFilter || additionalFilters);
  const hasLabels = !(hideTitles && hideDescriptions);
  return import_react15.default.createElement(ChartWrapper, Object.assign({ ref: mergedRef }, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default7.root), contentClassName: clsx_m_default(styles_css_default7.content, styles_css_default7[`content--${size}`], {
    [styles_css_default7["content--without-labels"]]: !hasLabels
  }), defaultFilter: showFilters && !hideFilter ? import_react15.default.createElement(chart_filter_default, { series: filterItems, onChange: filterChange, selectedSeries: visibleSegments, i18nStrings }) : null, additionalFilters: showFilters ? additionalFilters : null, reserveFilterSpace: !!reserveFilterSpace, reserveLegendSpace: !!reserveLegendSpace, chartStatus: import_react15.default.createElement(ChartStatusContainer, { isEmpty, isNoMatch, showChart, statusType, empty: props.empty, noMatch: props.noMatch, loadingText: props.loadingText, errorText: props.errorText, recoveryText: props.recoveryText, onRecoveryClick: props.onRecoveryClick }), chart: showChart ? import_react15.default.createElement(pie_chart_default, Object.assign({}, props, { variant, size, data: externalData, width: containerWidth, hideTitles, hideDescriptions, i18nStrings, onHighlightChange, highlightedSegment, legendSegment, pinnedSegment, setPinnedSegment, detailPopoverSize, pieData, dataSum })) : null, legend: !hideLegend && !hasNoData && statusType === "finished" && import_react15.default.createElement(chart_legend_default, { series: legendItems, highlightedSeries: legendSegment, legendTitle, ariaLabel: i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.legendAriaLabel, onHighlightChange, plotContainerRef: containerRef }), onBlur }));
};
applyDisplayName(PieChart, "PieChart");
var pie_chart_default2 = PieChart;

export {
  chart_legend_default,
  chart_filter_default,
  line_default,
  area_default,
  chart_popover_default,
  chart_series_details_default,
  chart_plot_default,
  createCategoryColorScale,
  useContainerWidth,
  ChartWrapper,
  getChartStatus,
  ChartStatusContainer,
  pie_chart_default2 as pie_chart_default
};
//# sourceMappingURL=chunk-56AXVQQQ.js.map

{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/date-range-picker/calendar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useEffect, useState } from 'react';\nimport { addMonths, endOfDay, isBefore, startOfDay, startOfMonth, isAfter, isSameMonth } from 'date-fns';\nimport styles from '../styles.css.js';\nimport { BaseComponentProps } from '../../internal/base-component';\nimport { RangeCalendarI18nStrings, RangeCalendarValue } from '../interfaces';\nimport CalendarHeader from './header';\nimport { Grids, selectFocusedDate } from './grids';\nimport { TimeInputProps } from '../../time-input/interfaces';\nimport clsx from 'clsx';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport { getDateLabel, renderTimeLabel } from '../../calendar/utils/intl';\nimport LiveRegion from '../../internal/components/live-region';\nimport { normalizeLocale, normalizeStartOfWeek } from '../../internal/utils/locale';\nimport { joinDateTime, parseDate } from '../../internal/utils/date-time';\nimport { getBaseDate } from '../../calendar/utils/navigation';\nimport { useMobile } from '../../internal/hooks/use-mobile/index.js';\nimport RangeInputs from './range-inputs.js';\nimport { useDateTime } from './use-date-time.js';\n\nexport interface DateRangePickerCalendarProps extends BaseComponentProps {\n  value: null | RangeCalendarValue;\n  onChange: (value: RangeCalendarValue) => void;\n  locale?: string;\n  startOfWeek?: number;\n  isDateEnabled?: (date: Date) => boolean;\n  i18nStrings: RangeCalendarI18nStrings;\n  dateOnly?: boolean;\n  timeInputFormat?: TimeInputProps.Format;\n}\n\nexport default function DateRangePickerCalendar({\n  value,\n  onChange,\n  locale = '',\n  startOfWeek,\n  isDateEnabled = () => true,\n  i18nStrings,\n  dateOnly = false,\n  timeInputFormat = 'hh:mm:ss',\n}: DateRangePickerCalendarProps) {\n  const isSingleGrid = useMobile();\n\n  const normalizedLocale = normalizeLocale('DateRangePicker', locale);\n  const normalizedStartOfWeek = normalizeStartOfWeek(startOfWeek, normalizedLocale);\n\n  const initialStartDate = value?.startDate ?? '';\n  const rangeStart = useDateTime(initialStartDate);\n\n  const initialEndDate = value?.endDate ?? '';\n  const rangeEnd = useDateTime(initialEndDate);\n\n  const [announcement, setAnnouncement] = useState('');\n\n  const [currentMonth, setCurrentMonth] = useState(() => {\n    if (rangeStart.dateString) {\n      const startDate = parseDate(rangeStart.dateString);\n      if (isSingleGrid) {\n        return startOfMonth(startDate);\n      }\n      return startOfMonth(addMonths(startDate, 1));\n    }\n    if (rangeEnd.dateString) {\n      return startOfMonth(parseDate(rangeEnd.dateString));\n    }\n    return startOfMonth(Date.now());\n  });\n\n  const [focusedDate, setFocusedDate] = useState<Date | null>(() => {\n    if (rangeStart.date) {\n      if (isSameMonth(rangeStart.date, currentMonth)) {\n        return rangeStart.date;\n      }\n      if (!isSingleGrid && isSameMonth(rangeStart.date, addMonths(currentMonth, -1))) {\n        return rangeStart.date;\n      }\n    }\n    return selectFocusedDate(rangeStart.date, currentMonth, isDateEnabled);\n  });\n\n  // This effect \"synchronizes\" the local state update back up to the parent component.\n  useEffect(() => {\n    const startDate = joinDateTime(rangeStart.dateString, rangeStart.timeString);\n    const endDate = joinDateTime(rangeEnd.dateString, rangeEnd.timeString);\n\n    if (startDate !== initialStartDate || endDate !== initialEndDate) {\n      onChange({ startDate, endDate });\n    }\n  }, [\n    rangeStart.dateString,\n    rangeStart.timeString,\n    rangeEnd.dateString,\n    rangeEnd.timeString,\n    initialStartDate,\n    initialEndDate,\n    onChange,\n  ]);\n\n  const onSelectDateHandler = (selectedDate: Date) => {\n    // recommended to include the start/end time announced with the selection\n    // because the user is not aware of the fact that a start/end time is also set as soon as they select a date\n    const announceStart = (startDate: Date) => {\n      return (\n        i18nStrings.startDateLabel +\n        ', ' +\n        getDateLabel(normalizedLocale, startDate) +\n        ', ' +\n        i18nStrings.startTimeLabel +\n        ', ' +\n        renderTimeLabel(normalizedLocale, startDate, timeInputFormat) +\n        '. '\n      );\n    };\n\n    const announceEnd = (endDate: Date) => {\n      return (\n        i18nStrings.endDateLabel +\n        ', ' +\n        getDateLabel(normalizedLocale, endDate) +\n        ', ' +\n        i18nStrings.endTimeLabel +\n        ', ' +\n        renderTimeLabel(normalizedLocale, endDate, timeInputFormat) +\n        '. '\n      );\n    };\n\n    const announceRange = (startDate: Date, endDate: Date) => {\n      if (!i18nStrings.renderSelectedAbsoluteRangeAriaLive) {\n        return `${getDateLabel(normalizedLocale, startDate)} – ${getDateLabel(normalizedLocale, endDate)}`;\n      }\n      return i18nStrings.renderSelectedAbsoluteRangeAriaLive(\n        getDateLabel(normalizedLocale, startDate),\n        getDateLabel(normalizedLocale, endDate)\n      );\n    };\n\n    // If both fields are empty, we set the start date\n    if (!rangeStart.dateString && !rangeEnd.dateString) {\n      const startDate = startOfDay(selectedDate);\n      rangeStart.setDate(startDate);\n      setAnnouncement(announceStart(startDate));\n      return;\n    }\n\n    // If both fields are set, we start new\n    if (rangeStart.dateString && rangeEnd.dateString) {\n      const startDate = startOfDay(selectedDate);\n      rangeStart.setDate(startDate);\n      rangeEnd.setDate(null);\n      setAnnouncement(announceStart(startDate));\n      return;\n    }\n\n    // If only the END date is empty, we fill it (and swap dates if needed)\n    if (rangeStart.dateString && !rangeEnd.dateString) {\n      const parsedStartDate = parseDate(rangeStart.dateString);\n\n      if (isBefore(selectedDate, parsedStartDate)) {\n        // The user has selected the range backwards, so we swap start and end\n\n        const startDate = startOfDay(selectedDate);\n        const endDate = endOfDay(parsedStartDate);\n\n        rangeStart.setDate(startDate);\n        rangeEnd.setDate(endDate);\n        setAnnouncement(announceStart(startDate) + announceRange(startDate, endDate));\n      } else {\n        const endDate = endOfDay(selectedDate);\n        rangeEnd.setDate(endDate);\n        setAnnouncement(announceEnd(endDate) + announceRange(parsedStartDate, endDate));\n      }\n      return;\n    }\n\n    // If only the START date is empty, we fill it (and swap dates if needed)\n    if (!rangeStart.dateString && rangeEnd.dateString) {\n      const existingEndDate = parseDate(rangeEnd.dateString);\n\n      if (isAfter(selectedDate, existingEndDate)) {\n        // The user has selected the range backwards, so we swap start and end\n\n        const startDate = startOfDay(existingEndDate);\n        const endDate = endOfDay(selectedDate);\n\n        rangeStart.setDate(startDate);\n        rangeEnd.setDate(endDate);\n        setAnnouncement(announceEnd(endDate) + announceRange(startDate, endDate));\n      } else {\n        const startDate = startOfDay(selectedDate);\n        rangeStart.setDate(startDate);\n        setAnnouncement(announceStart(startDate) + announceRange(startDate, existingEndDate));\n      }\n      return;\n    }\n    // All possible conditions are covered above\n  };\n\n  const onHeaderChangeMonthHandler = (newCurrentMonth: Date) => {\n    setCurrentMonth(newCurrentMonth);\n\n    const newBaseDateMonth = isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, -1);\n    const newBaseDate = getBaseDate(newBaseDateMonth, isDateEnabled);\n    setFocusedDate(newBaseDate);\n  };\n\n  const onChangeStartDate = (value: string) => {\n    rangeStart.setDateString(value);\n\n    if (value.length >= 8) {\n      const newCurrentMonth = startOfMonth(parseDate(value));\n      setCurrentMonth(isSingleGrid ? newCurrentMonth : addMonths(newCurrentMonth, 1));\n    }\n  };\n\n  const onChangeEndDate = (value: string) => {\n    rangeEnd.setDateString(value);\n  };\n\n  const headingIdPrefix = useUniqueId('date-range-picker-calendar-heading');\n  return (\n    <>\n      <div\n        className={clsx(styles['calendar-container'], {\n          [styles['one-grid']]: isSingleGrid,\n        })}\n      >\n        <div\n          className={clsx(styles.calendar, {\n            [styles['one-grid']]: isSingleGrid,\n          })}\n        >\n          <CalendarHeader\n            baseDate={currentMonth}\n            locale={normalizedLocale}\n            onChangeMonth={onHeaderChangeMonthHandler}\n            previousMonthLabel={i18nStrings.previousMonthAriaLabel}\n            nextMonthLabel={i18nStrings.nextMonthAriaLabel}\n            isSingleGrid={isSingleGrid}\n            headingIdPrefix={headingIdPrefix}\n          />\n\n          <Grids\n            isSingleGrid={isSingleGrid}\n            locale={normalizedLocale}\n            baseDate={currentMonth}\n            focusedDate={focusedDate}\n            onFocusedDateChange={setFocusedDate}\n            isDateEnabled={isDateEnabled}\n            onSelectDate={onSelectDateHandler}\n            onChangeMonth={setCurrentMonth}\n            startOfWeek={normalizedStartOfWeek}\n            todayAriaLabel={i18nStrings.todayAriaLabel}\n            selectedStartDate={rangeStart.date}\n            selectedEndDate={rangeEnd.date}\n            headingIdPrefix={headingIdPrefix}\n          />\n        </div>\n\n        <RangeInputs\n          startDate={rangeStart.dateString}\n          onChangeStartDate={onChangeStartDate}\n          startTime={rangeStart.timeString}\n          onChangeStartTime={rangeStart.setTimeString}\n          endDate={rangeEnd.dateString}\n          onChangeEndDate={onChangeEndDate}\n          endTime={rangeEnd.timeString}\n          onChangeEndTime={rangeEnd.setTimeString}\n          i18nStrings={i18nStrings}\n          dateOnly={dateOnly}\n          timeInputFormat={timeInputFormat}\n        />\n      </div>\n      <LiveRegion className={styles['calendar-aria-live']}>{announcement}</LiveRegion>\n    </>\n  );\n}\n"]}
import { __assign } from "tslib";
import { setTimeOffset } from './time-offset';
/**
 * This function fills in a start and end time if they are missing.
 */
export function fillMissingTime(value) {
    if (!value) {
        return value;
    }
    var _a = value.startDate.split('T'), startDate = _a[0], startTime = _a[1];
    var _b = value.endDate.split('T'), endDate = _b[0], endTime = _b[1];
    return __assign(__assign({}, value), { startDate: startTime ? value.startDate : "".concat(startDate, "T00:00:00"), endDate: endTime ? value.endDate : "".concat(endDate, "T23:59:59") });
}
export function formatValue(value, _a) {
    var timeOffset = _a.timeOffset, dateOnly = _a.dateOnly;
    if (!value || value.type === 'relative') {
        return value;
    }
    if (dateOnly) {
        return {
            type: 'absolute',
            startDate: value.startDate.split('T')[0],
            endDate: value.endDate.split('T')[0]
        };
    }
    return setTimeOffset(value, timeOffset);
}
export function getDefaultMode(value, relativeOptions, rangeSelectorMode) {
    if (value && value.type) {
        return value.type;
    }
    if (rangeSelectorMode === 'relative-only') {
        return 'relative';
    }
    if (rangeSelectorMode === 'absolute-only') {
        return 'absolute';
    }
    return relativeOptions.length > 0 ? 'relative' : 'absolute';
}
//# sourceMappingURL=utils.js.map
import {
  ALWAYS_VISUAL_REFRESH
} from "./chunk-XTANDRJM.js";
import {
  require_react_dom
} from "./chunk-WZDUAPVE.js";
import {
  require_react
} from "./chunk-JLBVE3FS.js";
import {
  __commonJS,
  __toESM
} from "./chunk-HUBM7RA2.js";

// node_modules/balanced-match/index.js
var require_balanced_match = __commonJS({
  "node_modules/balanced-match/index.js"(exports, module) {
    "use strict";
    module.exports = balanced2;
    function balanced2(a, b, str) {
      if (a instanceof RegExp)
        a = maybeMatch(a, str);
      if (b instanceof RegExp)
        b = maybeMatch(b, str);
      var r = range(a, b, str);
      return r && {
        start: r[0],
        end: r[1],
        pre: str.slice(0, r[0]),
        body: str.slice(r[0] + a.length, r[1]),
        post: str.slice(r[1] + b.length)
      };
    }
    function maybeMatch(reg, str) {
      var m = str.match(reg);
      return m ? m[0] : null;
    }
    balanced2.range = range;
    function range(a, b, str) {
      var begs, beg, left, right, result;
      var ai = str.indexOf(a);
      var bi = str.indexOf(b, ai + 1);
      var i = ai;
      if (ai >= 0 && bi > 0) {
        if (a === b) {
          return [ai, bi];
        }
        begs = [];
        left = str.length;
        while (i >= 0 && !result) {
          if (i == ai) {
            begs.push(i);
            ai = str.indexOf(a, i + 1);
          } else if (begs.length == 1) {
            result = [begs.pop(), bi];
          } else {
            beg = begs.pop();
            if (beg < left) {
              left = beg;
              right = bi;
            }
            bi = str.indexOf(b, i + 1);
          }
          i = ai < bi && ai >= 0 ? ai : bi;
        }
        if (begs.length) {
          result = [left, right];
        }
      }
      return result;
    }
  }
});

// node_modules/@cloudscape-design/components/internal/utils/dom.js
var import_balanced_match = __toESM(require_balanced_match());

// node_modules/@cloudscape-design/components/internal/utils/calculate-once.js
function calculateOnce(callback) {
  var result = void 0;
  return function() {
    if (result === void 0) {
      result = callback();
    }
    return result;
  };
}

// node_modules/@cloudscape-design/components/internal/utils/dom.js
function findUpUntil(node, callback) {
  var current = node;
  while (current && !callback(current)) {
    current = current.parentElement;
    while (current && !(current instanceof HTMLElement)) {
      current = current.parentElement;
    }
  }
  return current;
}
function supportsStickyPosition() {
  var _a, _b, _c;
  if (typeof window === "undefined") {
    return false;
  }
  return (_c = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, "position", "sticky")) !== null && _c !== void 0 ? _c : false;
}
var supportsContainingBlockPositioning = calculateOnce(function() {
  var parent = document.createElement("div");
  parent.style.transform = "translateY(5px)";
  document.body.appendChild(parent);
  var child = document.createElement("div");
  child.style.position = "fixed";
  child.style.top = "0";
  parent.appendChild(child);
  var result = parent.getBoundingClientRect().top === child.getBoundingClientRect().top;
  document.body.removeChild(parent);
  return result;
});
function getContainingBlock(startElement) {
  if (!startElement.parentElement) {
    return null;
  }
  return supportsContainingBlockPositioning() ? findUpUntil(startElement.parentElement, function(element) {
    var computedStyle = getComputedStyle(element);
    return !!computedStyle.transform && computedStyle.transform !== "none" || !!computedStyle.perspective && computedStyle.perspective !== "none";
  }) : null;
}
function nodeContains(parent, descendant) {
  if (!parent || !descendant) {
    return false;
  }
  if (parent.contains && descendant.nodeType === Node.ELEMENT_NODE) {
    return parent === descendant || parent.contains(descendant);
  }
  var upperNode = descendant;
  while (upperNode && parent !== upperNode) {
    upperNode = upperNode.parentNode;
  }
  return upperNode === parent;
}

// node_modules/@cloudscape-design/components/internal/motion.js
var isMotionDisabled = function(element) {
  var _a;
  return !!findUpUntil(element, function(node) {
    return node.classList.contains("awsui-motion-disabled");
  }) || window.matchMedia && ((_a = window.matchMedia("(prefers-reduced-motion: reduce)")) === null || _a === void 0 ? void 0 : _a.matches);
};

// node_modules/@cloudscape-design/components/internal/hooks/use-stable-event-handler/index.js
var import_react = __toESM(require_react());
function useStableEventHandler(fn) {
  var ref = (0, import_react.useRef)();
  (0, import_react.useEffect)(function() {
    ref.current = fn;
  });
  return (0, import_react.useCallback)(function() {
    var _a;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return (_a = ref.current) === null || _a === void 0 ? void 0 : _a.apply(void 0, args);
  }, []);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-visual-mode/index.js
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-mutation-observer/index.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/hooks/use-singleton-handler/index.js
var import_react2 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
function createSingletonHandler(factory) {
  var listeners = [];
  var callback = function(value) {
    (0, import_react_dom.unstable_batchedUpdates)(function() {
      for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {
        var listener = listeners_1[_i];
        listener(value);
      }
    });
  };
  var cleanup;
  return function useSingleton(listener) {
    (0, import_react2.useEffect)(function() {
      if (listeners.length === 0) {
        cleanup = factory(callback);
      }
      listeners.push(listener);
      return function() {
        listeners.splice(listeners.indexOf(listener), 1);
        if (listeners.length === 0) {
          cleanup();
          cleanup = void 0;
        }
      };
    }, []);
  };
}
function createSingletonState(_a) {
  var factory = _a.factory, initialState = _a.initialState;
  var useSingleton = createSingletonHandler(factory);
  var value = initialState;
  return function useSingletonState() {
    var _a2 = (0, import_react2.useState)(value), state = _a2[0], setState = _a2[1];
    useSingleton(function(newValue) {
      value = newValue;
      setState(newValue);
    });
    return state;
  };
}

// node_modules/@cloudscape-design/components/internal/hooks/use-mutation-observer/index.js
var useMutationSingleton = createSingletonHandler(function(handler) {
  var observer = new MutationObserver(function() {
    return handler();
  });
  observer.observe(document.body, { attributes: true, subtree: true });
  return function() {
    return observer.disconnect();
  };
});
function useMutationObserver(elementRef, onChange) {
  var handler = useStableEventHandler(function() {
    if (elementRef.current) {
      onChange(elementRef.current);
    }
  });
  useMutationSingleton(handler);
  (0, import_react3.useEffect)(function() {
    handler();
  }, [handler]);
}

// node_modules/@cloudscape-design/components/internal/hooks/use-visual-mode/index.js
function useCurrentMode(elementRef) {
  var _a = (0, import_react4.useState)("light"), value = _a[0], setValue = _a[1];
  useMutationObserver(elementRef, function(node) {
    var darkModeParent = findUpUntil(node, function(node2) {
      return node2.classList.contains("awsui-polaris-dark-mode") || node2.classList.contains("awsui-dark-mode");
    });
    setValue(darkModeParent ? "dark" : "light");
  });
  return value;
}
function useDensityMode(elementRef) {
  var _a = (0, import_react4.useState)("comfortable"), value = _a[0], setValue = _a[1];
  useMutationObserver(elementRef, function(node) {
    var compactModeParent = findUpUntil(node, function(node2) {
      return node2.classList.contains("awsui-polaris-compact-mode") || node2.classList.contains("awsui-compact-mode");
    });
    setValue(compactModeParent ? "compact" : "comfortable");
  });
  return value;
}
var visualRefreshState = void 0;
function useVisualRefresh() {
  var _a, _b;
  if (visualRefreshState === void 0) {
    var supportsCSSVariables = typeof window !== "undefined" && ((_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, "color", "var(--test-var)"));
    if (ALWAYS_VISUAL_REFRESH) {
      visualRefreshState = true;
    } else if (!supportsCSSVariables) {
      visualRefreshState = false;
    } else {
      visualRefreshState = !!document.querySelector(".awsui-visual-refresh");
    }
  }
  return visualRefreshState;
}
function useReducedMotion(elementRef) {
  var _a = (0, import_react4.useState)(false), value = _a[0], setValue = _a[1];
  useMutationObserver(elementRef, function(node) {
    setValue(isMotionDisabled(node));
  });
  return value;
}

export {
  calculateOnce,
  findUpUntil,
  supportsStickyPosition,
  getContainingBlock,
  nodeContains,
  isMotionDisabled,
  useStableEventHandler,
  createSingletonHandler,
  createSingletonState,
  useMutationObserver,
  useCurrentMode,
  useDensityMode,
  useVisualRefresh,
  useReducedMotion
};
//# sourceMappingURL=chunk-455JEJF4.js.map

{
  "version": 3,
  "sources": ["../../src/internal/components/visual-context/index.tsx"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { useMutationObserver } from '../../hooks/use-mutation-observer';\nimport { findUpUntil } from '../../utils/dom';\n\nexport const useVisualContext = (elementRef: React.RefObject<HTMLElement>) => {\n  const contextMatch = /awsui-context-([\\w-]+)/;\n  const [value, setValue] = useState('');\n  useMutationObserver(elementRef, node => {\n    const contextParent = findUpUntil(node, node => !!node.className.match(contextMatch));\n    setValue(contextParent ? contextParent.className.match(contextMatch)![1] : '');\n  });\n  return value;\n};\n\ninterface VisualContextProps {\n  contextName: string;\n  className?: string;\n  children: React.ReactNode;\n}\n\n/**\n * This function returns only the className string needed to apply a\n * visual context to the DOM. It is used by the default export but\n * can also be imported directly for situations where the insertion\n * of a <div> node creates style problems.\n */\nexport function getVisualContextClassname(contextName: string) {\n  return `awsui-context-${contextName}`;\n}\n\nexport default function VisualContext({ contextName, className, children }: VisualContextProps) {\n  return <div className={clsx(getVisualContextClassname(contextName), className)}>{children}</div>;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAEA;AACA,mBAAgC;AAIzB,IAAM,mBAAmB,SAAC,YAAwC;AACvE,MAAM,eAAe;AACf,MAAA,SAAoB,uBAAS,EAAE,GAA9B,QAAK,GAAA,IAAE,WAAQ,GAAA;AACtB,sBAAoB,YAAY,SAAA,MAAI;AAClC,QAAM,gBAAgB,YAAY,MAAM,SAAAA,OAAI;AAAI,aAAA,CAAC,CAACA,MAAK,UAAU,MAAM,YAAY;IAAnC,CAAoC;AACpF,aAAS,gBAAgB,cAAc,UAAU,MAAM,YAAY,EAAG,KAAK,EAAE;EAC/E,CAAC;AACD,SAAO;AACT;AAcM,SAAU,0BAA0B,aAAmB;AAC3D,SAAO,iBAAA,OAAiB,WAAW;AACrC;AAEc,SAAP,cAA+B,IAAwD;MAAtD,cAAW,GAAA,aAAE,YAAS,GAAA,WAAE,WAAQ,GAAA;AACtE,SAAO,aAAAC,QAAA,cAAA,OAAA,EAAK,WAAW,eAAK,0BAA0B,WAAW,GAAG,SAAS,EAAC,GAAG,QAAQ;AAC3F;",
  "names": ["node", "React"]
}

{
  "version": 3,
  "sources": ["../../src/internal/events/index.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\n// This is a part of our public types API. We cannot change this in the current major version\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type NonCancelableEventHandler<Detail = {}> = (event: NonCancelableCustomEvent<Detail>) => void;\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type CancelableEventHandler<Detail = {}> = (event: CustomEvent<Detail>) => void;\n\nexport type NonCancelableCustomEvent<DetailType> = Omit<CustomEvent<DetailType>, 'preventDefault'>;\n\nclass CustomEventStub<T> {\n  defaultPrevented = false;\n  cancelBubble = false;\n  constructor(public cancelable: boolean = false, public detail: T | null = null) {}\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  stopPropagation() {\n    this.cancelBubble = true;\n  }\n}\n\nexport interface BaseKeyDetail {\n  keyCode: number;\n  key: string;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\nexport interface ClickDetail {\n  button: number;\n  ctrlKey: boolean;\n  shiftKey: boolean;\n  altKey: boolean;\n  metaKey: boolean;\n}\n\nexport interface BaseNavigationDetail {\n  href: string | undefined;\n  external?: boolean;\n  target?: string;\n}\n\nexport function createCustomEvent<T>({ cancelable, detail }: CustomEventInit<T>): CustomEvent<T> {\n  return new CustomEventStub(cancelable, detail) as CustomEvent;\n}\n\nexport function fireNonCancelableEvent<T = null>(handler: NonCancelableEventHandler<T> | undefined, detail?: T) {\n  if (!handler) {\n    return;\n  }\n  const event = createCustomEvent({ cancelable: false, detail });\n  handler(event);\n}\n\nexport function fireCancelableEvent<T>(\n  handler: CancelableEventHandler<T> | undefined,\n  detail: T,\n  sourceEvent?: React.SyntheticEvent | Event\n) {\n  if (!handler) {\n    return false;\n  }\n  const event = createCustomEvent({ cancelable: true, detail });\n  handler(event);\n  if (event.defaultPrevented && sourceEvent) {\n    sourceEvent.preventDefault();\n  }\n  if (event.cancelBubble && sourceEvent) {\n    sourceEvent.stopPropagation();\n  }\n  return event.defaultPrevented;\n}\n\nexport function fireKeyboardEvent(handler: CancelableEventHandler<BaseKeyDetail>, reactEvent: React.KeyboardEvent) {\n  return fireCancelableEvent(\n    handler,\n    {\n      keyCode: reactEvent.keyCode,\n      key: reactEvent.key,\n      ctrlKey: reactEvent.ctrlKey,\n      shiftKey: reactEvent.shiftKey,\n      altKey: reactEvent.altKey,\n      metaKey: reactEvent.metaKey,\n    },\n    reactEvent\n  );\n}\n\nconst isMouseEvent = (e: React.MouseEvent | React.KeyboardEvent): e is React.MouseEvent => {\n  return (e as React.MouseEvent).button !== undefined;\n};\n\nexport function isPlainLeftClick(event?: React.MouseEvent | React.KeyboardEvent) {\n  return (\n    event &&\n    (!isMouseEvent(event) || event.button === 0) &&\n    !event.ctrlKey &&\n    !event.altKey &&\n    !event.shiftKey &&\n    !event.metaKey\n  );\n}\n"],
  "mappings": ";AAYA,IAAA,kBAAA,WAAA;AAGE,WAAAA,iBAAmB,YAAoC,QAAuB;AAA3D,QAAA,eAAA,QAAA;AAAA,mBAAA;IAA2B;AAAS,QAAA,WAAA,QAAA;AAAA,eAAA;IAAuB;AAA3D,SAAA,aAAA;AAAoC,SAAA,SAAA;AAFvD,SAAA,mBAAmB;AACnB,SAAA,eAAe;EACkE;AAEjF,EAAAA,iBAAA,UAAA,iBAAA,WAAA;AACE,SAAK,mBAAmB;EAC1B;AAEA,EAAAA,iBAAA,UAAA,kBAAA,WAAA;AACE,SAAK,eAAe;EACtB;AACF,SAAAA;AAAA,EAZA;AAqCM,SAAU,kBAAqB,IAA0C;MAAxC,aAAU,GAAA,YAAE,SAAM,GAAA;AACvD,SAAO,IAAI,gBAAgB,YAAY,MAAM;AAC/C;AAEM,SAAU,uBAAiC,SAAmD,QAAU;AAC5G,MAAI,CAAC,SAAS;AACZ;;AAEF,MAAM,QAAQ,kBAAkB,EAAE,YAAY,OAAO,OAAM,CAAE;AAC7D,UAAQ,KAAK;AACf;AAEM,SAAU,oBACd,SACA,QACA,aAA0C;AAE1C,MAAI,CAAC,SAAS;AACZ,WAAO;;AAET,MAAM,QAAQ,kBAAkB,EAAE,YAAY,MAAM,OAAM,CAAE;AAC5D,UAAQ,KAAK;AACb,MAAI,MAAM,oBAAoB,aAAa;AACzC,gBAAY,eAAc;;AAE5B,MAAI,MAAM,gBAAgB,aAAa;AACrC,gBAAY,gBAAe;;AAE7B,SAAO,MAAM;AACf;AAEM,SAAU,kBAAkB,SAAgD,YAA+B;AAC/G,SAAO,oBACL,SACA;IACE,SAAS,WAAW;IACpB,KAAK,WAAW;IAChB,SAAS,WAAW;IACpB,UAAU,WAAW;IACrB,QAAQ,WAAW;IACnB,SAAS,WAAW;KAEtB,UAAU;AAEd;AAEA,IAAM,eAAe,SAAC,GAAyC;AAC7D,SAAQ,EAAuB,WAAW;AAC5C;AAEM,SAAU,iBAAiB,OAA8C;AAC7E,SACE,UACC,CAAC,aAAa,KAAK,KAAK,MAAM,WAAW,MAC1C,CAAC,MAAM,WACP,CAAC,MAAM,UACP,CAAC,MAAM,YACP,CAAC,MAAM;AAEX;",
  "names": ["CustomEventStub"]
}

{
  "version": 3,
  "sources": ["../../src/internal/is-development.ts", "../../src/internal/logging.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Allow use of `process.env.NODE_ENV` specifically.\n *\n * Bundlers like Webpack and Parcel find uses of `process.env.NODE_ENV` and\n * statically replace them with the actual value during the build. When creating\n * production bundles, the use is replaced with the string \"production\", and\n * dead code checkers (e.g. terser) will then remove our dev-only code from\n * production bundles, letting us write runtime checks and warnings that don't\n * hurt production bundle size or performance.\n */\ndeclare const process: { env: { NODE_ENV?: string } };\n\n/**\n * Whether the bundle is a development bundle.\n * Only use this in an if condition and on its own! This will help bundlers find\n * and remove the conditional statement for production bundles.\n */\nexport const isDevelopment = process.env.NODE_ENV !== 'production';\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isDevelopment } from './is-development';\n\nconst messageCache: Record<string, true | undefined> = {};\n\nexport function warnOnce(component: string, message: string): void {\n  if (isDevelopment) {\n    const warning = `[AwsUi] [${component}] ${message}`;\n    if (!messageCache[warning]) {\n      messageCache[warning] = true;\n      console.warn(warning);\n    }\n  }\n}\n"],
  "mappings": ";AAoBO,IAAM,gBAAgB;;;AChB7B,IAAM,eAAiD,CAAA;AAEjD,SAAU,SAAS,WAAmB,SAAe;AACzD,MAAI,eAAe;AACjB,QAAM,UAAU,YAAA,OAAY,WAAS,IAAA,EAAA,OAAK,OAAO;AACjD,QAAI,CAAC,aAAa,UAAU;AAC1B,mBAAa,WAAW;AACxB,cAAQ,KAAK,OAAO;;;AAG1B;",
  "names": []
}

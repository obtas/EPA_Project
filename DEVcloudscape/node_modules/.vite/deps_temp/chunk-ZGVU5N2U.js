import {
  AbstractSwitch
} from "./chunk-ZB6Y44FZ.js";
import {
  useFormFieldContext
} from "./chunk-7IV6ODOI.js";
import {
  useForwardFocus
} from "./chunk-CWU6G4BO.js";
import {
  fireNonCancelableEvent
} from "./chunk-7TBDUUWV.js";
import {
  calculateOnce,
  useVisualRefresh
} from "./chunk-4EXFA7SU.js";
import {
  __assign,
  __rest,
  clsx_m_default,
  getBaseProps,
  init_clsx_m
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/checkbox/internal.js
init_clsx_m();
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/checkbox/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/checkbox/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_k2y2q_5zih0_93",
  "checkbox-control": "awsui_checkbox-control_k2y2q_5zih0_105",
  "outline": "awsui_outline_k2y2q_5zih0_113"
};

// node_modules/@cloudscape-design/components/internal/components/checkbox-icon/index.js
init_clsx_m();
var import_react = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/internal/components/checkbox-icon/styles.scoped.css";
var styles_css_default2 = {
  "root": "awsui_root_1fn7j_18k9z_93",
  "styled-box": "awsui_styled-box_1fn7j_18k9z_100",
  "styled-box-checked": "awsui_styled-box-checked_1fn7j_18k9z_106",
  "styled-box-indeterminate": "awsui_styled-box-indeterminate_1fn7j_18k9z_106",
  "styled-box-disabled": "awsui_styled-box-disabled_1fn7j_18k9z_110",
  "styled-line": "awsui_styled-line_1fn7j_18k9z_124",
  "styled-line-disabled": "awsui_styled-line-disabled_1fn7j_18k9z_129"
};

// node_modules/@cloudscape-design/components/internal/components/checkbox-icon/index.js
var dimensionsByTheme = {
  "default": {
    viewBox: "0 0 14 14",
    indeterminate: "2.5,7 11.5,7",
    checked: "2.5,7 6,10 11,3",
    xy: 0.5,
    r: 1.5,
    size: 13
  },
  refresh: {
    viewBox: "0 0 16 16",
    indeterminate: "3.5,8 12.5,8",
    checked: "3.5,8 7,11 12,4",
    xy: 1,
    r: 2,
    size: 14
  }
};
var CheckboxIcon = function(_a) {
  var _b, _c;
  var checked = _a.checked, indeterminate = _a.indeterminate, _d = _a.disabled, disabled = _d === void 0 ? false : _d, restProps = __rest(_a, ["checked", "indeterminate", "disabled"]);
  var baseProps = getBaseProps(restProps);
  var theme = useVisualRefresh() ? "refresh" : "default";
  var dimensions = dimensionsByTheme[theme];
  return import_react.default.createElement(
    "svg",
    __assign({ className: styles_css_default2.root, viewBox: dimensions.viewBox, "aria-hidden": "true", focusable: "false" }, baseProps),
    import_react.default.createElement("rect", { className: clsx_m_default(styles_css_default2["styled-box"], (_b = {}, _b[styles_css_default2["styled-box-checked"]] = checked, _b[styles_css_default2["styled-box-indeterminate"]] = indeterminate, _b[styles_css_default2["styled-box-disabled"]] = disabled, _b)), x: dimensions.xy, y: dimensions.xy, rx: dimensions.r, ry: dimensions.r, width: dimensions.size, height: dimensions.size }),
    checked || indeterminate ? import_react.default.createElement("polyline", { className: clsx_m_default(styles_css_default2["styled-line"], (_c = {}, _c[styles_css_default2["styled-line-disabled"]] = disabled, _c)), points: indeterminate ? dimensions.indeterminate : dimensions.checked }) : null
  );
};
var checkbox_icon_default = CheckboxIcon;

// node_modules/@cloudscape-design/components/checkbox/internal.js
var InternalCheckbox = import_react2.default.forwardRef(function(_a, ref) {
  var controlId = _a.controlId, name = _a.name, checked = _a.checked, disabled = _a.disabled, indeterminate = _a.indeterminate, children = _a.children, description = _a.description, ariaLabel = _a.ariaLabel, onFocus = _a.onFocus, onBlur = _a.onBlur, onChange = _a.onChange, tabIndex = _a.tabIndex, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["controlId", "name", "checked", "disabled", "indeterminate", "children", "description", "ariaLabel", "onFocus", "onBlur", "onChange", "tabIndex", "__internalRootRef"]);
  var _b = useFormFieldContext(rest), ariaDescribedby = _b.ariaDescribedby, ariaLabelledby = _b.ariaLabelledby;
  var baseProps = getBaseProps(rest);
  var checkboxRef = (0, import_react2.useRef)(null);
  useForwardFocus(ref, checkboxRef);
  (0, import_react2.useEffect)(function() {
    if (checkboxRef.current) {
      checkboxRef.current.indeterminate = Boolean(indeterminate);
    }
  });
  return import_react2.default.createElement(AbstractSwitch, __assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, baseProps.className), controlClassName: styles_css_default["checkbox-control"], outlineClassName: styles_css_default.outline, controlId, disabled, label: children, description, descriptionBottomPadding: true, ariaLabel, ariaLabelledby, ariaDescribedby, nativeControl: function(nativeControlProps) {
    return import_react2.default.createElement("input", __assign({}, nativeControlProps, {
      ref: checkboxRef,
      type: "checkbox",
      checked,
      name,
      tabIndex,
      onFocus: function() {
        return fireNonCancelableEvent(onFocus);
      },
      onBlur: function() {
        return fireNonCancelableEvent(onBlur);
      },
      onChange: function() {
      }
    }));
  }, onClick: function() {
    var _a2;
    (_a2 = checkboxRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    fireNonCancelableEvent(
      onChange,
      indeterminate ? { checked: true, indeterminate: false } : { checked: !checked, indeterminate: false }
    );
  }, styledControl: import_react2.default.createElement(checkbox_icon_default, { checked, indeterminate, disabled }), __internalRootRef }));
});
var internal_default = InternalCheckbox;

// node_modules/@cloudscape-design/components/internal/utils/browser-scrollbar-size.js
var browserScrollbarSize = calculateOnce(function() {
  if (typeof document === "undefined") {
    return { width: 0, height: 0 };
  }
  var scrollDiv = document.createElement("div");
  scrollDiv.style.overflow = "scroll";
  scrollDiv.style.height = "100px";
  scrollDiv.style.width = "100px";
  scrollDiv.style.position = "absolute";
  scrollDiv.style.top = "-9999px";
  scrollDiv.style.left = "-9999px";
  document.body.appendChild(scrollDiv);
  var width = scrollDiv.offsetWidth - scrollDiv.clientWidth;
  var height = scrollDiv.offsetHeight - scrollDiv.clientHeight;
  document.body.removeChild(scrollDiv);
  return { width, height };
});

export {
  checkbox_icon_default,
  internal_default,
  browserScrollbarSize
};
//# sourceMappingURL=chunk-ZGVU5N2U.js.map

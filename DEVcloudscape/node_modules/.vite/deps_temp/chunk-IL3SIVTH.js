import {
  InternalContainer
} from "./chunk-ASV5CXSI.js";
import {
  InternalHeader
} from "./chunk-E6XJSLCI.js";
import {
  useControllable
} from "./chunk-IFMKOHAC.js";
import {
  generateUniqueId,
  useUniqueId
} from "./chunk-PFODBZPR.js";
import {
  CSSTransition_default
} from "./chunk-7ETUUVGM.js";
import {
  checkSafeUrl
} from "./chunk-NEL4RAJ2.js";
import {
  ScreenreaderOnly
} from "./chunk-ICGXBUBW.js";
import {
  KeyCode,
  useFocusVisible
} from "./chunk-GKBIUDXI.js";
import {
  fireCancelableEvent,
  fireNonCancelableEvent,
  isPlainLeftClick
} from "./chunk-7TBDUUWV.js";
import {
  internal_default
} from "./chunk-XYE4ILSB.js";
import {
  isDevelopment,
  warnOnce
} from "./chunk-GZ7CC2VZ.js";
import {
  __assign,
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  init_clsx_m,
  useBaseComponent
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/side-navigation/index.js
var import_react5 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/side-navigation/internal.js
var import_react4 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/expandable-section/internal.js
var import_react3 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/expandable-section/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/expandable-section/styles.scoped.css";
var styles_css_default = {
  "content-enter": "awsui_content-enter_gwq0h_mztld_97",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_gwq0h_mztld_1",
  "trigger-expanded": "awsui_trigger-expanded_gwq0h_mztld_119",
  "icon": "awsui_icon_gwq0h_mztld_133",
  "root": "awsui_root_gwq0h_mztld_151",
  "expanded": "awsui_expanded_gwq0h_mztld_169",
  "icon-container": "awsui_icon-container_gwq0h_mztld_173",
  "trigger": "awsui_trigger_gwq0h_mztld_119",
  "trigger-default": "awsui_trigger-default_gwq0h_mztld_188",
  "trigger-footer": "awsui_trigger-footer_gwq0h_mztld_191",
  "trigger-navigation": "awsui_trigger-navigation_gwq0h_mztld_197",
  "trigger-container": "awsui_trigger-container_gwq0h_mztld_209",
  "header": "awsui_header_gwq0h_mztld_219",
  "header-container": "awsui_header-container_gwq0h_mztld_222",
  "header-container-button": "awsui_header-container-button_gwq0h_mztld_238",
  "header-navigation": "awsui_header-navigation_gwq0h_mztld_246",
  "content": "awsui_content_gwq0h_mztld_97",
  "content-default": "awsui_content-default_gwq0h_mztld_282",
  "content-footer": "awsui_content-footer_gwq0h_mztld_285",
  "content-expanded": "awsui_content-expanded_gwq0h_mztld_288",
  "focusable": "awsui_focusable_gwq0h_mztld_292"
};

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-container.js
var import_react = __toESM(require_react());
var ExpandableSectionContainer = function(_a) {
  var className = _a.className, children = _a.children, header = _a.header, variant = _a.variant, expanded = _a.expanded, disableContentPaddings = _a.disableContentPaddings, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["className", "children", "header", "variant", "expanded", "disableContentPaddings", "__internalRootRef"]);
  if (variant === "container") {
    return import_react.default.createElement(InternalContainer, __assign({}, rest, { className, header, variant: "default", disableContentPaddings: disableContentPaddings || !expanded, disableHeaderPaddings: true, __hiddenContent: !expanded, __internalRootRef }), children);
  }
  return import_react.default.createElement(
    "div",
    __assign({ className }, rest, { ref: __internalRootRef }),
    header,
    children
  );
};

// node_modules/@cloudscape-design/components/expandable-section/expandable-section-header.js
var import_react2 = __toESM(require_react());
init_clsx_m();
var ExpandableDefaultHeader = function(_a) {
  var id = _a.id, className = _a.className, onClick = _a.onClick, ariaLabel = _a.ariaLabel, ariaControls = _a.ariaControls, expanded = _a.expanded, children = _a.children, icon = _a.icon, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown;
  var focusVisible = useFocusVisible();
  return import_react2.default.createElement(
    "div",
    __assign({ id, role: "button", className, tabIndex: 0, onKeyUp, onKeyDown, onClick, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded }, focusVisible),
    import_react2.default.createElement("div", { className: styles_css_default["icon-container"] }, icon),
    children
  );
};
var ExpandableNavigationHeader = function(_a) {
  var id = _a.id, className = _a.className, onClick = _a.onClick, ariaLabelledBy = _a.ariaLabelledBy, ariaLabel = _a.ariaLabel, ariaControls = _a.ariaControls, expanded = _a.expanded, children = _a.children, icon = _a.icon;
  var focusVisible = useFocusVisible();
  return import_react2.default.createElement(
    "div",
    { id, className, onClick },
    import_react2.default.createElement("button", __assign({ className: styles_css_default["icon-container"], "aria-labelledby": ariaLabelledBy, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": expanded }, focusVisible), icon),
    children
  );
};
var ExpandableContainerHeader = function(_a) {
  var id = _a.id, className = _a.className, onClick = _a.onClick, ariaLabel = _a.ariaLabel, ariaControls = _a.ariaControls, expanded = _a.expanded, children = _a.children, icon = _a.icon, headerDescription = _a.headerDescription, headerCounter = _a.headerCounter, headingTagOverride = _a.headingTagOverride, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown;
  var focusVisible = useFocusVisible();
  var screenreaderContentId = generateUniqueId("expandable-section-header-content-");
  return import_react2.default.createElement(
    "div",
    __assign({ id, className, onClick }, focusVisible),
    import_react2.default.createElement(
      InternalHeader,
      { variant: "h2", description: headerDescription, counter: headerCounter, headingTagOverride },
      import_react2.default.createElement(
        "span",
        { className: styles_css_default["header-container-button"], role: "button", tabIndex: 0, onKeyUp, onKeyDown, "aria-label": ariaLabel, "aria-labelledby": ariaLabel ? void 0 : screenreaderContentId, "aria-controls": ariaControls, "aria-expanded": expanded },
        import_react2.default.createElement("span", { className: styles_css_default["icon-container"] }, icon),
        import_react2.default.createElement("span", null, children)
      )
    ),
    import_react2.default.createElement(
      ScreenreaderOnly,
      { id: screenreaderContentId },
      children,
      " ",
      headerCounter,
      " ",
      headerDescription
    )
  );
};
var ExpandableSectionHeader = function(_a) {
  var id = _a.id, className = _a.className, variant = _a.variant, header = _a.header, headerText = _a.headerText, headerDescription = _a.headerDescription, headerCounter = _a.headerCounter, headingTagOverride = _a.headingTagOverride, expanded = _a.expanded, ariaControls = _a.ariaControls, ariaLabel = _a.ariaLabel, ariaLabelledBy = _a.ariaLabelledBy, onKeyUp = _a.onKeyUp, onKeyDown = _a.onKeyDown, onClick = _a.onClick;
  var icon = import_react2.default.createElement(internal_default, { size: variant === "container" ? "medium" : "normal", className: clsx_m_default(styles_css_default.icon, expanded && styles_css_default.expanded), name: "caret-down-filled" });
  var defaultHeaderProps = {
    id,
    icon,
    expanded,
    ariaControls,
    ariaLabel,
    onClick
  };
  var triggerClassName = clsx_m_default(styles_css_default.trigger, styles_css_default["trigger-".concat(variant)], expanded && styles_css_default["trigger-expanded"]);
  if (variant === "navigation") {
    return import_react2.default.createElement(ExpandableNavigationHeader, __assign({ className: clsx_m_default(className, triggerClassName), ariaLabelledBy }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header);
  }
  if (variant === "container" && headerText) {
    return import_react2.default.createElement(ExpandableContainerHeader, __assign({ className: clsx_m_default(className, triggerClassName, expanded && styles_css_default.expanded), headerDescription, headerCounter, headingTagOverride, onKeyUp, onKeyDown }, defaultHeaderProps), headerText);
  }
  if (variant === "container" && header && isDevelopment) {
    warnOnce("ExpandableSection", "Use `headerText` instead of `header` to provide the button within the heading for a11y.");
  }
  return import_react2.default.createElement(ExpandableDefaultHeader, __assign({ className: clsx_m_default(className, triggerClassName, styles_css_default.focusable, expanded && styles_css_default.expanded), onKeyUp, onKeyDown }, defaultHeaderProps), headerText !== null && headerText !== void 0 ? headerText : header);
};

// node_modules/@cloudscape-design/components/expandable-section/internal.js
function InternalExpandableSection(_a) {
  var controlledExpanded = _a.expanded, defaultExpanded = _a.defaultExpanded, onChange = _a.onChange, _b = _a.variant, variant = _b === void 0 ? "default" : _b, children = _a.children, header = _a.header, headerText = _a.headerText, headerCounter = _a.headerCounter, headerDescription = _a.headerDescription, headingTagOverride = _a.headingTagOverride, disableContentPaddings = _a.disableContentPaddings, headerAriaLabel = _a.headerAriaLabel, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["expanded", "defaultExpanded", "onChange", "variant", "children", "header", "headerText", "headerCounter", "headerDescription", "headingTagOverride", "disableContentPaddings", "headerAriaLabel", "__internalRootRef"]);
  var ref = (0, import_react3.useRef)(null);
  var controlId = useUniqueId();
  var triggerControlId = "".concat(controlId, "-trigger");
  var baseProps = getBaseProps(props);
  var _c = useControllable(controlledExpanded, onChange, defaultExpanded, {
    componentName: "ExpandableSection",
    controlledProp: "expanded",
    changeHandler: "onChange"
  }), expanded = _c[0], setExpanded = _c[1];
  var onExpandChange = (0, import_react3.useCallback)(function(expanded2) {
    setExpanded(expanded2);
    fireNonCancelableEvent(onChange, { expanded: expanded2 });
  }, [onChange, setExpanded]);
  var onClick = (0, import_react3.useCallback)(function() {
    onExpandChange(!expanded);
  }, [onExpandChange, expanded]);
  var onKeyUp = (0, import_react3.useCallback)(function(event) {
    var interactionKeys = [KeyCode.enter, KeyCode.space];
    if (interactionKeys.indexOf(event.keyCode) !== -1) {
      onExpandChange(!expanded);
    }
  }, [onExpandChange, expanded]);
  var onKeyDown = (0, import_react3.useCallback)(function(event) {
    if (event.keyCode === KeyCode.space) {
      event.preventDefault();
    }
  }, []);
  var triggerProps = {
    ariaControls: controlId,
    ariaLabel: headerAriaLabel,
    ariaLabelledBy: headerAriaLabel ? void 0 : triggerControlId,
    onKeyUp,
    onKeyDown,
    onClick
  };
  return import_react3.default.createElement(
    ExpandableSectionContainer,
    __assign({}, baseProps, { expanded, className: clsx_m_default(baseProps.className, styles_css_default.root), variant, disableContentPaddings, header: import_react3.default.createElement(ExpandableSectionHeader, __assign({ id: triggerControlId, className: clsx_m_default(styles_css_default.header, styles_css_default["header-".concat(variant)]), variant, expanded: !!expanded, header, headerText, headerDescription, headerCounter, headingTagOverride }, triggerProps)), __internalRootRef }),
    import_react3.default.createElement(
      CSSTransition_default,
      { "in": expanded, timeout: 30, classNames: { enter: styles_css_default["content-enter"] }, nodeRef: ref },
      import_react3.default.createElement("div", { id: controlId, ref, className: clsx_m_default(styles_css_default.content, styles_css_default["content-".concat(variant)], expanded && styles_css_default["content-expanded"]), role: "group", "aria-label": triggerProps.ariaLabel, "aria-labelledby": triggerProps.ariaLabelledBy }, children)
    )
  );
}

// node_modules/@cloudscape-design/components/side-navigation/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/side-navigation/styles.scoped.css";
var styles_css_default2 = {
  "root": "awsui_root_l0dv0_1mtlo_93",
  "header": "awsui_header_l0dv0_1mtlo_107",
  "header-link": "awsui_header-link_l0dv0_1mtlo_112",
  "header-link--has-logo": "awsui_header-link--has-logo_l0dv0_1mtlo_120",
  "header-link-text": "awsui_header-link-text_l0dv0_1mtlo_120",
  "header-logo": "awsui_header-logo_l0dv0_1mtlo_124",
  "header-logo--stretched": "awsui_header-logo--stretched_l0dv0_1mtlo_130",
  "list-container": "awsui_list-container_l0dv0_1mtlo_135",
  "list": "awsui_list_l0dv0_1mtlo_135",
  "list-variant-root": "awsui_list-variant-root_l0dv0_1mtlo_145",
  "list-variant-expandable-link-group": "awsui_list-variant-expandable-link-group_l0dv0_1mtlo_151",
  "list-item": "awsui_list-item_l0dv0_1mtlo_155",
  "section": "awsui_section_l0dv0_1mtlo_161",
  "expandable-link-group": "awsui_expandable-link-group_l0dv0_1mtlo_162",
  "section-header": "awsui_section-header_l0dv0_1mtlo_175",
  "link": "awsui_link_l0dv0_1mtlo_180",
  "link-active": "awsui_link-active_l0dv0_1mtlo_187",
  "info": "awsui_info_l0dv0_1mtlo_219",
  "external-icon": "awsui_external-icon_l0dv0_1mtlo_223",
  "divider": "awsui_divider_l0dv0_1mtlo_227",
  "divider-default": "awsui_divider-default_l0dv0_1mtlo_232",
  "divider-header": "awsui_divider-header_l0dv0_1mtlo_236"
};

// node_modules/@cloudscape-design/components/side-navigation/util.js
function hasActiveLink(items, activeHref) {
  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
    var item = items_1[_i];
    if ((item.type === "link" || item.type === "link-group" || item.type === "expandable-link-group") && item.href === activeHref) {
      return true;
    }
    if ((item.type === "section" || item.type === "link-group" || item.type === "expandable-link-group") && hasActiveLink(item.items, activeHref)) {
      return true;
    }
  }
  return false;
}
function generateExpandableItemsMapping(items, mapping, expandableParents) {
  if (mapping === void 0) {
    mapping = /* @__PURE__ */ new WeakMap();
  }
  if (expandableParents === void 0) {
    expandableParents = [];
  }
  items.forEach(function(item) {
    var nextLevelParents = expandableParents.slice();
    if (item.type === "section" || item.type === "expandable-link-group") {
      mapping.set(item, expandableParents);
      nextLevelParents.unshift(item);
    }
    if (item.type === "section" || item.type === "link-group" || item.type === "expandable-link-group") {
      generateExpandableItemsMapping(item.items, mapping, nextLevelParents);
    }
  });
  return mapping;
}
function checkDuplicateHrefs(items) {
  var hrefs = /* @__PURE__ */ new Set();
  var queue = items.slice();
  while (queue.length > 0) {
    var item = queue.shift();
    if ("href" in item) {
      if (hrefs.has(item.href)) {
        warnOnce("SideNavigation", 'duplicate href in "'.concat(item.text, '": ').concat(item.href));
      }
      hrefs.add(item.href);
    }
    if ("items" in item) {
      queue.push.apply(queue, item.items);
    }
  }
}

// node_modules/@cloudscape-design/components/side-navigation/internal.js
function Header(_a) {
  var _b, _c;
  var definition = _a.definition, activeHref = _a.activeHref, fireFollow = _a.fireFollow;
  checkSafeUrl("SideNavigation", definition.href);
  var focusVisible = useFocusVisible();
  var onClick = (0, import_react4.useCallback)(function(event) {
    if (isPlainLeftClick(event)) {
      fireFollow(definition, event);
    }
  }, [fireFollow, definition]);
  return import_react4.default.createElement(
    import_react4.default.Fragment,
    null,
    import_react4.default.createElement(
      "div",
      { className: styles_css_default2.header },
      import_react4.default.createElement(
        "a",
        __assign({}, focusVisible, { href: definition.href, className: clsx_m_default(styles_css_default2["header-link"], (_b = {}, _b[styles_css_default2["header-link--has-logo"]] = !!definition.logo, _b)), "aria-current": definition.href === activeHref ? "page" : void 0, onClick }),
        definition.logo && import_react4.default.createElement("img", __assign({ className: clsx_m_default(styles_css_default2["header-logo"], (_c = {}, _c[styles_css_default2["header-logo--stretched"]] = !definition.text, _c)) }, definition.logo)),
        import_react4.default.createElement("span", { className: styles_css_default2["header-link-text"] }, definition.text)
      )
    ),
    import_react4.default.createElement(Divider, { variant: "header" })
  );
}
function ItemList(_a) {
  var variant = _a.variant, items = _a.items, activeHref = _a.activeHref, fireChange = _a.fireChange, fireFollow = _a.fireFollow;
  return import_react4.default.createElement("ul", { className: clsx_m_default(styles_css_default2.list, styles_css_default2["list-variant-".concat(variant)]) }, items.map(function(item, i) {
    return import_react4.default.createElement(
      "li",
      { key: i, className: styles_css_default2["list-item"] },
      item.type === "divider" && import_react4.default.createElement(Divider, { variant: "default" }),
      item.type === "link" && import_react4.default.createElement(Link, { definition: item, activeHref, fireChange, fireFollow }),
      item.type === "section" && import_react4.default.createElement(Section, { definition: item, activeHref, fireChange, fireFollow }),
      item.type === "link-group" && import_react4.default.createElement(LinkGroup, { definition: item, activeHref, fireChange, fireFollow }),
      item.type === "expandable-link-group" && import_react4.default.createElement(ExpandableLinkGroup, { definition: item, activeHref, fireChange, fireFollow })
    );
  }));
}
function Divider(_a) {
  var _b = _a.variant, variant = _b === void 0 ? "default" : _b;
  return import_react4.default.createElement("hr", { className: clsx_m_default(styles_css_default2.divider, styles_css_default2["divider-".concat(variant)]) });
}
function Link(_a) {
  var _b;
  var definition = _a.definition, expanded = _a.expanded, activeHref = _a.activeHref, fireFollow = _a.fireFollow;
  checkSafeUrl("SideNavigation", definition.href);
  var isActive = definition.href === activeHref;
  var focusVisible = useFocusVisible();
  var onClick = (0, import_react4.useCallback)(function(event) {
    event.stopPropagation();
    if (isPlainLeftClick(event)) {
      fireFollow(definition, event);
    }
  }, [fireFollow, definition]);
  return import_react4.default.createElement(
    import_react4.default.Fragment,
    null,
    import_react4.default.createElement(
      "a",
      __assign({}, focusVisible, { href: definition.href, className: clsx_m_default(styles_css_default2.link, (_b = {}, _b[styles_css_default2["link-active"]] = isActive, _b)), target: definition.external ? "_blank" : void 0, rel: definition.external ? "noopener noreferrer" : void 0, "aria-expanded": expanded, "aria-current": definition.href === activeHref ? "page" : void 0, onClick }),
      definition.text,
      definition.external && import_react4.default.createElement(
        "span",
        { "aria-label": definition.externalIconAriaLabel, role: definition.externalIconAriaLabel ? "img" : void 0 },
        import_react4.default.createElement(internal_default, { name: "external", className: styles_css_default2["external-icon"] })
      )
    ),
    definition.info && import_react4.default.createElement("span", { className: styles_css_default2.info }, definition.info)
  );
}
function Section(_a) {
  var _b;
  var definition = _a.definition, activeHref = _a.activeHref, fireFollow = _a.fireFollow, fireChange = _a.fireChange;
  var _c = (0, import_react4.useState)((_b = definition.defaultExpanded) !== null && _b !== void 0 ? _b : true), expanded = _c[0], setExpanded = _c[1];
  var onExpandedChange = (0, import_react4.useCallback)(function(e) {
    fireChange(definition, e.detail.expanded);
    setExpanded(e.detail.expanded);
  }, [definition, fireChange]);
  (0, import_react4.useEffect)(function() {
    var _a2;
    setExpanded((_a2 = definition.defaultExpanded) !== null && _a2 !== void 0 ? _a2 : true);
  }, [definition]);
  return import_react4.default.createElement(
    InternalExpandableSection,
    { variant: "footer", expanded, onChange: onExpandedChange, className: styles_css_default2.section, headerText: definition.text },
    import_react4.default.createElement(ItemList, { variant: "section", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function LinkGroup(_a) {
  var definition = _a.definition, activeHref = _a.activeHref, fireFollow = _a.fireFollow, fireChange = _a.fireChange;
  checkSafeUrl("SideNavigation", definition.href);
  return import_react4.default.createElement(
    import_react4.default.Fragment,
    null,
    import_react4.default.createElement(Link, { definition: { type: "link", href: definition.href, text: definition.text }, fireFollow: function(_, event) {
      return fireFollow(definition, event);
    }, fireChange, activeHref }),
    import_react4.default.createElement(ItemList, { variant: "link-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}
function ExpandableLinkGroup(_a) {
  var definition = _a.definition, fireFollow = _a.fireFollow, fireChange = _a.fireChange, activeHref = _a.activeHref;
  var containsActiveLink = (0, import_react4.useMemo)(function() {
    return activeHref ? hasActiveLink(definition.items, activeHref) : false;
  }, [activeHref, definition.items]);
  var _b = (0, import_react4.useState)(function() {
    var _a2;
    return (_a2 = definition.defaultExpanded) !== null && _a2 !== void 0 ? _a2 : definition.href === activeHref || containsActiveLink;
  }), expanded = _b[0], setExpanded = _b[1];
  var _c = (0, import_react4.useState)(), userExpanded = _c[0], setUserExpanded = _c[1];
  (0, import_react4.useEffect)(function() {
    return setUserExpanded(void 0);
  }, [definition]);
  (0, import_react4.useEffect)(function() {
    setExpanded(definition.href === activeHref || containsActiveLink);
  }, [definition.href, containsActiveLink, activeHref]);
  (0, import_react4.useEffect)(function() {
    if (definition.defaultExpanded !== void 0) {
      setExpanded(definition.defaultExpanded);
    }
  }, [definition]);
  var onExpandedChange = (0, import_react4.useCallback)(function(e) {
    fireChange(definition, e.detail.expanded);
    setUserExpanded(e.detail.expanded);
  }, [definition, fireChange]);
  var onHeaderFollow = function(_, event) {
    fireFollow(definition, event);
    setUserExpanded(true);
    if (!expanded) {
      fireChange(definition, true);
    }
  };
  return import_react4.default.createElement(
    InternalExpandableSection,
    { className: styles_css_default2["expandable-link-group"], variant: "navigation", expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, onChange: onExpandedChange, headerText: import_react4.default.createElement(Link, { definition: { type: "link", href: definition.href, text: definition.text }, expanded: userExpanded !== null && userExpanded !== void 0 ? userExpanded : expanded, fireFollow: onHeaderFollow, fireChange, activeHref }) },
    import_react4.default.createElement(ItemList, { variant: "expandable-link-group", items: definition.items, fireFollow, fireChange, activeHref })
  );
}

// node_modules/@cloudscape-design/components/side-navigation/index.js
function SideNavigation(_a) {
  var header = _a.header, activeHref = _a.activeHref, _b = _a.items, items = _b === void 0 ? [] : _b, onFollow = _a.onFollow, onChange = _a.onChange, props = __rest(_a, ["header", "activeHref", "items", "onFollow", "onChange"]);
  var __internalRootRef = useBaseComponent("SideNavigation").__internalRootRef;
  var baseProps = getBaseProps(props);
  var parentMap = (0, import_react5.useMemo)(function() {
    return generateExpandableItemsMapping(items);
  }, [items]);
  if (isDevelopment) {
    (0, import_react5.useEffect)(function() {
      return checkDuplicateHrefs(items);
    }, [items]);
  }
  var onChangeHandler = (0, import_react5.useCallback)(function(item, expanded) {
    fireNonCancelableEvent(onChange, { item, expanded, expandableParents: parentMap.get(item) });
  }, [onChange, parentMap]);
  var onFollowHandler = (0, import_react5.useCallback)(function(item, sourceEvent) {
    fireCancelableEvent(onFollow, item, sourceEvent);
  }, [onFollow]);
  return import_react5.default.createElement(
    "div",
    __assign({}, baseProps, { className: clsx_m_default(styles_css_default2.root, baseProps.className), ref: __internalRootRef }),
    header && import_react5.default.createElement(Header, { definition: header, activeHref, fireChange: onChangeHandler, fireFollow: onFollowHandler }),
    items && import_react5.default.createElement(
      "div",
      { className: styles_css_default2["list-container"] },
      import_react5.default.createElement(ItemList, { variant: "root", items, fireFollow: onFollowHandler, fireChange: onChangeHandler, activeHref })
    )
  );
}
applyDisplayName(SideNavigation, "SideNavigation");

export {
  InternalExpandableSection,
  SideNavigation
};
//# sourceMappingURL=chunk-IL3SIVTH.js.map

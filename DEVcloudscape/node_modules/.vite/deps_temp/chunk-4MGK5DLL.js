import {
  internal_default as internal_default3
} from "./chunk-UDCTELVZ.js";
import {
  InternalSpaceBetween
} from "./chunk-PQHHH3QH.js";
import {
  browserScrollbarSize,
  internal_default as internal_default2
} from "./chunk-ZGVU5N2U.js";
import {
  AbstractSwitch
} from "./chunk-ZB6Y44FZ.js";
import {
  es2015_default
} from "./chunk-OE5J3NOA.js";
import {
  InternalFormField,
  internal_default
} from "./chunk-NXOYZDVP.js";
import {
  require_react_keyed_flatten_children
} from "./chunk-YSBRV2HS.js";
import {
  useFormFieldContext
} from "./chunk-7IV6ODOI.js";
import {
  InternalHeader
} from "./chunk-E6XJSLCI.js";
import {
  Portal,
  getFirstFocusable
} from "./chunk-MVRRTG7G.js";
import {
  useUniqueId
} from "./chunk-PFODBZPR.js";
import {
  InternalButton
} from "./chunk-BX32VQUV.js";
import {
  useForwardFocus
} from "./chunk-CWU6G4BO.js";
import {
  KeyCode
} from "./chunk-GKBIUDXI.js";
import {
  fireNonCancelableEvent
} from "./chunk-7TBDUUWV.js";
import {
  useContainerBreakpoints
} from "./chunk-FBPNVVYB.js";
import {
  isDevelopment,
  warnOnce
} from "./chunk-GZ7CC2VZ.js";
import {
  useMergeRefs
} from "./chunk-EZZ3SG55.js";
import {
  useVisualRefresh
} from "./chunk-4EXFA7SU.js";
import {
  InternalBox
} from "./chunk-25NRRZIH.js";
import {
  __assign,
  __rest,
  __spreadArray,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  init_clsx_m,
  useBaseComponent
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/collection-preferences/index.js
var import_react6 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/modal/internal.js
var import_react = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/modal/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/modal/styles.scoped.css";
var styles_css_default = {
  "dialog": "awsui_dialog_1d2i7_1q6b4_105",
  "modal-slide-up": "awsui_modal-slide-up_1d2i7_1q6b4_1",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_1d2i7_1q6b4_1",
  "refresh": "awsui_refresh_1d2i7_1q6b4_128",
  "awsui-motion-scale-popup": "awsui_awsui-motion-scale-popup_1d2i7_1q6b4_1",
  "root": "awsui_root_1d2i7_1q6b4_161",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_1d2i7_1q6b4_1",
  "hidden": "awsui_hidden_1d2i7_1q6b4_224",
  "focus-lock": "awsui_focus-lock_1d2i7_1q6b4_228",
  "small": "awsui_small_1d2i7_1q6b4_246",
  "medium": "awsui_medium_1d2i7_1q6b4_249",
  "large": "awsui_large_1d2i7_1q6b4_252",
  "max": "awsui_max_1d2i7_1q6b4_255",
  "breakpoint-xs": "awsui_breakpoint-xs_1d2i7_1q6b4_255",
  "container": "awsui_container_1d2i7_1q6b4_260",
  "content": "awsui_content_1d2i7_1q6b4_284",
  "no-paddings": "awsui_no-paddings_1d2i7_1q6b4_287",
  "header": "awsui_header_1d2i7_1q6b4_291",
  "header--text": "awsui_header--text_1d2i7_1q6b4_298",
  "footer": "awsui_footer_1d2i7_1q6b4_302",
  "dismiss-control": "awsui_dismiss-control_1d2i7_1q6b4_312",
  "modal-open": "awsui_modal-open_1d2i7_1q6b4_316"
};

// node_modules/@cloudscape-design/components/modal/body-scroll.js
var initialBodyPaddingRightStyle = void 0;
function disableBodyScrolling() {
  setBodyScrollbarPadding();
  document.body.classList.add(styles_css_default["modal-open"]);
}
function enableBodyScrolling() {
  document.body.classList.remove(styles_css_default["modal-open"]);
  restoreBodyScrollbarPadding();
}
function setBodyScrollbarPadding() {
  if (bodyHasScrollbar()) {
    initialBodyPaddingRightStyle = document.body.style.paddingRight;
    var initialBodyPaddingRight = computedBodyPaddingRightPixels();
    var scrollbarWidth = browserScrollbarSize().width;
    var newBodyPaddingRight = initialBodyPaddingRight + scrollbarWidth;
    document.body.style.paddingRight = newBodyPaddingRight + "px";
  }
}
function computedBodyPaddingRightPixels() {
  return parseInt(window.getComputedStyle(document.body).paddingRight, 10);
}
function restoreBodyScrollbarPadding() {
  if (initialBodyPaddingRightStyle) {
    document.body.style.setProperty("padding-right", initialBodyPaddingRightStyle);
  } else {
    document.body.style.removeProperty("padding-right");
  }
  initialBodyPaddingRightStyle = void 0;
}
function bodyHasScrollbar() {
  return document.body.clientWidth < window.innerWidth;
}

// node_modules/@cloudscape-design/components/modal/internal.js
function InternalModal(_a) {
  var _b, _c;
  var size = _a.size, visible = _a.visible, closeAriaLabel = _a.closeAriaLabel, header = _a.header, children = _a.children, footer = _a.footer, disableContentPaddings = _a.disableContentPaddings, onDismiss = _a.onDismiss, modalRoot = _a.modalRoot, _d = _a.__internalRootRef, __internalRootRef = _d === void 0 ? null : _d, rest = __rest(_a, ["size", "visible", "closeAriaLabel", "header", "children", "footer", "disableContentPaddings", "onDismiss", "modalRoot", "__internalRootRef"]);
  var instanceUniqueId = useUniqueId();
  var headerId = "".concat(rest.id || instanceUniqueId, "-header");
  var focusLockRef = (0, import_react.useRef)(null);
  var lastMouseDownElementRef = (0, import_react.useRef)(null);
  var _e = useContainerBreakpoints(["xs"]), breakpoint = _e[0], breakpointsRef = _e[1];
  var refObject = (0, import_react.useRef)(null);
  var mergedRef = useMergeRefs(breakpointsRef, refObject, __internalRootRef);
  var isRefresh = useVisualRefresh();
  var baseProps = getBaseProps(rest);
  (0, import_react.useEffect)(function() {
    return function() {
      enableBodyScrolling();
    };
  }, []);
  (0, import_react.useEffect)(function() {
    if (visible) {
      disableBodyScrolling();
    } else {
      enableBodyScrolling();
    }
  }, [visible]);
  (0, import_react.useEffect)(function() {
    if (visible && refObject.current) {
      refObject.current.scrollTop = 0;
    }
  }, [visible]);
  var onFocusActivation = function() {
    var _a2;
    focusLockRef.current && ((_a2 = getFirstFocusable(focusLockRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus());
  };
  var dismiss = function(reason) {
    return fireNonCancelableEvent(onDismiss, { reason });
  };
  var onOverlayMouseDown = function(event) {
    lastMouseDownElementRef.current = event.target;
  };
  var onOverlayClick = function(event) {
    var overlay = refObject.current;
    var lastClicked = lastMouseDownElementRef.current;
    if (event.target === overlay && lastClicked === overlay) {
      dismiss("overlay");
    }
  };
  var onCloseButtonClick = function() {
    return dismiss("closeButton");
  };
  var escKeyHandler = function(event) {
    if (event.keyCode === KeyCode.escape) {
      dismiss("keyboard");
    }
  };
  return import_react.default.createElement(
    Portal,
    { container: modalRoot },
    import_react.default.createElement(
      "div",
      __assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, (_b = {}, _b[styles_css_default.hidden] = !visible, _b), baseProps.className, isRefresh && styles_css_default.refresh), role: "dialog", "aria-modal": true, "aria-labelledby": headerId, onMouseDown: onOverlayMouseDown, onClick: onOverlayClick, ref: mergedRef }),
      import_react.default.createElement(
        es2015_default,
        { disabled: !visible, autoFocus: false, returnFocus: true, className: styles_css_default["focus-lock"], ref: focusLockRef, onActivation: onFocusActivation },
        import_react.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default.dialog, styles_css_default[size], styles_css_default["breakpoint-".concat(breakpoint)], isRefresh && styles_css_default.refresh), onKeyDown: escKeyHandler, tabIndex: -1 },
          import_react.default.createElement(
            "div",
            { className: styles_css_default.container },
            import_react.default.createElement(
              "div",
              { className: styles_css_default.header },
              import_react.default.createElement(
                InternalHeader,
                { variant: "h2", __disableActionsWrapping: true, actions: import_react.default.createElement(InternalButton, { ariaLabel: closeAriaLabel, className: styles_css_default["dismiss-control"], variant: "modal-dismiss", iconName: "close", formAction: "none", onClick: onCloseButtonClick }) },
                import_react.default.createElement("span", { id: headerId, className: styles_css_default["header--text"] }, header)
              )
            ),
            import_react.default.createElement("div", { className: clsx_m_default(styles_css_default.content, (_c = {}, _c[styles_css_default["no-paddings"]] = disableContentPaddings, _c)) }, children),
            footer && import_react.default.createElement("div", { className: styles_css_default.footer }, footer)
          )
        )
      )
    )
  );
}

// node_modules/@cloudscape-design/components/collection-preferences/utils.js
var import_react3 = __toESM(require_react());

// node_modules/@cloudscape-design/components/column-layout/internal.js
var import_react2 = __toESM(require_react());
init_clsx_m();
var import_react_keyed_flatten_children = __toESM(require_react_keyed_flatten_children());

// node_modules/@cloudscape-design/components/column-layout/util.js
function repeat(value, times) {
  var array = [];
  for (var i = 0; i < times; i++) {
    array[i] = value;
  }
  return array;
}

// node_modules/@cloudscape-design/components/column-layout/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/column-layout/styles.scoped.css";
var styles_css_default2 = {
  "column-layout": "awsui_column-layout_vvxn7_1qidu_93",
  "grid": "awsui_grid_vvxn7_1qidu_104",
  "grid-no-gutters": "awsui_grid-no-gutters_vvxn7_1qidu_109",
  "grid-variant-text-grid": "awsui_grid-variant-text-grid_vvxn7_1qidu_112",
  "grid-breakpoint-default": "awsui_grid-breakpoint-default_vvxn7_1qidu_119",
  "grid-columns-1": "awsui_grid-columns-1_vvxn7_1qidu_122",
  "grid-breakpoint-xxs": "awsui_grid-breakpoint-xxs_vvxn7_1qidu_122",
  "grid-breakpoint-xs": "awsui_grid-breakpoint-xs_vvxn7_1qidu_125",
  "grid-columns-2": "awsui_grid-columns-2_vvxn7_1qidu_128",
  "grid-columns-3": "awsui_grid-columns-3_vvxn7_1qidu_134",
  "grid-columns-4": "awsui_grid-columns-4_vvxn7_1qidu_140",
  "grid-vertical-borders": "awsui_grid-vertical-borders_vvxn7_1qidu_153",
  "grid-horizontal-borders": "awsui_grid-horizontal-borders_vvxn7_1qidu_186"
};

// node_modules/@cloudscape-design/components/column-layout/internal.js
var COLUMN_TRIGGERS = ["default", "xxs", "xs"];
var COLUMN_DEFS = {
  1: { colspan: { "default": 12, xxs: 12, xs: 12 } },
  2: { colspan: { "default": 12, xxs: 6, xs: 6 } },
  3: { colspan: { "default": 12, xxs: 6, xs: 4 } },
  4: { colspan: { "default": 12, xxs: 6, xs: 3 } }
};
var internal_default4 = import_react2.default.forwardRef(function ColumnLayout(_a, ref) {
  var _b;
  var _c;
  var _d = _a.columns, columns = _d === void 0 ? 1 : _d, _e = _a.variant, variant = _e === void 0 ? "default" : _e, _f = _a.borders, borders = _f === void 0 ? "none" : _f, _g = _a.disableGutters, disableGutters = _g === void 0 ? false : _g, children = _a.children, __breakpoint = _a.__breakpoint, __internalRootRef = _a.__internalRootRef, restProps = __rest(_a, ["columns", "variant", "borders", "disableGutters", "children", "__breakpoint", "__internalRootRef"]);
  var baseProps = getBaseProps(restProps);
  var isTextGridVariant = variant === "text-grid";
  var shouldDisableGutters = !isTextGridVariant && disableGutters;
  var shouldHaveHorizontalBorders = !isTextGridVariant && (borders === "horizontal" || borders === "all");
  var shouldHaveVerticalBorders = !isTextGridVariant && (borders === "vertical" || borders === "all");
  var flattenedChildren = (0, import_react_keyed_flatten_children.default)(children);
  return import_react2.default.createElement(
    "div",
    __assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default2["column-layout"]), ref: __internalRootRef }),
    import_react2.default.createElement(internal_default, { ref, disableGutters: true, gridDefinition: repeat((_c = COLUMN_DEFS[columns]) !== null && _c !== void 0 ? _c : {}, flattenedChildren.length), className: clsx_m_default(styles_css_default2.grid, styles_css_default2["grid-columns-".concat(columns)], styles_css_default2["grid-variant-".concat(variant)], (_b = {}, _b[styles_css_default2["grid-horizontal-borders"]] = shouldHaveHorizontalBorders, _b[styles_css_default2["grid-vertical-borders"]] = shouldHaveVerticalBorders, _b[styles_css_default2["grid-no-gutters"]] = shouldDisableGutters, _b)), __breakpoint, __responsiveClassName: function(breakpoint) {
      return breakpoint && styles_css_default2["grid-breakpoint-".concat(breakpoint)];
    } }, children)
  );
});

// node_modules/@cloudscape-design/components/collection-preferences/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/collection-preferences/styles.scoped.css";
var styles_css_default3 = {
  "visible-content": "awsui_visible-content_tc96w_1qp7a_185",
  "visible-content-toggle": "awsui_visible-content-toggle_tc96w_1qp7a_186",
  "visible-content-groups": "awsui_visible-content-groups_tc96w_1qp7a_187",
  "visible-content-group": "awsui_visible-content-group_tc96w_1qp7a_187",
  "visible-content-title": "awsui_visible-content-title_tc96w_1qp7a_192",
  "visible-content-group-label": "awsui_visible-content-group-label_tc96w_1qp7a_200",
  "visible-content-option": "awsui_visible-content-option_tc96w_1qp7a_206",
  "visible-content-option-label": "awsui_visible-content-option-label_tc96w_1qp7a_217",
  "root": "awsui_root_tc96w_1qp7a_224",
  "modal-root": "awsui_modal-root_tc96w_1qp7a_225",
  "trigger-button": "awsui_trigger-button_tc96w_1qp7a_226",
  "cancel-button": "awsui_cancel-button_tc96w_1qp7a_227",
  "confirm-button": "awsui_confirm-button_tc96w_1qp7a_228",
  "custom": "awsui_custom_tc96w_1qp7a_229",
  "second-column-small": "awsui_second-column-small_tc96w_1qp7a_233",
  "wrap-lines": "awsui_wrap-lines_tc96w_1qp7a_237",
  "page-size": "awsui_page-size_tc96w_1qp7a_238",
  "page-size-form-field": "awsui_page-size-form-field_tc96w_1qp7a_239",
  "page-size-radio-group": "awsui_page-size-radio-group_tc96w_1qp7a_240"
};

// node_modules/@cloudscape-design/components/collection-preferences/utils.js
var copyPreferences = function(_a) {
  var pageSize = _a.pageSize, wrapLines = _a.wrapLines, visibleContent = _a.visibleContent, custom = _a.custom;
  return {
    pageSize,
    wrapLines,
    visibleContent,
    custom
  };
};
var mergePreferences = function(newPref, oldPref) {
  return {
    pageSize: newPref.pageSize !== void 0 ? newPref.pageSize : oldPref.pageSize,
    wrapLines: newPref.wrapLines !== void 0 ? newPref.wrapLines : oldPref.wrapLines,
    visibleContent: newPref.visibleContent !== void 0 ? newPref.visibleContent : oldPref.visibleContent,
    custom: newPref.custom !== void 0 ? newPref.custom : oldPref.custom
  };
};
var ModalContentLayout = function(_a) {
  var left = _a.left, right = _a.right;
  var _b = useContainerBreakpoints(["xs"]), breakpoint = _b[0], ref = _b[1];
  var smallContainer = breakpoint === "default";
  if (smallContainer) {
    return import_react3.default.createElement(
      "div",
      { ref },
      import_react3.default.createElement("div", null, left),
      right && import_react3.default.createElement("div", { className: styles_css_default3["second-column-small"] }, right)
    );
  }
  var columns = right ? 2 : 1;
  return import_react3.default.createElement(
    "div",
    { ref },
    import_react3.default.createElement(
      internal_default4,
      { columns, variant: "text-grid" },
      import_react3.default.createElement("div", null, left),
      right && import_react3.default.createElement("div", null, right)
    )
  );
};
var PageSizePreference = function(_a) {
  var title = _a.title, options = _a.options, value = _a.value, onChange = _a.onChange;
  return import_react3.default.createElement(
    "div",
    { className: styles_css_default3["page-size"] },
    import_react3.default.createElement(
      InternalFormField,
      { label: title, stretch: true, className: styles_css_default3["page-size-form-field"] },
      import_react3.default.createElement(internal_default3, { className: styles_css_default3["page-size-radio-group"], value: "".concat(value), items: options.map(function(_a2) {
        var label = _a2.label, value2 = _a2.value;
        return { label, value: "".concat(value2) };
      }), onChange: function(_a2) {
        var detail = _a2.detail;
        return onChange(parseInt(detail.value, 10));
      } })
    )
  );
};
var WrapLinesPreference = function(_a) {
  var label = _a.label, description = _a.description, value = _a.value, onChange = _a.onChange;
  return import_react3.default.createElement(internal_default2, { checked: !!value, description, onChange: function(_a2) {
    var detail = _a2.detail;
    return onChange(detail.checked);
  }, className: styles_css_default3["wrap-lines"] }, label);
};
var CustomPreference = function(_a) {
  var value = _a.value, customPreference = _a.customPreference, onChange = _a.onChange;
  var _b = (0, import_react3.useState)(value), customState = _b[0], setCustomState = _b[1];
  if (customPreference) {
    return import_react3.default.createElement("div", { className: styles_css_default3.custom }, customPreference(customState, function(value2) {
      setCustomState(function() {
        return value2;
      });
      onChange(value2);
    }));
  }
  return null;
};

// node_modules/@cloudscape-design/components/collection-preferences/visible-content.js
var import_react5 = __toESM(require_react());

// node_modules/@cloudscape-design/components/toggle/internal.js
init_clsx_m();
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/toggle/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/toggle/styles.scoped.css";
var styles_css_default4 = {
  "root": "awsui_root_4yi2u_sykyg_93",
  "outline": "awsui_outline_4yi2u_sykyg_105",
  "toggle-control": "awsui_toggle-control_4yi2u_sykyg_124",
  "toggle-control-checked": "awsui_toggle-control-checked_4yi2u_sykyg_133",
  "toggle-control-disabled": "awsui_toggle-control-disabled_4yi2u_sykyg_136",
  "toggle-handle": "awsui_toggle-handle_4yi2u_sykyg_143",
  "toggle-handle-checked": "awsui_toggle-handle-checked_4yi2u_sykyg_155",
  "toggle-handle-disabled": "awsui_toggle-handle-disabled_4yi2u_sykyg_158"
};

// node_modules/@cloudscape-design/components/toggle/internal.js
var InternalToggle = import_react4.default.forwardRef(function(_a, ref) {
  var _b, _c;
  var controlId = _a.controlId, checked = _a.checked, name = _a.name, disabled = _a.disabled, children = _a.children, description = _a.description, ariaLabel = _a.ariaLabel, onFocus = _a.onFocus, onBlur = _a.onBlur, onChange = _a.onChange, _d = _a.__internalRootRef, __internalRootRef = _d === void 0 ? null : _d, rest = __rest(_a, ["controlId", "checked", "name", "disabled", "children", "description", "ariaLabel", "onFocus", "onBlur", "onChange", "__internalRootRef"]);
  var _e = useFormFieldContext(rest), ariaDescribedby = _e.ariaDescribedby, ariaLabelledby = _e.ariaLabelledby;
  var baseProps = getBaseProps(rest);
  var checkboxRef = (0, import_react4.useRef)(null);
  useForwardFocus(ref, checkboxRef);
  return import_react4.default.createElement(AbstractSwitch, __assign({}, baseProps, { className: clsx_m_default(styles_css_default4.root, baseProps.className), controlClassName: clsx_m_default(styles_css_default4["toggle-control"], (_b = {}, _b[styles_css_default4["toggle-control-checked"]] = checked, _b[styles_css_default4["toggle-control-disabled"]] = disabled, _b)), outlineClassName: styles_css_default4.outline, controlId, disabled, label: children, description, descriptionBottomPadding: true, ariaLabel, ariaLabelledby, ariaDescribedby, nativeControl: function(nativeControlProps) {
    return import_react4.default.createElement("input", __assign({}, nativeControlProps, {
      ref: checkboxRef,
      type: "checkbox",
      checked,
      name,
      onFocus: function() {
        return fireNonCancelableEvent(onFocus);
      },
      onBlur: function() {
        return fireNonCancelableEvent(onBlur);
      },
      onChange: function() {
      }
    }));
  }, onClick: function() {
    var _a2;
    (_a2 = checkboxRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    fireNonCancelableEvent(onChange, { checked: !checked });
  }, styledControl: import_react4.default.createElement("span", { className: clsx_m_default(styles_css_default4["toggle-handle"], (_c = {}, _c[styles_css_default4["toggle-handle-checked"]] = checked, _c[styles_css_default4["toggle-handle-disabled"]] = disabled, _c)) }), __internalRootRef }));
});
var internal_default5 = InternalToggle;

// node_modules/@cloudscape-design/components/collection-preferences/visible-content.js
var isVisible = function(id, visibleIds) {
  return visibleIds.indexOf(id) !== -1;
};
var className = function(suffix) {
  return {
    className: styles_css_default3["visible-content-".concat(suffix)]
  };
};
function VisibleContentPreference(_a) {
  var title = _a.title, options = _a.options, _b = _a.value, value = _b === void 0 ? [] : _b, onChange = _a.onChange;
  var idPrefix = useUniqueId("visible-content");
  var flatOptionsIds = options.reduce(function(ids, group) {
    return __spreadArray(__spreadArray([], ids, true), group.options.reduce(function(groupIds, option) {
      return __spreadArray(__spreadArray([], groupIds, true), [option.id], false);
    }, []), true);
  }, []);
  var onToggle = function(id) {
    if (!isVisible(id, value)) {
      onChange(__spreadArray(__spreadArray([], value, true), [id], false).sort(function(firstId, secondId) {
        return flatOptionsIds.indexOf(firstId) - flatOptionsIds.indexOf(secondId);
      }));
    } else {
      onChange(value.filter(function(currentId) {
        return currentId !== id;
      }));
    }
  };
  var selectionOption = function(option, optionGroupIndex, optionIndex) {
    var labelId = "".concat(idPrefix, "-").concat(optionGroupIndex, "-").concat(optionIndex);
    return import_react5.default.createElement(
      "div",
      __assign({ key: optionIndex }, className("option")),
      import_react5.default.createElement("label", __assign({}, className("option-label"), { htmlFor: labelId }), option.label),
      import_react5.default.createElement(
        "div",
        __assign({}, className("toggle")),
        import_react5.default.createElement(internal_default5, { checked: isVisible(option.id, value), onChange: function() {
          return onToggle(option.id);
        }, disabled: option.editable === false, controlId: labelId })
      )
    );
  };
  var outerGroupLabelId = "".concat(idPrefix, "-outer");
  return import_react5.default.createElement(
    "div",
    { className: styles_css_default3["visible-content"] },
    import_react5.default.createElement("div", __assign({}, className("title"), { id: outerGroupLabelId }), title),
    import_react5.default.createElement(InternalSpaceBetween, __assign({}, className("groups"), { size: "xs" }), options.map(function(optionGroup, optionGroupIndex) {
      var groupLabelId = "".concat(idPrefix, "-").concat(optionGroupIndex);
      return import_react5.default.createElement(
        "div",
        __assign({ key: optionGroupIndex }, className("group"), { role: "group", "aria-labelledby": "".concat(outerGroupLabelId, " ").concat(groupLabelId) }),
        import_react5.default.createElement("div", __assign({}, className("group-label"), { id: groupLabelId }), optionGroup.label),
        import_react5.default.createElement("div", null, optionGroup.options.map(function(option, optionIndex) {
          return selectionOption(option, optionGroupIndex, optionIndex);
        }))
      );
    }))
  );
}

// node_modules/@cloudscape-design/components/internal/hooks/check-controlled/index.js
function checkControlled(componentName, propertyName, propertyValue, handlerName, handlerValue) {
  if (propertyValue !== void 0 && handlerValue === void 0 && isDevelopment) {
    warnOnce(componentName, "You provided `".concat(propertyName, "` prop without an `").concat(handlerName, "` handler. This will render a read-only component. If the component should be mutable, set an `").concat(handlerName, "` handler."));
  }
}

// node_modules/@cloudscape-design/components/collection-preferences/index.js
var ModalContent = function(_a) {
  var _b = _a.preferences, preferences = _b === void 0 ? {} : _b, pageSizePreference = _a.pageSizePreference, wrapLinesPreference = _a.wrapLinesPreference, customPreference = _a.customPreference, visibleContentPreference = _a.visibleContentPreference, onChange = _a.onChange;
  if (!visibleContentPreference && !pageSizePreference && !wrapLinesPreference && customPreference) {
    return import_react6.default.createElement(CustomPreference, { value: preferences.custom, customPreference, onChange: function(custom) {
      return onChange({ custom });
    } });
  }
  return import_react6.default.createElement(ModalContentLayout, { left: import_react6.default.createElement(
    InternalSpaceBetween,
    { size: "l" },
    pageSizePreference && import_react6.default.createElement(PageSizePreference, __assign({ value: preferences.pageSize }, pageSizePreference, { onChange: function(pageSize) {
      return onChange({ pageSize });
    } })),
    wrapLinesPreference && import_react6.default.createElement(WrapLinesPreference, __assign({ value: preferences.wrapLines }, wrapLinesPreference, { onChange: function(wrapLines) {
      return onChange({ wrapLines });
    } })),
    customPreference && import_react6.default.createElement(CustomPreference, { value: preferences.custom, customPreference, onChange: function(custom) {
      return onChange({ custom });
    } })
  ), right: visibleContentPreference && import_react6.default.createElement(VisibleContentPreference, __assign({ value: preferences.visibleContent }, visibleContentPreference, { onChange: function(visibleContent) {
    return onChange({ visibleContent });
  } })) });
};
function CollectionPreferences(_a) {
  var title = _a.title, confirmLabel = _a.confirmLabel, cancelLabel = _a.cancelLabel, _b = _a.disabled, disabled = _b === void 0 ? false : _b, onConfirm = _a.onConfirm, onCancel = _a.onCancel, visibleContentPreference = _a.visibleContentPreference, pageSizePreference = _a.pageSizePreference, wrapLinesPreference = _a.wrapLinesPreference, preferences = _a.preferences, customPreference = _a.customPreference, rest = __rest(_a, ["title", "confirmLabel", "cancelLabel", "disabled", "onConfirm", "onCancel", "visibleContentPreference", "pageSizePreference", "wrapLinesPreference", "preferences", "customPreference"]);
  var __internalRootRef = useBaseComponent("CollectionPreferences").__internalRootRef;
  checkControlled("CollectioPreferences", "preferences", preferences, "onConfirm", onConfirm);
  var baseProps = getBaseProps(rest);
  var _c = (0, import_react6.useState)(false), modalVisible = _c[0], setModalVisible = _c[1];
  var _d = (0, import_react6.useState)(copyPreferences(preferences || {})), temporaryPreferences = _d[0], setTemporaryPreferences = _d[1];
  var triggerRef = (0, import_react6.useRef)(null);
  var dialogPreviouslyOpen = (0, import_react6.useRef)(false);
  (0, import_react6.useEffect)(function() {
    if (!modalVisible) {
      dialogPreviouslyOpen.current && triggerRef.current && triggerRef.current.focus();
    } else {
      dialogPreviouslyOpen.current = true;
    }
  }, [modalVisible]);
  var onConfirmListener = function() {
    setModalVisible(false);
    fireNonCancelableEvent(onConfirm, temporaryPreferences);
  };
  var onCancelListener = function() {
    fireNonCancelableEvent(onCancel, {});
    setModalVisible(false);
    setTemporaryPreferences(copyPreferences(preferences || {}));
  };
  return import_react6.default.createElement(
    "div",
    __assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default3.root), ref: __internalRootRef }),
    import_react6.default.createElement(InternalButton, { ref: triggerRef, className: styles_css_default3["trigger-button"], disabled, ariaLabel: title, onClick: function() {
      setTemporaryPreferences(copyPreferences(preferences || {}));
      setModalVisible(true);
    }, variant: "icon", iconName: "settings", formAction: "none" }),
    !disabled && modalVisible && import_react6.default.createElement(
      InternalModal,
      { className: styles_css_default3["modal-root"], visible: true, header: title, footer: import_react6.default.createElement(
        InternalBox,
        { float: "right" },
        import_react6.default.createElement(
          InternalSpaceBetween,
          { direction: "horizontal", size: "xs" },
          import_react6.default.createElement(InternalButton, { className: styles_css_default3["cancel-button"], variant: "link", formAction: "none", onClick: onCancelListener }, cancelLabel),
          import_react6.default.createElement(InternalButton, { className: styles_css_default3["confirm-button"], variant: "primary", formAction: "none", onClick: onConfirmListener }, confirmLabel)
        )
      ), closeAriaLabel: cancelLabel, size: "large", onDismiss: onCancelListener },
      import_react6.default.createElement(ModalContent, { preferences: temporaryPreferences, visibleContentPreference, pageSizePreference, wrapLinesPreference, customPreference, onChange: function(changedPreferences) {
        return setTemporaryPreferences(mergePreferences(changedPreferences, temporaryPreferences));
      } })
    )
  );
}
applyDisplayName(CollectionPreferences, "CollectionPreferences");

export {
  checkControlled,
  COLUMN_TRIGGERS,
  internal_default4 as internal_default,
  InternalModal,
  internal_default5 as internal_default2,
  CollectionPreferences
};
//# sourceMappingURL=chunk-4MGK5DLL.js.map

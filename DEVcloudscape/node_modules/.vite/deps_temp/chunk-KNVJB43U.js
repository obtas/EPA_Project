import {
  useFormFieldContext
} from "./chunk-7IV6ODOI.js";
import {
  fireKeyboardEvent,
  fireNonCancelableEvent
} from "./chunk-7TBDUUWV.js";
import {
  internal_default
} from "./chunk-XYE4ILSB.js";
import {
  useMergeRefs
} from "./chunk-EZZ3SG55.js";
import {
  __assign,
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  init_clsx_m,
  useBaseComponent
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/input/index.js
init_clsx_m();
var import_react4 = __toESM(require_react());

// node_modules/@cloudscape-design/components/input/internal.js
var import_react3 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/input/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/input/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_2rhyz_dvvio_93",
  "input": "awsui_input_2rhyz_dvvio_97",
  "input-readonly": "awsui_input-readonly_2rhyz_dvvio_118",
  "input-invalid": "awsui_input-invalid_2rhyz_dvvio_179",
  "input-has-icon-left": "awsui_input-has-icon-left_2rhyz_dvvio_190",
  "input-type-search": "awsui_input-type-search_2rhyz_dvvio_195",
  "input-has-icon-right": "awsui_input-has-icon-right_2rhyz_dvvio_211",
  "input-has-no-border-radius": "awsui_input-has-no-border-radius_2rhyz_dvvio_214",
  "input-container": "awsui_input-container_2rhyz_dvvio_218",
  "input-icon": "awsui_input-icon_2rhyz_dvvio_223",
  "input-icon-hoverable": "awsui_input-icon-hoverable_2rhyz_dvvio_226",
  "input-icon-left": "awsui_input-icon-left_2rhyz_dvvio_230",
  "input-icon-right": "awsui_input-icon-right_2rhyz_dvvio_235"
};

// node_modules/@cloudscape-design/components/input/utils.js
var import_react = __toESM(require_react());
var useSearchProps = function(type, disabled, readOnly, value, inputRef, onChange) {
  var searchProps = {};
  var handleIconClick = (0, import_react.useCallback)(function() {
    var _a;
    (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    onChange("");
  }, [inputRef, onChange]);
  if (type === "search" || type === "visualSearch") {
    searchProps.__leftIcon = "search";
    if (!disabled && !readOnly && value) {
      searchProps.__rightIcon = "close";
      searchProps.__onRightIconClick = handleIconClick;
    }
  }
  return searchProps;
};
var convertAutoComplete = function(propertyValue) {
  if (propertyValue === void 0) {
    propertyValue = false;
  }
  if (propertyValue === true) {
    return "on";
  }
  return propertyValue || "off";
};

// node_modules/@cloudscape-design/components/internal/hooks/use-debounce-callback/index.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/debounce.js
var DEBOUNCE_DEFAULT_DELAY = 200;
function debounce(func, delay) {
  if (delay === void 0) {
    delay = DEBOUNCE_DEFAULT_DELAY;
  }
  var timeout;
  return function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (timeout) {
      clearTimeout(timeout);
    }
    timeout = setTimeout(function() {
      timeout = null;
      func.apply(void 0, args);
    }, delay);
  };
}

// node_modules/@cloudscape-design/components/internal/hooks/use-debounce-callback/index.js
function useDebounceCallback(callback, delay) {
  var callbackRef = (0, import_react2.useRef)();
  callbackRef.current = callback;
  return (0, import_react2.useCallback)(debounce(function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (callbackRef.current) {
      callbackRef.current.apply(callbackRef, args);
    }
  }, delay), []);
}

// node_modules/@cloudscape-design/components/input/internal.js
var iconClassName = function(position, hasHandler) {
  var _a;
  return clsx_m_default(styles_css_default["input-icon"], styles_css_default["input-icon-".concat(position)], (_a = {}, _a[styles_css_default["input-icon-hoverable"]] = hasHandler, _a));
};
var preventMouseDown = function(e) {
  return e.preventDefault();
};
function InternalInput(_a, ref) {
  var _b;
  var _c = _a.type, type = _c === void 0 ? "text" : _c, step = _a.step, inputMode = _a.inputMode, _d = _a.autoComplete, autoComplete = _d === void 0 ? true : _d, ariaLabel = _a.ariaLabel, name = _a.name, value = _a.value, placeholder = _a.placeholder, autoFocus = _a.autoFocus, disabled = _a.disabled, readOnly = _a.readOnly, disableBrowserAutocorrect = _a.disableBrowserAutocorrect, spellcheck = _a.spellcheck, __noBorderRadius = _a.__noBorderRadius, __leftIcon = _a.__leftIcon, _e = _a.__leftIconVariant, __leftIconVariant = _e === void 0 ? "subtle" : _e, __onLeftIconClick = _a.__onLeftIconClick, ariaRequired = _a.ariaRequired, __rightIcon = _a.__rightIcon, _f = _a.__rightIconVariant, __rightIconVariant = _f === void 0 ? "normal" : _f, __onRightIconClick = _a.__onRightIconClick, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onChange = _a.onChange, __onDelayedInput = _a.__onDelayedInput, __onBlurWithDetail = _a.__onBlurWithDetail, onBlur = _a.onBlur, onFocus = _a.onFocus, __nativeAttributes = _a.__nativeAttributes, __internalRootRef = _a.__internalRootRef, __inheritFormFieldProps = _a.__inheritFormFieldProps, rest = __rest(_a, ["type", "step", "inputMode", "autoComplete", "ariaLabel", "name", "value", "placeholder", "autoFocus", "disabled", "readOnly", "disableBrowserAutocorrect", "spellcheck", "__noBorderRadius", "__leftIcon", "__leftIconVariant", "__onLeftIconClick", "ariaRequired", "__rightIcon", "__rightIconVariant", "__onRightIconClick", "onKeyDown", "onKeyUp", "onChange", "__onDelayedInput", "__onBlurWithDetail", "onBlur", "onFocus", "__nativeAttributes", "__internalRootRef", "__inheritFormFieldProps"]);
  var baseProps = getBaseProps(rest);
  var fireDelayedInput = useDebounceCallback(function(value2) {
    return fireNonCancelableEvent(__onDelayedInput, { value: value2 });
  });
  var handleChange = function(value2) {
    fireDelayedInput(value2);
    fireNonCancelableEvent(onChange, { value: value2 });
  };
  var inputRef = (0, import_react3.useRef)(null);
  var searchProps = useSearchProps(type, disabled, readOnly, value, inputRef, handleChange);
  __leftIcon = __leftIcon !== null && __leftIcon !== void 0 ? __leftIcon : searchProps.__leftIcon;
  __rightIcon = __rightIcon !== null && __rightIcon !== void 0 ? __rightIcon : searchProps.__rightIcon;
  __onRightIconClick = __onRightIconClick !== null && __onRightIconClick !== void 0 ? __onRightIconClick : searchProps.__onRightIconClick;
  var formFieldContext = useFormFieldContext(rest);
  var _g = __inheritFormFieldProps ? formFieldContext : rest, ariaLabelledby = _g.ariaLabelledby, ariaDescribedby = _g.ariaDescribedby, controlId = _g.controlId, invalid = _g.invalid;
  var attributes = __assign({
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    "aria-describedby": ariaDescribedby,
    name,
    placeholder,
    autoFocus,
    id: controlId,
    className: clsx_m_default(styles_css_default.input, type && styles_css_default["input-type-".concat(type)], __rightIcon && styles_css_default["input-has-icon-right"], __leftIcon && styles_css_default["input-has-icon-left"], __noBorderRadius && styles_css_default["input-has-no-border-radius"], (_b = {}, _b[styles_css_default["input-readonly"]] = readOnly, _b[styles_css_default["input-invalid"]] = invalid, _b)),
    autoComplete: convertAutoComplete(autoComplete),
    disabled,
    readOnly,
    type,
    step,
    inputMode,
    spellCheck: spellcheck,
    onKeyDown: onKeyDown && function(event) {
      return fireKeyboardEvent(onKeyDown, event);
    },
    onKeyUp: onKeyUp && function(event) {
      return fireKeyboardEvent(onKeyUp, event);
    },
    value: value !== null && value !== void 0 ? value : "",
    onChange: onChange && function(event) {
      return handleChange(event.target.value);
    },
    onBlur: function(e) {
      onBlur && fireNonCancelableEvent(onBlur);
      __onBlurWithDetail && fireNonCancelableEvent(__onBlurWithDetail, { relatedTarget: e.relatedTarget });
    },
    onFocus: onFocus && function() {
      return fireNonCancelableEvent(onFocus);
    }
  }, __nativeAttributes);
  if (type === "number") {
    attributes.onWheel = function(event) {
      return event.currentTarget.blur();
    };
  }
  if (disableBrowserAutocorrect) {
    attributes.autoCorrect = "off";
    attributes.autoCapitalize = "off";
  }
  if (ariaRequired) {
    attributes["aria-required"] = "true";
  }
  if (invalid) {
    attributes["aria-invalid"] = "true";
  }
  var mergedRef = useMergeRefs(ref, inputRef);
  if (attributes.type === "visualSearch") {
    attributes.type = "text";
  }
  return import_react3.default.createElement(
    "div",
    __assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default["input-container"]), ref: __internalRootRef }),
    __leftIcon && import_react3.default.createElement(
      "span",
      { onClick: __onLeftIconClick, className: iconClassName("left", !!__onLeftIconClick) },
      import_react3.default.createElement(internal_default, { name: __leftIcon, variant: disabled ? "disabled" : __leftIconVariant })
    ),
    import_react3.default.createElement("input", __assign({ ref: mergedRef }, attributes)),
    __rightIcon && import_react3.default.createElement(
      "span",
      { onClick: __onRightIconClick, onMouseDown: preventMouseDown, className: iconClassName("right", !!__onRightIconClick) },
      import_react3.default.createElement(internal_default, { name: __rightIcon, variant: disabled ? "disabled" : __rightIconVariant })
    )
  );
}
var internal_default2 = import_react3.default.forwardRef(InternalInput);

// node_modules/@cloudscape-design/components/input/index.js
var Input = import_react4.default.forwardRef(function(_a, ref) {
  var value = _a.value, _b = _a.type, type = _b === void 0 ? "text" : _b, step = _a.step, inputMode = _a.inputMode, _c = _a.autoComplete, autoComplete = _c === void 0 ? true : _c, spellcheck = _a.spellcheck, disabled = _a.disabled, readOnly = _a.readOnly, disableBrowserAutocorrect = _a.disableBrowserAutocorrect, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onChange = _a.onChange, onBlur = _a.onBlur, onFocus = _a.onFocus, ariaRequired = _a.ariaRequired, name = _a.name, placeholder = _a.placeholder, autoFocus = _a.autoFocus, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, invalid = _a.invalid, controlId = _a.controlId, rest = __rest(_a, ["value", "type", "step", "inputMode", "autoComplete", "spellcheck", "disabled", "readOnly", "disableBrowserAutocorrect", "onKeyDown", "onKeyUp", "onChange", "onBlur", "onFocus", "ariaRequired", "name", "placeholder", "autoFocus", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "invalid", "controlId"]);
  var baseComponentProps = useBaseComponent("Input");
  var baseProps = getBaseProps(rest);
  var inputRef = (0, import_react4.useRef)(null);
  (0, import_react4.useImperativeHandle)(ref, function() {
    return {
      focus: function() {
        var _a2;
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus.apply(_a2, args);
      },
      select: function() {
        var _a2;
        (_a2 = inputRef.current) === null || _a2 === void 0 ? void 0 : _a2.select();
      }
    };
  }, [inputRef]);
  return import_react4.default.createElement(internal_default2, __assign({ ref: inputRef }, __assign(__assign(__assign({}, baseProps), baseComponentProps), { autoComplete, ariaLabel, ariaRequired, autoFocus, disabled, disableBrowserAutocorrect, name, onKeyDown, onKeyUp, onChange, onBlur, onFocus, placeholder, readOnly, type, step, inputMode, spellcheck, value, ariaDescribedby, ariaLabelledby, invalid, controlId }), { className: clsx_m_default(styles_css_default.root, baseProps.className), __inheritFormFieldProps: true }));
});
applyDisplayName(Input, "Input");
var input_default = Input;

export {
  useDebounceCallback,
  convertAutoComplete,
  internal_default2 as internal_default,
  input_default
};
//# sourceMappingURL=chunk-KNVJB43U.js.map

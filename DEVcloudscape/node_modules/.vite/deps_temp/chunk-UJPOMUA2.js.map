{
  "version": 3,
  "sources": ["../../src/content-layout/index.tsx", "../../@cloudscape-design/components/content-layout/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext, useRef } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from '../app-layout/visual-refresh/context';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ContentLayoutProps } from './interfaces';\nimport { getBaseProps } from '../internal/base-component';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useDynamicOverlap } from '../app-layout/visual-refresh/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\n\nexport { ContentLayoutProps };\n\nexport default function ContentLayout({ children, disableOverlap, header, ...rest }: ContentLayoutProps) {\n  const baseProps = getBaseProps(rest);\n  const { breadcrumbs } = useContext(AppLayoutContext);\n\n  const rootElement = useRef<HTMLDivElement>(null);\n  const { __internalRootRef } = useBaseComponent('ContentLayout');\n  const mergedRef = useMergeRefs(rootElement, __internalRootRef);\n  const overlapElement = useDynamicOverlap();\n  const isVisualRefresh = useVisualRefresh();\n\n  /**\n   * Disable the overlap if the component is missing either a header or child\n   * content. If the component is not using visual refresh then the overlap\n   * will not be displayed at all. This is handled in the CSS not the JavaScript.\n   */\n  const isOverlapDisabled = !children || !header || disableOverlap;\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.layout, {\n        [styles['is-overlap-disabled']]: isOverlapDisabled,\n        [styles['is-visual-refresh']]: isVisualRefresh,\n      })}\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(\n          styles.background,\n          { [styles['is-overlap-disabled']]: isOverlapDisabled },\n          'awsui-context-content-header'\n        )}\n        ref={overlapElement}\n      />\n\n      {header && (\n        <div\n          className={clsx(styles.header, { [styles['has-breadcrumbs']]: breadcrumbs }, 'awsui-context-content-header')}\n        >\n          {header}\n        </div>\n      )}\n\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n}\n\napplyDisplayName(ContentLayout, 'ContentLayout');\n", "\n    import './styles.scoped.css';\n    export default {\n  \"layout\": \"awsui_layout_5gtk3_1onm4_99\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_5gtk3_1onm4_99\",\n  \"background\": \"awsui_background_5gtk3_1onm4_102\",\n  \"header\": \"awsui_header_5gtk3_1onm4_105\",\n  \"is-overlap-disabled\": \"awsui_is-overlap-disabled_5gtk3_1onm4_115\",\n  \"has-breadcrumbs\": \"awsui_has-breadcrumbs_5gtk3_1onm4_132\",\n  \"content\": \"awsui_content_5gtk3_1onm4_141\"\n};\n  "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,mBAA0C;AAC1C;;;ACFI,OAAO;AACP,IAAO,qBAAQ;AAAA,EACjB,UAAU;AAAA,EACV,qBAAqB;AAAA,EACrB,cAAc;AAAA,EACd,UAAU;AAAA,EACV,uBAAuB;AAAA,EACvB,mBAAmB;AAAA,EACnB,WAAW;AACb;;;ADMc,SAAP,cAA+B,IAAiE;;AAA/D,MAAA,WAAQ,GAAA,UAAE,iBAAc,GAAA,gBAAE,SAAM,GAAA,QAAK,OAAI,OAAA,IAA3C,CAAA,YAAA,kBAAA,QAAA,CAA6C;AACjF,MAAM,YAAY,aAAa,IAAI;AAC3B,MAAA,kBAAgB,yBAAW,gBAAgB,EAAC;AAEpD,MAAM,kBAAc,qBAAuB,IAAI;AACvC,MAAA,oBAAsB,iBAAiB,eAAe,EAAC;AAC/D,MAAM,YAAY,aAAa,aAAa,iBAAiB;AAC7D,MAAM,iBAAiB,kBAAiB;AACxC,MAAM,kBAAkB,iBAAgB;AAOxC,MAAM,oBAAoB,CAAC,YAAY,CAAC,UAAU;AAElD,SACE,aAAAA,QAAA;IAAA;IAAA,SAAA,CAAA,GACM,WAAS,EACb,WAAW,eAAK,UAAU,WAAW,mBAAO,SAAM,KAAA,CAAA,GAChD,GAAC,mBAAO,0BAAyB,mBACjC,GAAC,mBAAO,wBAAuB,uBAEjC,KAAK,UAAS,CAAA;IAEd,aAAAA,QAAA,cAAA,OAAA,EACE,WAAW,eACT,mBAAO,aAAU,KAAA,CAAA,GACf,GAAC,mBAAO,0BAAyB,mBAAiB,KACpD,8BAA8B,GAEhC,KAAK,eAAc,CAAA;IAGpB,UACC,aAAAA,QAAA,cAAA,OAAA,EACE,WAAW,eAAK,mBAAO,SAAM,KAAA,CAAA,GAAI,GAAC,mBAAO,sBAAqB,aAAW,KAAI,8BAA8B,EAAC,GAE3G,MAAM;IAIX,aAAAA,QAAA,cAAA,OAAA,EAAK,WAAW,mBAAO,QAAO,GAAG,QAAQ;EAAO;AAGtD;AAEA,iBAAiB,eAAe,eAAe;",
  "names": ["React"]
}

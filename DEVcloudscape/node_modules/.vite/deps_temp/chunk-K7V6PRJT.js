import {
  Portal,
  getFirstFocusable,
  getLastFocusable
} from "./chunk-MVRRTG7G.js";
import {
  useVisualContext
} from "./chunk-GTS6H5YQ.js";
import {
  useUniqueId
} from "./chunk-PFODBZPR.js";
import {
  getOverflowParentDimensions,
  getOverflowParents
} from "./chunk-ZNRLVYB4.js";
import {
  Transition
} from "./chunk-7ETUUVGM.js";
import {
  InternalButton
} from "./chunk-BX32VQUV.js";
import {
  checkSafeUrl
} from "./chunk-NEL4RAJ2.js";
import {
  useForwardFocus
} from "./chunk-CWU6G4BO.js";
import {
  KeyCode
} from "./chunk-GKBIUDXI.js";
import {
  fireCancelableEvent,
  fireKeyboardEvent,
  fireNonCancelableEvent,
  isPlainLeftClick
} from "./chunk-7TBDUUWV.js";
import {
  internal_default
} from "./chunk-XYE4ILSB.js";
import {
  useResizeObserver
} from "./chunk-FBPNVVYB.js";
import {
  useMergeRefs
} from "./chunk-EZZ3SG55.js";
import {
  useMobile
} from "./chunk-LHKG36BJ.js";
import {
  findUpUntil,
  getContainingBlock,
  nodeContains,
  useCurrentMode,
  useDensityMode,
  useReducedMotion,
  useVisualRefresh
} from "./chunk-4EXFA7SU.js";
import {
  require_react_dom
} from "./chunk-GH7Z2EUS.js";
import {
  InternalBox
} from "./chunk-25NRRZIH.js";
import {
  __assign,
  __rest,
  __spreadArray,
  clsx_m_default,
  getBaseProps,
  init_clsx_m
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/tab-trap/index.js
var import_react = __toESM(require_react());
function TabTrap(_a) {
  var focusNextCallback = _a.focusNextCallback, _b = _a.disabled, disabled = _b === void 0 ? false : _b;
  return import_react.default.createElement("div", { tabIndex: disabled ? -1 : 0, onFocus: focusNextCallback });
}

// node_modules/@cloudscape-design/components/internal/components/focus-lock/index.js
function FocusLock(_a) {
  var className = _a.className, disabled = _a.disabled, autoFocus = _a.autoFocus, children = _a.children;
  var containerRef = (0, import_react2.useRef)(null);
  var focusFirst = function() {
    var _a2;
    if (containerRef.current) {
      (_a2 = getFirstFocusable(containerRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  };
  var focusLast = function() {
    var _a2;
    if (containerRef.current) {
      (_a2 = getLastFocusable(containerRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  };
  (0, import_react2.useEffect)(function() {
    if (autoFocus) {
      focusFirst();
    }
  }, [autoFocus]);
  return import_react2.default.createElement(
    import_react2.default.Fragment,
    null,
    import_react2.default.createElement(TabTrap, { disabled, focusNextCallback: focusLast }),
    import_react2.default.createElement("div", { className, ref: containerRef }, children),
    import_react2.default.createElement(TabTrap, { disabled, focusNextCallback: focusFirst })
  );
}

// node_modules/@cloudscape-design/components/internal/components/dropdown/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/internal/components/dropdown/styles.scoped.css";
var styles_css_default = {
  "dropdown-content-wrapper": "awsui_dropdown-content-wrapper_qwoo0_1aum0_93",
  "awsui-motion-fade-in-dropdown": "awsui_awsui-motion-fade-in-dropdown_qwoo0_1aum0_1",
  "refresh": "awsui_refresh_qwoo0_1aum0_114",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_qwoo0_1aum0_1",
  "root": "awsui_root_qwoo0_1aum0_143",
  "interior": "awsui_interior_qwoo0_1aum0_155",
  "dropdown": "awsui_dropdown_qwoo0_1aum0_93",
  "use-portal": "awsui_use-portal_qwoo0_1aum0_166",
  "dropdown-drop-up": "awsui_dropdown-drop-up_qwoo0_1aum0_211",
  "with-limited-width": "awsui_with-limited-width_qwoo0_1aum0_215",
  "dropdown-drop-left": "awsui_dropdown-drop-left_qwoo0_1aum0_218",
  "dropdown-drop-right": "awsui_dropdown-drop-right_qwoo0_1aum0_221",
  "occupy-entire-width": "awsui_occupy-entire-width_qwoo0_1aum0_224",
  "hide-upper-border": "awsui_hide-upper-border_qwoo0_1aum0_227",
  "open": "awsui_open_qwoo0_1aum0_234",
  "nowrap": "awsui_nowrap_qwoo0_1aum0_243",
  "is-empty": "awsui_is-empty_qwoo0_1aum0_247",
  "dropdown-content": "awsui_dropdown-content_qwoo0_1aum0_93",
  "ie11-wrapper": "awsui_ie11-wrapper_qwoo0_1aum0_257",
  "stretch-trigger-height": "awsui_stretch-trigger-height_qwoo0_1aum0_261"
};

// node_modules/@cloudscape-design/components/internal/components/dropdown/index.js
init_clsx_m();
var import_react4 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@cloudscape-design/components/internal/components/dropdown/dropdown-fit-handler.js
var AVAILABLE_SPACE_RESERVE_DEFAULT = 50;
var AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL = 19;
var AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL = 20;
var getClosestParentDimensions = function(element) {
  var parents = getOverflowParents(element).map(function(el) {
    var _a = el.getBoundingClientRect(), height = _a.height, width = _a.width, top = _a.top, left = _a.left;
    return {
      height,
      width,
      top,
      left
    };
  });
  return parents.shift();
};
var getAvailableSpace = function(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile) {
  if (stretchWidth === void 0) {
    stretchWidth = false;
  }
  if (stretchHeight === void 0) {
    stretchHeight = false;
  }
  var availableSpaceReserveVertical = stretchHeight ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  var availableSpaceReserveHorizontal = stretchWidth ? 0 : isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerLeft = _a.left, triggerRight = _a.right;
  return overflowParents.reduce(function(_a2, overflowParent) {
    var above = _a2.above, below = _a2.below, left = _a2.left, right = _a2.right;
    var offsetTop = triggerBottom - overflowParent.top;
    var currentAbove = offsetTop - trigger.offsetHeight - availableSpaceReserveVertical;
    var currentBelow = overflowParent.height - offsetTop - availableSpaceReserveVertical;
    var currentLeft = triggerRight - overflowParent.left - availableSpaceReserveHorizontal;
    var currentRight = overflowParent.left + overflowParent.width - triggerLeft - availableSpaceReserveHorizontal;
    return {
      above: Math.min(above, currentAbove),
      below: Math.min(below, currentBelow),
      left: Math.min(left, currentLeft),
      right: Math.min(right, currentRight)
    };
  }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });
};
var getInteriorAvailableSpace = function(trigger, dropdown, overflowParents, isMobile) {
  var AVAILABLE_SPACE_RESERVE_VERTICAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_VERTICAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  var AVAILABLE_SPACE_RESERVE_HORIZONTAL = isMobile ? AVAILABLE_SPACE_RESERVE_MOBILE_HORIZONTAL : AVAILABLE_SPACE_RESERVE_DEFAULT;
  var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerTop = _a.top, triggerLeft = _a.left, triggerRight = _a.right;
  return overflowParents.reduce(function(_a2, overflowParent) {
    var above = _a2.above, below = _a2.below, left = _a2.left, right = _a2.right;
    var currentAbove = triggerBottom - overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;
    var currentBelow = overflowParent.height - triggerTop + overflowParent.top - AVAILABLE_SPACE_RESERVE_VERTICAL;
    var currentLeft = triggerLeft - overflowParent.left - AVAILABLE_SPACE_RESERVE_HORIZONTAL;
    var currentRight = overflowParent.left + overflowParent.width - triggerRight - AVAILABLE_SPACE_RESERVE_HORIZONTAL;
    return {
      above: Math.min(above, currentAbove),
      below: Math.min(below, currentBelow),
      left: Math.min(left, currentLeft),
      right: Math.min(right, currentRight)
    };
  }, { above: Number.MAX_VALUE, below: Number.MAX_VALUE, left: Number.MAX_VALUE, right: Number.MAX_VALUE });
};
var getDropdownPosition = function(trigger, dropdown, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile) {
  if (preferCenter === void 0) {
    preferCenter = false;
  }
  if (stretchWidth === void 0) {
    stretchWidth = false;
  }
  if (stretchHeight === void 0) {
    stretchHeight = false;
  }
  var availableSpace = getAvailableSpace(trigger, dropdown, overflowParents, stretchWidth, stretchHeight, isMobile);
  var triggerWidth = trigger.getBoundingClientRect().width;
  minWidth = minWidth ? Math.min(triggerWidth, minWidth) : triggerWidth;
  var requiredWidth = dropdown.getBoundingClientRect().width;
  var idealWidth = Math.max(requiredWidth, minWidth);
  var dropLeft;
  var left = null;
  var width = idealWidth;
  if (idealWidth <= availableSpace.right) {
    dropLeft = false;
  } else if (idealWidth <= availableSpace.left) {
    dropLeft = true;
  } else {
    dropLeft = availableSpace.left > availableSpace.right;
    width = Math.max(availableSpace.left, availableSpace.right, minWidth);
  }
  if (preferCenter) {
    var spillOver = (idealWidth - triggerWidth) / 2;
    var availableOutsideLeft = availableSpace.left - triggerWidth;
    var availableOutsideRight = availableSpace.right - triggerWidth;
    var fitsInCenter = availableOutsideLeft >= spillOver && availableOutsideRight >= spillOver;
    if (fitsInCenter) {
      left = -spillOver;
    }
  }
  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;
  var availableHeight = dropUp ? availableSpace.above : availableSpace.below;
  var croppedHeight = stretchHeight ? availableHeight : Math.floor(availableHeight / 31) * 31 + 16;
  return {
    dropUp,
    dropLeft,
    left: left === null ? "auto" : "".concat(left, "px"),
    height: "".concat(croppedHeight, "px"),
    width: "".concat(width, "px")
  };
};
var getInteriorDropdownPosition = function(trigger, dropdown, overflowParents, isMobile) {
  var availableSpace = getInteriorAvailableSpace(trigger, dropdown, overflowParents, isMobile);
  var _a = trigger.getBoundingClientRect(), triggerBottom = _a.bottom, triggerTop = _a.top, triggerWidth = _a.width;
  var _b = getClosestParentDimensions(trigger), parentDropdownTop = _b.top, parentDropdownHeight = _b.height;
  var dropLeft;
  var width = dropdown.getBoundingClientRect().width;
  var top = triggerTop - parentDropdownTop;
  if (width <= availableSpace.right) {
    dropLeft = false;
  } else if (width <= availableSpace.left) {
    dropLeft = true;
  } else {
    dropLeft = availableSpace.left > availableSpace.right;
    width = Math.max(availableSpace.left, availableSpace.right);
  }
  var left = dropLeft ? 0 - width : triggerWidth;
  var dropUp = availableSpace.below < dropdown.offsetHeight && availableSpace.above > availableSpace.below;
  var bottom = dropUp ? parentDropdownTop + parentDropdownHeight - triggerBottom : 0;
  var availableHeight = dropUp ? availableSpace.above : availableSpace.below;
  var croppedHeight = Math.floor(availableHeight / 31) * 31 + 16;
  return {
    dropUp,
    dropLeft,
    height: "".concat(croppedHeight, "px"),
    width: "".concat(width, "px"),
    top: "".concat(top, "px"),
    bottom: "".concat(bottom, "px"),
    left: "".concat(left, "px")
  };
};
var calculatePosition = function(dropdownElement, triggerElement, verticalContainerElement, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth) {
  verticalContainerElement.style.maxHeight = "";
  dropdownElement.style.width = "";
  dropdownElement.style.top = "";
  dropdownElement.style.bottom = "";
  dropdownElement.style.left = "";
  dropdownElement.classList.remove(styles_css_default["dropdown-drop-left"]);
  dropdownElement.classList.remove(styles_css_default["dropdown-drop-right"]);
  dropdownElement.classList.remove(styles_css_default["dropdown-drop-up"]);
  var overflowParents = getOverflowParentDimensions(dropdownElement, interior, expandToViewport, stretchHeight);
  var position = interior ? getInteriorDropdownPosition(triggerElement, dropdownElement, overflowParents, isMobile) : getDropdownPosition(triggerElement, dropdownElement, overflowParents, minWidth, preferCenter, stretchWidth, stretchHeight, isMobile);
  var triggerBox = triggerElement.getBoundingClientRect();
  return [position, triggerBox];
};

// node_modules/@cloudscape-design/components/internal/hooks/use-portal-mode-classes/index.js
init_clsx_m();
function usePortalModeClasses(ref) {
  var _a;
  var colorMode = useCurrentMode(ref);
  var densityMode = useDensityMode(ref);
  var context = useVisualContext(ref);
  var visualRefresh = useVisualRefresh();
  return clsx_m_default((_a = {
    "awsui-polaris-dark-mode awsui-dark-mode": colorMode === "dark",
    "awsui-polaris-compact-mode awsui-compact-mode": densityMode === "compact",
    "awsui-visual-refresh": visualRefresh
  }, _a["awsui-context-".concat(context)] = context, _a));
}

// node_modules/@cloudscape-design/components/internal/components/dropdown/context.js
var import_react3 = __toESM(require_react());
var DropdownContext = import_react3.default.createContext({
  position: "bottom-right"
});
function DropdownContextProvider(_a) {
  var children = _a.children, _b = _a.position, position = _b === void 0 ? "bottom-right" : _b;
  return import_react3.default.createElement(DropdownContext.Provider, { value: { position } }, children);
}
function useDropdownContext() {
  return (0, import_react3.useContext)(DropdownContext);
}

// node_modules/@cloudscape-design/components/internal/components/dropdown/index.js
var DropdownContainer = function(_a) {
  var children = _a.children, _b = _a.renderWithPortal, renderWithPortal = _b === void 0 ? false : _b, id = _a.id, open = _a.open;
  if (renderWithPortal) {
    if (open) {
      return (0, import_react_dom.createPortal)(import_react4.default.createElement("div", { id }, children), document.body);
    } else {
      return null;
    }
  } else {
    return import_react4.default.createElement(import_react4.default.Fragment, null, children);
  }
};
var TransitionContent = function(_a) {
  var _b;
  var state = _a.state, transitionRef = _a.transitionRef, dropdownClasses = _a.dropdownClasses, stretchWidth = _a.stretchWidth, interior = _a.interior, isRefresh = _a.isRefresh, dropdownRef = _a.dropdownRef, verticalContainerRef = _a.verticalContainerRef, expandToViewport = _a.expandToViewport, header = _a.header, children = _a.children, footer = _a.footer, position = _a.position, open = _a.open, onMouseDown = _a.onMouseDown;
  var contentRef = useMergeRefs(dropdownRef, transitionRef);
  return import_react4.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default.dropdown, dropdownClasses, (_b = {}, _b[styles_css_default.open] = open, _b[styles_css_default["with-limited-width"]] = !stretchWidth, _b[styles_css_default["hide-upper-border"]] = stretchWidth, _b[styles_css_default.interior] = interior, _b[styles_css_default["is-empty"]] = !header && !children, _b[styles_css_default.refresh] = isRefresh, _b[styles_css_default["use-portal"]] = expandToViewport && !interior, _b)), ref: contentRef, "data-open": open, "data-animating": state !== "exited", "aria-hidden": !open, onMouseDown },
    import_react4.default.createElement(
      "div",
      { className: clsx_m_default(styles_css_default["dropdown-content-wrapper"], isRefresh && styles_css_default.refresh) },
      import_react4.default.createElement(
        "div",
        { className: styles_css_default["ie11-wrapper"] },
        import_react4.default.createElement(
          "div",
          { ref: verticalContainerRef, className: styles_css_default["dropdown-content"] },
          import_react4.default.createElement(
            DropdownContextProvider,
            { position },
            header,
            children,
            footer
          )
        )
      )
    )
  );
};
var Dropdown = function(_a) {
  var children = _a.children, trigger = _a.trigger, open = _a.open, onDropdownClose = _a.onDropdownClose, onMouseDown = _a.onMouseDown, header = _a.header, footer = _a.footer, dropdownId = _a.dropdownId, _b = _a.stretchTriggerHeight, stretchTriggerHeight = _b === void 0 ? false : _b, _c = _a.stretchWidth, stretchWidth = _c === void 0 ? true : _c, _d = _a.stretchHeight, stretchHeight = _d === void 0 ? false : _d, _e = _a.stretchToTriggerWidth, stretchToTriggerWidth = _e === void 0 ? true : _e, _f = _a.expandToViewport, expandToViewport = _f === void 0 ? false : _f, _g = _a.preferCenter, preferCenter = _g === void 0 ? false : _g, _h = _a.interior, interior = _h === void 0 ? false : _h, minWidth = _a.minWidth, _j = _a.scrollable, scrollable = _j === void 0 ? true : _j, _k = _a.loopFocus, loopFocus = _k === void 0 ? expandToViewport : _k, onFocus = _a.onFocus, onBlur = _a.onBlur, contentKey = _a.contentKey;
  var wrapperRef = (0, import_react4.useRef)(null);
  var triggerRef = (0, import_react4.useRef)(null);
  var dropdownRef = (0, import_react4.useRef)(null);
  var dropdownContainerRef = (0, import_react4.useRef)(null);
  var verticalContainerRef = (0, import_react4.useRef)(null);
  var fixedPosition = (0, import_react4.useRef)(null);
  var isRefresh = useVisualRefresh();
  var dropdownClasses = usePortalModeClasses(triggerRef);
  var _l = (0, import_react4.useState)("bottom-right"), position = _l[0], setPosition = _l[1];
  var isMobile = useMobile();
  var setDropdownPosition = function(position2, triggerBox, target, verticalContainer) {
    var entireWidth = !interior && stretchWidth;
    if (!stretchWidth) {
      verticalContainer.style.maxHeight = "".concat(parseInt(position2.height) + 1, "px");
    } else {
      verticalContainer.style.maxHeight = position2.height;
    }
    if (entireWidth && !expandToViewport) {
      if (stretchToTriggerWidth) {
        target.classList.add(styles_css_default["occupy-entire-width"]);
      }
    } else {
      target.style.width = position2.width;
    }
    if (position2.dropUp && !interior) {
      target.classList.add(styles_css_default["dropdown-drop-up"]);
      if (!expandToViewport) {
        target.style.bottom = "100%";
      }
    } else {
      target.classList.remove(styles_css_default["dropdown-drop-up"]);
    }
    target.classList.add(position2.dropLeft ? styles_css_default["dropdown-drop-left"] : styles_css_default["dropdown-drop-right"]);
    if (position2.left && position2.left !== "auto") {
      target.style.left = position2.left;
    }
    if (expandToViewport && !interior) {
      target.style.position = "fixed";
      if (position2.dropUp) {
        target.style.bottom = "calc(100% - ".concat(triggerBox.top, "px)");
      } else {
        target.style.top = "".concat(triggerBox.bottom, "px");
      }
      if (position2.dropLeft) {
        target.style.left = "calc(".concat(triggerBox.right, "px - ").concat(position2.width, ")");
      } else {
        target.style.left = "".concat(triggerBox.left, "px");
      }
      fixedPosition.current = position2;
      return;
    }
    if (interior && isInteriorPosition(position2)) {
      if (position2.dropUp) {
        target.style.bottom = position2.bottom;
      } else {
        target.style.top = position2.top;
      }
      target.style.left = position2.left;
    }
    if (position2.dropUp && position2.dropLeft) {
      setPosition("top-left");
    } else if (position2.dropUp) {
      setPosition("top-right");
    } else if (position2.dropLeft) {
      setPosition("bottom-left");
    } else {
      setPosition("bottom-right");
    }
  };
  var isOutsideDropdown = function(element) {
    return (!wrapperRef.current || !wrapperRef.current.contains(element)) && (!dropdownContainerRef.current || !dropdownContainerRef.current.contains(element));
  };
  var focusHandler = function(event) {
    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {
      fireNonCancelableEvent(onFocus, event);
    }
  };
  var blurHandler = function(event) {
    if (!event.relatedTarget || isOutsideDropdown(event.relatedTarget)) {
      fireNonCancelableEvent(onBlur, event);
    }
  };
  (0, import_react4.useLayoutEffect)(function() {
    var onDropdownOpen = function() {
      if (open && dropdownRef.current && triggerRef.current && verticalContainerRef.current) {
        if (scrollable) {
          dropdownRef.current.classList.add(styles_css_default.nowrap);
        }
        setDropdownPosition.apply(void 0, __spreadArray(__spreadArray([], calculatePosition(dropdownRef.current, triggerRef.current, verticalContainerRef.current, interior, expandToViewport, preferCenter, stretchWidth, stretchHeight, isMobile, minWidth), false), [
          dropdownRef.current,
          verticalContainerRef.current
        ], false));
        if (scrollable) {
          dropdownRef.current.classList.remove(styles_css_default.nowrap);
        }
      }
    };
    onDropdownOpen();
    if (open) {
      window.addEventListener("scroll", onDropdownOpen);
      var timeoutId_1 = setTimeout(function() {
        window.removeEventListener("scroll", onDropdownOpen);
      }, 500);
      return function() {
        clearTimeout(timeoutId_1);
        window.removeEventListener("scroll", onDropdownOpen);
      };
    }
  }, [open, dropdownRef, triggerRef, verticalContainerRef, interior, stretchWidth, isMobile, contentKey]);
  (0, import_react4.useEffect)(function() {
    if (!open) {
      return;
    }
    var clickListener = function(e) {
      var _a2;
      if (!((_a2 = dropdownRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(e.target))) {
        fireNonCancelableEvent(onDropdownClose);
      }
    };
    var timeout = setTimeout(function() {
      window.addEventListener("click", clickListener);
    }, 0);
    return function() {
      clearTimeout(timeout);
      window.removeEventListener("click", clickListener);
    };
  }, [open, onDropdownClose]);
  (0, import_react4.useLayoutEffect)(function() {
    if (!expandToViewport || !open) {
      return;
    }
    var updateDropdownPosition = function() {
      if (triggerRef.current && dropdownRef.current && verticalContainerRef.current) {
        var triggerRect = triggerRef.current.getBoundingClientRect();
        var target = dropdownRef.current;
        if (fixedPosition.current) {
          if (fixedPosition.current.dropUp) {
            dropdownRef.current.style.bottom = "calc(100% - ".concat(triggerRect.top, "px)");
          } else {
            target.style.top = "".concat(triggerRect.bottom, "px");
          }
          if (fixedPosition.current.dropLeft) {
            target.style.left = "calc(".concat(triggerRect.right, "px - ").concat(fixedPosition.current.width, ")");
          } else {
            target.style.left = "".concat(triggerRect.left, "px");
          }
        }
      }
    };
    updateDropdownPosition();
    window.addEventListener("scroll", updateDropdownPosition, true);
    window.addEventListener("resize", updateDropdownPosition, true);
    return function() {
      window.removeEventListener("scroll", updateDropdownPosition, true);
      window.removeEventListener("resize", updateDropdownPosition, true);
    };
  }, [open, expandToViewport]);
  return import_react4.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default.root, interior && styles_css_default.interior, stretchTriggerHeight && styles_css_default["stretch-trigger-height"]), ref: wrapperRef, onFocus: focusHandler, onBlur: blurHandler },
    import_react4.default.createElement("div", { className: clsx_m_default(stretchTriggerHeight && styles_css_default["stretch-trigger-height"]), ref: triggerRef }, trigger),
    import_react4.default.createElement(TabTrap, { focusNextCallback: function() {
      var _a2;
      return dropdownRef.current && ((_a2 = getFirstFocusable(dropdownRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus());
    }, disabled: !open || !loopFocus }),
    import_react4.default.createElement(
      DropdownContainer,
      { renderWithPortal: expandToViewport && !interior, id: dropdownId, open },
      import_react4.default.createElement(Transition, { "in": open !== null && open !== void 0 ? open : false, exit: false }, function(state, ref) {
        return import_react4.default.createElement(
          "div",
          { ref: dropdownContainerRef },
          import_react4.default.createElement(TabTrap, { focusNextCallback: function() {
            var _a2;
            return triggerRef.current && ((_a2 = getLastFocusable(triggerRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus());
          }, disabled: !open || !loopFocus }),
          import_react4.default.createElement(TransitionContent, { state, transitionRef: ref, dropdownClasses, open, stretchWidth, interior, header, expandToViewport, footer, onMouseDown, isRefresh, dropdownRef, verticalContainerRef, position }, children),
          import_react4.default.createElement(TabTrap, { focusNextCallback: function() {
            var _a2;
            return triggerRef.current && ((_a2 = getFirstFocusable(triggerRef.current)) === null || _a2 === void 0 ? void 0 : _a2.focus());
          }, disabled: !open || !loopFocus })
        );
      })
    )
  );
};
var isInteriorPosition = function(position) {
  return position.bottom !== void 0;
};
var dropdown_default = Dropdown;

// node_modules/@cloudscape-design/components/button-dropdown/internal.js
var import_react19 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/button-dropdown/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/button-dropdown/styles.scoped.css";
var styles_css_default2 = {
  "button-dropdown": "awsui_button-dropdown_sne0l_1gwdq_93",
  "items-list-container": "awsui_items-list-container_sne0l_1gwdq_97",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_sne0l_1gwdq_1",
  "rotate-up": "awsui_rotate-up_sne0l_1gwdq_114",
  "rotate-down": "awsui_rotate-down_sne0l_1gwdq_129",
  "header": "awsui_header_sne0l_1gwdq_144",
  "title": "awsui_title_sne0l_1gwdq_153",
  "description": "awsui_description_sne0l_1gwdq_154"
};

// node_modules/@cloudscape-design/components/button-dropdown/items-list.js
var import_react15 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/item-element/index.js
var import_react10 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/button-dropdown/utils/utils.js
var isItemGroup = function(item) {
  return item && item.items !== void 0;
};
var isLinkItem = function(item) {
  return item && item.href !== void 0;
};
var getItemTarget = function(item) {
  return item.external ? "_blank" : void 0;
};
function indexIncludes(source, target) {
  for (var index = 0; index < source.length; index++) {
    if (source[index] !== target[index]) {
      return false;
    }
  }
  return true;
}
function indexEquals(left, right) {
  if (left.length !== right.length) {
    return false;
  }
  for (var index = 0; index < left.length; index++) {
    if (left[index] !== right[index]) {
      return false;
    }
  }
  return true;
}

// node_modules/@cloudscape-design/components/button-dropdown/item-element/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/button-dropdown/item-element/styles.scoped.css";
var styles_css_default3 = {
  "item-element": "awsui_item-element_93a1u_lwral_93",
  "disabled": "awsui_disabled_93a1u_lwral_103",
  "last": "awsui_last_93a1u_lwral_110",
  "highlighted": "awsui_highlighted_93a1u_lwral_113",
  "variant-icon": "awsui_variant-icon_93a1u_lwral_117",
  "variant-normal": "awsui_variant-normal_93a1u_lwral_117",
  "variant-primary": "awsui_variant-primary_93a1u_lwral_117",
  "is-focused": "awsui_is-focused_93a1u_lwral_127",
  "variant-navigation": "awsui_variant-navigation_93a1u_lwral_131",
  "first": "awsui_first_93a1u_lwral_134",
  "has-category-header": "awsui_has-category-header_93a1u_lwral_134",
  "menu-item": "awsui_menu-item_93a1u_lwral_148",
  "icon": "awsui_icon_93a1u_lwral_166",
  "external-icon": "awsui_external-icon_93a1u_lwral_171"
};

// node_modules/@cloudscape-design/components/button-dropdown/tooltip.js
var import_react8 = __toESM(require_react());

// node_modules/@cloudscape-design/components/popover/arrow.js
var import_react5 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/popover/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/popover/styles.scoped.css";
var styles_css_default4 = {
  "arrow": "awsui_arrow_xjuzf_10pru_185",
  "arrow-outer": "awsui_arrow-outer_xjuzf_10pru_189",
  "arrow-inner": "awsui_arrow-inner_xjuzf_10pru_189",
  "arrow-position-right-top": "awsui_arrow-position-right-top_xjuzf_10pru_220",
  "arrow-position-right-bottom": "awsui_arrow-position-right-bottom_xjuzf_10pru_220",
  "arrow-position-left-top": "awsui_arrow-position-left-top_xjuzf_10pru_223",
  "arrow-position-left-bottom": "awsui_arrow-position-left-bottom_xjuzf_10pru_223",
  "arrow-position-top-center": "awsui_arrow-position-top-center_xjuzf_10pru_226",
  "arrow-position-top-right": "awsui_arrow-position-top-right_xjuzf_10pru_226",
  "arrow-position-top-left": "awsui_arrow-position-top-left_xjuzf_10pru_226",
  "arrow-position-top-responsive": "awsui_arrow-position-top-responsive_xjuzf_10pru_226",
  "arrow-position-bottom-center": "awsui_arrow-position-bottom-center_xjuzf_10pru_229",
  "arrow-position-bottom-right": "awsui_arrow-position-bottom-right_xjuzf_10pru_229",
  "arrow-position-bottom-left": "awsui_arrow-position-bottom-left_xjuzf_10pru_229",
  "arrow-position-bottom-responsive": "awsui_arrow-position-bottom-responsive_xjuzf_10pru_229",
  "body": "awsui_body_xjuzf_10pru_325",
  "body-overflow-visible": "awsui_body-overflow-visible_xjuzf_10pru_339",
  "has-dismiss": "awsui_has-dismiss_xjuzf_10pru_343",
  "dismiss": "awsui_dismiss_xjuzf_10pru_348",
  "dismiss-control": "awsui_dismiss-control_xjuzf_10pru_355",
  "header-row": "awsui_header-row_xjuzf_10pru_359",
  "header": "awsui_header_xjuzf_10pru_359",
  "content": "awsui_content_xjuzf_10pru_381",
  "content-overflow-visible": "awsui_content-overflow-visible_xjuzf_10pru_388",
  "container": "awsui_container_xjuzf_10pru_484",
  "container-body": "awsui_container-body_xjuzf_10pru_492",
  "container-body-variant-annotation": "awsui_container-body-variant-annotation_xjuzf_10pru_507",
  "container-body-size-small": "awsui_container-body-size-small_xjuzf_10pru_512",
  "fixed-width": "awsui_fixed-width_xjuzf_10pru_515",
  "container-body-size-medium": "awsui_container-body-size-medium_xjuzf_10pru_519",
  "container-body-size-large": "awsui_container-body-size-large_xjuzf_10pru_526",
  "container-arrow": "awsui_container-arrow_xjuzf_10pru_538",
  "container-arrow-position-right-top": "awsui_container-arrow-position-right-top_xjuzf_10pru_542",
  "container-arrow-position-right-bottom": "awsui_container-arrow-position-right-bottom_xjuzf_10pru_542",
  "container-arrow-position-left-top": "awsui_container-arrow-position-left-top_xjuzf_10pru_554",
  "container-arrow-position-left-bottom": "awsui_container-arrow-position-left-bottom_xjuzf_10pru_554",
  "container-arrow-position-top-center": "awsui_container-arrow-position-top-center_xjuzf_10pru_566",
  "container-arrow-position-top-right": "awsui_container-arrow-position-top-right_xjuzf_10pru_566",
  "container-arrow-position-top-left": "awsui_container-arrow-position-top-left_xjuzf_10pru_566",
  "container-arrow-position-top-responsive": "awsui_container-arrow-position-top-responsive_xjuzf_10pru_566",
  "container-arrow-position-bottom-center": "awsui_container-arrow-position-bottom-center_xjuzf_10pru_582",
  "container-arrow-position-bottom-right": "awsui_container-arrow-position-bottom-right_xjuzf_10pru_586",
  "container-arrow-position-bottom-left": "awsui_container-arrow-position-bottom-left_xjuzf_10pru_590",
  "awsui-motion-fade-in": "awsui_awsui-motion-fade-in_xjuzf_10pru_1",
  "refresh": "awsui_refresh_xjuzf_10pru_708",
  "root": "awsui_root_xjuzf_10pru_730",
  "trigger": "awsui_trigger_xjuzf_10pru_743",
  "trigger-type-text": "awsui_trigger-type-text_xjuzf_10pru_750",
  "trigger-inner-text": "awsui_trigger-inner-text_xjuzf_10pru_779",
  "popover-content": "awsui_popover-content_xjuzf_10pru_783"
};

// node_modules/@cloudscape-design/components/popover/arrow.js
var Arrow = function(props) {
  return import_react5.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default4.arrow, props.position && styles_css_default4["arrow-position-".concat(props.position)]) },
    import_react5.default.createElement("div", { className: styles_css_default4["arrow-outer"] }),
    import_react5.default.createElement("div", { className: styles_css_default4["arrow-inner"] })
  );
};
var arrow_default = import_react5.default.memo(Arrow);

// node_modules/@cloudscape-design/components/popover/container.js
var import_react6 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/popover/utils/positions.js
var ARROW_OFFSET = 12;
var PRIORITY_MAPPING = {
  top: [
    "top-center",
    "top-right",
    "top-left",
    "bottom-center",
    "bottom-right",
    "bottom-left",
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom"
  ],
  bottom: [
    "bottom-center",
    "bottom-right",
    "bottom-left",
    "top-center",
    "top-right",
    "top-left",
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom"
  ],
  left: [
    "left-top",
    "left-bottom",
    "right-top",
    "right-bottom",
    "bottom-center",
    "top-center",
    "bottom-left",
    "top-left",
    "bottom-right",
    "top-right"
  ],
  right: [
    "right-top",
    "right-bottom",
    "left-top",
    "left-bottom",
    "bottom-center",
    "top-center",
    "bottom-right",
    "top-right",
    "bottom-left",
    "top-left"
  ]
};
var RECTANGLE_CALCULATIONS = {
  "top-center": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top - body.height - arrow.height,
      left: trigger.left + trigger.width / 2 - body.width / 2,
      width: body.width,
      height: body.height
    };
  },
  "top-right": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top - body.height - arrow.height,
      left: trigger.left,
      width: body.width,
      height: body.height
    };
  },
  "top-left": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top - body.height - arrow.height,
      left: trigger.left + trigger.width - body.width,
      width: body.width,
      height: body.height
    };
  },
  "bottom-center": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height + arrow.height,
      left: trigger.left + trigger.width / 2 - body.width / 2,
      width: body.width,
      height: body.height
    };
  },
  "bottom-right": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height + arrow.height,
      left: trigger.left,
      width: body.width,
      height: body.height
    };
  },
  "bottom-left": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height + arrow.height,
      left: trigger.left + trigger.width - body.width,
      width: body.width,
      height: body.height
    };
  },
  "right-top": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,
      left: trigger.left + trigger.width + arrow.height,
      width: body.width,
      height: body.height
    };
  },
  "right-bottom": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,
      left: trigger.left + trigger.width + arrow.height,
      width: body.width,
      height: body.height
    };
  },
  "left-top": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height / 2 - ARROW_OFFSET - arrow.height,
      left: trigger.left - body.width - arrow.height,
      width: body.width,
      height: body.height
    };
  },
  "left-bottom": function(_a) {
    var body = _a.body, trigger = _a.trigger, arrow = _a.arrow;
    return {
      top: trigger.top + trigger.height / 2 - body.height + ARROW_OFFSET + arrow.height,
      left: trigger.left - body.width - arrow.height,
      width: body.width,
      height: body.height
    };
  }
};
function canRectFit(inner, outer) {
  return inner.left >= outer.left && inner.top >= outer.top && inner.left + inner.width <= outer.left + outer.width && inner.top + inner.height <= outer.top + outer.height;
}
function fitIntoContainer(inner, outer) {
  var left = inner.left, width = inner.width, top = inner.top, height = inner.height;
  if (left < outer.left) {
    width = left + width - outer.left;
    left = outer.left;
  } else if (left + width > outer.left + outer.width) {
    width = outer.left + outer.width - left;
  }
  if (top < outer.top) {
    height = top + height - outer.top;
    top = outer.top;
  } else if (top + height > outer.top + outer.height) {
    height = outer.top + outer.height - top;
  }
  return { left, width, top, height };
}
function getLargestRect(rect1, rect2) {
  var area1 = rect1.height * rect1.width;
  var area2 = rect2.height * rect2.width;
  return area1 >= area2 ? rect1 : rect2;
}
function intersectRectangles(rectangles) {
  var boundingOffset = null;
  for (var _i = 0, rectangles_1 = rectangles; _i < rectangles_1.length; _i++) {
    var currentRect = rectangles_1[_i];
    if (!boundingOffset) {
      boundingOffset = currentRect;
      continue;
    }
    var left = Math.max(boundingOffset.left, currentRect.left);
    var top_1 = Math.max(boundingOffset.top, currentRect.top);
    var right = Math.min(boundingOffset.left + boundingOffset.width, currentRect.left + currentRect.width);
    var bottom = Math.min(boundingOffset.top + boundingOffset.height, currentRect.top + currentRect.height);
    if (right < left || bottom < top_1) {
      return null;
    }
    boundingOffset = {
      left,
      top: top_1,
      width: right - left,
      height: bottom - top_1
    };
  }
  return boundingOffset && boundingOffset.height * boundingOffset.width;
}
function calculatePosition2(preferred, trigger, arrow, body, container, viewport, renderWithPortal) {
  var bestPositionOutsideViewport = null;
  var largestArea = 0;
  for (var _i = 0, _a = PRIORITY_MAPPING[preferred]; _i < _a.length; _i++) {
    var internalPosition_1 = _a[_i];
    var boundingOffset = RECTANGLE_CALCULATIONS[internalPosition_1]({ body, trigger, arrow });
    var fitsInContainer = renderWithPortal || canRectFit(boundingOffset, container);
    var fitsInViewport = canRectFit(boundingOffset, viewport);
    if (fitsInContainer && fitsInViewport) {
      return { internalPosition: internalPosition_1, boundingOffset };
    }
    var boundingRectangles = [boundingOffset, viewport];
    if (!renderWithPortal) {
      boundingRectangles.push(container);
    }
    var availableArea = intersectRectangles(boundingRectangles);
    if (availableArea && availableArea > largestArea) {
      bestPositionOutsideViewport = { internalPosition: internalPosition_1, boundingOffset };
      largestArea = availableArea;
    }
  }
  var internalPosition = (bestPositionOutsideViewport === null || bestPositionOutsideViewport === void 0 ? void 0 : bestPositionOutsideViewport.internalPosition) || "right-top";
  var defaultOffset = RECTANGLE_CALCULATIONS[internalPosition]({ body, trigger, arrow });
  var optimisedOffset = fitIntoContainer(defaultOffset, renderWithPortal ? viewport : getLargestRect(container, viewport));
  var scrollable = optimisedOffset.height < defaultOffset.height;
  return { internalPosition, boundingOffset: optimisedOffset, scrollable };
}

// node_modules/@cloudscape-design/components/popover/container.js
var INITIAL_STYLES = { position: "absolute", top: -9999, left: -9999 };
function PopoverContainer(_a) {
  var _b;
  var position = _a.position, trackRef = _a.trackRef, trackKey = _a.trackKey, arrow = _a.arrow, children = _a.children, zIndex = _a.zIndex, renderWithPortal = _a.renderWithPortal, size = _a.size, fixedWidth = _a.fixedWidth, variant = _a.variant;
  var bodyRef = (0, import_react6.useRef)(null);
  var contentRef = (0, import_react6.useRef)(null);
  var popoverRef = (0, import_react6.useRef)(null);
  var arrowRef = (0, import_react6.useRef)(null);
  var _c = (0, import_react6.useState)(INITIAL_STYLES), popoverStyle = _c[0], setPopoverStyle = _c[1];
  var _d = (0, import_react6.useState)(null), internalPosition = _d[0], setInternalPosition = _d[1];
  var isRefresh = useVisualRefresh();
  var positionHandlerRef = (0, import_react6.useRef)(function() {
  });
  var updatePositionHandler = (0, import_react6.useCallback)(function() {
    if (!trackRef.current || !popoverRef.current || !bodyRef.current || !contentRef.current || !arrowRef.current) {
      return;
    }
    var popover = popoverRef.current;
    var body = bodyRef.current;
    var arrow2 = arrowRef.current;
    var document2 = popover.ownerDocument;
    var track = trackRef.current;
    if (popover.offsetWidth === 0 || popover.offsetHeight === 0 || !nodeContains(document2.body, track)) {
      return;
    }
    var prevTop = popover.style.top;
    var prevLeft = popover.style.left;
    popover.style.top = "0";
    popover.style.left = "0";
    body.style.maxHeight = "";
    body.style.overflowX = "";
    body.style.overflowY = "";
    var viewportRect = getViewportRect(document2.defaultView);
    var trackRect = track.getBoundingClientRect();
    var arrowRect = {
      width: parseFloat(getComputedStyle(arrow2).width),
      height: parseFloat(getComputedStyle(arrow2).height)
    };
    var containingBlock = getContainingBlock(popover);
    var containingBlockRect = containingBlock ? containingBlock.getBoundingClientRect() : viewportRect;
    var bodyBorderWidth = getBorderWidth(body);
    var contentRect = contentRef.current.getBoundingClientRect();
    var contentBoundingBox = {
      width: contentRect.width + 2 * bodyBorderWidth,
      height: contentRect.height + 2 * bodyBorderWidth
    };
    var _a2 = calculatePosition2(position, trackRect, arrowRect, contentBoundingBox, containingBlock ? containingBlockRect : getDocumentRect(document2), viewportRect, renderWithPortal), scrollable = _a2.scrollable, newInternalPosition = _a2.internalPosition, boundingOffset = _a2.boundingOffset;
    var popoverOffset = toRelativePosition(boundingOffset, containingBlockRect);
    var trackRelativeOffset = toRelativePosition(popoverOffset, toRelativePosition(trackRect, containingBlockRect));
    popover.style.top = prevTop;
    popover.style.left = prevLeft;
    if (scrollable) {
      body.style.maxHeight = boundingOffset.height + "px";
      body.style.overflowX = "hidden";
      body.style.overflowY = "auto";
    }
    setInternalPosition(newInternalPosition);
    setPopoverStyle({ top: popoverOffset.top, left: popoverOffset.left });
    positionHandlerRef.current = function() {
      var newTrackOffset = toRelativePosition(track.getBoundingClientRect(), containingBlock ? containingBlock.getBoundingClientRect() : viewportRect);
      setPopoverStyle({
        top: newTrackOffset.top + trackRelativeOffset.top,
        left: newTrackOffset.left + trackRelativeOffset.left
      });
    };
  }, [position, trackRef, renderWithPortal]);
  (0, import_react6.useLayoutEffect)(function() {
    updatePositionHandler();
  }, [updatePositionHandler, trackKey]);
  useResizeObserver(contentRef, function() {
    return updatePositionHandler();
  });
  (0, import_react6.useLayoutEffect)(function() {
    var updatePosition = function() {
      return requestAnimationFrame(function() {
        return updatePositionHandler();
      });
    };
    var refreshPosition = function() {
      return requestAnimationFrame(function() {
        return positionHandlerRef.current();
      });
    };
    window.addEventListener("click", updatePosition);
    window.addEventListener("resize", updatePosition);
    window.addEventListener("scroll", refreshPosition, true);
    return function() {
      window.removeEventListener("click", updatePosition);
      window.removeEventListener("resize", updatePosition);
      window.removeEventListener("scroll", refreshPosition, true);
    };
  }, [updatePositionHandler]);
  return import_react6.default.createElement(
    "div",
    { ref: popoverRef, style: __assign(__assign({}, popoverStyle), { zIndex }), className: clsx_m_default(styles_css_default4.container, isRefresh && styles_css_default4.refresh) },
    import_react6.default.createElement("div", { ref: arrowRef, className: clsx_m_default(styles_css_default4["container-arrow"], styles_css_default4["container-arrow-position-".concat(internalPosition)]), "aria-hidden": true }, arrow(internalPosition)),
    import_react6.default.createElement(
      "div",
      { ref: bodyRef, className: clsx_m_default(styles_css_default4["container-body"], styles_css_default4["container-body-size-".concat(size)], (_b = {}, _b[styles_css_default4["fixed-width"]] = fixedWidth, _b[styles_css_default4["container-body-variant-".concat(variant)]] = variant, _b)) },
      import_react6.default.createElement("div", { ref: contentRef }, children)
    )
  );
}
function getBorderWidth(element) {
  return parseInt(getComputedStyle(element).borderWidth) || 0;
}
function toRelativePosition(element, parent) {
  return {
    top: element.top - parent.top,
    left: element.left - parent.left
  };
}
function getViewportRect(window2) {
  return {
    top: 0,
    left: 0,
    width: window2.innerWidth,
    height: window2.innerHeight
  };
}
function getDocumentRect(document2) {
  var _a = document2.documentElement.getBoundingClientRect(), top = _a.top, left = _a.left;
  return {
    top,
    left,
    width: document2.documentElement.scrollWidth,
    height: document2.documentElement.scrollHeight
  };
}

// node_modules/@cloudscape-design/components/popover/body.js
var import_react7 = __toESM(require_react());
init_clsx_m();
function PopoverBody(_a) {
  var _b, _c;
  var showDismissButton = _a.dismissButton, dismissAriaLabel = _a.dismissAriaLabel, header = _a.header, children = _a.children, onDismiss = _a.onDismiss, variant = _a.variant, overflowVisible = _a.overflowVisible, className = _a.className;
  var labelledById = useUniqueId("awsui-popover-");
  var dismissButtonFocused = (0, import_react7.useRef)(false);
  var dismissButtonRef = (0, import_react7.useRef)(null);
  var onKeyDown = (0, import_react7.useCallback)(function(event) {
    if (event.keyCode === KeyCode.escape) {
      onDismiss();
    }
  }, [onDismiss]);
  (0, import_react7.useEffect)(function() {
    var _a2;
    if (showDismissButton && !dismissButtonFocused.current) {
      (_a2 = dismissButtonRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus({ preventScroll: true });
    }
    dismissButtonFocused.current = showDismissButton;
  }, [showDismissButton]);
  var dismissButton = (showDismissButton !== null && showDismissButton !== void 0 ? showDismissButton : null) && import_react7.default.createElement(
    "div",
    { className: styles_css_default4.dismiss },
    import_react7.default.createElement(InternalButton, { variant: "icon", formAction: "none", iconName: "close", className: styles_css_default4["dismiss-control"], ariaLabel: dismissAriaLabel, onClick: function() {
      return onDismiss();
    }, ref: dismissButtonRef })
  );
  return import_react7.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default4.body, className, (_b = {}, _b[styles_css_default4["body-overflow-visible"]] = overflowVisible === "both", _b)), role: header ? "dialog" : void 0, onKeyDown, "aria-modal": showDismissButton && variant !== "annotation" ? true : void 0, "aria-labelledby": header ? labelledById : void 0 },
    import_react7.default.createElement(
      FocusLock,
      { disabled: variant === "annotation" || !showDismissButton, autoFocus: false },
      header && import_react7.default.createElement(
        "div",
        { className: clsx_m_default(styles_css_default4["header-row"], showDismissButton && styles_css_default4["has-dismiss"]) },
        dismissButton,
        import_react7.default.createElement(
          "div",
          { className: styles_css_default4.header, id: labelledById },
          import_react7.default.createElement("h2", null, header)
        )
      ),
      import_react7.default.createElement(
        "div",
        { className: !header && showDismissButton ? styles_css_default4["has-dismiss"] : void 0 },
        !header && dismissButton,
        import_react7.default.createElement("div", { className: clsx_m_default(styles_css_default4.content, (_c = {}, _c[styles_css_default4["content-overflow-visible"]] = !!overflowVisible, _c)) }, children)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/button-dropdown/tooltip.js
var DEFAULT_OPEN_TIMEOUT_IN_MS = 120;
function Tooltip(_a) {
  var children = _a.children, content = _a.content, _b = _a.position, position = _b === void 0 ? "right" : _b;
  var ref = (0, import_react8.useRef)(null);
  var isReducedMotion = useReducedMotion(ref);
  var _c = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS), open = _c.open, triggerProps = _c.triggerProps;
  var portalClasses = usePortalModeClasses(ref);
  return import_react8.default.createElement(
    "span",
    __assign({ ref }, triggerProps),
    children,
    open && import_react8.default.createElement(
      Portal,
      null,
      import_react8.default.createElement(
        "span",
        { className: portalClasses },
        import_react8.default.createElement(
          PopoverContainer,
          { size: "small", fixedWidth: false, position, trackRef: ref, arrow: function(position2) {
            return import_react8.default.createElement(arrow_default, { position: position2 });
          }, renderWithPortal: true, zIndex: 7e3 },
          import_react8.default.createElement(
            PopoverBody,
            { dismissButton: false, dismissAriaLabel: void 0, header: null, onDismiss: function() {
            }, overflowVisible: "both" },
            import_react8.default.createElement("span", { "data-testid": "button-dropdown-disabled-reason", role: "tooltip" }, content)
          )
        )
      )
    )
  );
}
function useTooltipOpen(timeout) {
  var handle = (0, import_react8.useRef)();
  var _a = (0, import_react8.useState)(false), isOpen = _a[0], setIsOpen = _a[1];
  var close = function() {
    clearTimeout(handle.current);
    setIsOpen(false);
  };
  var open = function() {
    return setIsOpen(true);
  };
  var openDelayed = function() {
    handle.current = setTimeout(open, timeout);
  };
  var onKeyDown = function(e) {
    if (isOpen && isEscape(e.key)) {
      e.preventDefault();
      e.stopPropagation();
      close();
    }
  };
  var onFocus = openDelayed;
  var onBlur = close;
  return {
    open: isOpen,
    triggerProps: {
      onBlur,
      onFocus,
      onKeyDown
    }
  };
}
var isEscape = function(key) {
  return key === "Escape" || key === "Esc";
};

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-hidden-description.js
var import_react9 = __toESM(require_react());
function useHiddenDescription(description) {
  var id = useUniqueId();
  return {
    targetProps: {
      "aria-describedby": description ? id : void 0
    },
    descriptionEl: description ? import_react9.default.createElement("span", { id, hidden: true }, description) : null
  };
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/menu-item.js
var getMenuItemProps = function(_a) {
  var disabled = _a.disabled, parent = _a.parent, expanded = _a.expanded;
  return {
    role: "menuitem",
    "aria-disabled": disabled ? "true" : void 0,
    "aria-haspopup": parent ? "true" : void 0,
    "aria-expanded": expanded ? "true" : parent ? "false" : void 0
  };
};

// node_modules/@cloudscape-design/components/button-dropdown/item-element/index.js
var ItemElement = function(_a) {
  var _b;
  var item = _a.item, disabled = _a.disabled, onItemActivate = _a.onItemActivate, highlighted = _a.highlighted, highlightItem = _a.highlightItem, _c = _a.first, first = _c === void 0 ? false : _c, last = _a.last, hasCategoryHeader = _a.hasCategoryHeader, _d = _a.isKeyboardHighlighted, isKeyboardHighlighted = _d === void 0 ? false : _d, _e = _a.variant, variant = _e === void 0 ? "normal" : _e;
  var isLink = isLinkItem(item);
  var onClick = function(event) {
    event.stopPropagation();
    if (!isLink) {
      event.preventDefault();
    }
    if (!disabled) {
      onItemActivate(item, event);
    }
  };
  var onHover = function(event) {
    event.preventDefault();
    highlightItem(item);
  };
  return import_react10.default.createElement(
    "li",
    { className: clsx_m_default(styles_css_default3["item-element"], styles_css_default3["variant-".concat(variant)], (_b = {}, _b[styles_css_default3.highlighted] = highlighted, _b[styles_css_default3.disabled] = disabled, _b[styles_css_default3.first] = first, _b[styles_css_default3.last] = last, _b[styles_css_default3["has-category-header"]] = hasCategoryHeader, _b[styles_css_default3["is-focused"]] = isKeyboardHighlighted, _b)), role: "presentation", "data-testid": item.id, "data-description": item.description, onClick, onMouseEnter: onHover, onTouchStart: onHover },
    import_react10.default.createElement(MenuItem, { item, disabled, highlighted })
  );
};
function MenuItem(_a) {
  var item = _a.item, disabled = _a.disabled, highlighted = _a.highlighted;
  var menuItemRef = (0, import_react10.useRef)(null);
  (0, import_react10.useEffect)(function() {
    if (highlighted && menuItemRef.current) {
      menuItemRef.current.focus();
    }
  }, [highlighted]);
  var isDisabledWithReason = disabled && item.disabledReason;
  var _b = useHiddenDescription(item.disabledReason), targetProps = _b.targetProps, descriptionEl = _b.descriptionEl;
  var menuItemProps = __assign(__assign({
    className: styles_css_default3["menu-item"],
    ref: menuItemRef,
    tabIndex: highlighted ? 0 : -1
  }, getMenuItemProps({ disabled })), isDisabledWithReason ? targetProps : {});
  var menuItem = isLinkItem(item) ? import_react10.default.createElement(
    "a",
    __assign({}, menuItemProps, { href: !disabled ? item.href : void 0, target: getItemTarget(item), rel: item.external ? "noopener noreferrer" : void 0 }),
    import_react10.default.createElement(MenuItemContent, { item, disabled })
  ) : import_react10.default.createElement(
    "span",
    __assign({}, menuItemProps),
    import_react10.default.createElement(MenuItemContent, { item, disabled })
  );
  var position = useDropdownContext().position;
  var tooltipPosition = position === "bottom-left" || position === "top-left" ? "left" : "right";
  return isDisabledWithReason ? import_react10.default.createElement(
    Tooltip,
    { content: item.disabledReason, position: tooltipPosition },
    menuItem,
    descriptionEl
  ) : menuItem;
}
var MenuItemContent = function(_a) {
  var item = _a.item, disabled = _a.disabled;
  var hasIcon = !!(item.iconName || item.iconUrl || item.iconSvg);
  var hasExternal = isLinkItem(item) && item.external;
  return import_react10.default.createElement(
    import_react10.default.Fragment,
    null,
    hasIcon && import_react10.default.createElement(MenuItemIcon, { name: item.iconName, url: item.iconUrl, svg: item.iconSvg, alt: item.iconAlt }),
    " ",
    item.text,
    " ",
    hasExternal && import_react10.default.createElement(ExternalIcon, { disabled, ariaLabel: item.externalIconAriaLabel })
  );
};
var MenuItemIcon = function(props) {
  return import_react10.default.createElement(
    "span",
    { className: styles_css_default3.icon },
    import_react10.default.createElement(internal_default, __assign({}, props))
  );
};
var ExternalIcon = function(_a) {
  var disabled = _a.disabled, ariaLabel = _a.ariaLabel;
  var icon = import_react10.default.createElement(internal_default, { variant: disabled ? "disabled" : "normal", name: "external" });
  return import_react10.default.createElement("span", { className: styles_css_default3["external-icon"], role: ariaLabel ? "img" : void 0, "aria-label": ariaLabel }, icon);
};
var item_element_default = ItemElement;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/expandable-category-element.js
var import_react11 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/button-dropdown/category-elements/styles.scoped.css";
var styles_css_default5 = {
  "header": "awsui_header_16mm3_qwnia_93",
  "disabled": "awsui_disabled_16mm3_qwnia_108",
  "expandable-header": "awsui_expandable-header_16mm3_qwnia_112",
  "rolled-down": "awsui_rolled-down_16mm3_qwnia_123",
  "highlighted": "awsui_highlighted_16mm3_qwnia_126",
  "is-focused": "awsui_is-focused_16mm3_qwnia_139",
  "variant-navigation": "awsui_variant-navigation_16mm3_qwnia_143",
  "category": "awsui_category_16mm3_qwnia_155",
  "expandable": "awsui_expandable_16mm3_qwnia_112",
  "expand-icon": "awsui_expand-icon_16mm3_qwnia_176",
  "expand-icon-up": "awsui_expand-icon-up_16mm3_qwnia_183",
  "expand-icon-right": "awsui_expand-icon-right_16mm3_qwnia_186",
  "items-list-container": "awsui_items-list-container_16mm3_qwnia_200"
};

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/expandable-category-element.js
var ExpandableCategoryElement = function(_a) {
  var _b, _c;
  var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, expandToViewport = _a.expandToViewport, variant = _a.variant;
  var highlighted = isHighlighted(item);
  var expanded = isExpanded(item);
  var isKeyboardHighlighted = isKeyboardHighlight(item);
  var triggerRef = import_react11.default.useRef(null);
  var ref = (0, import_react11.useRef)(null);
  (0, import_react11.useEffect)(function() {
    if (triggerRef.current && highlighted && !expanded) {
      triggerRef.current.focus();
    }
  }, [expanded, highlighted]);
  var onClick = function(event) {
    var _a2;
    if (!disabled) {
      event.preventDefault();
      onGroupToggle(item, event);
      (_a2 = triggerRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
  };
  var onHover = function(event) {
    event.preventDefault();
    highlightItem(item);
  };
  var isDisabledWithReason = !!item.disabledReason && item.disabled;
  var _d = useHiddenDescription(item.disabledReason), targetProps = _d.targetProps, descriptionEl = _d.descriptionEl;
  var trigger = item.text && import_react11.default.createElement(
    "span",
    __assign({
      className: clsx_m_default(styles_css_default5.header, styles_css_default5["expandable-header"], styles_css_default5["variant-".concat(variant)], (_b = {}, _b[styles_css_default5.disabled] = disabled, _b[styles_css_default5.highlighted] = highlighted, _b[styles_css_default5["is-focused"]] = isKeyboardHighlighted, _b)),
      tabIndex: highlighted ? 0 : -1,
      ref: triggerRef
    }, getMenuItemProps({ parent: true, expanded, disabled }), isDisabledWithReason ? targetProps : {}),
    item.text,
    import_react11.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default5["expand-icon"], styles_css_default5["expand-icon-right"]) },
      import_react11.default.createElement(internal_default, { name: "caret-down-filled" })
    )
  );
  var content;
  if (isDisabledWithReason) {
    content = import_react11.default.createElement(
      Tooltip,
      { content: item.disabledReason },
      trigger,
      descriptionEl
    );
  } else if (disabled) {
    content = trigger;
  } else {
    content = import_react11.default.createElement(dropdown_default, { open: expanded, stretchWidth: false, interior: true, expandToViewport, trigger }, item.items && expanded && import_react11.default.createElement(
      "ul",
      { role: "menu", "aria-label": item.text, className: clsx_m_default(styles_css_default5["items-list-container"]) },
      import_react11.default.createElement(ItemsList, { items: item.items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, variant })
    ));
  }
  return import_react11.default.createElement("li", { className: clsx_m_default(styles_css_default5.category, styles_css_default5["variant-".concat(variant)], styles_css_default5.expandable, (_c = {}, _c[styles_css_default5.expanded] = expanded, _c[styles_css_default5.disabled] = disabled, _c[styles_css_default5.highlighted] = highlighted, _c)), role: "presentation", "data-testid": item.id, ref, onClick, onMouseEnter: onHover, onTouchStart: onHover }, content);
};
var expandable_category_element_default = ExpandableCategoryElement;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/category-element.js
var import_react12 = __toESM(require_react());
init_clsx_m();
var CategoryElement = function(_a) {
  var _b;
  var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, variant = _a.variant;
  return import_react12.default.createElement(
    "li",
    { className: clsx_m_default(styles_css_default5.category, styles_css_default5["variant-".concat(variant)], disabled && styles_css_default5.disabled), role: "presentation", "aria-disabled": disabled ? "true" : void 0 },
    item.text && import_react12.default.createElement("p", { className: clsx_m_default(styles_css_default5.header, (_b = {}, _b[styles_css_default5.disabled] = disabled, _b)), "aria-hidden": "true" }, item.text),
    import_react12.default.createElement("ul", { className: clsx_m_default(styles_css_default5["items-list-container"]), role: "group", "aria-label": item.text }, item.items && import_react12.default.createElement(ItemsList, { items: item.items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, categoryDisabled: disabled, hasCategoryHeader: !!item.text, variant }))
  );
};
var category_element_default = CategoryElement;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/mobile-expandable-category-element.js
var import_react14 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/mobile-expandable-group.js
var import_react13 = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/styles.scoped.css";
var styles_css_default6 = {
  "root": "awsui_root_14cnr_zbvdk_93",
  "trigger": "awsui_trigger_14cnr_zbvdk_106",
  "dropdown": "awsui_dropdown_14cnr_zbvdk_109",
  "nowrap": "awsui_nowrap_14cnr_zbvdk_120",
  "open": "awsui_open_14cnr_zbvdk_123"
};

// node_modules/@cloudscape-design/components/button-dropdown/mobile-expandable-group/mobile-expandable-group.js
var MobileExpandableGroup = function(_a) {
  var _b;
  var children = _a.children, trigger = _a.trigger, open = _a.open;
  return import_react13.default.createElement(
    "div",
    { className: clsx_m_default(styles_css_default6.root) },
    import_react13.default.createElement("div", { className: styles_css_default6.trigger }, trigger),
    import_react13.default.createElement("div", { className: clsx_m_default(styles_css_default6.dropdown, (_b = {}, _b[styles_css_default6.open] = open, _b)), "data-open": open }, children)
  );
};
var mobile_expandable_group_default = MobileExpandableGroup;

// node_modules/@cloudscape-design/components/button-dropdown/category-elements/mobile-expandable-category-element.js
var MobileExpandableCategoryElement = function(_a) {
  var _b, _c, _d;
  var item = _a.item, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, disabled = _a.disabled, variant = _a.variant;
  var highlighted = isHighlighted(item);
  var expanded = isExpanded(item);
  var isKeyboardHighlighted = isKeyboardHighlight(item);
  var triggerRef = import_react14.default.useRef(null);
  (0, import_react14.useEffect)(function() {
    if (triggerRef.current && highlighted && !expanded) {
      triggerRef.current.focus();
    }
  }, [expanded, highlighted]);
  var onClick = function(e) {
    if (!disabled) {
      e.preventDefault();
      onGroupToggle(item, e);
    }
  };
  var onHover = function(event) {
    event.preventDefault();
    highlightItem(item);
  };
  var isDisabledWithReason = !!item.disabledReason && item.disabled;
  var _e = useHiddenDescription(item.disabledReason), targetProps = _e.targetProps, descriptionEl = _e.descriptionEl;
  var trigger = item.text && import_react14.default.createElement(
    "span",
    __assign({
      className: clsx_m_default(styles_css_default5.header, styles_css_default5["expandable-header"], styles_css_default5["variant-".concat(variant)], (_b = {}, _b[styles_css_default5.highlighted] = highlighted, _b[styles_css_default5["rolled-down"]] = expanded, _b[styles_css_default5.disabled] = disabled, _b[styles_css_default5["is-focused"]] = isKeyboardHighlighted, _b)),
      tabIndex: highlighted ? 0 : -1,
      ref: triggerRef
    }, getMenuItemProps({ parent: true, disabled, expanded }), isDisabledWithReason ? targetProps : {}),
    item.text,
    import_react14.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default5["expand-icon"], (_c = {}, _c[styles_css_default5["expand-icon-up"]] = expanded, _c)) },
      import_react14.default.createElement(internal_default, { name: "caret-down-filled" })
    )
  );
  var content;
  if (isDisabledWithReason) {
    content = import_react14.default.createElement(
      import_react14.default.Fragment,
      null,
      descriptionEl,
      import_react14.default.createElement(Tooltip, { content: item.disabledReason }, trigger)
    );
  } else if (disabled) {
    content = trigger;
  } else {
    content = import_react14.default.createElement(mobile_expandable_group_default, { open: expanded, trigger }, item.items && expanded && import_react14.default.createElement(
      "ul",
      { role: "menu", "aria-label": item.text, className: clsx_m_default(styles_css_default5["items-list-container"]) },
      import_react14.default.createElement(ItemsList, { items: item.items, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, hasCategoryHeader: true, variant })
    ));
  }
  return import_react14.default.createElement("li", { className: clsx_m_default(styles_css_default5.category, styles_css_default5["variant-".concat(variant)], styles_css_default5.expandable, (_d = {}, _d[styles_css_default5.expanded] = expanded, _d[styles_css_default5.disabled] = disabled, _d[styles_css_default5.highlighted] = highlighted || expanded, _d[styles_css_default5.expandable] = true, _d)), role: "presentation", onClick, onMouseEnter: onHover, onTouchStart: onHover, "data-testid": item.id }, content);
};
var mobile_expandable_category_element_default = MobileExpandableCategoryElement;

// node_modules/@cloudscape-design/components/button-dropdown/items-list.js
function ItemsList(_a) {
  var items = _a.items, onItemActivate = _a.onItemActivate, onGroupToggle = _a.onGroupToggle, targetItem = _a.targetItem, isHighlighted = _a.isHighlighted, isKeyboardHighlight = _a.isKeyboardHighlight, isExpanded = _a.isExpanded, highlightItem = _a.highlightItem, _b = _a.categoryDisabled, categoryDisabled = _b === void 0 ? false : _b, _c = _a.hasExpandableGroups, hasExpandableGroups = _c === void 0 ? false : _c, _d = _a.hasCategoryHeader, hasCategoryHeader = _d === void 0 ? false : _d, _e = _a.expandToViewport, expandToViewport = _e === void 0 ? false : _e, _f = _a.variant, variant = _f === void 0 ? "normal" : _f;
  var isMobile = useMobile();
  var elements = items.map(function(item, index) {
    var _a2, _b2, _c2, _d2;
    if (!isItemGroup(item)) {
      return import_react15.default.createElement(item_element_default, { key: index, item, onItemActivate, disabled: (_a2 = item.disabled) !== null && _a2 !== void 0 ? _a2 : categoryDisabled, highlighted: isHighlighted(item), isKeyboardHighlighted: isKeyboardHighlight(item), highlightItem, first: index === 0 || isItemGroup(items[index - 1]), last: index === items.length - 1 || isItemGroup(items[index + 1]), hasCategoryHeader, variant });
    }
    if (hasExpandableGroups) {
      return item.text ? isMobile ? import_react15.default.createElement(mobile_expandable_category_element_default, { key: index, item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled: (_b2 = item.disabled) !== null && _b2 !== void 0 ? _b2 : false, variant }) : import_react15.default.createElement(expandable_category_element_default, { key: index, item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled: (_c2 = item.disabled) !== null && _c2 !== void 0 ? _c2 : false, expandToViewport, variant }) : null;
    }
    return import_react15.default.createElement(category_element_default, { key: index, item, onItemActivate, onGroupToggle, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, disabled: (_d2 = item.disabled) !== null && _d2 !== void 0 ? _d2 : false, variant });
  });
  return import_react15.default.createElement(import_react15.default.Fragment, null, elements);
}

// node_modules/@cloudscape-design/components/internal/components/options-list/utils/use-open-state.js
var import_react16 = __toESM(require_react());
var useOpenState = function(_a) {
  var onOpen = _a.onOpen, onClose = _a.onClose;
  var _b = (0, import_react16.useState)(false), isOpen = _b[0], setIsOpen = _b[1];
  var openDropdown = function() {
    if (!isOpen) {
      setIsOpen(true);
      onOpen === null || onOpen === void 0 ? void 0 : onOpen();
    }
  };
  var closeDropdown = function() {
    if (isOpen) {
      setIsOpen(false);
      onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  };
  var toggleDropdown = function() {
    if (isOpen) {
      closeDropdown();
    } else {
      openDropdown();
    }
  };
  return { isOpen, openDropdown, closeDropdown, toggleDropdown };
};

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-highlighted-menu.js
var import_react17 = __toESM(require_react());

// node_modules/@cloudscape-design/components/button-dropdown/utils/create-items-tree.js
function createItemsTree(items) {
  var itemToIndex = /* @__PURE__ */ new Map();
  var indexToItem = /* @__PURE__ */ new Map();
  var flatIndices = [];
  traverseItems(items, function(item, index) {
    var indexKey = stringifyIndex(index);
    itemToIndex.set(item, indexKey);
    indexToItem.set(indexKey, item);
    flatIndices.push(indexKey);
  });
  return {
    getItem: function(index) {
      var indexKey = stringifyIndex(index);
      return indexToItem.get(indexKey) || null;
    },
    getItemIndex: function(item) {
      var indexKey = itemToIndex.get(item);
      if (!indexKey) {
        throw new Error("Invariant violation: item is not found.");
      }
      return parseIndex(indexKey);
    },
    getSequentialIndex: function(index, direction) {
      var indexKey = stringifyIndex(index);
      var position = flatIndices.indexOf(indexKey);
      var nextIndexKey = flatIndices[position + direction];
      if (!nextIndexKey) {
        return null;
      }
      return parseIndex(nextIndexKey);
    },
    getParentIndex: function(item) {
      var indexKey = itemToIndex.get(item);
      if (!indexKey) {
        throw new Error("Invariant violation: item is not found.");
      }
      var index = parseIndex(indexKey);
      if (index.length === 1) {
        return null;
      }
      return index.slice(0, index.length - 1);
    }
  };
}
function traverseItems(items, act, parentIndex) {
  if (parentIndex === void 0) {
    parentIndex = [];
  }
  items.forEach(function(item, index) {
    var itemIndex = __spreadArray(__spreadArray([], parentIndex, true), [index], false);
    act(item, itemIndex);
    if (isItemGroup(item)) {
      traverseItems(item.items, act, itemIndex);
    }
  });
}
function stringifyIndex(index) {
  return index.join("-");
}
function parseIndex(index) {
  return index.split("-").map(function(it) {
    return parseInt(it);
  });
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/move-highlight.js
function moveHighlight(_a) {
  var startIndex = _a.startIndex, expandedIndex = _a.expandedIndex, getNext = _a.getNext, hasExpandableGroups = _a.hasExpandableGroups, isInRestrictedView = _a.isInRestrictedView;
  var tryMove = function(currentIndex) {
    var _a2;
    var next = getNext(currentIndex);
    if (!next) {
      return null;
    }
    if (((_a2 = next.parent) === null || _a2 === void 0 ? void 0 : _a2.disabled) && hasExpandableGroups) {
      return tryMove(next.index);
    }
    if (isItemGroup(next.item) && !hasExpandableGroups) {
      return tryMove(next.index);
    }
    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {
      return tryMove(next.index);
    }
    if (hasExpandableGroups && isInRestrictedView && !isSameLevel(next.index, expandedIndex) && !isIncluded(expandedIndex, next.index)) {
      return tryMove(next.index);
    }
    return next.index;
  };
  return tryMove(startIndex);
}
function isSameParent(left, right) {
  return indexEquals(left.slice(0, -1), right.slice(0, -1));
}
function isSameLevel(left, right) {
  return left.length === right.length;
}
function isIncluded(parent, child) {
  return indexEquals(parent, child.slice(0, -1));
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-highlighted-menu.js
function useHighlightedMenu(_a) {
  var items = _a.items, hasExpandableGroups = _a.hasExpandableGroups, _b = _a.isInRestrictedView, isInRestrictedView = _b === void 0 ? false : _b;
  var _c = (0, import_react17.useState)([]), targetIndex = _c[0], setTargetIndex = _c[1];
  var _d = (0, import_react17.useState)([]), expandedIndex = _d[0], setExpandedIndex = _d[1];
  var _e = (0, import_react17.useState)(true), isUsingMouse = _e[0], setIsUsingMouse = _e[1];
  var _f = (0, import_react17.useMemo)(function() {
    return createItemsTree(items);
  }, [items]), getItem = _f.getItem, getItemIndex2 = _f.getItemIndex, getSequentialIndex = _f.getSequentialIndex, getParentIndex = _f.getParentIndex;
  var targetItem = (0, import_react17.useMemo)(function() {
    return getItem(targetIndex);
  }, [targetIndex, getItem]);
  var isHighlighted = (0, import_react17.useCallback)(function(item) {
    var index = getItemIndex2(item);
    return indexIncludes(index, targetIndex);
  }, [targetIndex, getItemIndex2]);
  var isKeyboardHighlight = (0, import_react17.useCallback)(function(item) {
    var index = getItemIndex2(item);
    return !isUsingMouse && indexEquals(index, targetIndex);
  }, [targetIndex, getItemIndex2, isUsingMouse]);
  var isExpanded = (0, import_react17.useCallback)(function(group) {
    var index = getItemIndex2(group);
    return indexIncludes(index, expandedIndex);
  }, [expandedIndex, getItemIndex2]);
  var moveHighlight2 = (0, import_react17.useCallback)(function(direction) {
    var getNext = function(index) {
      var nextIndex2 = getSequentialIndex(index, direction);
      var item = getItem(nextIndex2 || [-1]);
      if (!nextIndex2 || !item) {
        return null;
      }
      var parentIndex = getParentIndex(item);
      var parentItem = parentIndex && getItem(parentIndex);
      return { index: nextIndex2, item, parent: parentItem || void 0 };
    };
    var nextIndex = moveHighlight({
      startIndex: targetIndex,
      expandedIndex,
      getNext,
      hasExpandableGroups,
      isInRestrictedView
    });
    if (nextIndex) {
      setTargetIndex(nextIndex);
    }
  }, [targetIndex, expandedIndex, getItem, getSequentialIndex, getParentIndex, hasExpandableGroups, isInRestrictedView]);
  var highlightItem = (0, import_react17.useCallback)(function(item) {
    setTargetIndex(getItemIndex2(item));
  }, [getItemIndex2]);
  var expandGroup = (0, import_react17.useCallback)(function(group) {
    var groupIndex = group ? getItemIndex2(group) : targetIndex;
    var firstChildIndex = __spreadArray(__spreadArray([], groupIndex, true), [0], false);
    setTargetIndex(isInRestrictedView ? groupIndex : firstChildIndex);
    setExpandedIndex(groupIndex);
  }, [targetIndex, getItemIndex2, isInRestrictedView]);
  var collapseGroup = (0, import_react17.useCallback)(function() {
    if (expandedIndex.length > 0) {
      setTargetIndex(expandedIndex);
      setExpandedIndex(expandedIndex.slice(0, -1));
    }
  }, [expandedIndex]);
  var reset = (0, import_react17.useCallback)(function() {
    setTargetIndex([]);
    setExpandedIndex([]);
  }, []);
  return {
    targetItem,
    isHighlighted,
    isKeyboardHighlight,
    isExpanded,
    moveHighlight: moveHighlight2,
    highlightItem,
    expandGroup,
    collapseGroup,
    reset,
    setIsUsingMouse
  };
}

// node_modules/@cloudscape-design/components/button-dropdown/utils/use-button-dropdown.js
function useButtonDropdown(_a) {
  var items = _a.items, onItemClick = _a.onItemClick, onItemFollow = _a.onItemFollow, onReturnFocus = _a.onReturnFocus, hasExpandableGroups = _a.hasExpandableGroups, _b = _a.isInRestrictedView, isInRestrictedView = _b === void 0 ? false : _b, _c = _a.expandToViewport, expandToViewport = _c === void 0 ? false : _c;
  var _d = useHighlightedMenu({
    items,
    hasExpandableGroups,
    isInRestrictedView
  }), targetItem = _d.targetItem, isHighlighted = _d.isHighlighted, isKeyboardHighlight = _d.isKeyboardHighlight, isExpanded = _d.isExpanded, highlightItem = _d.highlightItem, moveHighlight2 = _d.moveHighlight, expandGroup = _d.expandGroup, collapseGroup = _d.collapseGroup, reset = _d.reset, setIsUsingMouse = _d.setIsUsingMouse;
  var _e = useOpenState({ onClose: reset }), isOpen = _e.isOpen, closeDropdown = _e.closeDropdown, openStateProps = __rest(_e, ["isOpen", "closeDropdown"]);
  var toggleDropdown = function(options) {
    var _a2;
    if (options === void 0) {
      options = {};
    }
    var moveHighlightOnOpen = (_a2 = options.moveHighlightOnOpen) !== null && _a2 !== void 0 ? _a2 : true;
    if (!isOpen && moveHighlightOnOpen) {
      moveHighlight2(1);
    }
    openStateProps.toggleDropdown();
  };
  var onGroupToggle = function(item) {
    return !isExpanded(item) ? expandGroup(item) : collapseGroup();
  };
  var onItemActivate = function(item, event) {
    var details = {
      id: item.id || "undefined",
      href: item.href,
      external: item.external,
      target: getItemTarget(item)
    };
    if (onItemFollow && item.href && isPlainLeftClick(event)) {
      fireCancelableEvent(onItemFollow, details, event);
    }
    if (onItemClick) {
      fireCancelableEvent(onItemClick, details, event);
    }
    onReturnFocus();
    closeDropdown();
  };
  var doVerticalNavigation = function(direction) {
    if (isOpen) {
      moveHighlight2(direction);
    }
  };
  var openAndSelectFirst = function(event) {
    toggleDropdown();
    event.preventDefault();
  };
  var actOnParentDropdown = function(event) {
    if (!targetItem) {
      if (isOpen && !isInRestrictedView) {
        toggleDropdown();
      } else {
        openAndSelectFirst(event);
      }
    } else {
      if (isItemGroup(targetItem)) {
        onGroupToggle(targetItem, event);
      } else {
        onItemActivate(targetItem, event);
      }
    }
  };
  var activate = function(event, isEnter) {
    setIsUsingMouse(false);
    if (targetItem && isLinkItem(targetItem) && isEnter) {
      return;
    }
    event.preventDefault();
    actOnParentDropdown(event);
  };
  var onKeyDown = function(event) {
    setIsUsingMouse(false);
    switch (event.keyCode) {
      case KeyCode.down: {
        doVerticalNavigation(1);
        event.preventDefault();
        break;
      }
      case KeyCode.up: {
        doVerticalNavigation(-1);
        event.preventDefault();
        break;
      }
      case KeyCode.space: {
        event.preventDefault();
        break;
      }
      case KeyCode.enter: {
        if (!(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {
          activate(event, true);
        }
        break;
      }
      case KeyCode.left:
      case KeyCode.right: {
        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {
          expandGroup();
        } else if (hasExpandableGroups) {
          collapseGroup();
        }
        event.preventDefault();
        break;
      }
      case KeyCode.escape: {
        onReturnFocus();
        closeDropdown();
        event.preventDefault();
        break;
      }
      case KeyCode.tab: {
        if (expandToViewport) {
          onReturnFocus();
        }
        closeDropdown();
        break;
      }
    }
  };
  var onKeyUp = function(event) {
    if (event.keyCode === KeyCode.space && !(targetItem === null || targetItem === void 0 ? void 0 : targetItem.disabled)) {
      activate(event);
    }
  };
  return {
    isOpen,
    targetItem,
    isHighlighted,
    isKeyboardHighlight,
    isExpanded,
    highlightItem,
    onKeyDown,
    onKeyUp,
    onItemActivate,
    onGroupToggle,
    toggleDropdown,
    setIsUsingMouse
  };
}

// node_modules/@cloudscape-design/components/internal/components/options-list/index.js
init_clsx_m();
var import_react18 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/options-list/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/internal/components/options-list/styles.scoped.css";
var styles_css_default7 = {
  "options-list": "awsui_options-list_19gcf_fc5oi_93",
  "decrease-top-margin": "awsui_decrease-top-margin_19gcf_fc5oi_113"
};

// node_modules/@cloudscape-design/components/internal/components/options-list/index.js
var BOTTOM_TRIGGER_OFFSET = 80;
var getItemIndex = function(containerRef, event) {
  var target = findUpUntil(event.target, function(element) {
    return element === containerRef.current || !!element.dataset.mouseTarget;
  });
  var mouseTarget = target === null || target === void 0 ? void 0 : target.dataset.mouseTarget;
  return mouseTarget ? parseInt(mouseTarget) : -1;
};
var OptionsList = function(_a, ref) {
  var _b;
  var open = _a.open, children = _a.children, _c = _a.nativeAttributes, nativeAttributes = _c === void 0 ? {} : _c, onKeyDown = _a.onKeyDown, onBlur = _a.onBlur, onFocus = _a.onFocus, onLoadMore = _a.onLoadMore, onMouseUp = _a.onMouseUp, onMouseMove = _a.onMouseMove, _d = _a.position, position = _d === void 0 ? "relative" : _d, _e = _a.role, role = _e === void 0 ? "listbox" : _e, _f = _a.decreaseTopMargin, decreaseTopMargin = _f === void 0 ? false : _f, ariaLabelledby = _a.ariaLabelledby, restProps = __rest(_a, ["open", "children", "nativeAttributes", "onKeyDown", "onBlur", "onFocus", "onLoadMore", "onMouseUp", "onMouseMove", "position", "role", "decreaseTopMargin", "ariaLabelledby"]);
  var baseProps = getBaseProps(restProps);
  var menuRef = (0, import_react18.useRef)(null);
  var handleScroll = function() {
    var scrollContainer = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current;
    if (scrollContainer) {
      var bottomEdgePosition = scrollContainer.scrollTop + scrollContainer.clientHeight;
      var remainingScrollHeight = scrollContainer.scrollHeight - bottomEdgePosition;
      if (remainingScrollHeight < BOTTOM_TRIGGER_OFFSET) {
        fireNonCancelableEvent(onLoadMore);
      }
    }
  };
  (0, import_react18.useEffect)(function() {
    if (!open) {
      return;
    }
    handleScroll();
  });
  var className = clsx_m_default(styles_css_default7["options-list"], (_b = {}, _b[styles_css_default7["decrease-top-margin"]] = decreaseTopMargin, _b));
  var mergedRef = useMergeRefs(ref, menuRef);
  return import_react18.default.createElement("ul", __assign({}, baseProps, nativeAttributes, { className, ref: mergedRef, style: { position }, role, onScroll: handleScroll, onKeyDown: function(event) {
    return onKeyDown && fireKeyboardEvent(onKeyDown, event);
  }, onMouseMove: function(event) {
    return onMouseMove === null || onMouseMove === void 0 ? void 0 : onMouseMove(getItemIndex(menuRef, event));
  }, onMouseUp: function(event) {
    return onMouseUp === null || onMouseUp === void 0 ? void 0 : onMouseUp(getItemIndex(menuRef, event));
  }, onBlur: function(event) {
    return fireNonCancelableEvent(onBlur, { relatedTarget: event.relatedTarget });
  }, onFocus: function() {
    return fireNonCancelableEvent(onFocus);
  }, tabIndex: -1, "aria-labelledby": ariaLabelledby }), open && children);
};
var options_list_default = import_react18.default.forwardRef(OptionsList);

// node_modules/@cloudscape-design/components/button-dropdown/internal.js
var InternalButtonDropdown = import_react19.default.forwardRef(function(_a, ref) {
  var items = _a.items, _b = _a.variant, variant = _b === void 0 ? "normal" : _b, _c = _a.loading, loading = _c === void 0 ? false : _c, loadingText = _a.loadingText, _d = _a.disabled, disabled = _d === void 0 ? false : _d, _e = _a.expandableGroups, expandableGroups = _e === void 0 ? false : _e, children = _a.children, onItemClick = _a.onItemClick, onItemFollow = _a.onItemFollow, customTriggerBuilder = _a.customTriggerBuilder, expandToViewport = _a.expandToViewport, ariaLabel = _a.ariaLabel, title = _a.title, description = _a.description, preferCenter = _a.preferCenter, __internalRootRef = _a.__internalRootRef, props = __rest(_a, ["items", "variant", "loading", "loadingText", "disabled", "expandableGroups", "children", "onItemClick", "onItemFollow", "customTriggerBuilder", "expandToViewport", "ariaLabel", "title", "description", "preferCenter", "__internalRootRef"]);
  var isInRestrictedView = useMobile();
  var dropdownId = useUniqueId("dropdown");
  for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
    var item = items_1[_i];
    checkSafeUrl("ButtonDropdown", item.href);
  }
  var _f = useButtonDropdown({
    items,
    onItemClick,
    onItemFollow,
    onReturnFocus: function() {
      var _a2;
      return (_a2 = dropdownRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    },
    expandToViewport,
    hasExpandableGroups: expandableGroups,
    isInRestrictedView
  }), isOpen = _f.isOpen, targetItem = _f.targetItem, isHighlighted = _f.isHighlighted, isKeyboardHighlight = _f.isKeyboardHighlight, isExpanded = _f.isExpanded, highlightItem = _f.highlightItem, onKeyDown = _f.onKeyDown, onKeyUp = _f.onKeyUp, onItemActivate = _f.onItemActivate, onGroupToggle = _f.onGroupToggle, toggleDropdown = _f.toggleDropdown, setIsUsingMouse = _f.setIsUsingMouse;
  var handleMouseEvent = function() {
    setIsUsingMouse(true);
  };
  var baseProps = getBaseProps(props);
  var dropdownRef = (0, import_react19.useRef)(null);
  useForwardFocus(ref, dropdownRef);
  var clickHandler = function() {
    if (!loading && !disabled) {
      toggleDropdown({ moveHighlightOnOpen: !isInRestrictedView });
    }
  };
  var canBeOpened = !loading && !disabled;
  var triggerVariant = variant === "navigation" ? void 0 : variant;
  var iconProps = variant === "icon" ? {
    iconName: "ellipsis"
  } : {
    iconName: "caret-down-filled",
    iconAlign: "right",
    __iconClass: canBeOpened && isOpen ? styles_css_default2["rotate-up"] : styles_css_default2["rotate-down"]
  };
  var trigger = customTriggerBuilder ? customTriggerBuilder(clickHandler, dropdownRef, disabled, isOpen, ariaLabel) : import_react19.default.createElement(InternalButton, __assign({ ref: dropdownRef }, iconProps, { variant: triggerVariant, loading, loadingText, disabled, onClick: function(event) {
    event.preventDefault();
    clickHandler();
  }, ariaLabel, "aria-haspopup": true, ariaExpanded: canBeOpened && isOpen, formAction: "none" }), children);
  var hasHeader = title || description;
  var headerId = useUniqueId("awsui-button-dropdown__header");
  return import_react19.default.createElement(
    "div",
    __assign({}, baseProps, { onKeyDown, onKeyUp, onMouseDown: handleMouseEvent, onMouseMove: handleMouseEvent, className: clsx_m_default(styles_css_default2["button-dropdown"], styles_css_default2["variant-".concat(variant)], baseProps.className), "aria-owns": expandToViewport && isOpen ? dropdownId : void 0, ref: __internalRootRef }),
    import_react19.default.createElement(
      dropdown_default,
      { open: canBeOpened && isOpen, stretchWidth: false, stretchTriggerHeight: variant === "navigation", expandToViewport, preferCenter, onDropdownClose: function() {
        return toggleDropdown();
      }, trigger, dropdownId },
      hasHeader && import_react19.default.createElement(
        "div",
        { className: styles_css_default2.header, id: headerId },
        title && import_react19.default.createElement(
          InternalBox,
          { fontSize: "heading-s", fontWeight: "bold" },
          import_react19.default.createElement("span", { className: styles_css_default2.title }, title)
        ),
        description && import_react19.default.createElement(
          InternalBox,
          { fontSize: "body-s" },
          import_react19.default.createElement("span", { className: styles_css_default2.description }, description)
        )
      ),
      import_react19.default.createElement(
        options_list_default,
        { open: canBeOpened && isOpen, position: "static", role: "menu", decreaseTopMargin: true, ariaLabelledby: hasHeader ? headerId : void 0 },
        import_react19.default.createElement(ItemsList, { items, onItemActivate, onGroupToggle, hasExpandableGroups: expandableGroups, targetItem, isHighlighted, isKeyboardHighlight, isExpanded, highlightItem, expandToViewport, variant })
      )
    )
  );
});
var internal_default2 = InternalButtonDropdown;

export {
  styles_css_default4 as styles_css_default,
  PopoverContainer,
  FocusLock,
  PopoverBody,
  usePortalModeClasses,
  dropdown_default,
  useOpenState,
  options_list_default,
  styles_css_default2,
  arrow_default,
  internal_default2 as internal_default
};
//# sourceMappingURL=chunk-K7V6PRJT.js.map

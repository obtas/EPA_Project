{
  "version": 3,
  "sources": ["../../src/table/index.tsx", "../../src/table/internal.tsx", "../../src/table/tools-header.tsx", "../../@cloudscape-design/components/table/styles.css.js", "../../src/table/thead.tsx", "../../src/table/selection-control/index.tsx", "../../@cloudscape-design/components/table/selection-control/styles.css.js", "../../src/table/use-selection.ts", "../../src/table/utils.ts", "../../src/table/header-cell/index.tsx", "../../src/table/header-cell/utils.ts", "../../@cloudscape-design/components/table/header-cell/styles.css.js", "../../src/table/resizer/index.tsx", "../../@cloudscape-design/components/table/resizer/styles.css.js", "../../src/table/use-column-widths.tsx", "../../src/table/body-cell/index.tsx", "../../@cloudscape-design/components/table/body-cell/styles.css.js", "../../src/table/use-row-events.ts", "../../src/internal/hooks/use-scroll-sync/index.ts", "../../src/table/sticky-header.tsx", "../../src/table/use-sticky-header.ts", "../../src/table/sticky-scrolling.ts", "../../src/table/sticky-scrollbar.tsx", "../../src/table/use-sticky-scrollbar.ts", "../../src/table/use-mouse-down-target.ts"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport InternalTable from './internal';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { TableProps };\nconst Table = React.forwardRef(\n  <T,>(\n    { items = [], selectedItems = [], variant = 'container', ...props }: TableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Table');\n    return (\n      <InternalTable\n        items={items}\n        selectedItems={selectedItems}\n        variant={variant}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n) as TableForwardRefType;\n\napplyDisplayName(Table, 'Table');\nexport default Table;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useImperativeHandle, useRef } from 'react';\nimport { TableForwardRefType, TableProps } from './interfaces';\nimport InternalContainer from '../container/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport ToolsHeader from './tools-header';\nimport Thead, { TheadProps } from './thead';\nimport { TableBodyCell, TableBodyCellContent } from './body-cell';\nimport InternalStatusIndicator from '../status-indicator/internal';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { supportsStickyPosition } from '../internal/utils/dom';\nimport SelectionControl from './selection-control';\nimport { checkSortingState, getColumnKey, getItemKey, toContainerVariant } from './utils';\nimport { useRowEvents } from './use-row-events';\nimport { focusMarkers, useFocusMove, useSelection } from './use-selection';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { isDevelopment } from '../internal/is-development';\nimport { checkColumnWidths, ColumnWidthsProvider, DEFAULT_WIDTH } from './use-column-widths';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { ResizeTracker } from './resizer';\nimport styles from './styles.css.js';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport StickyScrollbar from './sticky-scrollbar';\nimport useFocusVisible from '../internal/hooks/focus-visible';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { SomeRequired } from '../internal/types';\nimport useMouseDownTarget from './use-mouse-down-target';\nimport { useDynamicOverlap } from '../app-layout/visual-refresh/hooks/use-dynamic-overlap';\nimport LiveRegion from '../internal/components/live-region';\n\ntype InternalTableProps<T> = SomeRequired<TableProps<T>, 'items' | 'selectedItems' | 'variant'> &\n  InternalBaseComponentProps;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    const baseProps = getBaseProps(rest);\n    stickyHeader = stickyHeader && supportsStickyPosition();\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(({ width }) => width);\n    const wrapperRefObject = useRef(null);\n    const wrapperRef = useMergeRefs(wrapperMeasureRef, wrapperRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(({ width }) => width);\n    const tableRefObject = useRef(null);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n\n    useImperativeHandle(ref, () => ({ scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined) }));\n\n    const handleScroll = useScrollSync(\n      [wrapperRefObject, scrollbarRef, secondaryWrapperRef],\n      !supportsStickyPosition()\n    );\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useFocusMove(selectionType, items.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n    const visibleColumnDefinitions = visibleColumns\n      ? columnDefinitions.filter(column => column.id && visibleColumns.indexOf(column.id) !== -1)\n      : columnDefinitions;\n    const { isItemSelected, selectAllProps, getItemSelectionProps, updateShiftToggle } = useSelection({\n      items,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n    });\n    if (loading) {\n      selectAllProps.disabled = true;\n    }\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isRefresh = useVisualRefresh();\n    const computedVariant = isRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n      ? 'container'\n      : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n\n    const theadProps: TheadProps = {\n      containerWidth,\n      selectionType,\n      selectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) => newWidth[getColumnKey(column, index)] || (column.width as number) || DEFAULT_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n    };\n\n    // Allows keyboard users to scroll horizontally with arrow keys by making the wrapper part of the tab sequence\n    const isWrapperScrollable = tableWidth && containerWidth && tableWidth > containerWidth;\n    const wrapperProps = isWrapperScrollable\n      ? { role: 'region', tabIndex: 0, 'aria-label': ariaLabels?.tableLabel }\n      : {};\n    const focusVisibleProps = useFocusVisible();\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    const hasDynamicHeight = computedVariant === 'full-page';\n    const overlapElement = useDynamicOverlap({ disabled: !hasDynamicHeight });\n\n    return (\n      <ColumnWidthsProvider\n        tableRef={tableRefObject}\n        visibleColumnDefinitions={visibleColumnDefinitions}\n        resizableColumns={resizableColumns}\n        hasSelection={!!selectionType}\n      >\n        <InternalContainer\n          {...baseProps}\n          __internalRootRef={__internalRootRef}\n          className={clsx(baseProps.className, styles.root)}\n          header={\n            <>\n              {hasHeader && (\n                <div\n                  ref={overlapElement}\n                  className={clsx(hasDynamicHeight && [styles['dark-header'], 'awsui-context-content-header'])}\n                >\n                  <div className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}>\n                    <ToolsHeader header={header} filter={filter} pagination={pagination} preferences={preferences} />\n                  </div>\n                </div>\n              )}\n              {stickyHeader && (\n                <StickyHeader\n                  ref={stickyHeaderRef}\n                  variant={computedVariant}\n                  theadProps={theadProps}\n                  wrapperRef={wrapperRefObject}\n                  theadRef={theadRef}\n                  secondaryWrapperRef={secondaryWrapperRef}\n                  tableRef={tableRefObject}\n                  onScroll={handleScroll}\n                  tableHasHeader={hasHeader}\n                />\n              )}\n            </>\n          }\n          disableHeaderPaddings={true}\n          disableContentPaddings={true}\n          variant={toContainerVariant(computedVariant)}\n          __disableFooterPaddings={true}\n          __disableFooterDivider={true}\n          footer={\n            footer && (\n              <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                <hr className={styles.divider} />\n                <div className={styles.footer}>{footer}</div>\n              </div>\n            )\n          }\n          __stickyHeader={stickyHeader}\n          __stickyOffset={stickyHeaderVerticalOffset}\n          {...focusMarkers.root}\n        >\n          <div\n            ref={wrapperRef}\n            className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n              [styles['has-footer']]: !!footer,\n              [styles['has-header']]: hasHeader,\n            })}\n            onScroll={handleScroll}\n            {...wrapperProps}\n            {...focusVisibleProps}\n          >\n            <table\n              ref={tableRef}\n              className={clsx(styles.table, resizableColumns && styles['table-layout-fixed'])}\n              // Browsers have weird mechanism to guess whether it's a data table or a layout table.\n              // If we state explicitly, they get it always correctly even with low number of rows.\n              role=\"table\"\n              aria-label={ariaLabels?.tableLabel}\n            >\n              <Thead\n                ref={theadRef}\n                hidden={stickyHeader}\n                onCellFocus={colIndex => stickyHeaderRef.current?.setFocusedColumn(colIndex)}\n                onCellBlur={() => stickyHeaderRef.current?.setFocusedColumn(null)}\n                {...theadProps}\n              />\n              <tbody>\n                {loading || items.length === 0 ? (\n                  <tr>\n                    <td\n                      colSpan={selectionType ? visibleColumnDefinitions.length + 1 : visibleColumnDefinitions.length}\n                      className={styles['cell-merged']}\n                    >\n                      <div\n                        className={styles['cell-merged-content']}\n                        style={{\n                          width:\n                            (supportsStickyPosition() && containerWidth && Math.floor(containerWidth)) || undefined,\n                        }}\n                      >\n                        {loading ? (\n                          <InternalStatusIndicator type=\"loading\" className={styles.loading} wrapText={true}>\n                            <LiveRegion visible={true}>{loadingText}</LiveRegion>\n                          </InternalStatusIndicator>\n                        ) : (\n                          <div className={styles.empty}>{empty}</div>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  items.map((item, rowIndex) => {\n                    const firstVisible = rowIndex === 0;\n                    const lastVisible = rowIndex === items.length - 1;\n                    const isSelected = !!selectionType && isItemSelected(item);\n                    const isPrevSelected = !!selectionType && !firstVisible && isItemSelected(items[rowIndex - 1]);\n                    const isNextSelected = !!selectionType && !lastVisible && isItemSelected(items[rowIndex + 1]);\n                    return (\n                      <tr\n                        key={getItemKey(trackBy, item, rowIndex)}\n                        className={clsx(styles.row, isSelected && styles['row-selected'])}\n                        onFocus={({ currentTarget }) => {\n                          // When an element inside table row receives focus we want to adjust the scroll.\n                          // However, that behaviour is unwanted when the focus is received as result of a click\n                          // as it causes the click to never reach the target element.\n                          if (!currentTarget.contains(getMouseDownTarget())) {\n                            stickyHeaderRef.current?.scrollToRow(currentTarget);\n                          }\n                        }}\n                        {...focusMarkers.item}\n                        onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, item)}\n                        onContextMenu={onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, item)}\n                      >\n                        {selectionType !== undefined && (\n                          <TableBodyCell\n                            className={styles['selection-control']}\n                            isFirstRow={firstVisible}\n                            isLastRow={lastVisible}\n                            isSelected={isSelected}\n                            isNextSelected={isNextSelected}\n                            isPrevSelected={isPrevSelected}\n                            wrapLines={false}\n                          >\n                            <SelectionControl\n                              onFocusDown={moveFocusDown}\n                              onFocusUp={moveFocusUp}\n                              onShiftToggle={updateShiftToggle}\n                              {...getItemSelectionProps(item)}\n                            />\n                          </TableBodyCell>\n                        )}\n                        {visibleColumnDefinitions.map((column, colIndex) => (\n                          <TableBodyCellContent\n                            key={getColumnKey(column, colIndex)}\n                            style={\n                              resizableColumns\n                                ? {}\n                                : {\n                                    width: column.width,\n                                    minWidth: column.minWidth,\n                                    maxWidth: column.maxWidth,\n                                  }\n                            }\n                            column={column}\n                            item={item}\n                            wrapLines={wrapLines}\n                            isFirstRow={firstVisible}\n                            isLastRow={lastVisible}\n                            isSelected={isSelected}\n                            isNextSelected={isNextSelected}\n                            isPrevSelected={isPrevSelected}\n                          />\n                        ))}\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n            {resizableColumns && <ResizeTracker />}\n          </div>\n          <StickyScrollbar\n            ref={scrollbarRef}\n            wrapperRef={wrapperRefObject}\n            tableRef={tableRefObject}\n            onScroll={handleScroll}\n          />\n        </InternalContainer>\n      </ColumnWidthsProvider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport styles from './styles.css.js';\n\ninterface ToolsHeaderProps {\n  header: React.ReactNode;\n  filter?: React.ReactNode;\n  pagination?: React.ReactNode;\n  preferences?: React.ReactNode;\n}\n\nexport default function ToolsHeader({ header, filter, pagination, preferences }: ToolsHeaderProps) {\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isSmall = breakpoint === 'default';\n  const hasTools = filter || pagination || preferences;\n  return (\n    <>\n      {header}\n      {hasTools && (\n        <div ref={ref} className={clsx(styles.tools, isSmall && styles['tools-small'])}>\n          {filter && <div className={styles['tools-filtering']}>{filter}</div>}\n          <div className={styles['tools-align-right']}>\n            {pagination && <div className={styles['tools-pagination']}>{pagination}</div>}\n            {preferences && <div className={styles['tools-preferences']}>{preferences}</div>}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_wih1l_sal8y_97\",\n  \"tools\": \"awsui_tools_wih1l_sal8y_106\",\n  \"tools-filtering\": \"awsui_tools-filtering_wih1l_sal8y_112\",\n  \"tools-align-right\": \"awsui_tools-align-right_wih1l_sal8y_117\",\n  \"tools-pagination\": \"awsui_tools-pagination_wih1l_sal8y_121\",\n  \"tools-preferences\": \"awsui_tools-preferences_wih1l_sal8y_121\",\n  \"tools-small\": \"awsui_tools-small_wih1l_sal8y_127\",\n  \"table\": \"awsui_table_wih1l_sal8y_133\",\n  \"table-layout-fixed\": \"awsui_table-layout-fixed_wih1l_sal8y_139\",\n  \"wrapper\": \"awsui_wrapper_wih1l_sal8y_143\",\n  \"variant-stacked\": \"awsui_variant-stacked_wih1l_sal8y_153\",\n  \"variant-container\": \"awsui_variant-container_wih1l_sal8y_153\",\n  \"variant-embedded\": \"awsui_variant-embedded_wih1l_sal8y_157\",\n  \"has-header\": \"awsui_has-header_wih1l_sal8y_160\",\n  \"has-footer\": \"awsui_has-footer_wih1l_sal8y_163\",\n  \"cell-merged\": \"awsui_cell-merged_wih1l_sal8y_173\",\n  \"cell-merged-content\": \"awsui_cell-merged-content_wih1l_sal8y_177\",\n  \"empty\": \"awsui_empty_wih1l_sal8y_192\",\n  \"loading\": \"awsui_loading_wih1l_sal8y_196\",\n  \"selection-control\": \"awsui_selection-control_wih1l_sal8y_200\",\n  \"selection-control-header\": \"awsui_selection-control-header_wih1l_sal8y_207\",\n  \"sticky-scrollbar\": \"awsui_sticky-scrollbar_wih1l_sal8y_212\",\n  \"sticky-scrollbar-content\": \"awsui_sticky-scrollbar-content_wih1l_sal8y_222\",\n  \"sticky-scrollbar-visible\": \"awsui_sticky-scrollbar-visible_wih1l_sal8y_225\",\n  \"dark-header\": \"awsui_dark-header_wih1l_sal8y_233\",\n  \"header-secondary\": \"awsui_header-secondary_wih1l_sal8y_237\",\n  \"table-has-header\": \"awsui_table-has-header_wih1l_sal8y_253\",\n  \"header-controls\": \"awsui_header-controls_wih1l_sal8y_257\",\n  \"divider\": \"awsui_divider_wih1l_sal8y_271\",\n  \"footer-wrapper\": \"awsui_footer-wrapper_wih1l_sal8y_278\",\n  \"footer\": \"awsui_footer_wih1l_sal8y_278\",\n  \"thead-active\": \"awsui_thead-active_wih1l_sal8y_287\",\n  \"row\": \"awsui_row_wih1l_sal8y_288\",\n  \"row-selected\": \"awsui_row-selected_wih1l_sal8y_289\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { TableProps } from './interfaces';\nimport SelectionControl, { SelectionControlProps } from './selection-control';\nimport { focusMarkers } from './use-selection';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { getColumnKey } from './utils';\nimport { TableHeaderCell } from './header-cell';\nimport { useColumnWidths } from './use-column-widths';\nimport styles from './styles.css.js';\nimport headerCellStyles from './header-cell/styles.css.js';\nimport ScreenreaderOnly from '../internal/components/screenreader-only';\n\nexport interface TheadProps {\n  containerWidth: number | null;\n  selectionType: TableProps.SelectionType | undefined;\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>;\n  sortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  variant: TableProps.Variant;\n  wrapLines: boolean | undefined;\n  resizableColumns: boolean | undefined;\n  selectAllProps: SelectionControlProps;\n  onFocusMove: ((sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) => void) | undefined;\n  onCellFocus?: (colIndex: number) => void;\n  onCellBlur?: () => void;\n  onResizeFinish: (newWidths: Record<string, number>) => void;\n  showFocusRing?: number | null;\n  onSortingChange: NonCancelableEventHandler<TableProps.SortingState<any>> | undefined;\n  sticky?: boolean;\n  hidden?: boolean;\n  stuck?: boolean;\n  singleSelectionHeaderAriaLabel?: string;\n}\n\nconst Thead = React.forwardRef(\n  (\n    {\n      containerWidth,\n      selectionType,\n      selectAllProps,\n      columnDefinitions,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      resizableColumns,\n      variant,\n      wrapLines,\n      onFocusMove,\n      onCellFocus,\n      onCellBlur,\n      onSortingChange,\n      onResizeFinish,\n      singleSelectionHeaderAriaLabel,\n      showFocusRing = null,\n      sticky = false,\n      hidden = false,\n      stuck = false,\n    }: TheadProps,\n    outerRef: React.Ref<HTMLTableRowElement>\n  ) => {\n    const headerCellClass = clsx(\n      headerCellStyles['header-cell'],\n      headerCellStyles[`header-cell-variant-${variant}`],\n      sticky && headerCellStyles['header-cell-sticky'],\n      stuck && headerCellStyles['header-cell-stuck']\n    );\n    const selectionCellClass = clsx(styles['selection-control'], styles['selection-control-header']);\n    const { columnWidths, totalWidth, updateColumn } = useColumnWidths();\n\n    return (\n      <thead className={clsx(!hidden && styles['thead-active'])}>\n        <tr {...focusMarkers.all} ref={outerRef}>\n          {selectionType === 'multi' && (\n            <th\n              className={clsx(headerCellClass, selectionCellClass, hidden && headerCellStyles['header-cell-hidden'])}\n              scope=\"col\"\n            >\n              <SelectionControl\n                onFocusDown={event => onFocusMove!(event.target as HTMLElement, -1, +1)}\n                {...selectAllProps}\n                {...(hidden ? { tabIndex: -1 } : {})}\n              />\n            </th>\n          )}\n          {selectionType === 'single' && (\n            <th\n              className={clsx(headerCellClass, selectionCellClass, hidden && headerCellStyles['header-cell-hidden'])}\n              scope=\"col\"\n            >\n              <ScreenreaderOnly>{singleSelectionHeaderAriaLabel}</ScreenreaderOnly>\n            </th>\n          )}\n          {columnDefinitions.map((column, colIndex) => {\n            let widthOverride;\n            if (resizableColumns) {\n              if (columnWidths) {\n                // use stateful value if available\n                widthOverride = columnWidths[getColumnKey(column, colIndex)];\n              }\n              if (colIndex === columnDefinitions.length - 1 && containerWidth && containerWidth > totalWidth) {\n                // let the last column grow and fill the container width\n                widthOverride = 'auto';\n              }\n            }\n            return (\n              <TableHeaderCell\n                key={getColumnKey(column, colIndex)}\n                className={headerCellClass}\n                style={{\n                  width: widthOverride || column.width,\n                  minWidth: sticky ? undefined : column.minWidth,\n                  maxWidth: resizableColumns || sticky ? undefined : column.maxWidth,\n                }}\n                tabIndex={sticky ? -1 : 0}\n                showFocusRing={colIndex === showFocusRing}\n                column={column}\n                activeSortingColumn={sortingColumn}\n                sortingDescending={sortingDescending}\n                sortingDisabled={sortingDisabled}\n                wrapLines={wrapLines}\n                hidden={hidden}\n                colIndex={colIndex}\n                updateColumn={updateColumn}\n                onResizeFinish={() => onResizeFinish(columnWidths)}\n                resizableColumns={resizableColumns}\n                onClick={detail => fireNonCancelableEvent(onSortingChange, detail)}\n                onFocus={() => onCellFocus?.(colIndex)}\n                onBlur={onCellBlur}\n              />\n            );\n          })}\n        </tr>\n      </thead>\n    );\n  }\n);\n\nexport default Thead;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { KeyboardEvent, KeyboardEventHandler, MouseEvent } from 'react';\nimport { KeyCode } from '../../internal/keycode';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\nimport InternalCheckbox from '../../checkbox/internal';\nimport RadioButton from '../../radio-group/radio-button';\n\nimport { TableProps } from '../interfaces';\nimport styles from './styles.css.js';\n\nexport interface SelectionControlProps {\n  selectionType: TableProps['selectionType'];\n  checked: boolean;\n  disabled: boolean;\n  name: string;\n  indeterminate?: boolean;\n  onChange?: () => void;\n  onShiftToggle?(shiftPressed: boolean): void;\n  onFocusUp?: KeyboardEventHandler;\n  onFocusDown?: KeyboardEventHandler;\n  ariaLabel?: string;\n  tabIndex?: -1;\n}\n\nexport default function SelectionControl({\n  selectionType,\n  indeterminate = false,\n  onShiftToggle,\n  onFocusUp,\n  onFocusDown,\n  name,\n  ariaLabel,\n  ...sharedProps\n}: SelectionControlProps) {\n  const controlId = useUniqueId();\n  const isMultiSelection = selectionType === 'multi';\n\n  const setShiftState = (event: KeyboardEvent | MouseEvent) => {\n    if (isMultiSelection) {\n      onShiftToggle && onShiftToggle(event.shiftKey);\n    }\n  };\n\n  const onMouseDownHandler = (event: MouseEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      // To overcome an issue\n      // If you shift+click or ctrl+click on a label for a checkbox, checkbox is not checked.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=559506\n      event.preventDefault();\n    }\n  };\n\n  // native checkboxes do not have focus move via keyboard, we implement it here programmatically\n  const handleKeyDown = (event: KeyboardEvent) => {\n    setShiftState(event);\n    if (isMultiSelection) {\n      if (event.keyCode === KeyCode.up) {\n        event.preventDefault();\n        onFocusUp && onFocusUp(event);\n      }\n      if (event.keyCode === KeyCode.down) {\n        event.preventDefault();\n        onFocusDown && onFocusDown(event);\n      }\n    }\n  };\n\n  const handleClick = (event: MouseEvent) => {\n    const target = event.currentTarget;\n    const nativeInput = (target.tagName === 'INPUT' ? target : target.querySelector('input')) as HTMLInputElement;\n    // Clicking on input, does not focus it on Firefox (AWSUI-11345)\n    nativeInput?.focus();\n  };\n\n  const selector = isMultiSelection ? (\n    <InternalCheckbox {...sharedProps} controlId={controlId} indeterminate={indeterminate} />\n  ) : (\n    <RadioButton {...sharedProps} controlId={controlId} name={name} value={''} label={''} />\n  );\n\n  return (\n    <>\n      <label\n        onKeyDown={handleKeyDown}\n        onKeyUp={setShiftState}\n        onMouseDown={onMouseDownHandler}\n        onMouseUp={setShiftState}\n        onClick={handleClick}\n        htmlFor={controlId}\n        className={clsx(styles.label, styles.root)}\n        aria-label={ariaLabel}\n      >\n        {selector}\n      </label>\n      {/* HACK: IE11 collapses td's height to 0, if it contains only an absouletely positioned label */}\n      <span className={clsx(styles.stud)} aria-hidden={true}>\n        &nbsp;\n      </span>\n    </>\n  );\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1ut8b_8i78g_93\",\n  \"label\": \"awsui_label_1ut8b_8i78g_97\",\n  \"stud\": \"awsui_stud_1ut8b_8i78g_113\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { KeyboardEvent, useState } from 'react';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useUniqueId } from '../internal/hooks/use-unique-id';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { TableProps } from './interfaces';\nimport { getTrackableValue } from './utils';\nimport selectionStyles from './selection-control/styles.css.js';\nimport { joinStrings } from '../internal/utils/strings';\n\nconst SELECTION_ITEM = 'selection-item';\nconst SELECTION_ROOT = 'selection-root';\n\nfunction findSelectionControlByIndex(rootContainer: HTMLElement, index: number) {\n  if (index === -1) {\n    // find \"select all\" checkbox\n    return rootContainer.querySelector<HTMLInputElement>(\n      `[data-${SELECTION_ITEM}=\"all\"] .${selectionStyles.root} input`\n    );\n  }\n  return rootContainer.querySelectorAll<HTMLInputElement>(\n    `[data-${SELECTION_ITEM}=\"item\"] .${selectionStyles.root} input`\n  )[index];\n}\n\nfunction findRootContainer(element: HTMLElement) {\n  return findUpUntil(element, node => node.dataset.selectionRoot === 'true')!;\n}\n\nexport function useFocusMove(selectionType: TableProps['selectionType'], totalItems: number) {\n  if (selectionType !== 'multi') {\n    return {};\n  }\n  function moveFocus(sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) {\n    let index = fromIndex;\n    const rootContainer = findRootContainer(sourceElement);\n\n    while (index >= -1 && index < totalItems) {\n      index += direction;\n      const control = findSelectionControlByIndex(rootContainer, index);\n      if (control && !control.disabled) {\n        control.focus();\n        break;\n      }\n    }\n  }\n  const [moveFocusDown, moveFocusUp] = ([1, -1] as const).map(direction => {\n    return (event: KeyboardEvent) => {\n      const target = event.currentTarget as HTMLElement;\n      const itemNode = findUpUntil(target, node => node.dataset.selectionItem === 'item')!;\n      const fromIndex = Array.prototype.indexOf.call(itemNode.parentElement!.children, itemNode);\n      moveFocus(target, fromIndex, direction);\n    };\n  });\n  return {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus,\n  };\n}\n\n// A set, that compares items by their \"trackables\" (the results of applying `trackBy` to them)\nclass ItemSet<T> {\n  constructor(trackBy: TableProps.TrackBy<T> | undefined, items: ReadonlyArray<T>) {\n    this.trackBy = trackBy;\n    items.forEach(this.put);\n  }\n  private trackBy: TableProps.TrackBy<T> | undefined;\n  private map: Map<unknown, T> = new Map();\n  put = (item: T) => this.map.set.call(this.map, getTrackableValue(this.trackBy, item), item);\n  has = (item: T) => this.map.has.call(this.map, getTrackableValue(this.trackBy, item));\n  forEach = this.map.forEach.bind(this.map);\n}\n\nexport const focusMarkers = {\n  item: { ['data-' + SELECTION_ITEM]: 'item' },\n  all: { ['data-' + SELECTION_ITEM]: 'all' },\n  root: { ['data-' + SELECTION_ROOT]: 'true' },\n};\n\nexport function useSelection<T>({\n  items,\n  selectedItems = [],\n  selectionType,\n  isItemDisabled = () => false,\n  trackBy,\n  onSelectionChange,\n  ariaLabels,\n}: Pick<\n  TableProps<T>,\n  'ariaLabels' | 'items' | 'selectedItems' | 'selectionType' | 'isItemDisabled' | 'trackBy' | 'onSelectionChange'\n>) {\n  const [shiftPressed, setShiftPressed] = useState(false);\n  const [lastClickedItem, setLastClickedItem] = useState<T | null>(null);\n  const selectionName = useUniqueId();\n  const finalSelectedItems = selectionType === 'single' ? selectedItems.slice(0, 1) : selectedItems;\n  const selectedSet = new ItemSet(trackBy, finalSelectedItems);\n  const itemIndexesMap = new Map();\n  items.forEach((item, i) => itemIndexesMap.set(getTrackableValue(trackBy, item), i));\n  const isItemSelected = selectedSet.has.bind(selectedSet);\n  const getItemState = (item: T) => ({\n    disabled: isItemDisabled(item),\n    selected: isItemSelected(item),\n  });\n  const [allDisabled, allEnabledSelected] = selectionType\n    ? items.reduce(\n        ([allDisabled, allEnabledSelected], item) => {\n          const { disabled, selected } = getItemState(item);\n          return [\n            // all items are disabled (or none are present)\n            allDisabled && disabled,\n            // all enabled items are selected (or none are present)\n            allEnabledSelected && (selected || disabled),\n          ];\n        },\n        [true, true]\n      )\n    : [true, true];\n\n  // the page has at least one selected item\n  const hasSelected = finalSelectedItems.length > 0;\n\n  const handleToggleAll = () => {\n    const requestedItems = new ItemSet(trackBy, items);\n    const newSelectedItems = allEnabledSelected ? deselectItems(requestedItems) : selectItems(requestedItems);\n    fireNonCancelableEvent(onSelectionChange, { selectedItems: newSelectedItems });\n  };\n\n  const getRequestedItems = (item: T) => {\n    const requestedItems = new ItemSet(trackBy, [item]);\n    let lastClickedItemIndex = lastClickedItem ? itemIndexesMap.get(getTrackableValue(trackBy, lastClickedItem)) : -1;\n    if (lastClickedItemIndex === undefined) {\n      lastClickedItemIndex = -1;\n    }\n    // we use lastClickedItemIndex to determine if filtering/sorting/pagination\n    // made previously selected item invisible, therefore we reset state for shift-select\n    if (shiftPressed && lastClickedItemIndex !== -1) {\n      // item is always in items\n      const currentItemIndex = itemIndexesMap.get(getTrackableValue(trackBy, item)) as number;\n      const start = Math.min(currentItemIndex, lastClickedItemIndex);\n      const end = Math.max(currentItemIndex, lastClickedItemIndex);\n      items.slice(start, end + 1).forEach(item => requestedItems.put(item));\n    }\n    return requestedItems;\n  };\n\n  const deselectItems = (requestedItems: ItemSet<T>) => {\n    const newSelectedItems: Array<T> = [];\n    selectedItems.forEach(selectedItem => {\n      const toUnselect = requestedItems.has(selectedItem);\n      if (!toUnselect || isItemDisabled(selectedItem)) {\n        newSelectedItems.push(selectedItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const selectItems = (requestedItems: ItemSet<T>) => {\n    const newSelectedItems = [...selectedItems];\n    requestedItems.forEach(newItem => {\n      const { selected, disabled } = getItemState(newItem);\n      if (!selected && !disabled) {\n        newSelectedItems.push(newItem);\n      }\n    });\n    return newSelectedItems;\n  };\n\n  const handleToggleItem = (item: T) => () => {\n    const { disabled, selected } = getItemState(item);\n    if (disabled || (selectionType === 'single' && selected)) {\n      return;\n    }\n    if (selectionType === 'single') {\n      fireNonCancelableEvent(onSelectionChange, { selectedItems: [item] });\n    } else {\n      const requestedItems = getRequestedItems(item);\n      const selectedItems = selected ? deselectItems(requestedItems) : selectItems(requestedItems);\n      fireNonCancelableEvent(onSelectionChange, { selectedItems });\n      setLastClickedItem(item);\n    }\n  };\n  return {\n    isItemSelected,\n    selectAllProps: {\n      name: selectionName,\n      disabled: allDisabled,\n      selectionType: selectionType,\n      indeterminate: hasSelected && !allEnabledSelected,\n      checked: hasSelected && allEnabledSelected,\n      onChange: handleToggleAll,\n      ariaLabel: joinStrings(ariaLabels?.selectionGroupLabel, ariaLabels?.allItemsSelectionLabel?.({ selectedItems })),\n    },\n    getItemSelectionProps: (item: T) => ({\n      name: selectionName,\n      selectionType: selectionType,\n      ariaLabel: joinStrings(\n        ariaLabels?.selectionGroupLabel,\n        ariaLabels?.itemSelectionLabel?.({ selectedItems }, item)\n      ),\n      onChange: handleToggleItem(item),\n      checked: isItemSelected(item),\n      disabled: isItemDisabled(item),\n    }),\n    updateShiftToggle: (value: boolean) => {\n      setShiftPressed(value);\n    },\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { InternalContainerProps } from '../container/internal';\nimport { TableProps } from './interfaces';\nimport { warnOnce } from '../internal/logging';\n\nexport const applyTrackBy = <T>(trackBy: TableProps.TrackBy<T>, item: T) => {\n  if (typeof trackBy === 'function') {\n    return trackBy(item);\n  }\n  return (item as any)[trackBy];\n};\n\nexport const getItemKey = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T, index: number) => {\n  if (!trackBy) {\n    return index;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getTrackableValue = <T>(trackBy: TableProps.TrackBy<T> | undefined, item: T) => {\n  if (!trackBy) {\n    return item;\n  }\n  return applyTrackBy(trackBy, item);\n};\n\nexport const getColumnKey = <T>(column: TableProps.ColumnDefinition<T>, index: number) => {\n  return column.id || index;\n};\n\nexport const toContainerVariant = (variant: TableProps.Variant | undefined): InternalContainerProps['variant'] => {\n  const isDefaultVariant = !variant || variant === 'container';\n  return isDefaultVariant ? 'default' : variant;\n};\n\nexport function checkSortingState<T>(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<T>>,\n  sortingComparator: TableProps.SortingColumn<T>['sortingComparator']\n) {\n  const matchedColumn = columnDefinitions.filter(column => column.sortingComparator === sortingComparator)[0];\n  if (!matchedColumn) {\n    warnOnce(\n      'Table',\n      'Currently active sorting comparator was not found in any columns. Make sure to provide the same comparator function instance on each render.'\n    );\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport InternalIcon from '../../icon/internal';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport { KeyCode } from '../../internal/keycode';\nimport { TableProps } from '../interfaces';\nimport { getAriaSort, getSortingIconName, getSortingStatus, isSorted } from './utils';\nimport styles from './styles.css.js';\nimport { Resizer } from '../resizer';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id';\n\ninterface TableHeaderCellProps {\n  className?: string;\n  style?: React.CSSProperties;\n  tabIndex: number;\n  column: TableProps.ColumnDefinition<any>;\n  activeSortingColumn: TableProps.SortingColumn<any> | undefined;\n  sortingDescending: boolean | undefined;\n  sortingDisabled: boolean | undefined;\n  wrapLines: boolean | undefined;\n  showFocusRing: boolean;\n  hidden?: boolean;\n  onClick(detail: TableProps.SortingState<any>): void;\n  onResizeFinish: () => void;\n  colIndex: number;\n  updateColumn: (colIndex: number, newWidth: number) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  resizableColumns?: boolean;\n}\n\nexport function TableHeaderCell({\n  className,\n  style,\n  tabIndex,\n  column,\n  activeSortingColumn,\n  sortingDescending,\n  sortingDisabled,\n  wrapLines,\n  showFocusRing,\n  hidden,\n  onClick,\n  colIndex,\n  onFocus,\n  onBlur,\n  updateColumn,\n  resizableColumns,\n  onResizeFinish,\n}: TableHeaderCellProps) {\n  const focusVisible = useFocusVisible();\n  const sortable = !!column.sortingComparator || !!column.sortingField;\n  const sorted = !!activeSortingColumn && isSorted(column, activeSortingColumn);\n  const sortingStatus = getSortingStatus(sortable, sorted, !!sortingDescending, !!sortingDisabled);\n  const handleClick = () =>\n    onClick({\n      sortingColumn: column,\n      isDescending: sorted ? !sortingDescending : false,\n    });\n\n  // Elements with role=\"button\" do not have the default behavior of <button>, where pressing\n  // Enter or Space will trigger a click event. Therefore we need to add this ourselves.\n  // The native <button> element cannot be used due to a misaligned implementation in Firefox:\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=843003\n  const handleKeyPress = ({ nativeEvent: e }: React.KeyboardEvent) => {\n    if (e.keyCode === KeyCode.enter || e.keyCode === KeyCode.space) {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  const headerId = useUniqueId('table-header-');\n\n  return (\n    <th\n      className={clsx(className, {\n        [styles['header-cell-resizable']]: !!resizableColumns,\n        [styles['header-cell-sortable']]: sortingStatus,\n        [styles['header-cell-sorted']]: sortingStatus === 'ascending' || sortingStatus === 'descending',\n        [styles['header-cell-disabled']]: sortingDisabled,\n        [styles['header-cell-ascending']]: sortingStatus === 'ascending',\n        [styles['header-cell-descending']]: sortingStatus === 'descending',\n        [styles['header-cell-hidden']]: hidden,\n      })}\n      aria-sort={sortingStatus && getAriaSort(sortingStatus)}\n      style={style}\n      scope=\"col\"\n    >\n      <div\n        className={clsx(styles['header-cell-content'], {\n          [styles['header-cell-fake-focus']]: showFocusRing && focusVisible['data-awsui-focus-visible'],\n        })}\n        aria-label={\n          column.ariaLabel\n            ? column.ariaLabel({\n                sorted: sorted,\n                descending: sorted && !!sortingDescending,\n                disabled: !!sortingDisabled,\n              })\n            : undefined\n        }\n        {...(sortingDisabled || !sortingStatus\n          ? { ['aria-disabled']: 'true' }\n          : {\n              onKeyPress: handleKeyPress,\n              tabIndex: tabIndex,\n              role: 'button',\n              ...focusVisible,\n              onClick: handleClick,\n              onFocus,\n              onBlur,\n            })}\n      >\n        <div className={clsx(styles['header-cell-text'], wrapLines && styles['header-cell-text-wrap'])} id={headerId}>\n          {column.header}\n        </div>\n        {sortingStatus && (\n          <span className={styles['sorting-icon']}>\n            <InternalIcon name={getSortingIconName(sortingStatus)} />\n          </span>\n        )}\n      </div>\n      {resizableColumns && (\n        <>\n          <Resizer\n            onDragMove={newWidth => updateColumn(colIndex, newWidth)}\n            onFinish={onResizeFinish}\n            ariaLabelledby={headerId}\n            minWidth={typeof column.minWidth === 'string' ? parseInt(column.minWidth) : column.minWidth}\n          />\n        </>\n      )}\n    </th>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { TableProps } from '../interfaces';\n\ntype SortingStatus = 'sortable' | 'ascending' | 'descending';\nconst stateToIcon = {\n  sortable: 'caret-down',\n  ascending: 'caret-up-filled',\n  descending: 'caret-down-filled',\n} as const;\nconst stateToAriaSort = {\n  sortable: 'none',\n  ascending: 'ascending',\n  descending: 'descending',\n} as const;\n\nexport const getSortingStatus = (\n  sortable: boolean,\n  sorted: boolean,\n  descending: boolean,\n  disabled: boolean\n): SortingStatus | undefined => {\n  if (sorted) {\n    if (descending) {\n      return 'descending';\n    }\n    return 'ascending';\n  }\n  if (sortable && !disabled) {\n    return 'sortable';\n  }\n  return undefined;\n};\n\nexport const getSortingIconName = (sortingState: SortingStatus) => stateToIcon[sortingState];\nexport const getAriaSort = (sortingState: SortingStatus) => stateToAriaSort[sortingState];\nexport const isSorted = <T>(column: TableProps.ColumnDefinition<T>, sortingColumn: TableProps.SortingColumn<T>) =>\n  column === sortingColumn ||\n  (column.sortingField !== undefined && column.sortingField === sortingColumn.sortingField) ||\n  (column.sortingComparator !== undefined && column.sortingComparator === sortingColumn.sortingComparator);\n", "\n    import './styles.scoped.css';\n    export default {\n  \"header-cell\": \"awsui_header-cell_1spae_ov6lq_93\",\n  \"header-cell-sticky\": \"awsui_header-cell-sticky_1spae_ov6lq_103\",\n  \"header-cell-stuck\": \"awsui_header-cell-stuck_1spae_ov6lq_106\",\n  \"header-cell-variant-full-page\": \"awsui_header-cell-variant-full-page_1spae_ov6lq_106\",\n  \"header-cell-hidden\": \"awsui_header-cell-hidden_1spae_ov6lq_109\",\n  \"header-cell-sortable\": \"awsui_header-cell-sortable_1spae_ov6lq_115\",\n  \"header-cell-resizable\": \"awsui_header-cell-resizable_1spae_ov6lq_127\",\n  \"sorting-icon\": \"awsui_sorting-icon_1spae_ov6lq_131\",\n  \"header-cell-disabled\": \"awsui_header-cell-disabled_1spae_ov6lq_138\",\n  \"header-cell-sorted\": \"awsui_header-cell-sorted_1spae_ov6lq_138\",\n  \"header-cell-content\": \"awsui_header-cell-content_1spae_ov6lq_138\",\n  \"header-cell-fake-focus\": \"awsui_header-cell-fake-focus_1spae_ov6lq_171\",\n  \"header-cell-text\": \"awsui_header-cell-text_1spae_ov6lq_200\",\n  \"header-cell-text-wrap\": \"awsui_header-cell-text-wrap_1spae_ov6lq_200\",\n  \"header-cell-ascending\": \"awsui_header-cell-ascending_1spae_ov6lq_206\",\n  \"header-cell-descending\": \"awsui_header-cell-descending_1spae_ov6lq_207\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { getOverflowParents } from '../../internal/utils/scrollable-containers';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport tableStyles from '../styles.css.js';\nimport styles from './styles.css.js';\nimport { KeyCode } from '../../internal/keycode';\nimport { DEFAULT_WIDTH } from '../use-column-widths';\n\ninterface ResizerProps {\n  onDragMove: (newWidth: number) => void;\n  onFinish: () => void;\n  ariaLabelledby?: string;\n  minWidth?: number;\n}\n\nconst AUTO_GROW_START_TIME = 10;\nconst AUTO_GROW_INTERVAL = 10;\nconst AUTO_GROW_INCREMENT = 5;\n\nexport function Resizer({ onDragMove, onFinish, ariaLabelledby, minWidth = DEFAULT_WIDTH }: ResizerProps) {\n  const [isDragging, setIsDragging] = useState(false);\n  const [headerCell, setHeaderCell] = useState<HTMLElement>();\n  const autoGrowTimeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  const onFinishStable = useStableEventHandler(onFinish);\n  const onDragStable = useStableEventHandler(onDragMove);\n  const [resizerHasFocus, setResizerHasFocus] = useState(false);\n  const [headerCellWidth, setHeaderCellWidth] = useState(0);\n\n  useEffect(() => {\n    if ((!isDragging && !resizerHasFocus) || !headerCell) {\n      return;\n    }\n    const rootElement = findUpUntil(headerCell, element => element.className.indexOf(tableStyles.root) > -1)!;\n    const tableElement = rootElement.querySelector<HTMLElement>(`table`)!;\n    // tracker is rendered inside table wrapper to align with its size\n    const tracker = rootElement.querySelector<HTMLElement>(`.${styles.tracker}`)!;\n    const scrollParent = getOverflowParents(headerCell)[0];\n    const { left: leftEdge, right: rightEdge } = scrollParent.getBoundingClientRect();\n\n    const updateTrackerPosition = (newOffset: number) => {\n      const { left: scrollParentLeft } = tableElement.getBoundingClientRect();\n      tracker.style.top = headerCell.getBoundingClientRect().height + 'px';\n      // minus one pixel to offset the cell border\n      tracker.style.left = newOffset - scrollParentLeft - 1 + 'px';\n    };\n\n    const updateColumnWidth = (newWidth: number) => {\n      const { right, width } = headerCell.getBoundingClientRect();\n      const updatedWidth = newWidth < minWidth ? minWidth : newWidth;\n      updateTrackerPosition(right + updatedWidth - width);\n      setHeaderCellWidth(newWidth);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      onDragStable(newWidth);\n    };\n\n    const resizeColumn = (offset: number) => {\n      if (offset > leftEdge) {\n        const cellLeft = headerCell.getBoundingClientRect().left;\n        const newWidth = offset - cellLeft;\n        // callbacks must be the last calls in the handler, because they may cause an extra update\n        updateColumnWidth(newWidth);\n      }\n    };\n\n    const onAutoGrow = () => {\n      const width = headerCell.getBoundingClientRect().width;\n      autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_INTERVAL);\n      // callbacks must be the last calls in the handler, because they may cause an extra update\n      updateColumnWidth(width + AUTO_GROW_INCREMENT);\n      scrollParent.scrollLeft += AUTO_GROW_INCREMENT;\n    };\n    const onMouseMove = (event: MouseEvent) => {\n      clearTimeout(autoGrowTimeout.current);\n      const offset = event.pageX;\n      if (offset > rightEdge) {\n        autoGrowTimeout.current = setTimeout(onAutoGrow, AUTO_GROW_START_TIME);\n      } else {\n        resizeColumn(offset);\n      }\n    };\n    const onMouseUp = (event: MouseEvent) => {\n      resizeColumn(event.pageX);\n      setIsDragging(false);\n      onFinishStable();\n      clearTimeout(autoGrowTimeout.current);\n    };\n    const onKeyDown = (event: KeyboardEvent) => {\n      // prevent screenreader cursor move\n      if (event.keyCode === KeyCode.left || event.keyCode === KeyCode.right) {\n        event.preventDefault();\n      }\n      // update width\n      if (event.keyCode === KeyCode.left) {\n        updateColumnWidth(headerCell.getBoundingClientRect().width - 10);\n      }\n      if (event.keyCode === KeyCode.right) {\n        updateColumnWidth(headerCell.getBoundingClientRect().width + 10);\n      }\n    };\n\n    updateTrackerPosition(headerCell.getBoundingClientRect().right);\n    document.body.classList.add(styles['resize-active']);\n    document.body.classList.remove(styles['resize-active-with-focus']);\n    if (isDragging) {\n      document.addEventListener('mousemove', onMouseMove);\n      document.addEventListener('mouseup', onMouseUp);\n    }\n    if (resizerHasFocus) {\n      document.body.classList.add(styles['resize-active-with-focus']);\n      headerCell.addEventListener('keydown', onKeyDown);\n    }\n\n    return () => {\n      clearTimeout(autoGrowTimeout.current);\n      document.body.classList.remove(styles['resize-active']);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      headerCell.removeEventListener('keydown', onKeyDown);\n    };\n  }, [headerCell, isDragging, onDragStable, onFinishStable, resizerHasFocus, minWidth]);\n  return (\n    <span\n      className={clsx(styles.resizer, isDragging && styles['resizer-active'], resizerHasFocus && styles['has-focus'])}\n      onMouseDown={event => {\n        if (event.button !== 0) {\n          return;\n        }\n        event.preventDefault();\n        const headerCell = findUpUntil(event.currentTarget, element => element.tagName.toLowerCase() === 'th')!;\n        setIsDragging(true);\n        setHeaderCell(headerCell);\n      }}\n      onFocus={event => {\n        const headerCell = findUpUntil(event.currentTarget, element => element.tagName.toLowerCase() === 'th')!;\n        setHeaderCellWidth(headerCell.getBoundingClientRect().width);\n        setResizerHasFocus(true);\n        setHeaderCell(headerCell);\n      }}\n      onBlur={() => {\n        setResizerHasFocus(false);\n      }}\n      role=\"separator\"\n      aria-orientation=\"vertical\"\n      aria-labelledby={ariaLabelledby}\n      aria-valuenow={headerCellWidth}\n      // aria-valuetext is needed because the VO announces \"collapsed\" when only aria-valuenow set without aria-valuemax\n      aria-valuetext={headerCellWidth.toString()}\n      aria-valuemin={minWidth}\n      tabIndex={0}\n    />\n  );\n}\n\nexport function ResizeTracker() {\n  return <span className={styles.tracker} />;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"resize-active\": \"awsui_resize-active_x7peu_1tckh_93\",\n  \"resize-active-with-focus\": \"awsui_resize-active-with-focus_x7peu_1tckh_93\",\n  \"resizer\": \"awsui_resizer_x7peu_1tckh_98\",\n  \"resizer-active\": \"awsui_resizer-active_x7peu_1tckh_114\",\n  \"has-focus\": \"awsui_has-focus_x7peu_1tckh_123\",\n  \"tracker\": \"awsui_tracker_x7peu_1tckh_146\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState, createContext, useContext } from 'react';\nimport { TableProps } from './interfaces';\nimport { getColumnKey } from './utils';\nimport headerCellStyles from './header-cell/styles.css.js';\nimport { warnOnce } from '../internal/logging';\n\nexport const DEFAULT_WIDTH = 120;\nconst SELECTION_CELL_WIDTH = 54;\n\nfunction checkProperty(column: TableProps.ColumnDefinition<any>, name: 'width' | 'minWidth') {\n  const value = column[name];\n  if (typeof value !== 'number' && typeof value !== 'undefined') {\n    warnOnce(\n      'Table',\n      `resizableColumns feature requires ${name} property to be a number, got ${value}. The component may work incorrectly.`\n    );\n  }\n}\n\nexport function checkColumnWidths(columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>) {\n  for (const column of columnDefinitions) {\n    checkProperty(column, 'minWidth');\n    checkProperty(column, 'width');\n  }\n}\n\nfunction readWidths(\n  headerEl: HTMLElement,\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>,\n  hasSelection: boolean\n) {\n  const result: Record<string, number> = {};\n  for (let index = 0; index < columnDefinitions.length; index++) {\n    const column = columnDefinitions[index];\n    const id = getColumnKey(columnDefinitions[index], index);\n    let width = (column.width as number) || 0;\n    const minWidth = (column.minWidth as number) || width || DEFAULT_WIDTH;\n    if (\n      !width && // read width from the DOM if it is missing in the config\n      index !== columnDefinitions.length - 1 // skip reading for the last column, because it expands to fully fit the container\n    ) {\n      const colIndex = hasSelection ? index + 2 : index + 1;\n      const colEl = headerEl.querySelector<HTMLElement>(`.${headerCellStyles['header-cell']}:nth-child(${colIndex})`)!;\n      width = colEl.getBoundingClientRect().width;\n    }\n    result[id] = Math.max(width, minWidth);\n  }\n  return result;\n}\n\nfunction updateWidths(\n  columnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>,\n  oldWidths: Record<string, number>,\n  newWidth: number,\n  colIndex: number\n) {\n  const definition = columnDefinitions[colIndex];\n  const id = getColumnKey(definition, colIndex);\n  const minWidth = typeof definition.minWidth === 'number' ? definition.minWidth : DEFAULT_WIDTH;\n  newWidth = Math.max(newWidth, minWidth);\n  if (oldWidths[id] === newWidth) {\n    return oldWidths;\n  }\n  return { ...oldWidths, [id]: newWidth };\n}\n\ninterface WidthsContext {\n  totalWidth: number;\n  columnWidths: Record<string, number>;\n  updateColumn: (colIndex: number, newWidth: number) => void;\n}\n\nconst WidthsContext = createContext<WidthsContext>({\n  totalWidth: 0,\n  columnWidths: {},\n  updateColumn: () => {},\n});\n\ninterface WidthProviderProps {\n  tableRef: React.MutableRefObject<HTMLElement | null>;\n  visibleColumnDefinitions: ReadonlyArray<TableProps.ColumnDefinition<any>>;\n  resizableColumns: boolean | undefined;\n  hasSelection: boolean;\n  children: React.ReactNode;\n}\n\nexport function ColumnWidthsProvider({\n  tableRef,\n  visibleColumnDefinitions,\n  resizableColumns,\n  hasSelection,\n  children,\n}: WidthProviderProps) {\n  const visibleColumns = useRef<(string | undefined)[] | null>(null);\n  const [columnWidths, setColumnWidths] = useState<Record<string, number>>({});\n\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    const lastVisible = visibleColumns.current;\n    if (lastVisible) {\n      for (let index = 0; index < visibleColumnDefinitions.length; index++) {\n        const column = visibleColumnDefinitions[index];\n        const id = getColumnKey(column, index);\n        if (!columnWidths[id] && lastVisible.indexOf(column.id) === -1) {\n          setColumnWidths(columnWidths => ({ ...columnWidths, [id]: (column.width as number) || DEFAULT_WIDTH }));\n        }\n      }\n    }\n    visibleColumns.current = visibleColumnDefinitions.map(column => column.id);\n  }, [columnWidths, resizableColumns, visibleColumnDefinitions]);\n\n  useEffect(() => {\n    if (!resizableColumns) {\n      return;\n    }\n    setColumnWidths(() => readWidths(tableRef.current!, visibleColumnDefinitions, hasSelection));\n    // This code is intended to run only at the first render and should not re-run when table props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function updateColumn(colIndex: number, newWidth: number) {\n    setColumnWidths(columnWidths => updateWidths(visibleColumnDefinitions, columnWidths, newWidth, colIndex));\n  }\n\n  let totalWidth = visibleColumnDefinitions.reduce(\n    (total, column, index) => total + (columnWidths[getColumnKey(column, index)] || DEFAULT_WIDTH),\n    0\n  );\n  if (hasSelection) {\n    totalWidth += SELECTION_CELL_WIDTH;\n  }\n\n  return <WidthsContext.Provider value={{ columnWidths, totalWidth, updateColumn }}>{children}</WidthsContext.Provider>;\n}\n\nexport function useColumnWidths() {\n  return useContext(WidthsContext);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport React from 'react';\nimport { TableProps } from '../interfaces';\n\ninterface TableBodyCellProps {\n  className?: string;\n  style?: React.CSSProperties;\n  wrapLines: boolean | undefined;\n  isFirstRow: boolean;\n  isLastRow: boolean;\n  isSelected: boolean;\n  isNextSelected: boolean;\n  isPrevSelected: boolean;\n  children?: React.ReactNode;\n}\n\nexport function TableBodyCell({\n  className,\n  style,\n  children,\n  wrapLines,\n  isFirstRow,\n  isLastRow,\n  isSelected,\n  isNextSelected,\n  isPrevSelected,\n}: TableBodyCellProps) {\n  return (\n    <td\n      style={style}\n      className={clsx(\n        className,\n        styles['body-cell'],\n        wrapLines && styles['body-cell-wrap'],\n        isFirstRow && styles['body-cell-first-row'],\n        isLastRow && styles['body-cell-last-row'],\n        isSelected && styles['body-cell-selected'],\n        isNextSelected && styles['body-cell-next-selected'],\n        isPrevSelected && styles['body-cell-prev-selected']\n      )}\n    >\n      {children}\n    </td>\n  );\n}\n\ninterface TableBodyCellContentProps<ItemType> extends TableBodyCellProps {\n  column: TableProps.ColumnDefinition<ItemType>;\n  item: ItemType;\n}\n\nexport function TableBodyCellContent<ItemType>({ item, column, ...rest }: TableBodyCellContentProps<ItemType>) {\n  return <TableBodyCell {...rest}>{column.cell(item)}</TableBodyCell>;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"body-cell\": \"awsui_body-cell_c6tup_c7aag_9\",\n  \"body-cell-wrap\": \"awsui_body-cell-wrap_c6tup_c7aag_18\",\n  \"body-cell-first-row\": \"awsui_body-cell-first-row_c6tup_c7aag_31\",\n  \"body-cell-last-row\": \"awsui_body-cell-last-row_c6tup_c7aag_34\",\n  \"body-cell-selected\": \"awsui_body-cell-selected_c6tup_c7aag_37\",\n  \"body-cell-next-selected\": \"awsui_body-cell-next-selected_c6tup_c7aag_56\",\n  \"body-cell-prev-selected\": \"awsui_body-cell-prev-selected_c6tup_c7aag_60\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fireNonCancelableEvent, fireCancelableEvent } from '../internal/events/index';\nimport { TableProps } from './interfaces';\nimport { findUpUntil } from '../internal/utils/dom';\nimport styles from './styles.css.js';\n\nexport function useRowEvents<T>({ onRowClick, onRowContextMenu }: Pick<TableProps, 'onRowClick' | 'onRowContextMenu'>) {\n  const onRowClickHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const tableCell = findUpUntil(event.target as HTMLElement, element => element.tagName.toLowerCase() === 'td');\n    if (!tableCell || !tableCell.classList.contains(styles['selection-control'])) {\n      const details: TableProps.OnRowClickDetail<T> = { rowIndex, item };\n      fireNonCancelableEvent(onRowClick, details);\n    }\n  };\n  const onRowContextMenuHandler = (rowIndex: number, item: T, event: React.MouseEvent) => {\n    const details: TableProps.OnRowContextMenuDetail<T> = {\n      rowIndex,\n      item,\n      clientX: event.clientX,\n      clientY: event.clientY,\n    };\n    fireCancelableEvent(onRowContextMenu, details, event);\n  };\n\n  return {\n    onRowClickHandler: onRowClick && onRowClickHandler,\n    onRowContextMenuHandler: onRowContextMenu && onRowContextMenuHandler,\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { RefObject, useRef } from 'react';\n\n/**\n * useScrollSync returns scroll event handler to be attached to synchronised scroll elements.\n *\n * For example\n *    const handleScroll = useScrollSync([ref1, ref2]);\n *    <div ref={ref1} onScroll={handleScroll}/>\n *    <div ref={ref2} onScroll={handleScroll}/>\n */\nexport function useScrollSync(refs: Array<RefObject<any>>, disabled = false) {\n  const activeElement = useRef<HTMLElement | null>(null);\n  const onScroll = (event: React.UIEvent) => {\n    const targetElement = event.target as HTMLElement;\n    // remembers the first element that fires onscroll to align with other elements against it\n    if (targetElement && (activeElement.current === null || activeElement.current === targetElement)) {\n      requestAnimationFrame(() => {\n        activeElement.current = targetElement;\n        refs.forEach(ref => {\n          const element = ref.current;\n          if (element && element !== targetElement) {\n            element.scrollLeft = targetElement.scrollLeft;\n          }\n        });\n        // unblock the ability to scroll the synced elements\n        requestAnimationFrame(() => {\n          activeElement.current = null;\n        });\n      });\n    }\n  };\n\n  return !disabled ? onScroll : undefined;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { forwardRef, useContext, useImperativeHandle, useRef, useState } from 'react';\nimport { StickyHeaderContext } from '../container/use-sticky-header';\nimport { TableProps } from './interfaces';\nimport Thead, { TheadProps } from './thead';\nimport { useStickyHeader } from './use-sticky-header';\nimport styles from './styles.css.js';\n\nexport interface StickyHeaderRef {\n  scrollToTop(): void;\n  scrollToRow(node: null | HTMLElement): void;\n  setFocusedColumn(columnIndex: null | number): void;\n}\n\ninterface StickyHeaderProps {\n  variant: TableProps.Variant;\n  theadProps: TheadProps;\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  theadRef: React.RefObject<HTMLTableRowElement>;\n  secondaryWrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n  tableHasHeader?: boolean;\n}\n\nexport default forwardRef(StickyHeader);\n\nfunction StickyHeader(\n  {\n    variant,\n    theadProps,\n    wrapperRef,\n    theadRef,\n    secondaryWrapperRef,\n    onScroll,\n    tableRef,\n    tableHasHeader,\n  }: StickyHeaderProps,\n  ref: React.Ref<StickyHeaderRef>\n) {\n  const secondaryTheadRef = useRef<HTMLTableRowElement>(null);\n  const secondaryTableRef = useRef<HTMLTableElement>(null);\n  const { isStuck } = useContext(StickyHeaderContext);\n\n  const [focusedColumn, setFocusedColumn] = useState<number | null>(null);\n  const { scrollToRow, scrollToTop } = useStickyHeader(\n    tableRef,\n    theadRef,\n    secondaryTheadRef,\n    secondaryTableRef,\n    wrapperRef\n  );\n\n  useImperativeHandle(ref, () => ({ scrollToTop, scrollToRow, setFocusedColumn }));\n\n  return (\n    <div\n      className={clsx(styles['header-secondary'], styles[`variant-${variant}`], {\n        [styles.stuck]: isStuck,\n        [styles['table-has-header']]: tableHasHeader,\n      })}\n      aria-hidden={true}\n      // Prevents receiving focus in Firefox. Focus on the overflowing table is sufficient\n      // to scroll the table horizontally\n      tabIndex={-1}\n      ref={secondaryWrapperRef}\n      onScroll={onScroll}\n    >\n      <table className={clsx(styles.table, styles['table-layout-fixed'])} role=\"table\" ref={secondaryTableRef}>\n        <Thead ref={secondaryTheadRef} sticky={true} stuck={isStuck} showFocusRing={focusedColumn} {...theadProps} />\n      </table>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useLayoutEffect, RefObject, useCallback } from 'react';\nimport { useResizeObserver } from '../internal/hooks/container-queries/use-resize-observer';\nimport stickyScrolling, { calculateScrollingOffset, scrollUpBy } from './sticky-scrolling';\nimport { useMobile } from '../internal/hooks/use-mobile';\n\nfunction syncSizes(from: HTMLElement, to: HTMLElement) {\n  const fromCells = Array.prototype.slice.apply(from.children);\n  const toCells = Array.prototype.slice.apply(to.children);\n  for (let i = 0; i < fromCells.length; i++) {\n    let width = fromCells[i].style.width;\n    // use auto if it is set by resizable columns or real size otherwise\n    if (width !== 'auto') {\n      width = `${fromCells[i].offsetWidth}px`;\n    }\n    toCells[i].style.width = width;\n  }\n}\n\nexport const useStickyHeader = (\n  tableRef: RefObject<HTMLElement>,\n  theadRef: RefObject<HTMLElement>,\n  secondaryTheadRef: RefObject<HTMLElement>,\n  secondaryTableRef: RefObject<HTMLElement>,\n  tableWrapperRef: RefObject<HTMLElement>\n) => {\n  const isMobile = useMobile();\n  // Sync the sizes of the column header copies in the sticky header with the originals\n  const syncColumnHeaderWidths = useCallback(() => {\n    if (\n      tableRef.current &&\n      theadRef.current &&\n      secondaryTheadRef.current &&\n      secondaryTableRef.current &&\n      tableWrapperRef.current\n    ) {\n      syncSizes(theadRef.current, secondaryTheadRef.current);\n\n      // Using the tableRef offsetWidth instead of the theadRef because in VR\n      // the tableRef adds extra padding to the table and by default the theadRef will have a width\n      // without the padding and will make the sticky header width incorrect.\n      secondaryTableRef.current.style.width = `${tableRef.current.offsetWidth}px`;\n\n      tableWrapperRef.current.style.marginTop = `-${theadRef.current.offsetHeight}px`;\n    }\n  }, [theadRef, secondaryTheadRef, secondaryTableRef, tableWrapperRef, tableRef]);\n  useLayoutEffect(() => {\n    syncColumnHeaderWidths();\n    // Content is not going to be layed out until the next frame in angular,\n    // so we need to sync the column headers again.\n    setTimeout(() => syncColumnHeaderWidths(), 0);\n    const secondaryTable = secondaryTableRef.current;\n    const primaryTable = tableWrapperRef.current;\n    return () => {\n      if (secondaryTable) {\n        secondaryTable.style.width = '';\n      }\n      if (primaryTable) {\n        primaryTable.style.marginTop = '';\n      }\n    };\n  });\n  useResizeObserver(theadRef, syncColumnHeaderWidths);\n  const scrollToTop = () => {\n    if (!isMobile && theadRef.current && secondaryTheadRef.current && tableWrapperRef.current) {\n      const scrollDist = calculateScrollingOffset(theadRef.current, secondaryTheadRef.current);\n      if (scrollDist > 0) {\n        scrollUpBy(scrollDist, tableWrapperRef.current);\n      }\n    }\n  };\n  const { scrollToItem } = stickyScrolling(tableWrapperRef, secondaryTheadRef);\n  const scrollToRow = (itemNode: HTMLElement | null) => {\n    if (!isMobile) {\n      scrollToItem(itemNode);\n    }\n  };\n  return { scrollToRow, scrollToTop };\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getOverflowParents } from '../internal/utils/scrollable-containers';\n\n/**\n * @param containerRef ref to surrounding container with sticky element\n * @param stickyRef ref to sticky element scrolled inside of containerRef\n * @param containerOffset offset between header and container\n *                        originating borders or paddings\n */\nexport default function stickyScrolling(\n  containerRef: React.MutableRefObject<HTMLElement | null>,\n  stickyRef: React.MutableRefObject<HTMLElement | null>\n) {\n  const scrollToTop = () => {\n    if (!containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const scrollingOffset = calculateScrollingOffset(containerRef.current, stickyRef.current);\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  const scrollToItem = (item: HTMLElement | null) => {\n    if (!item || !containerRef.current || !stickyRef.current) {\n      return;\n    }\n    const stickyBottom = stickyRef.current.getBoundingClientRect().bottom;\n    const scrollingOffset = stickyBottom - item.getBoundingClientRect().top;\n    if (scrollingOffset > 0) {\n      scrollUpBy(scrollingOffset, containerRef.current);\n    }\n  };\n  return {\n    scrollToTop,\n    scrollToItem,\n  };\n}\n\n/**\n * Calculates the scrolling offset between container and\n * sticky element with container offset caused by border\n * or padding\n * @param container\n * @param sticky element inside of container\n * @param containerOffset caused by borders or paddings\n */\nexport function calculateScrollingOffset(container: HTMLElement, sticky: HTMLElement) {\n  const stickyRect = sticky.getBoundingClientRect();\n  const containerRect = container.getBoundingClientRect();\n  return stickyRect.top - containerRect.top;\n}\n\n/**\n * Scrolls suitable parent of container up by amount of pixels\n * @param amount pixels to be scrolled up\n * @param container used to determine next parent element for scrolling\n */\nexport function scrollUpBy(amount: number, container: HTMLElement) {\n  const parent = getOverflowParents(container);\n  if (parent.length) {\n    // Take next overflow parent in stack\n    parent[0].scrollTop -= amount;\n  } else {\n    window.scrollTo({ top: window.pageYOffset - amount });\n  }\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useContext } from 'react';\nimport { AppLayoutContext } from '../app-layout/visual-refresh/context';\nimport { useAppLayoutContext } from '../internal/context/app-layout-context';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useStickyScrollbar } from './use-sticky-scrollbar';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport styles from './styles.css.js';\n\ninterface StickyScrollbarProps {\n  wrapperRef: React.RefObject<HTMLDivElement>;\n  tableRef: React.RefObject<HTMLTableElement>;\n  onScroll?: React.UIEventHandler<HTMLDivElement>;\n}\n\nexport default forwardRef(StickyScrollbar);\n\nfunction StickyScrollbar({ wrapperRef, tableRef, onScroll }: StickyScrollbarProps, ref: React.Ref<HTMLDivElement>) {\n  const scrollbarRef = React.useRef<HTMLDivElement>(null);\n  const scrollbarContentRef = React.useRef<HTMLDivElement>(null);\n  const isRefresh = useVisualRefresh();\n  const mergedRef = useMergeRefs(ref, scrollbarRef);\n\n  /**\n   * Use the appropriate AppLayout context (Classic or Visual Refresh) to determine\n   * the offsetBottom value to be used in the useStickyScrollbar hook.\n   */\n  const { stickyOffsetBottom: offsetBottomClassic } = useAppLayoutContext();\n  const { offsetBottom: offsetBottomVisualRefresh } = useContext(AppLayoutContext);\n  const offsetBottom = isRefresh ? offsetBottomVisualRefresh : offsetBottomClassic;\n\n  useStickyScrollbar(scrollbarRef, scrollbarContentRef, tableRef, wrapperRef, offsetBottom);\n\n  return (\n    <div ref={mergedRef} className={styles['sticky-scrollbar']} onScroll={onScroll}>\n      <div ref={scrollbarContentRef} className={styles['sticky-scrollbar-content']} />\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { RefObject, useEffect, useState } from 'react';\nimport styles from './styles.css.js';\n\nimport { getOverflowParentDimensions, getOverflowParents } from '../internal/utils/scrollable-containers';\nimport { browserScrollbarSize } from '../internal/utils/browser-scrollbar-size';\nimport { supportsStickyPosition, getContainingBlock } from '../internal/utils/dom';\n\nconst updatePosition = (\n  tableEl: HTMLElement | null,\n  wrapperEl: HTMLElement | null,\n  scrollbarEl: HTMLElement | null,\n  scrollbarContentEl: HTMLElement | null,\n  hasContainingBlock: boolean,\n  consideredFooterHeight: number\n) => {\n  if (!tableEl || !scrollbarEl || !wrapperEl) {\n    return;\n  }\n\n  // parent is either some container or document itself\n  const parent = getOverflowParentDimensions(wrapperEl)[0];\n  const parentBottom = parent.top + parent.height;\n\n  // table bottom is visible when\n  // 1. table bottom reached end of the window\n  // 2. table bottom is not overlapped by footer\n  const { top: tableTop, bottom: tableBottom, width: tableWidth } = tableEl.getBoundingClientRect();\n  const { width: wrapperWidth } = wrapperEl.getBoundingClientRect();\n\n  //scrollbar correction is needed for\n  // #1 when scrollbars are constantly visible,\n  // we want no visible break when switching between fake and real scrollbars\n  // #2 when scrollbars are visible only on scrolling and half transparent (on mac)\n  // we want to avoid any overlap between fake and real scrollbar\n  // using 15 px as a height of transparent scrollbar on mac\n  const scrollbarHeight = browserScrollbarSize().height;\n  const scrollBarCorrection = scrollbarHeight > 0 ? scrollbarHeight : -15 / 2;\n  const tableBottomIsVisible = parentBottom - consideredFooterHeight >= tableBottom + scrollBarCorrection;\n  const tableTopIsHidden = tableTop >= parentBottom - consideredFooterHeight - scrollBarCorrection;\n  const areaIsScrollable = tableWidth > wrapperWidth;\n\n  if (tableBottomIsVisible || tableTopIsHidden || !areaIsScrollable) {\n    scrollbarEl.classList.remove(styles['sticky-scrollbar-visible']);\n  } else {\n    // when scrollbar is not displayed scrollLeft property cannot be set by useScrollSync\n    // that's why syncing it separately\n    if (!scrollbarEl.classList.contains(styles['sticky-scrollbar-visible'])) {\n      requestAnimationFrame(() => {\n        scrollbarEl.scrollLeft = wrapperEl.scrollLeft;\n      });\n    }\n\n    scrollbarEl.classList.add(styles['sticky-scrollbar-visible']);\n  }\n\n  if (scrollbarHeight && scrollbarEl && scrollbarContentEl) {\n    scrollbarEl.style.height = `${scrollbarHeight}px`;\n    scrollbarContentEl.style.height = `${scrollbarHeight}px`;\n  }\n\n  if (tableEl && wrapperEl && scrollbarContentEl && scrollbarEl) {\n    const parent = getOverflowParentDimensions(wrapperEl)[0];\n\n    const wrapperElRect = wrapperEl.getBoundingClientRect();\n    const tableElRect = tableEl.getBoundingClientRect();\n    scrollbarEl.style.width = `${wrapperElRect.width}px`;\n    scrollbarContentEl.style.width = `${tableElRect.width}px`;\n\n    // when using sticky scrollbars in containers\n    // we agreed to ignore dynamic bottom calculations for footer overlap\n    scrollbarEl.style.left = hasContainingBlock ? '0px' : `${wrapperElRect.left}px`;\n    scrollbarEl.style.top = hasContainingBlock\n      ? '0px'\n      : `${Math.min(parent.top + parent.height, window.innerHeight - consideredFooterHeight)}px`;\n  }\n};\n\nexport function useStickyScrollbar(\n  scrollbarRef: RefObject<HTMLDivElement>,\n  scrollbarContentRef: RefObject<HTMLDivElement>,\n  tableRef: RefObject<HTMLTableElement>,\n  wrapperRef: RefObject<HTMLDivElement>,\n  footerHeight: number\n) {\n  // We don't take into account containing-block calculations because that would\n  // unnecessarily overcomplicate the position logic. For now, we assume that a\n  // containing block, if present, is below the app layout and above the overflow\n  // parent, which is a pretty safe assumption.\n  const [hasContainingBlock, setHasContainingBlock] = useState(false);\n  // We don't take into account footer height when the overflow parent is child of document body.\n  // Because in this case, we think the footer is outside the overflow parent.\n  const [hasOverflowParent, setHasOverflowParent] = useState(false);\n  const consideredFooterHeight = hasContainingBlock || hasOverflowParent ? 0 : footerHeight;\n\n  useEffect(() => {\n    if (supportsStickyPosition()) {\n      const scrollHandler = () => {\n        updatePosition(\n          tableRef.current,\n          wrapperRef.current,\n          scrollbarRef.current,\n          scrollbarContentRef.current,\n          hasContainingBlock,\n          consideredFooterHeight\n        );\n      };\n      scrollHandler();\n      window.addEventListener('scroll', scrollHandler, true);\n      return () => {\n        window.removeEventListener('scroll', scrollHandler, true);\n      };\n    }\n  }, [scrollbarRef, tableRef, wrapperRef, consideredFooterHeight, scrollbarContentRef, hasContainingBlock]);\n\n  const wrapperEl = wrapperRef.current;\n  useEffect(() => {\n    if (wrapperEl && supportsStickyPosition()) {\n      setHasContainingBlock(!!getContainingBlock(wrapperEl));\n      setHasOverflowParent(!!getOverflowParents(wrapperEl)[0]);\n    }\n  }, [wrapperEl]);\n\n  useEffect(() => {\n    if (supportsStickyPosition() && tableRef.current) {\n      const observer = new ResizeObserver(entries => {\n        if (scrollbarContentRef.current) {\n          scrollbarContentRef.current.style.width = `${entries[0].borderBoxSize[0].inlineSize}px`;\n          updatePosition(\n            tableRef.current,\n            wrapperRef.current,\n            scrollbarRef.current,\n            scrollbarContentRef.current,\n            hasContainingBlock,\n            consideredFooterHeight\n          );\n        }\n      });\n      observer.observe(tableRef.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [scrollbarContentRef, scrollbarRef, tableRef, wrapperRef, consideredFooterHeight, hasContainingBlock]);\n\n  useEffect(() => {\n    if (supportsStickyPosition()) {\n      const resizeHandler = () => {\n        updatePosition(\n          tableRef.current,\n          wrapperRef.current,\n          scrollbarRef.current,\n          scrollbarContentRef.current,\n          hasContainingBlock,\n          consideredFooterHeight\n        );\n      };\n      window.addEventListener('resize', resizeHandler);\n      return () => {\n        window.removeEventListener('resize', resizeHandler);\n      };\n    }\n  }, [tableRef, wrapperRef, scrollbarRef, scrollbarContentRef, hasContainingBlock, consideredFooterHeight]);\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { createSingletonHandler } from '../internal/hooks/use-singleton-handler';\n\nconst useEventListenersSingleton = createSingletonHandler<Node | null>(setTarget => {\n  function handleMouseDown(event: MouseEvent) {\n    setTarget(event.target as Node);\n  }\n  function handleKeyDown() {\n    setTarget(null);\n  }\n  window.addEventListener('mousedown', handleMouseDown);\n  window.addEventListener('keydown', handleKeyDown);\n  return () => {\n    window.removeEventListener('mousedown', handleMouseDown);\n    window.removeEventListener('keydown', handleKeyDown);\n  };\n});\n\n/**\n * Captures last mouse down target and clears it on keydown.\n * @returns a callback to get the last detected mouse down target.\n */\nexport default function useMouseDownTarget() {\n  const mouseDownTargetRef = useRef<null | Node>(null);\n  useEventListenersSingleton(target => {\n    mouseDownTargetRef.current = target;\n  });\n  return () => mouseDownTargetRef.current;\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "_a", "_b", "React", "import_react", "import_react", "styles_css_default", "_a", "_b", "React", "internal_default", "styles_css_default", "import_react", "styles_css_default", "_a", "ItemSet", "_c", "allDisabled", "allEnabledSelected", "_b", "item", "import_react", "styles_css_default", "import_react", "styles_css_default", "import_react", "styles_css_default", "_a", "_b", "index", "columnWidths", "React", "_a", "_b", "_c", "styles_css_default", "React", "headerCell", "_a", "React", "_b", "styles_css_default", "_c", "React", "_a", "_b", "_c", "styles_css_default", "styles_css_default", "import_react", "_a", "React", "styles_css_default", "_a", "import_react", "import_react", "import_react", "_a", "_c", "React", "_b", "import_react", "import_react", "_a", "_b", "_a", "React", "import_react", "React", "_a", "_c", "_b", "internal_default", "React", "_a", "_b", "_c", "internal_default"]
}

import {
  InternalSpinner
} from "./chunk-5LXZ6RXM.js";
import {
  internal_default
} from "./chunk-XYE4ILSB.js";
import {
  __assign,
  __rest,
  clsx_m_default,
  getBaseProps,
  init_clsx_m
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/status-indicator/internal.js
var import_react = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/status-indicator/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/status-indicator/styles.scoped.css";
var styles_css_default = {
  "icon-shake": "awsui_icon-shake_1cbgc_1dmb0_97",
  "awsui-motion-shake-horizontally": "awsui_awsui-motion-shake-horizontally_1cbgc_1dmb0_1",
  "container-fade-in": "awsui_container-fade-in_1cbgc_1dmb0_125",
  "awsui-motion-fade-in-0": "awsui_awsui-motion-fade-in-0_1cbgc_1dmb0_1",
  "root": "awsui_root_1cbgc_1dmb0_147",
  "status-error": "awsui_status-error_1cbgc_1dmb0_154",
  "status-warning": "awsui_status-warning_1cbgc_1dmb0_157",
  "status-success": "awsui_status-success_1cbgc_1dmb0_160",
  "status-info": "awsui_status-info_1cbgc_1dmb0_163",
  "status-stopped": "awsui_status-stopped_1cbgc_1dmb0_166",
  "status-pending": "awsui_status-pending_1cbgc_1dmb0_169",
  "status-in-progress": "awsui_status-in-progress_1cbgc_1dmb0_172",
  "status-loading": "awsui_status-loading_1cbgc_1dmb0_175",
  "color-override-red": "awsui_color-override-red_1cbgc_1dmb0_178",
  "color-override-grey": "awsui_color-override-grey_1cbgc_1dmb0_181",
  "color-override-blue": "awsui_color-override-blue_1cbgc_1dmb0_184",
  "color-override-green": "awsui_color-override-green_1cbgc_1dmb0_187",
  "icon": "awsui_icon_1cbgc_1dmb0_97",
  "container": "awsui_container_1cbgc_1dmb0_125",
  "overflow-ellipsis": "awsui_overflow-ellipsis_1cbgc_1dmb0_201"
};

// node_modules/@cloudscape-design/components/status-indicator/internal.js
var typeToIcon = function(size) {
  return {
    error: import_react.default.createElement(internal_default, { name: "status-negative", size }),
    warning: import_react.default.createElement(internal_default, { name: "status-warning", size }),
    success: import_react.default.createElement(internal_default, { name: "status-positive", size }),
    info: import_react.default.createElement(internal_default, { name: "status-info", size }),
    stopped: import_react.default.createElement(internal_default, { name: "status-stopped", size }),
    pending: import_react.default.createElement(internal_default, { name: "status-pending", size }),
    "in-progress": import_react.default.createElement(internal_default, { name: "status-in-progress", size }),
    loading: import_react.default.createElement(InternalSpinner, null)
  };
};
function StatusIndicator(_a) {
  var _b;
  var type = _a.type, children = _a.children, iconAriaLabel = _a.iconAriaLabel, colorOverride = _a.colorOverride, _c = _a.wrapText, wrapText = _c === void 0 ? true : _c, _d = _a.__animate, __animate = _d === void 0 ? false : _d, __internalRootRef = _a.__internalRootRef, _e = _a.__size, __size = _e === void 0 ? "normal" : _e, rest = __rest(_a, ["type", "children", "iconAriaLabel", "colorOverride", "wrapText", "__animate", "__internalRootRef", "__size"]);
  var baseProps = getBaseProps(rest);
  return import_react.default.createElement(
    "span",
    __assign({}, baseProps, { className: clsx_m_default(styles_css_default.root, styles_css_default["status-".concat(type)], (_b = {}, _b[styles_css_default["color-override-".concat(colorOverride)]] = colorOverride, _b), baseProps.className), ref: __internalRootRef }),
    import_react.default.createElement(
      "span",
      { className: clsx_m_default(styles_css_default.container, wrapText === false && styles_css_default["overflow-ellipsis"], __animate && styles_css_default["container-fade-in"]) },
      import_react.default.createElement("span", { className: clsx_m_default(styles_css_default.icon, __animate && styles_css_default["icon-shake"]), "aria-label": iconAriaLabel, role: iconAriaLabel ? "img" : void 0 }, typeToIcon(__size)[type]),
      children
    )
  );
}

export {
  StatusIndicator
};
//# sourceMappingURL=chunk-MZGEFKUV.js.map

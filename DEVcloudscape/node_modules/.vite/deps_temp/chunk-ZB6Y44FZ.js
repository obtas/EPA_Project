import {
  useUniqueId
} from "./chunk-PFODBZPR.js";
import {
  useFocusVisible
} from "./chunk-GKBIUDXI.js";
import {
  fireNonCancelableEvent
} from "./chunk-7TBDUUWV.js";
import {
  useMergeRefs
} from "./chunk-EZZ3SG55.js";
import {
  useVisualRefresh
} from "./chunk-4EXFA7SU.js";
import {
  __assign,
  __rest,
  clsx_m_default,
  init_clsx_m
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/radio-group/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/radio-group/styles.scoped.css";
var styles_css_default = {
  "root": "awsui_root_1mabk_1y9l8_93",
  "radio": "awsui_radio_1mabk_1y9l8_105",
  "radio--has-description": "awsui_radio--has-description_1mabk_1y9l8_113",
  "radio-control": "awsui_radio-control_1mabk_1y9l8_117",
  "outline": "awsui_outline_1mabk_1y9l8_125",
  "styled-circle-border": "awsui_styled-circle-border_1mabk_1y9l8_144",
  "styled-circle-disabled": "awsui_styled-circle-disabled_1mabk_1y9l8_148",
  "styled-circle-fill": "awsui_styled-circle-fill_1mabk_1y9l8_153",
  "styled-circle-checked": "awsui_styled-circle-checked_1mabk_1y9l8_159"
};

// node_modules/@cloudscape-design/components/radio-group/radio-button.js
init_clsx_m();
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
var import_react = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/internal/components/abstract-switch/styles.scoped.css";
var styles_css_default2 = {
  "content": "awsui_content_1wepg_3hhd4_93",
  "description": "awsui_description_1wepg_3hhd4_94",
  "label": "awsui_label_1wepg_3hhd4_95",
  "outline": "awsui_outline_1wepg_3hhd4_99",
  "native-input": "awsui_native-input_1wepg_3hhd4_103",
  "wrapper": "awsui_wrapper_1wepg_3hhd4_110",
  "label-wrapper": "awsui_label-wrapper_1wepg_3hhd4_117",
  "empty-content": "awsui_empty-content_1wepg_3hhd4_129",
  "description-bottom-padding": "awsui_description-bottom-padding_1wepg_3hhd4_139",
  "label-disabled": "awsui_label-disabled_1wepg_3hhd4_147",
  "description-disabled": "awsui_description-disabled_1wepg_3hhd4_148",
  "control": "awsui_control_1wepg_3hhd4_153"
};

// node_modules/@cloudscape-design/components/internal/components/abstract-switch/index.js
function joinString(values) {
  return values.filter(function(value) {
    return !!value;
  }).join(" ");
}
function AbstractSwitch(_a) {
  var _b, _c;
  var controlId = _a.controlId, controlClassName = _a.controlClassName, outlineClassName = _a.outlineClassName, disabled = _a.disabled, nativeControl = _a.nativeControl, styledControl = _a.styledControl, label = _a.label, description = _a.description, descriptionBottomPadding = _a.descriptionBottomPadding, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, ariaDescribedby = _a.ariaDescribedby, onClick = _a.onClick, __internalRootRef = _a.__internalRootRef, rest = __rest(_a, ["controlId", "controlClassName", "outlineClassName", "disabled", "nativeControl", "styledControl", "label", "description", "descriptionBottomPadding", "ariaLabel", "ariaLabelledby", "ariaDescribedby", "onClick", "__internalRootRef"]);
  var uniqueId = useUniqueId();
  var id = controlId || uniqueId;
  var focusVisible = useFocusVisible();
  var labelId = "".concat(id, "-label");
  var descriptionId = "".concat(id, "-description");
  var ariaLabelledByIds = [];
  if (label) {
    ariaLabelledByIds.push(labelId);
  }
  if (ariaLabelledby) {
    ariaLabelledByIds.push(ariaLabelledby);
  }
  var ariaDescriptons = [];
  if (ariaDescribedby) {
    ariaDescriptons.push(ariaDescribedby);
  }
  if (description) {
    ariaDescriptons.push(descriptionId);
  }
  return import_react.default.createElement(
    "div",
    __assign({}, rest, { className: clsx_m_default(styles_css_default2.wrapper, rest.className), ref: __internalRootRef }),
    import_react.default.createElement(
      "div",
      { className: styles_css_default2["label-wrapper"], "aria-disabled": disabled ? "true" : void 0, onClick: disabled ? void 0 : onClick },
      import_react.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default2.control, controlClassName) },
        styledControl,
        nativeControl(__assign(__assign({}, focusVisible), { id, disabled, className: styles_css_default2["native-input"], "aria-describedby": ariaDescriptons.length ? joinString(ariaDescriptons) : void 0, "aria-labelledby": ariaLabelledByIds.length ? joinString(ariaLabelledByIds) : void 0, "aria-label": ariaLabel })),
        import_react.default.createElement("span", { className: clsx_m_default(styles_css_default2.outline, outlineClassName) })
      ),
      import_react.default.createElement(
        "span",
        { className: clsx_m_default(styles_css_default2.content, !label && !description && styles_css_default2["empty-content"]) },
        label && import_react.default.createElement("span", { id: labelId, className: clsx_m_default(styles_css_default2.label, (_b = {}, _b[styles_css_default2["label-disabled"]] = disabled, _b)) }, label),
        description && import_react.default.createElement("span", { id: descriptionId, className: clsx_m_default(styles_css_default2.description, (_c = {}, _c[styles_css_default2["description-disabled"]] = disabled, _c[styles_css_default2["description-bottom-padding"]] = descriptionBottomPadding, _c)) }, description)
      )
    )
  );
}

// node_modules/@cloudscape-design/components/radio-group/radio-button.js
var radio_button_default = import_react2.default.forwardRef(function RadioButton(_a, ref) {
  var _b, _c;
  var name = _a.name, label = _a.label, value = _a.value, checked = _a.checked, description = _a.description, disabled = _a.disabled, controlId = _a.controlId, onChange = _a.onChange;
  var isVisualRefresh = useVisualRefresh();
  var radioButtonRef = (0, import_react2.useRef)(null);
  var mergedRefs = useMergeRefs(radioButtonRef, ref);
  return import_react2.default.createElement(AbstractSwitch, { className: clsx_m_default(styles_css_default.radio, description && styles_css_default["radio--has-description"]), controlClassName: styles_css_default["radio-control"], outlineClassName: styles_css_default.outline, label, description, disabled, controlId, nativeControl: function(nativeControlProps) {
    return import_react2.default.createElement("input", __assign({}, nativeControlProps, {
      type: "radio",
      ref: mergedRefs,
      name,
      value,
      checked,
      onChange: function() {
      }
    }));
  }, onClick: function() {
    var _a2;
    (_a2 = radioButtonRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    if (checked) {
      return;
    }
    fireNonCancelableEvent(onChange, { value });
  }, styledControl: import_react2.default.createElement(
    "svg",
    { viewBox: "0 0 100 100", focusable: "false", "aria-hidden": "true" },
    import_react2.default.createElement("circle", { className: clsx_m_default(styles_css_default["styled-circle-border"], (_b = {}, _b[styles_css_default["styled-circle-disabled"]] = disabled, _b)), strokeWidth: isVisualRefresh ? 12 : 8, cx: 50, cy: 50, r: isVisualRefresh ? 44 : 46 }),
    import_react2.default.createElement("circle", { className: clsx_m_default(styles_css_default["styled-circle-fill"], (_c = {}, _c[styles_css_default["styled-circle-disabled"]] = disabled, _c[styles_css_default["styled-circle-checked"]] = checked, _c)), strokeWidth: 30, cx: 50, cy: 50, r: 35 })
  ) });
});

export {
  AbstractSwitch,
  styles_css_default,
  radio_button_default
};
//# sourceMappingURL=chunk-ZB6Y44FZ.js.map

import {
  custom_css_properties_default
} from "./chunk-J3BRM5E3.js";
import {
  getVisualContextClassname
} from "./chunk-GTS6H5YQ.js";
import {
  Transition,
  TransitionGroup_default
} from "./chunk-7ETUUVGM.js";
import {
  InternalButton
} from "./chunk-BX32VQUV.js";
import {
  InternalSpinner,
  live_region_default
} from "./chunk-5LXZ6RXM.js";
import {
  useFocusVisible
} from "./chunk-GKBIUDXI.js";
import {
  internal_default
} from "./chunk-XYE4ILSB.js";
import {
  useContainerBreakpoints
} from "./chunk-FBPNVVYB.js";
import {
  isDevelopment,
  warnOnce
} from "./chunk-GZ7CC2VZ.js";
import {
  useMergeRefs
} from "./chunk-EZZ3SG55.js";
import {
  useReducedMotion,
  useVisualRefresh
} from "./chunk-4EXFA7SU.js";
import {
  __assign,
  __rest,
  applyDisplayName,
  clsx_m_default,
  getBaseProps,
  init_clsx_m,
  useBaseComponent
} from "./chunk-VD3NZSIN.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@cloudscape-design/components/flashbar/index.js
init_clsx_m();
var import_react2 = __toESM(require_react());

// node_modules/@cloudscape-design/components/flashbar/flash.js
var import_react = __toESM(require_react());
init_clsx_m();

// node_modules/@cloudscape-design/components/flashbar/styles.css.js
import "/local/home/samilafo/final_epa_project/QwizGuruPlatform/DEVcloudscape/node_modules/@cloudscape-design/components/flashbar/styles.scoped.css";
var styles_css_default = {
  "flash-refresh": "awsui_flash-refresh_1q84n_1la8c_93",
  "enter": "awsui_enter_1q84n_1la8c_93",
  "flash-body": "awsui_flash-body_1q84n_1la8c_108",
  "flash-message": "awsui_flash-message_1q84n_1la8c_108",
  "flash-header": "awsui_flash-header_1q84n_1la8c_108",
  "flash-content": "awsui_flash-content_1q84n_1la8c_109",
  "action-button-wrapper": "awsui_action-button-wrapper_1q84n_1la8c_110",
  "dismiss-button-wrapper": "awsui_dismiss-button-wrapper_1q84n_1la8c_111",
  "flash-icon": "awsui_flash-icon_1q84n_1la8c_134",
  "entering": "awsui_entering_1q84n_1la8c_147",
  "entered": "awsui_entered_1q84n_1la8c_168",
  "exiting": "awsui_exiting_1q84n_1la8c_273",
  "flashbar": "awsui_flashbar_1q84n_1la8c_295",
  "flash": "awsui_flash_1q84n_1la8c_93",
  "flash-list": "awsui_flash-list_1q84n_1la8c_350",
  "flash-focus-container": "awsui_flash-focus-container_1q84n_1la8c_386",
  "flash-text": "awsui_flash-text_1q84n_1la8c_392",
  "dismiss-button": "awsui_dismiss-button_1q84n_1la8c_111",
  "breakpoint-default": "awsui_breakpoint-default_1q84n_1la8c_433",
  "flash-list-item": "awsui_flash-list-item_1q84n_1la8c_433",
  "action-button": "awsui_action-button_1q84n_1la8c_110",
  "flash-type-success": "awsui_flash-type-success_1q84n_1la8c_446",
  "flash-type-error": "awsui_flash-type-error_1q84n_1la8c_450",
  "flash-type-warning": "awsui_flash-type-warning_1q84n_1la8c_454",
  "flash-type-info": "awsui_flash-type-info_1q84n_1la8c_458",
  "stack": "awsui_stack_1q84n_1la8c_462",
  "expanded": "awsui_expanded_1q84n_1la8c_467",
  "collapsed": "awsui_collapsed_1q84n_1la8c_481",
  "item": "awsui_item_1q84n_1la8c_487",
  "visual-refresh": "awsui_visual-refresh_1q84n_1la8c_497",
  "flash-items": "awsui_flash-items_1q84n_1la8c_503",
  "toggle": "awsui_toggle_1q84n_1la8c_510",
  "icon": "awsui_icon_1q84n_1la8c_573"
};

// node_modules/@cloudscape-design/components/internal/utils/throttle.js
function throttle(func, delay, _a) {
  var _b = _a === void 0 ? {} : _a, _c = _b.trailing, trailing = _c === void 0 ? true : _c;
  var pending = null;
  var lastInvokeTime = null;
  var timerId = null;
  function pendingFunc() {
    if (pending === null || lastInvokeTime === null) {
      return;
    }
    var invokeTime = Date.now();
    var shouldInvoke = invokeTime - lastInvokeTime >= delay;
    if (shouldInvoke) {
      func.apply(pending["this"], pending.args);
      lastInvokeTime = invokeTime;
      pending = null;
      timerId = null;
    } else if (trailing) {
      startTimer();
    }
  }
  function startTimer() {
    if (timerId) {
      cancelAnimationFrame(timerId);
    }
    timerId = requestAnimationFrame(pendingFunc);
  }
  function throttled() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (lastInvokeTime === null) {
      lastInvokeTime = Date.now();
      func.apply(this, args);
    } else {
      pending = { "this": this, args };
      startTimer();
    }
  }
  throttled.cancel = function() {
    if (timerId) {
      cancelAnimationFrame(timerId);
    }
    pending = null;
    lastInvokeTime = null;
    timerId = null;
  };
  return throttled;
}

// node_modules/@cloudscape-design/components/flashbar/flash.js
var FOCUS_THROTTLE_DELAY = 2e3;
var ICON_TYPES = {
  success: "status-positive",
  warning: "status-warning",
  info: "status-info",
  error: "status-negative"
};
function actionButton(buttonText, onButtonClick) {
  return import_react.default.createElement(InternalButton, { onClick: onButtonClick, className: styles_css_default["action-button"], formAction: "none" }, buttonText);
}
function dismissButton(dismissLabel, onDismiss) {
  return import_react.default.createElement(
    "div",
    { className: styles_css_default["dismiss-button-wrapper"] },
    import_react.default.createElement(InternalButton, { onClick: onDismiss, className: styles_css_default["dismiss-button"], variant: "flashbar-icon", iconName: "close", formAction: "none", ariaLabel: dismissLabel })
  );
}
var focusFlashById = throttle(function(element, itemId) {
  var _a;
  var selector = '[data-itemid="'.concat(CSS.escape(itemId), '"] .').concat(styles_css_default["flash-focus-container"]);
  (_a = element === null || element === void 0 ? void 0 : element.querySelector(selector)) === null || _a === void 0 ? void 0 : _a.focus();
}, FOCUS_THROTTLE_DELAY, { trailing: false });
var Flash = import_react.default.forwardRef(function(_a, ref) {
  var _b;
  var id = _a.id, header = _a.header, content = _a.content, dismissible = _a.dismissible, dismissLabel = _a.dismissLabel, statusIconAriaLabel = _a.statusIconAriaLabel, loading = _a.loading, action = _a.action, buttonText = _a.buttonText, onButtonClick = _a.onButtonClick, onDismiss = _a.onDismiss, className = _a.className, transitionState = _a.transitionState, ariaRole = _a.ariaRole, _c = _a.type, type = _c === void 0 ? "info" : _c;
  var focusVisible = useFocusVisible();
  if (isDevelopment) {
    if (buttonText && !onButtonClick) {
      warnOnce("Flashbar", "You provided a `buttonText` prop without an `onButtonClick` handler. This will render a non-interactive action button.");
    }
    if (dismissible && !onDismiss) {
      warnOnce("Flashbar", "You have set the `dismissible` prop without an `onDismiss` handler. This will render a non-interactive dismiss button.");
    }
  }
  var button = action || buttonText && actionButton(buttonText, onButtonClick);
  var iconType = ICON_TYPES[type];
  var icon = loading ? import_react.default.createElement(InternalSpinner, null) : import_react.default.createElement(internal_default, { name: iconType });
  var effectiveType = loading ? "info" : type;
  var announcement = [statusIconAriaLabel, header, content].filter(Boolean).join(" ");
  return import_react.default.createElement(
    "div",
    { ref, role: ariaRole, "aria-live": ariaRole ? "off" : void 0, "data-itemid": id, className: clsx_m_default(styles_css_default.flash, styles_css_default["flash-type-".concat(effectiveType)], className, transitionState && (_b = {}, _b[styles_css_default.enter] = transitionState === "enter", _b[styles_css_default.entering] = transitionState === "entering", _b[styles_css_default.entered] = transitionState === "entered", _b[styles_css_default.exit] = transitionState === "exit", _b[styles_css_default.exiting] = transitionState === "exiting", _b[styles_css_default.exited] = transitionState === "exited", _b)) },
    import_react.default.createElement(
      "div",
      { className: styles_css_default["flash-body"] },
      import_react.default.createElement(
        "div",
        __assign({}, focusVisible, { className: styles_css_default["flash-focus-container"], tabIndex: ariaRole === "alert" ? -1 : void 0 }),
        import_react.default.createElement("div", { className: clsx_m_default(styles_css_default["flash-icon"], styles_css_default["flash-text"]), role: "img", "aria-label": statusIconAriaLabel }, icon),
        import_react.default.createElement(
          "div",
          { className: clsx_m_default(styles_css_default["flash-message"], styles_css_default["flash-text"]) },
          import_react.default.createElement("div", { className: styles_css_default["flash-header"] }, header),
          import_react.default.createElement("div", { className: styles_css_default["flash-content"] }, content)
        )
      ),
      button && import_react.default.createElement("div", { className: styles_css_default["action-button-wrapper"] }, button)
    ),
    dismissible && dismissButton(dismissLabel, onDismiss),
    ariaRole === "status" && import_react.default.createElement(live_region_default, null, announcement)
  );
});

// node_modules/@cloudscape-design/components/flashbar/constant.js
var TIMEOUT_FOR_ENTERING_ANIMATION = 115;

// node_modules/@cloudscape-design/components/flashbar/index.js
function Flashbar(_a) {
  var items = _a.items, restProps = __rest(_a, ["items"]);
  var __internalRootRef = useBaseComponent("Flashbar").__internalRootRef;
  var baseProps = getBaseProps(restProps);
  var ref = (0, import_react2.useRef)(null);
  var _b = useContainerBreakpoints(["xs"]), breakpoint = _b[0], breakpointRef = _b[1];
  var mergedRef = useMergeRefs(ref, breakpointRef, __internalRootRef);
  var isFocusVisible = useFocusVisible();
  var isVisualRefresh = useVisualRefresh();
  var _c = (0, import_react2.useState)(items), previousItems = _c[0], setPreviousItems = _c[1];
  var _d = (0, import_react2.useState)(null), nextFocusId = _d[0], setNextFocusId = _d[1];
  if (items) {
    var newItems = items.filter(function(_a2) {
      var id = _a2.id;
      return id && !previousItems.some(function(item) {
        return item.id === id;
      });
    });
    var removedItems = previousItems.filter(function(_a2) {
      var id = _a2.id;
      return id && !items.some(function(item) {
        return item.id === id;
      });
    });
    if (newItems.length > 0 || removedItems.length > 0) {
      setPreviousItems(items);
      var newFocusItems = newItems.filter(function(_a2) {
        var ariaRole = _a2.ariaRole;
        return ariaRole === "alert";
      });
      if (newFocusItems.length > 0) {
        setNextFocusId(newFocusItems[0].id);
      }
    }
  }
  (0, import_react2.useEffect)(function() {
    if (nextFocusId) {
      focusFlashById(ref.current, nextFocusId);
    }
  }, [nextFocusId]);
  var motionDisabled = useReducedMotion(breakpointRef) || !isVisualRefresh || items && !items.every(function(item) {
    return "id" in item;
  });
  var stackItems = isStackedFlashbar(restProps);
  var ariaLabels = stackItems ? restProps.ariaLabels : {};
  var isFlashbarStacked = stackItems && (items === null || items === void 0 ? void 0 : items.length) > 3;
  var _e = (0, import_react2.useState)(false), isFlashbarStackExpanded = _e[0], setIsFlashbarStackExpanded = _e[1];
  function getStackButtonAriaLabel() {
    var _a2, _b2;
    var stackButtonAriaLabel;
    if (isFlashbarStackExpanded) {
      stackButtonAriaLabel = (_a2 = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.stackCollapseLabel) !== null && _a2 !== void 0 ? _a2 : "Collapse stacked notifications";
    } else {
      stackButtonAriaLabel = (_b2 = ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.stackExpandLabel) !== null && _b2 !== void 0 ? _b2 : "Expand stacked notifications";
    }
    return stackButtonAriaLabel;
  }
  function renderStackedItems() {
    var _a2;
    if (!isFlashbarStacked) {
      return;
    }
    var stackDepth = Math.min(3, items.length);
    var stackedItems = items.slice(0, stackDepth);
    return import_react2.default.createElement(
      "div",
      { className: styles_css_default.stack, style: (_a2 = {}, _a2[custom_css_properties_default.flashbarStackDepth] = stackDepth, _a2) },
      !isFlashbarStackExpanded && import_react2.default.createElement("div", { className: clsx_m_default(styles_css_default.collapsed, isVisualRefresh && styles_css_default["visual-refresh"]) }, stackedItems.map(function(item, index) {
        var _a3;
        var _b2, _c2;
        return import_react2.default.createElement(
          "div",
          { className: styles_css_default.item, style: (_a3 = {}, _a3[custom_css_properties_default.flashbarStackIndex] = index, _a3), key: index },
          index === 0 && import_react2.default.createElement(
            "ul",
            { className: styles_css_default["flash-list"] },
            import_react2.default.createElement("li", { className: styles_css_default["flash-list-item"] }, renderItem(item, (_b2 = item.id) !== null && _b2 !== void 0 ? _b2 : index))
          ),
          index > 0 && import_react2.default.createElement("div", { className: clsx_m_default(styles_css_default.flash, styles_css_default["flash-type-".concat((_c2 = item.type) !== null && _c2 !== void 0 ? _c2 : "info")]) })
        );
      })),
      isFlashbarStackExpanded && import_react2.default.createElement("ul", { className: clsx_m_default(styles_css_default["flash-list"], styles_css_default.expanded) }, items.map(function(item, index) {
        var _a3, _b2;
        return import_react2.default.createElement("li", { key: (_a3 = item.id) !== null && _a3 !== void 0 ? _a3 : index, className: styles_css_default["flash-list-item"] }, renderItem(item, (_b2 = item.id) !== null && _b2 !== void 0 ? _b2 : index));
      })),
      import_react2.default.createElement(
        "button",
        __assign({ "aria-label": getStackButtonAriaLabel(), className: clsx_m_default(styles_css_default.toggle, isVisualRefresh && styles_css_default["visual-refresh"]), onClick: function() {
          return setIsFlashbarStackExpanded(!isFlashbarStackExpanded);
        } }, isFocusVisible),
        import_react2.default.createElement(
          "span",
          { className: clsx_m_default(styles_css_default.icon, isFlashbarStackExpanded && styles_css_default.expanded) },
          import_react2.default.createElement(internal_default, { size: "small", name: "angle-down" })
        )
      )
    );
  }
  function renderFlatItemsWithTransitions() {
    if (isFlashbarStacked || motionDisabled || !items) {
      return;
    }
    return import_react2.default.createElement(TransitionGroup_default, { component: "ul", className: styles_css_default["flash-list"] }, items && items.map(function(item, index) {
      var _a2;
      return import_react2.default.createElement(Transition, { transitionChangeDelay: { entering: TIMEOUT_FOR_ENTERING_ANIMATION }, key: (_a2 = item.id) !== null && _a2 !== void 0 ? _a2 : index, "in": true }, function(state, transitionRootElement) {
        var _a3;
        return import_react2.default.createElement("li", { className: styles_css_default["flash-list-item"] }, renderItem(item, (_a3 = item.id) !== null && _a3 !== void 0 ? _a3 : index, transitionRootElement, state));
      });
    }));
  }
  function renderFlatItemsWithoutTransitions() {
    if (isFlashbarStacked || !motionDisabled || !items) {
      return;
    }
    return import_react2.default.createElement("ul", { className: styles_css_default["flash-list"] }, items.map(function(item, index) {
      var _a2, _b2;
      return import_react2.default.createElement("li", { key: (_a2 = item.id) !== null && _a2 !== void 0 ? _a2 : index, className: styles_css_default["flash-list-item"] }, renderItem(item, (_b2 = item.id) !== null && _b2 !== void 0 ? _b2 : index));
    }));
  }
  function renderItem(item, key, transitionRootElement, transitionState) {
    return import_react2.default.createElement(
      Flash,
      __assign({
        className: clsx_m_default(getVisualContextClassname("flashbar"), isVisualRefresh ? styles_css_default["flash-refresh"] : ""),
        key,
        ref: transitionRootElement,
        transitionState
      }, item)
    );
  }
  return import_react2.default.createElement(
    "div",
    __assign({}, baseProps, { className: clsx_m_default(baseProps.className, styles_css_default.flashbar, styles_css_default["breakpoint-".concat(breakpoint)]), ref: mergedRef }),
    renderStackedItems(),
    renderFlatItemsWithTransitions(),
    renderFlatItemsWithoutTransitions()
  );
}
function isStackedFlashbar(props) {
  return "stackItems" in props && !!props.stackItems;
}
applyDisplayName(Flashbar, "Flashbar");

export {
  throttle,
  Flashbar
};
//# sourceMappingURL=chunk-32Q7FIHM.js.map

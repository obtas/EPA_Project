{
  "version": 3,
  "sources": ["../../src/app-layout/index.tsx", "../../src/app-layout/notifications/index.tsx", "../../@cloudscape-design/components/app-layout/notifications/styles.css.js", "../../src/app-layout/mobile-toolbar/index.tsx", "../../src/app-layout/toggles/index.tsx", "../../@cloudscape-design/components/app-layout/toggles/styles.css.js", "../../@cloudscape-design/components/app-layout/mobile-toolbar/styles.css.js", "../../@cloudscape-design/components/app-layout/styles.css.js", "../../@cloudscape-design/components/app-layout/test-classes/styles.css.js", "../../src/app-layout/split-panel-wrapper.tsx", "../../src/app-layout/utils/use-window-width.ts", "../../src/app-layout/utils/use-content-height.ts", "../../src/app-layout/content-wrapper/index.tsx", "../../@cloudscape-design/components/app-layout/content-wrapper/styles.css.js", "../../src/app-layout/navigation-panel.tsx", "../../src/app-layout/drawer.tsx", "../../src/app-layout/tools-and-split-panel.tsx", "../../src/internal/hooks/use-previous-frame/index.ts", "../../src/app-layout/utils/use-content-width.ts", "../../src/app-layout/visual-refresh/index.tsx", "../../src/app-layout/visual-refresh/app-bar.tsx", "../../src/app-layout/visual-refresh/background.tsx", "../../src/app-layout/visual-refresh/header.tsx", "../../src/app-layout/visual-refresh/layout.tsx", "../../src/app-layout/visual-refresh/main.tsx", "../../src/app-layout/visual-refresh/navigation.tsx", "../../src/app-layout/visual-refresh/trigger-button.tsx", "../../src/app-layout/visual-refresh/notifications.tsx", "../../src/app-layout/visual-refresh/tools.tsx", "../../@cloudscape-design/components/split-panel/styles.css.js"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { useControllable } from '../internal/hooks/use-controllable';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { applyDefaults } from './defaults';\nimport { AppLayoutProps } from './interfaces';\nimport { Notifications } from './notifications';\nimport { MobileToolbar } from './mobile-toolbar';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport { useFocusControl } from './utils/use-focus-control';\nimport useWindowWidth from './utils/use-window-width';\nimport useContentHeight from './utils/use-content-height';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport { findUpUntil } from '../internal/utils/dom';\nimport { AppLayoutContext } from '../internal/context/app-layout-context';\nimport { useContainerQuery } from '../internal/hooks/container-queries';\nimport { useStableEventHandler } from '../internal/hooks/use-stable-event-handler';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { SplitPanelContextProps, SplitPanelLastInteraction } from '../internal/context/split-panel-context';\nimport {\n  CONSTRAINED_MAIN_PANEL_MIN_HEIGHT,\n  CONSTRAINED_PAGE_HEIGHT,\n  getSplitPanelDefaultSize,\n  MAIN_PANEL_MIN_HEIGHT,\n} from '../split-panel/utils/size-utils';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport ContentWrapper, { ContentWrapperProps } from './content-wrapper';\nimport { isMotionDisabled } from '../internal/motion';\nimport { useEffectOnUpdate } from '../internal/hooks/use-effect-on-update';\nimport { NavigationPanel } from './navigation-panel';\nimport { ToolsAndSplitPanel } from './tools-and-split-panel';\nimport { usePreviousFrameValue } from '../internal/hooks/use-previous-frame';\nimport useAppLayoutOffsets from './utils/use-content-width';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '../internal/logging';\n\nimport RefreshedAppLayout from './visual-refresh';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nexport { AppLayoutProps };\n\nconst AppLayout = React.forwardRef(\n  (\n    { contentType = 'default', headerSelector = '#b #h', footerSelector = '#b #f', ...rest }: AppLayoutProps,\n    ref: React.Ref<AppLayoutProps.Ref>\n  ) => {\n    const { __internalRootRef } = useBaseComponent<HTMLDivElement>('AppLayout');\n    const isRefresh = useVisualRefresh();\n\n    // This re-builds the props including the default values\n    const props = { contentType, headerSelector, footerSelector, ...rest };\n\n    const baseProps = getBaseProps(rest);\n\n    return (\n      <div ref={__internalRootRef} {...baseProps}>\n        {isRefresh ? <RefreshedAppLayout {...props} ref={ref} /> : <OldAppLayout {...props} ref={ref} />}\n      </div>\n    );\n  }\n);\n\nconst OldAppLayout = React.forwardRef(\n  (\n    {\n      navigation,\n      navigationWidth = 280,\n      navigationHide,\n      navigationOpen: controlledNavigationOpen,\n      tools,\n      toolsWidth = 290,\n      toolsHide,\n      toolsOpen: controlledToolsOpen,\n      breadcrumbs,\n      notifications,\n      stickyNotifications,\n      contentHeader,\n      disableContentHeaderOverlap,\n      content,\n      contentType = 'default',\n      disableContentPaddings,\n      disableBodyScroll,\n      maxContentWidth,\n      minContentWidth,\n      headerSelector = '#b #h',\n      footerSelector = '#b #f',\n      ariaLabels,\n      splitPanel,\n      splitPanelSize: controlledSplitPanelSize,\n      splitPanelOpen: controlledSplitPanelOpen,\n      splitPanelPreferences: controlledSplitPanelPreferences,\n      onSplitPanelPreferencesChange,\n      onSplitPanelResize,\n      onSplitPanelToggle,\n      onNavigationChange,\n      onToolsChange,\n    }: AppLayoutProps,\n    ref: React.Ref<AppLayoutProps.Ref>\n  ) => {\n    if (isDevelopment) {\n      if (controlledToolsOpen && toolsHide) {\n        warnOnce(\n          'AppLayout',\n          `You have enabled both the \\`toolsOpen\\` prop and the \\`toolsHide\\` prop. This is not supported. Set \\`toolsOpen\\` to \\`false\\` when you set \\`toolsHide\\` to \\`true\\`.`\n        );\n      }\n    }\n    const rootRef = useRef<HTMLDivElement>(null);\n    const isMobile = useMobile();\n    const isMotionEnabled = rootRef.current ? !isMotionDisabled(rootRef.current) : false;\n\n    const defaults = applyDefaults(contentType, { maxContentWidth, minContentWidth }, false);\n    const [navigationOpen = false, setNavigationOpen] = useControllable(\n      controlledNavigationOpen,\n      onNavigationChange,\n      isMobile ? false : defaults.navigationOpen,\n      { componentName: 'AppLayout', controlledProp: 'navigationOpen', changeHandler: 'onNavigationChange' }\n    );\n\n    const [toolsOpen = false, setToolsOpen] = useControllable(\n      controlledToolsOpen,\n      onToolsChange,\n      isMobile ? false : defaults.toolsOpen,\n      { componentName: 'AppLayout', controlledProp: 'toolsOpen', changeHandler: 'onToolsChange' }\n    );\n\n    const onNavigationToggle = useCallback(\n      (open: boolean) => {\n        setNavigationOpen(open);\n        fireNonCancelableEvent(onNavigationChange, { open });\n      },\n      [setNavigationOpen, onNavigationChange]\n    );\n    const onToolsToggle = useCallback(\n      (open: boolean) => {\n        setToolsOpen(open);\n        fireNonCancelableEvent(onToolsChange, { open });\n      },\n      [setToolsOpen, onToolsChange]\n    );\n    const onNavigationClick = (event: React.MouseEvent) => {\n      const hasLink = findUpUntil(\n        event.target as HTMLElement,\n        node => node.tagName === 'A' && !!(node as HTMLAnchorElement).href\n      );\n      if (hasLink) {\n        onNavigationToggle(false);\n      }\n    };\n\n    const navigationVisible = !navigationHide && navigationOpen;\n    const toolsVisible = !toolsHide && toolsOpen;\n\n    const { contentHeightStyle, headerHeight, footerHeight, panelHeightStyle } = useContentHeight(\n      headerSelector,\n      footerSelector,\n      disableBodyScroll\n    );\n    const [isSplitpanelForcedPosition, setIsSplitpanelForcedPosition] = useState(false);\n\n    const [notificationsHeight, notificationsRef] = useContainerQuery(rect => rect.height);\n    const [splitPanelHeaderHeight, splitPanelHeaderMeasureRef] = useContainerQuery(\n      rect => (splitPanel ? rect.height : 0),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [splitPanel, isSplitpanelForcedPosition]\n    );\n\n    const splitPanelHeaderRefObject = useRef(null);\n    const splitPanelHeaderRef = useMergeRefs(splitPanelHeaderMeasureRef, splitPanelHeaderRefObject);\n    const anyPanelOpen = navigationVisible || toolsVisible;\n    const hasRenderedNotifications = notificationsHeight ? notificationsHeight > 0 : false;\n    const stickyNotificationsHeight = stickyNotifications ? notificationsHeight : null;\n\n    const [splitPanelPreferences, setSplitPanelPreferences] = useControllable(\n      controlledSplitPanelPreferences,\n      onSplitPanelPreferencesChange,\n      undefined,\n      {\n        componentName: 'AppLayout',\n        controlledProp: 'splitPanelPreferences',\n        changeHandler: 'onSplitPanelPreferencesChange',\n      }\n    );\n    const splitPanelPosition = splitPanelPreferences?.position || 'bottom';\n\n    const [splitPanelHeight, splitPanelRef] = useContainerQuery(\n      rect => (splitPanel ? rect.height : 0),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [splitPanel, splitPanelPosition, isSplitpanelForcedPosition]\n    );\n\n    const closedDrawerWidth = 40;\n    const effectiveNavigationWidth = navigationHide ? 0 : navigationOpen ? navigationWidth : closedDrawerWidth;\n    const effectiveToolsWidth =\n      toolsHide && (!splitPanel || splitPanelPreferences?.position !== 'side')\n        ? 0\n        : toolsOpen\n        ? toolsWidth\n        : closedDrawerWidth;\n\n    const defaultSplitPanelSize = getSplitPanelDefaultSize(splitPanelPosition);\n    const [splitPanelSize = defaultSplitPanelSize, setSplitPanelSize] = useControllable(\n      controlledSplitPanelSize,\n      onSplitPanelResize,\n      defaultSplitPanelSize,\n      {\n        componentName: 'AppLayout',\n        controlledProp: 'splitPanelSize',\n        changeHandler: 'onSplitPanelResize',\n      }\n    );\n\n    const [splitPanelOpen = false, setSplitPanelOpen] = useControllable(\n      controlledSplitPanelOpen,\n      onSplitPanelToggle,\n      false,\n      {\n        componentName: 'AppLayout',\n        controlledProp: 'splitPanelOpen',\n        changeHandler: 'onSplitPanelToggle',\n      }\n    );\n\n    const mainContentRef = useRef<HTMLDivElement>(null);\n    const legacyScrollRootRef = useRef<HTMLElement>(null);\n\n    const onSplitPanelPreferencesSet = useCallback(\n      (detail: { position: 'side' | 'bottom' }) => {\n        setSplitPanelPreferences(detail);\n        fireNonCancelableEvent(onSplitPanelPreferencesChange, detail);\n      },\n      [setSplitPanelPreferences, onSplitPanelPreferencesChange]\n    );\n    const onSplitPanelSizeSet = useCallback(\n      (detail: { size: number }) => {\n        setSplitPanelSize(detail.size);\n        fireNonCancelableEvent(onSplitPanelResize, detail);\n      },\n      [setSplitPanelSize, onSplitPanelResize]\n    );\n    const onToggle = useCallback(() => {\n      setSplitPanelOpen(!splitPanelOpen);\n      fireNonCancelableEvent(onSplitPanelToggle, { open: !splitPanelOpen });\n    }, [setSplitPanelOpen, splitPanelOpen, onSplitPanelToggle]);\n\n    const getSplitPanelMaxWidth = useStableEventHandler(() => {\n      if (!mainContentRef.current || !defaults.minContentWidth) {\n        return NaN;\n      }\n\n      const width = parseInt(getComputedStyle(mainContentRef.current).width);\n      // when disableContentPaddings is true there is less available space,\n      // so we subtract space-scaled-2x-xxxl * 2 for left and right padding\n      const contentPadding = disableContentPaddings ? 80 : 0;\n      const spaceAvailable = width - defaults.minContentWidth - contentPadding;\n      const spaceTaken = finalSplitPanePosition === 'side' ? splitPanelSize : 0;\n      return Math.max(0, spaceTaken + spaceAvailable);\n    });\n\n    const getSplitPanelMaxHeight = useStableEventHandler(() => {\n      if (typeof document === 'undefined') {\n        return 0; // render the split panel in its minimum possible size\n      } else if (disableBodyScroll && legacyScrollRootRef.current) {\n        const availableHeight = legacyScrollRootRef.current.clientHeight;\n        return availableHeight < CONSTRAINED_PAGE_HEIGHT ? availableHeight : availableHeight - MAIN_PANEL_MIN_HEIGHT;\n      } else {\n        const availableHeight = document.documentElement.clientHeight - headerHeight - footerHeight;\n        return availableHeight < CONSTRAINED_PAGE_HEIGHT\n          ? availableHeight - CONSTRAINED_MAIN_PANEL_MIN_HEIGHT\n          : availableHeight - MAIN_PANEL_MIN_HEIGHT;\n      }\n    });\n\n    const finalSplitPanePosition = isSplitpanelForcedPosition ? 'bottom' : splitPanelPosition;\n\n    const splitPaneAvailableOnTheSide = Boolean(splitPanel) && finalSplitPanePosition === 'side';\n    const splitPanelOpenOnTheSide = splitPaneAvailableOnTheSide && splitPanelOpen;\n\n    const toggleButtonsBarWidth = 0;\n\n    const windowWidth = useWindowWidth();\n    const { left: leftOffset, right: rightOffset } = useAppLayoutOffsets(rootRef.current);\n    const contentWidthWithSplitPanel =\n      windowWidth -\n      leftOffset -\n      rightOffset -\n      effectiveToolsWidth -\n      effectiveNavigationWidth -\n      (disableContentPaddings ? 0 : toggleButtonsBarWidth);\n\n    useEffect(() => {\n      const contentWidth = contentWidthWithSplitPanel - splitPanelSize;\n      setIsSplitpanelForcedPosition(isMobile || (defaults.minContentWidth || 0) > contentWidth);\n      // This is a workaround to avoid a forced position due to splitPanelSize, which is\n      // user controlled variable.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [contentWidthWithSplitPanel, defaults.minContentWidth, isMobile]);\n\n    const navigationClosedWidth = navigationHide || isMobile ? 0 : closedDrawerWidth;\n    const toolsClosedWidth = toolsHide || isMobile ? 0 : closedDrawerWidth;\n\n    const [splitPanelLastInteraction, setSplitPanelLastInteraction] = useState<undefined | SplitPanelLastInteraction>();\n    useEffectOnUpdate(\n      () => setSplitPanelLastInteraction(splitPanelOpen ? { type: 'open' } : { type: 'close' }),\n      [splitPanelOpen]\n    );\n    useEffectOnUpdate(() => setSplitPanelLastInteraction({ type: 'position' }), [splitPanelPosition]);\n\n    const contentMaxWidthStyle = !isMobile ? { maxWidth: defaults.maxContentWidth } : undefined;\n\n    const [splitPanelReportedSize, setSplitPanelReportedSize] = useState(0);\n\n    const splitPanelContext: SplitPanelContextProps = {\n      topOffset: headerHeight + (finalSplitPanePosition === 'bottom' ? stickyNotificationsHeight || 0 : 0),\n      bottomOffset: footerHeight,\n      leftOffset:\n        leftOffset + (isMobile ? 0 : !navigationHide && navigationOpen ? navigationWidth : navigationClosedWidth),\n      rightOffset: rightOffset + (isMobile ? 0 : !toolsHide && toolsOpen ? toolsWidth : toolsClosedWidth),\n      position: finalSplitPanePosition,\n      size: splitPanelSize,\n      getMaxWidth: getSplitPanelMaxWidth,\n      getMaxHeight: getSplitPanelMaxHeight,\n      getHeader: () => splitPanelHeaderRefObject.current,\n      disableContentPaddings,\n      contentWidthStyles: contentMaxWidthStyle,\n      isOpen: splitPanelOpen,\n      isMobile,\n      isRefresh: false,\n      isForcedPosition: isSplitpanelForcedPosition,\n      lastInteraction: splitPanelLastInteraction,\n      splitPanelRef,\n      splitPanelHeaderRef,\n      onResize: onSplitPanelSizeSet,\n      onToggle,\n      onPreferencesChange: onSplitPanelPreferencesSet,\n      reportSize: setSplitPanelReportedSize,\n    };\n\n    const contentWrapperProps: ContentWrapperProps = {\n      navigationPadding: navigationHide || !!navigationOpen,\n      toolsPadding:\n        // tools padding is displayed in one of the three cases\n        // 1. Nothing on the that screen edge (no tools panel and no split panel)\n        (toolsHide && (!splitPanel || finalSplitPanePosition !== 'side')) ||\n        // 2. Tools panel is present and open\n        toolsVisible ||\n        // 3. Split panel is open in side position\n        splitPanelOpenOnTheSide,\n      isMobile,\n    };\n\n    const { refs: navigationRefs } = useFocusControl(navigationOpen);\n    const { refs: toolsRefs, setFocus: focusToolsClose, loseFocus: loseToolsFocus } = useFocusControl(toolsOpen, true);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        openTools: () => onToolsToggle(true),\n        closeNavigationIfNecessary: () => {\n          if (isMobile) {\n            onNavigationToggle(false);\n          }\n        },\n        focusToolsClose,\n      }),\n      [isMobile, onNavigationToggle, onToolsToggle, focusToolsClose]\n    );\n\n    const splitPanelBottomOffset =\n      (!splitPanel || finalSplitPanePosition !== 'bottom'\n        ? undefined\n        : splitPanelOpen\n        ? splitPanelHeight\n        : splitPanelHeaderHeight) ?? undefined;\n\n    const contentWidthStyles = !isMobile\n      ? { minWidth: defaults.minContentWidth, maxWidth: defaults.maxContentWidth }\n      : undefined;\n\n    const isToolsDrawerHidden = disableContentPaddings;\n\n    const toolsDrawerWidth = (() => {\n      if (isMobile) {\n        return 0;\n      }\n\n      const toolsPanelWidth = toolsHide ? 0 : toolsOpen ? toolsWidth : closedDrawerWidth;\n      const splitPanelWidth =\n        !splitPanel || finalSplitPanePosition !== 'side'\n          ? 0\n          : splitPanelOpen\n          ? splitPanelReportedSize\n          : closedDrawerWidth;\n\n      return toolsPanelWidth + splitPanelWidth;\n    })();\n\n    const navigationDrawerWidth = (() => {\n      if (isMobile) {\n        return 0;\n      }\n\n      return effectiveNavigationWidth;\n    })();\n\n    const previousContentWidth = usePreviousFrameValue(\n      contentWidthWithSplitPanel - (splitPanelOpenOnTheSide ? splitPanelReportedSize : 0)\n    );\n\n    const contentScaleX = (() => {\n      if (isMobile || !isMotionEnabled || !disableContentPaddings || !previousContentWidth) {\n        return undefined;\n      }\n    })();\n\n    return (\n      <div\n        className={clsx(styles.root, testutilStyles.root, disableBodyScroll && styles['root-no-scroll'])}\n        ref={rootRef}\n      >\n        <div className={styles['layout-wrapper']} style={contentHeightStyle}>\n          {isMobile && (!toolsHide || !navigationHide || breadcrumbs) && (\n            <MobileToolbar\n              anyPanelOpen={anyPanelOpen}\n              toggleRefs={{ navigation: navigationRefs.toggle, tools: toolsRefs.toggle }}\n              topOffset={headerHeight}\n              ariaLabels={ariaLabels}\n              navigationHide={navigationHide}\n              toolsHide={toolsHide}\n              onNavigationOpen={() => onNavigationToggle(true)}\n              onToolsOpen={() => onToolsToggle(true)}\n              unfocusable={anyPanelOpen}\n            >\n              {breadcrumbs}\n            </MobileToolbar>\n          )}\n          <div className={clsx(styles.layout, disableBodyScroll && styles['layout-no-scroll'])}>\n            {!navigationHide && (\n              <NavigationPanel\n                ariaLabels={ariaLabels}\n                footerHeight={footerHeight}\n                headerHeight={headerHeight}\n                isHidden={disableContentPaddings}\n                isMobile={isMobile}\n                isMotionEnabled={isMotionEnabled}\n                navigation={navigation}\n                navigationDrawerWidth={navigationDrawerWidth}\n                navigationOpen={navigationOpen}\n                onClick={isMobile ? onNavigationClick : undefined}\n                onNavigationToggle={onNavigationToggle}\n                panelHeightStyle={panelHeightStyle}\n                toggleRefs={navigationRefs}\n                navigationWidth={navigationWidth}\n              />\n            )}\n            <main\n              ref={legacyScrollRootRef}\n              className={clsx(styles['layout-main'], {\n                [styles['layout-main-scrollable']]: disableBodyScroll,\n                [testutilStyles['disable-body-scroll-root']]: disableBodyScroll,\n                [styles.unfocusable]: isMobile && anyPanelOpen,\n              })}\n            >\n              <div\n                style={{\n                  marginBottom: splitPanelBottomOffset,\n                  transform: contentScaleX ? `scaleX(${contentScaleX})` : undefined,\n                }}\n              >\n                {notifications && (\n                  <Notifications\n                    testUtilsClassName={clsx(styles.notifications, testutilStyles.notifications)}\n                    labels={ariaLabels}\n                    topOffset={disableBodyScroll ? 0 : headerHeight}\n                    sticky={!isMobile && stickyNotifications}\n                    ref={notificationsRef}\n                    isMobile={isMobile}\n                    navigationPadding={contentWrapperProps.navigationPadding}\n                    toolsPadding={contentWrapperProps.toolsPadding}\n                    contentWidthStyles={contentWidthStyles}\n                  >\n                    {notifications}\n                  </Notifications>\n                )}\n                {((!isMobile && breadcrumbs) || contentHeader) && (\n                  <ContentWrapper {...contentWrapperProps} contentWidthStyles={contentWidthStyles}>\n                    {!isMobile && breadcrumbs && (\n                      <div\n                        className={clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, styles['breadcrumbs-desktop'])}\n                      >\n                        {breadcrumbs}\n                      </div>\n                    )}\n                    {contentHeader && (\n                      <div\n                        className={clsx(\n                          styles['content-header-wrapper'],\n                          !hasRenderedNotifications &&\n                            (isMobile || !breadcrumbs) &&\n                            styles['content-extra-top-padding'],\n                          !hasRenderedNotifications && !breadcrumbs && styles['content-header-wrapper-first-child'],\n                          !disableContentHeaderOverlap && styles['content-header-wrapper-overlapped']\n                        )}\n                      >\n                        {contentHeader}\n                      </div>\n                    )}\n                  </ContentWrapper>\n                )}\n                <ContentWrapper\n                  {...contentWrapperProps}\n                  ref={mainContentRef}\n                  disablePaddings={disableContentPaddings}\n                  // eslint-disable-next-line react/forbid-component-props\n                  className={clsx(\n                    !disableContentPaddings && styles['content-wrapper'],\n                    !disableContentPaddings &&\n                      (isMobile || !breadcrumbs) &&\n                      !contentHeader &&\n                      styles['content-extra-top-padding'],\n                    !hasRenderedNotifications &&\n                      !breadcrumbs &&\n                      !isMobile &&\n                      !contentHeader &&\n                      styles['content-wrapper-first-child']\n                  )}\n                >\n                  <div\n                    className={clsx(\n                      styles.content,\n                      testutilStyles.content,\n                      !disableContentHeaderOverlap && contentHeader && styles['content-overlapped']\n                    )}\n                    style={contentWidthStyles}\n                  >\n                    <AppLayoutContext.Provider\n                      value={{\n                        stickyOffsetTop:\n                          (disableBodyScroll ? 0 : headerHeight) +\n                          (stickyNotificationsHeight !== null ? stickyNotificationsHeight : 0),\n                        stickyOffsetBottom: footerHeight + (splitPanelBottomOffset || 0),\n                      }}\n                    >\n                      {content}\n                    </AppLayoutContext.Provider>\n                  </div>\n                </ContentWrapper>\n              </div>\n              {finalSplitPanePosition === 'bottom' && (\n                <SplitPanelWrapper context={splitPanelContext}>{splitPanel}</SplitPanelWrapper>\n              )}\n            </main>\n\n            <ToolsAndSplitPanel\n              splitPanel={finalSplitPanePosition === 'side' ? splitPanel : undefined}\n              ariaLabels={ariaLabels}\n              closedDrawerWidth={closedDrawerWidth}\n              contentHeightStyle={contentHeightStyle}\n              disableContentPaddings={disableContentPaddings}\n              drawerWidth={toolsDrawerWidth}\n              footerHeight={footerHeight}\n              headerHeight={headerHeight}\n              isHidden={isToolsDrawerHidden}\n              isMobile={isMobile}\n              isMotionEnabled={isMotionEnabled}\n              onToolsToggle={onToolsToggle}\n              panelHeightStyle={panelHeightStyle}\n              splitPanelContext={splitPanelContext}\n              splitPanelOpen={splitPanelOpenOnTheSide}\n              splitPanelReportedSize={splitPanelReportedSize}\n              toggleRefs={toolsRefs}\n              onLoseToolsFocus={loseToolsFocus}\n              tools={tools}\n              toolsHide={Boolean(toolsHide)}\n              toolsOpen={toolsOpen}\n              toolsWidth={toolsWidth}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\napplyDisplayName(AppLayout, 'AppLayout');\nexport default AppLayout;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { AppLayoutProps } from '../interfaces';\n\ninterface NotificationsProps {\n  testUtilsClassName: string;\n  children?: React.ReactNode;\n  labels: AppLayoutProps.Labels | undefined;\n  topOffset: number | undefined;\n  isMobile: boolean;\n}\ninterface NotificationWrapperProps extends NotificationsProps {\n  sticky: boolean | undefined;\n  navigationPadding: boolean;\n  toolsPadding: boolean;\n  contentWidthStyles?: React.CSSProperties;\n}\n\nexport const Notifications = React.forwardRef(\n  ({ sticky, ...props }: NotificationWrapperProps, ref: React.Ref<HTMLDivElement>) => {\n    return sticky ? (\n      <div ref={ref} className={styles['notifications-sticky']} style={{ top: props.topOffset }}>\n        <div role=\"region\" className={clsx(props.testUtilsClassName)} aria-label={props.labels?.notifications}>\n          {props.children}\n        </div>\n      </div>\n    ) : (\n      <div role=\"region\" ref={ref} className={clsx(props.testUtilsClassName)} aria-label={props.labels?.notifications}>\n        {props.children}\n      </div>\n    );\n  }\n);\n", "\n    import './styles.scoped.css';\n    export default {\n  \"notifications-sticky\": \"awsui_notifications-sticky_1hmm4_1qn9j_9\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useEffect } from 'react';\nimport { ButtonProps } from '../../button/interfaces';\nimport { AppLayoutProps } from '../interfaces';\nimport { AppLayoutButton, togglesConfig } from '../toggles';\nimport styles from './styles.css.js';\nimport sharedStyles from '../styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n\ninterface MobileToggleProps {\n  className?: string;\n  ariaLabels?: AppLayoutProps.Labels;\n  type: keyof typeof togglesConfig;\n  disabled?: boolean;\n  onClick: () => void;\n}\n\nconst MobileToggle = React.forwardRef(\n  ({ className, ariaLabels, type, disabled, onClick }: MobileToggleProps, ref: React.Ref<ButtonProps.Ref>) => {\n    const { TagName, iconName, getLabels } = togglesConfig[type];\n    const { mainLabel, openLabel } = getLabels(ariaLabels);\n    return (\n      <TagName\n        className={clsx(styles['mobile-toggle'])}\n        aria-hidden={disabled}\n        aria-label={mainLabel}\n        onClick={onClick}\n      >\n        <AppLayoutButton\n          ref={ref}\n          className={className}\n          iconName={iconName}\n          onClick={onClick}\n          ariaLabel={openLabel}\n          disabled={disabled}\n          ariaExpanded={disabled}\n        />\n      </TagName>\n    );\n  }\n);\n\ninterface MobileToolbarProps {\n  anyPanelOpen: boolean | undefined;\n  unfocusable: boolean | undefined;\n  toggleRefs: {\n    navigation: React.Ref<ButtonProps.Ref>;\n    tools: React.Ref<ButtonProps.Ref>;\n  };\n  navigationHide: boolean | undefined;\n  toolsHide: boolean | undefined;\n  topOffset?: number;\n  ariaLabels?: AppLayoutProps.Labels;\n  children: React.ReactNode;\n  onNavigationOpen: () => void;\n  onToolsOpen: () => void;\n}\n\nexport function MobileToolbar({\n  ariaLabels = {},\n  toggleRefs,\n  topOffset,\n  navigationHide,\n  toolsHide,\n  anyPanelOpen = false,\n  unfocusable,\n  children,\n  onNavigationOpen,\n  onToolsOpen,\n}: MobileToolbarProps) {\n  useEffect(() => {\n    if (anyPanelOpen) {\n      document.body.classList.add(styles['block-body-scroll']);\n      return () => {\n        document.body.classList.remove(styles['block-body-scroll']);\n      };\n    } else {\n      document.body.classList.remove(styles['block-body-scroll']);\n    }\n  }, [anyPanelOpen]);\n\n  return (\n    <div className={clsx(styles['mobile-bar'], unfocusable && sharedStyles.unfocusable)} style={{ top: topOffset }}>\n      {!navigationHide && (\n        <MobileToggle\n          ref={toggleRefs.navigation}\n          type=\"navigation\"\n          className={clsx(sharedStyles['navigation-toggle'], testutilStyles['navigation-toggle'])}\n          ariaLabels={ariaLabels}\n          disabled={anyPanelOpen}\n          onClick={onNavigationOpen}\n        />\n      )}\n      <div className={styles['mobile-bar-breadcrumbs']}>\n        {children && <div className={clsx(sharedStyles.breadcrumbs, testutilStyles.breadcrumbs)}>{children}</div>}\n      </div>\n      {!toolsHide && (\n        <MobileToggle\n          ref={toggleRefs.tools}\n          type=\"tools\"\n          className={clsx(sharedStyles['tools-toggle'], testutilStyles['tools-toggle'])}\n          ariaLabels={ariaLabels}\n          disabled={anyPanelOpen}\n          onClick={onToolsOpen}\n        />\n      )}\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\nimport { InternalButton } from '../../button/internal';\nimport { AppLayoutProps } from '../interfaces';\nimport { AppLayoutButtonProps } from './interfaces';\nimport styles from './styles.css.js';\n\nexport const togglesConfig = {\n  navigation: {\n    TagName: 'nav',\n    iconName: 'menu',\n    getLabels: (labels: AppLayoutProps.Labels = {}) => ({\n      mainLabel: labels.navigation,\n      openLabel: labels.navigationToggle,\n      closeLabel: labels.navigationClose,\n    }),\n  },\n  tools: {\n    TagName: 'aside',\n    iconName: 'status-info',\n    getLabels: (labels: AppLayoutProps.Labels = {}) => ({\n      mainLabel: labels.tools,\n      openLabel: labels.toolsToggle,\n      closeLabel: labels.toolsClose,\n    }),\n  },\n} as const;\n\nexport const AppLayoutButton = React.forwardRef(\n  (\n    { className, ariaLabel, ariaExpanded, iconName, disabled, onClick }: AppLayoutButtonProps,\n    ref: React.Ref<ButtonProps.Ref>\n  ) => {\n    return (\n      <InternalButton\n        ref={ref}\n        className={className}\n        ariaLabel={ariaLabel}\n        variant=\"icon\"\n        formAction=\"none\"\n        onClick={onClick}\n        iconName={iconName}\n        disabled={disabled}\n        ariaExpanded={ariaExpanded}\n        __nativeAttributes={{ 'aria-haspopup': true }}\n      />\n    );\n  }\n);\n\ninterface CloseButtonProps {\n  className?: string;\n  ariaLabel: string | undefined;\n  onClick: () => void;\n  iconName: IconProps.Name;\n}\n\nexport const CloseButton = React.forwardRef(\n  ({ className, ariaLabel, onClick, iconName }: CloseButtonProps, ref: React.Ref<ButtonProps.Ref>) => {\n    return (\n      <span className={styles['close-button']}>\n        <AppLayoutButton\n          ref={ref}\n          className={className}\n          ariaExpanded={true}\n          ariaLabel={ariaLabel}\n          iconName={iconName}\n          onClick={onClick}\n        />\n      </span>\n    );\n  }\n);\n", "\n    import './styles.scoped.css';\n    export default {\n  \"close-button\": \"awsui_close-button_16w0h_kzvce_93\",\n  \"circular-toggle\": \"awsui_circular-toggle_16w0h_kzvce_101\",\n  \"circular-toggle-selected\": \"awsui_circular-toggle-selected_16w0h_kzvce_139\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"block-body-scroll\": \"awsui_block-body-scroll_19d8l_l5x8d_97\",\n  \"mobile-bar\": \"awsui_mobile-bar_19d8l_l5x8d_101\",\n  \"mobile-bar-breadcrumbs\": \"awsui_mobile-bar-breadcrumbs_19d8l_l5x8d_115\",\n  \"mobile-toggle\": \"awsui_mobile-toggle_19d8l_l5x8d_122\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_lm6vo_hzagk_97\",\n  \"layout-wrapper\": \"awsui_layout-wrapper_lm6vo_hzagk_98\",\n  \"root-no-scroll\": \"awsui_root-no-scroll_lm6vo_hzagk_104\",\n  \"layout\": \"awsui_layout_lm6vo_hzagk_98\",\n  \"layout-no-scroll\": \"awsui_layout-no-scroll_lm6vo_hzagk_115\",\n  \"layout-main\": \"awsui_layout-main_lm6vo_hzagk_119\",\n  \"layout-main-scrollable\": \"awsui_layout-main-scrollable_lm6vo_hzagk_125\",\n  \"unfocusable\": \"awsui_unfocusable_lm6vo_hzagk_130\",\n  \"navigation-panel\": \"awsui_navigation-panel_lm6vo_hzagk_134\",\n  \"drawer\": \"awsui_drawer_lm6vo_hzagk_138\",\n  \"drawer-mobile\": \"awsui_drawer-mobile_lm6vo_hzagk_144\",\n  \"drawer-closed\": \"awsui_drawer-closed_lm6vo_hzagk_147\",\n  \"opaque-background\": \"awsui_opaque-background_lm6vo_hzagk_154\",\n  \"drawer-content\": \"awsui_drawer-content_lm6vo_hzagk_158\",\n  \"toggle\": \"awsui_toggle_lm6vo_hzagk_183\",\n  \"visual-refresh-toggle\": \"awsui_visual-refresh-toggle_lm6vo_hzagk_188\",\n  \"visual-refresh-toggle-type-tools\": \"awsui_visual-refresh-toggle-type-tools_lm6vo_hzagk_192\",\n  \"visual-refresh-toggle-type-navigation\": \"awsui_visual-refresh-toggle-type-navigation_lm6vo_hzagk_195\",\n  \"button-toggles-container\": \"awsui_button-toggles-container_lm6vo_hzagk_205\",\n  \"button-toggles-container-is-hidden\": \"awsui_button-toggles-container-is-hidden_lm6vo_hzagk_210\",\n  \"breadcrumbs-desktop\": \"awsui_breadcrumbs-desktop_lm6vo_hzagk_224\",\n  \"content-header-wrapper\": \"awsui_content-header-wrapper_lm6vo_hzagk_229\",\n  \"content-wrapper\": \"awsui_content-wrapper_lm6vo_hzagk_233\",\n  \"content-overlapped\": \"awsui_content-overlapped_lm6vo_hzagk_237\",\n  \"content-extra-top-padding\": \"awsui_content-extra-top-padding_lm6vo_hzagk_241\",\n  \"navigation-toggle\": \"awsui_navigation-toggle_lm6vo_hzagk_246\",\n  \"tools-toggle\": \"awsui_tools-toggle_lm6vo_hzagk_251\",\n  \"navigation\": \"awsui_navigation_lm6vo_hzagk_134\",\n  \"navigation-close\": \"awsui_navigation-close_lm6vo_hzagk_263\",\n  \"tools\": \"awsui_tools_lm6vo_hzagk_251\",\n  \"tools-close\": \"awsui_tools-close_lm6vo_hzagk_275\",\n  \"notifications\": \"awsui_notifications_lm6vo_hzagk_279\",\n  \"breadcrumbs\": \"awsui_breadcrumbs_lm6vo_hzagk_224\",\n  \"content\": \"awsui_content_lm6vo_hzagk_229\",\n  \"panel-wrapper-outer\": \"awsui_panel-wrapper-outer_lm6vo_hzagk_291\",\n  \"panel-wrapper-inner\": \"awsui_panel-wrapper-inner_lm6vo_hzagk_292\",\n  \"mobile\": \"awsui_mobile_lm6vo_hzagk_301\",\n  \"open\": \"awsui_open_lm6vo_hzagk_307\"\n};\n  ", "\n    import './styles.scoped.css';\n    export default {\n  \"root\": \"awsui_root_1fj9k_avnjw_5\",\n  \"navigation\": \"awsui_navigation_1fj9k_avnjw_9\",\n  \"navigation-toggle\": \"awsui_navigation-toggle_1fj9k_avnjw_13\",\n  \"navigation-close\": \"awsui_navigation-close_1fj9k_avnjw_17\",\n  \"content\": \"awsui_content_1fj9k_avnjw_21\",\n  \"notifications\": \"awsui_notifications_1fj9k_avnjw_25\",\n  \"breadcrumbs\": \"awsui_breadcrumbs_1fj9k_avnjw_29\",\n  \"tools\": \"awsui_tools_1fj9k_avnjw_33\",\n  \"tools-close\": \"awsui_tools-close_1fj9k_avnjw_37\",\n  \"tools-toggle\": \"awsui_tools-toggle_1fj9k_avnjw_41\",\n  \"drawer-closed\": \"awsui_drawer-closed_1fj9k_avnjw_45\",\n  \"mobile-bar\": \"awsui_mobile-bar_1fj9k_avnjw_49\",\n  \"disable-body-scroll-root\": \"awsui_disable-body-scroll-root_1fj9k_avnjw_53\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { SplitPanelContext, SplitPanelContextProps } from '../internal/context/split-panel-context';\n\ninterface SplitPanelWrapperProps {\n  context: SplitPanelContextProps;\n  children: React.ReactNode;\n  isCopy?: boolean;\n}\n\nexport function SplitPanelWrapper({ context, children, isCopy }: SplitPanelWrapperProps) {\n  if (!children) {\n    return null;\n  }\n  return <SplitPanelContext.Provider value={{ ...context, isCopy }}>{children}</SplitPanelContext.Provider>;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\n\nexport default function useWindowWidth() {\n  const [width, setWidth] = useState(() => (typeof window !== 'undefined' ? window.innerWidth : 0));\n  useEffect(() => {\n    const handler = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handler);\n    return () => window.removeEventListener('resize', handler);\n  }, []);\n  return width;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\nimport { useObservedElement } from './use-observed-element';\n\nexport default function useContentHeight(headerSelector: string, footerSelector: string, disableBodyScroll?: boolean) {\n  const headerHeight = useObservedElement(headerSelector);\n  const footerHeight = useObservedElement(footerSelector);\n  const [headerFooterHeight, setHeaderFooterHeight] = useState(0);\n\n  // Delay applying changes in header/footer height, as applying them immediately can cause\n  // ResizeOberver warnings due to the algorithm thinking that the change might have side-effects\n  // further up the tree, therefore blocking notifications to prevent loops\n  useEffect(() => {\n    const id = requestAnimationFrame(() => setHeaderFooterHeight(headerHeight + footerHeight));\n    return () => cancelAnimationFrame(id);\n  }, [headerHeight, footerHeight]);\n\n  const heightStyleValue = `calc(100vh - ${headerFooterHeight}px)`;\n\n  return {\n    headerHeight,\n    footerHeight,\n    contentHeightStyle: {\n      [disableBodyScroll ? 'height' : 'minHeight']: heightStyleValue,\n    },\n    panelHeightStyle: {\n      height: heightStyleValue,\n    },\n  };\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport styles from './styles.css.js';\n\nexport interface ContentWrapperProps {\n  className?: string;\n  children?: React.ReactNode;\n  isMobile: boolean;\n  navigationPadding: boolean;\n  toolsPadding: boolean;\n  disablePaddings?: boolean;\n  contentWidthStyles?: React.CSSProperties;\n}\n\nconst ContentWrapper = React.forwardRef(\n  (\n    {\n      className,\n      children,\n      toolsPadding,\n      disablePaddings,\n      navigationPadding,\n      isMobile,\n      contentWidthStyles,\n    }: ContentWrapperProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    if (disablePaddings) {\n      return (\n        <div className={className} ref={ref}>\n          {children}\n        </div>\n      );\n    }\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          className,\n          styles['content-wrapper'],\n          !navigationPadding && styles['content-wrapper-no-navigation-padding'],\n          !toolsPadding && styles['content-wrapper-no-tools-padding'],\n          isMobile && styles['content-wrapper-mobile']\n        )}\n        style={contentWidthStyles}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nexport default ContentWrapper;\n", "\n    import './styles.scoped.css';\n    export default {\n  \"content-wrapper\": \"awsui_content-wrapper_zycdx_s6r07_93\",\n  \"content-wrapper-mobile\": \"awsui_content-wrapper-mobile_zycdx_s6r07_97\"\n};\n  ", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { AppLayoutProps } from './interfaces';\nimport { DesktopDrawerProps, Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport useContentHeight from './utils/use-content-height';\n\ninterface NavigationPanelProps {\n  navigationOpen: boolean;\n  isHidden: DesktopDrawerProps['isHidden'];\n\n  navigationDrawerWidth: number;\n  navigationWidth: number;\n  headerHeight: DesktopDrawerProps['topOffset'];\n  footerHeight: DesktopDrawerProps['bottomOffset'];\n  panelHeightStyle: ReturnType<typeof useContentHeight>['panelHeightStyle'];\n\n  navigation: React.ReactNode;\n\n  ariaLabels: AppLayoutProps['ariaLabels'];\n\n  isMobile: boolean;\n  isMotionEnabled: boolean;\n\n  onNavigationToggle: DesktopDrawerProps['onToggle'];\n  onClick: DesktopDrawerProps['onClick'];\n\n  toggleRefs: DesktopDrawerProps['toggleRefs'];\n}\n\nexport function NavigationPanel({\n  ariaLabels,\n  footerHeight,\n  headerHeight,\n  isHidden,\n  isMobile,\n  navigation,\n  navigationDrawerWidth,\n  navigationWidth,\n  navigationOpen,\n  onClick,\n  onNavigationToggle,\n  panelHeightStyle,\n  toggleRefs,\n}: NavigationPanelProps) {\n  return (\n    <div className={styles['navigation-panel']} style={{ width: navigationDrawerWidth }}>\n      <div\n        className={clsx(styles['panel-wrapper-outer'], {\n          [styles.mobile]: isMobile,\n          [styles.open]: navigationOpen,\n        })}\n        style={{\n          ...(isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle),\n        }}\n      >\n        <Drawer\n          type=\"navigation\"\n          isMobile={isMobile}\n          width={navigationWidth}\n          isOpen={navigationOpen}\n          isHidden={isHidden}\n          onToggle={onNavigationToggle}\n          toggleRefs={toggleRefs}\n          onClick={onClick}\n          contentClassName={clsx(styles.navigation, testutilStyles.navigation)}\n          closeClassName={clsx(styles['navigation-close'], testutilStyles['navigation-close'])}\n          toggleClassName={clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle'])}\n          topOffset={headerHeight}\n          bottomOffset={footerHeight}\n          ariaLabels={ariaLabels}\n        >\n          {navigation}\n        </Drawer>\n      </div>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { ButtonProps } from '../button/interfaces';\nimport { AppLayoutButton, CloseButton, togglesConfig } from './toggles';\nimport { AppLayoutProps } from './interfaces';\nimport styles from './styles.css.js';\n\n// This matches the design token awsui.$border-divider-section-width in Visual Refresh\nconst BORDER_WIDTH = 2;\n\nexport interface DesktopDrawerProps {\n  contentClassName?: string;\n  toggleClassName?: string;\n  closeClassName?: string;\n  toggleRefs: {\n    toggle: React.Ref<ButtonProps.Ref>;\n    close: React.Ref<ButtonProps.Ref>;\n  };\n  externalizedToggle?: boolean;\n  width: number;\n  topOffset?: number;\n  bottomOffset?: number;\n  ariaLabels?: AppLayoutProps.Labels;\n  children: React.ReactNode;\n  type: keyof typeof togglesConfig;\n  isMobile?: boolean;\n  isOpen?: boolean;\n  isHidden?: boolean;\n  hasDividerWithSplitPanel?: boolean;\n  onToggle: (isOpen: boolean) => void;\n  onClick?: (event: React.MouseEvent) => void;\n  onLoseFocus?: (event: React.FocusEvent) => void;\n  extendRight?: number;\n}\n\n// We are using two landmarks per drawer, i.e. two NAVs and two ASIDEs, because of several\n// known bugs in NVDA that cause focus changes within a container to sometimes not be\n// announced. As a result, we use one region for the open button and one region for the\n// actual drawer content, always hiding the other one when it's not visible.\n// An alternative solution to follow a more classic implementation here to only have one\n// button that triggers the opening/closing of the drawer also did not work due to another\n// series of bugs in NVDA (together with Firefox) which prevent the changed expanded state\n// from being announced.\n// Even with this workaround in place, the announcement of the close button when opening a\n// panel in NVDA is not working correctly. The suspected root cause is one of the bugs below\n// as well.\n// Relevant tickets:\n// * https://github.com/nvaccess/nvda/issues/6606\n// * https://github.com/nvaccess/nvda/issues/5825\n// * https://github.com/nvaccess/nvda/issues/5247\n// * https://github.com/nvaccess/nvda/pull/8869 (reverted PR that was going to fix it)\n\nexport function Drawer({\n  contentClassName,\n  toggleClassName,\n  closeClassName,\n  width,\n  type,\n  toggleRefs,\n  topOffset,\n  bottomOffset,\n  ariaLabels,\n  children,\n  isOpen,\n  isHidden,\n  isMobile,\n  hasDividerWithSplitPanel,\n  onToggle,\n  onClick,\n  onLoseFocus,\n  extendRight = 0,\n}: DesktopDrawerProps) {\n  const { TagName, iconName, getLabels } = togglesConfig[type];\n  const { mainLabel, closeLabel, openLabel } = getLabels(ariaLabels);\n  const hasDividerWithButtonBar = isOpen && extendRight !== 0;\n\n  const drawerContentWidthOpen = isMobile ? undefined : width;\n  const drawerContentWidth = isOpen ? drawerContentWidthOpen : undefined;\n\n  const drawerWidth =\n    hasDividerWithButtonBar && drawerContentWidth ? drawerContentWidth + BORDER_WIDTH : drawerContentWidth;\n\n  const closeIconName = 'close';\n\n  const regularOpenButton = (\n    <TagName aria-label={mainLabel} className={styles.toggle} aria-hidden={isOpen}>\n      <AppLayoutButton\n        ref={toggleRefs.toggle}\n        className={toggleClassName}\n        iconName={iconName}\n        ariaLabel={openLabel}\n        onClick={() => onToggle(true)}\n        ariaExpanded={false}\n      />\n    </TagName>\n  );\n\n  return (\n    <div\n      className={clsx(styles.drawer, {\n        [styles['drawer-closed']]: !isOpen,\n        [styles['drawer-hidden']]: isHidden,\n        [styles['drawer-mobile']]: isMobile,\n        [styles['has-divider-with-splitpanel']]: hasDividerWithSplitPanel,\n        [styles['opaque-background']]: hasDividerWithButtonBar,\n      })}\n      style={{\n        width: drawerWidth,\n        marginRight: isOpen ? -1 * extendRight : 0,\n        paddingRight: isOpen ? extendRight : 0,\n      }}\n      onBlur={\n        onLoseFocus\n          ? e => {\n              if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {\n                onLoseFocus(e);\n              }\n            }\n          : undefined\n      }\n      onClick={event => {\n        if (onClick) {\n          onClick(event);\n        }\n\n        if (!isOpen) {\n          // to prevent calling onToggle from the drawer when it's called from the toggle button\n          if ((event.target as Element).tagName !== 'BUTTON') {\n            onToggle(true);\n          }\n        }\n      }}\n    >\n      <div\n        style={{ width: drawerContentWidth, top: topOffset, bottom: bottomOffset }}\n        className={clsx(styles['drawer-content'], contentClassName)}\n      >\n        {!isMobile && regularOpenButton}\n        <TagName aria-label={mainLabel} aria-hidden={!isOpen}>\n          <CloseButton\n            ref={toggleRefs.close}\n            className={closeClassName}\n            ariaLabel={closeLabel}\n            onClick={() => onToggle(false)}\n            iconName={closeIconName}\n          />\n          {children}\n        </TagName>\n      </div>\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { DesktopDrawerProps, Drawer } from './drawer';\nimport { AppLayoutProps } from './interfaces';\nimport { SplitPanelWrapper } from './split-panel-wrapper';\nimport useContentHeight from './utils/use-content-height';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport { SplitPanelContextProps } from '../internal/context/split-panel-context';\n\ninterface ToolsAndSplitPanelProps {\n  toolsHide: boolean;\n  toolsOpen: boolean;\n  isHidden: DesktopDrawerProps['isHidden'];\n\n  splitPanelOpen: boolean;\n\n  drawerWidth: number;\n  toolsWidth: number;\n  splitPanelReportedSize: number;\n  closedDrawerWidth: number;\n\n  headerHeight: DesktopDrawerProps['topOffset'];\n  footerHeight: DesktopDrawerProps['bottomOffset'];\n  panelHeightStyle: ReturnType<typeof useContentHeight>['panelHeightStyle'];\n  contentHeightStyle: ReturnType<typeof useContentHeight>['contentHeightStyle'];\n\n  tools: React.ReactNode;\n  splitPanel?: React.ReactNode;\n  splitPanelContext: SplitPanelContextProps;\n\n  ariaLabels: AppLayoutProps['ariaLabels'];\n\n  disableContentPaddings: AppLayoutProps['disableContentPaddings'];\n  isMobile: boolean;\n  isMotionEnabled: boolean;\n\n  onToolsToggle: DesktopDrawerProps['onToggle'];\n\n  toggleRefs: DesktopDrawerProps['toggleRefs'];\n\n  onLoseToolsFocus: (event: React.FocusEvent) => void;\n}\n\nexport function ToolsAndSplitPanel({\n  ariaLabels,\n  drawerWidth,\n  footerHeight,\n  headerHeight,\n  isHidden,\n  isMobile,\n  onToolsToggle,\n  panelHeightStyle,\n  splitPanel,\n  splitPanelContext,\n  toggleRefs,\n  onLoseToolsFocus,\n  tools,\n  toolsHide,\n  toolsOpen,\n  toolsWidth,\n  splitPanelOpen,\n}: ToolsAndSplitPanelProps) {\n  const splitPanelVisible = splitPanelOpen && Boolean(splitPanel);\n\n  return (\n    <>\n      <div\n        style={{\n          width: drawerWidth,\n        }}\n      >\n        <div\n          className={clsx(styles['panel-wrapper-outer'], {\n            [styles.mobile]: isMobile,\n            [styles.open]: toolsOpen,\n          })}\n          style={{\n            ...(isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle),\n          }}\n        >\n          {splitPanel && <SplitPanelWrapper context={splitPanelContext}>{splitPanel}</SplitPanelWrapper>}\n          {!toolsHide && (\n            <Drawer\n              type=\"tools\"\n              isMobile={isMobile}\n              width={toolsWidth}\n              isOpen={toolsOpen}\n              onToggle={onToolsToggle}\n              toggleRefs={toggleRefs}\n              onLoseFocus={onLoseToolsFocus}\n              isHidden={isHidden}\n              externalizedToggle={Boolean(splitPanel)}\n              contentClassName={clsx(styles.tools, testutilStyles.tools)}\n              closeClassName={clsx(styles['tools-close'], testutilStyles['tools-close'])}\n              toggleClassName={clsx(styles['tools-toggle'], testutilStyles['tools-toggle'])}\n              topOffset={headerHeight}\n              bottomOffset={footerHeight}\n              ariaLabels={ariaLabels}\n              extendRight={0}\n              hasDividerWithSplitPanel={splitPanelVisible}\n            >\n              {tools}\n            </Drawer>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef, useEffect } from 'react';\n\n/**\n * This hook provides access to the value of any variable\n * from the previous render frame.\n * Even if multiple effects are flushed in a single render\n * loop, this hook still keeps the original value.\n */\nexport const usePreviousFrameValue = <T>(value: T) => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    const handle = requestAnimationFrame(() => {\n      ref.current = value;\n    });\n    return () => cancelAnimationFrame(handle);\n  });\n  return ref.current;\n};\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useState } from 'react';\nimport { useResizeObserver } from '../../internal/hooks/container-queries';\n\nexport default function useAppLayoutOffsets(element: HTMLDivElement | null): { left: number; right: number } {\n  const [offsets, setOffsets] = useState({ left: 0, right: 0 });\n\n  const updatePosition = useCallback(() => {\n    if (!element) {\n      return;\n    }\n    const { left, right } = element.getBoundingClientRect();\n    const bodyWidth = document.body.clientWidth;\n\n    setOffsets({ left, right: bodyWidth - right });\n  }, [element]);\n\n  useEffect(() => {\n    window.addEventListener('resize', updatePosition);\n    return () => window.removeEventListener('resize', updatePosition);\n  }, [updatePosition]);\n\n  const getElement = useCallback(() => element, [element]);\n  useResizeObserver(getElement, updatePosition);\n\n  return offsets;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport AppBar from './app-bar';\nimport { AppLayoutContext, AppLayoutProvider } from './context';\nimport { AppLayoutProps } from '../interfaces';\nimport Background from './background';\nimport Header from './header';\nimport Layout from './layout';\nimport Main from './main';\nimport Navigation from './navigation';\nimport Notifications from './notifications';\nimport SplitPanel from './split-panel';\nimport Tools from './tools';\n\n/**\n * In mobile viewports the AppBar position changes to sticky and is placed\n * above the notifications. This is handled by adjusting the row positions\n * in CSS for the AppBar and Notifications components relative to the grid\n * definition in the Layout component. In order to keep alignment between\n * the visual ordering and logical ordering of the document the logical order\n * of these components is also modified in the markup below.\n */\nconst AppLayoutWithRef = React.forwardRef(function AppLayout(\n  props: AppLayoutProps,\n  ref: React.Ref<AppLayoutProps.Ref>\n) {\n  const { isMobile } = useContext(AppLayoutContext);\n\n  return (\n    <AppLayoutProvider {...props} ref={ref}>\n      <SplitPanel>\n        <Layout>\n          <Background />\n\n          <Navigation />\n\n          {isMobile && <AppBar />}\n\n          <Notifications />\n\n          {!isMobile && <AppBar />}\n\n          <Header />\n\n          <Main />\n\n          <SplitPanel.Bottom />\n\n          <Tools>\n            <SplitPanel.Side />\n          </Tools>\n        </Layout>\n      </SplitPanel>\n    </AppLayoutProvider>\n  );\n});\n\nexport default AppLayoutWithRef;\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { InternalButton } from '../../button/internal';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport { useFocusControl } from '../utils/use-focus-control';\n\n/**\n * The CSS class 'awsui-context-content-header' needs to be added to the root element so\n * that the design tokens used are overridden with the appropriate values.\n */\nexport default function AppBar() {\n  const {\n    ariaLabels,\n    breadcrumbs,\n    contentHeader,\n    contentType,\n    dynamicOverlapHeight,\n    handleNavigationClick,\n    handleToolsClick,\n    hasNotificationsContent,\n    hasStickyBackground,\n    isMobile,\n    navigationHide,\n    isNavigationOpen,\n    isToolsOpen,\n    toolsHide,\n    isAnyPanelOpen,\n  } = useContext(AppLayoutContext);\n  const { refs: focusRefsNav } = useFocusControl(isNavigationOpen);\n  const { refs: focusRefsTools } = useFocusControl(isToolsOpen, true);\n\n  if (navigationHide && !breadcrumbs && toolsHide) {\n    return null;\n  }\n\n  return (\n    <section\n      aria-hidden={!isMobile && !breadcrumbs ? true : undefined}\n      className={clsx(\n        styles.appbar,\n        {\n          [styles['has-breadcrumbs']]: breadcrumbs,\n          [styles.unfocusable]: isMobile && isAnyPanelOpen,\n          [testutilStyles['mobile-bar']]: isMobile,\n        },\n        'awsui-context-content-header'\n      )}\n    >\n      {!navigationHide && isMobile && (\n        <nav\n          className={clsx(styles['appbar-nav'], { [testutilStyles['drawer-closed']]: !isNavigationOpen })}\n          aria-hidden={isNavigationOpen}\n        >\n          <InternalButton\n            ariaLabel={ariaLabels?.navigationToggle ?? undefined}\n            ariaExpanded={isNavigationOpen}\n            iconName=\"menu\"\n            formAction=\"none\"\n            onClick={() => handleNavigationClick(true)}\n            variant=\"icon\"\n            className={testutilStyles['navigation-toggle']}\n            ref={focusRefsNav.toggle}\n            disabled={isAnyPanelOpen}\n            __nativeAttributes={{ 'aria-haspopup': true }}\n          />\n        </nav>\n      )}\n\n      {breadcrumbs && (\n        <div\n          className={clsx(styles.breadcrumbs, styles[`content-type-${contentType}`], testutilStyles.breadcrumbs, {\n            [styles['has-dynamic-overlap-height']]: dynamicOverlapHeight > 0,\n            [styles['has-header']]: contentHeader,\n            [styles['has-notifications-content']]: hasNotificationsContent,\n            [styles['has-sticky-background']]: hasStickyBackground,\n          })}\n        >\n          {breadcrumbs}\n        </div>\n      )}\n\n      {!toolsHide && isMobile && (\n        <aside\n          className={clsx(styles['appbar-tools'], { [testutilStyles['drawer-closed']]: !isToolsOpen })}\n          aria-hidden={isToolsOpen}\n          aria-label={ariaLabels?.tools ?? undefined}\n        >\n          <InternalButton\n            className={testutilStyles['tools-toggle']}\n            ariaExpanded={isToolsOpen}\n            disabled={isAnyPanelOpen}\n            ariaLabel={ariaLabels?.toolsToggle ?? undefined}\n            iconName=\"status-info\"\n            formAction=\"none\"\n            onClick={() => handleToolsClick(true)}\n            variant=\"icon\"\n            ref={focusRefsTools.toggle}\n            __nativeAttributes={{ 'aria-haspopup': true }}\n          />\n        </aside>\n      )}\n    </section>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\n\n/**\n * The CSS class 'awsui-context-content-header' needs to be added to the root element so\n * that the design tokens used are overridden with the appropriate values.\n */\nexport default function Background() {\n  const { hasNotificationsContent, hasStickyBackground, stickyNotifications } = useContext(AppLayoutContext);\n\n  return (\n    <div className={clsx(styles.background, 'awsui-context-content-header')}>\n      <div\n        className={clsx(styles['notifications-appbar-header'], {\n          [styles['has-notifications-content']]: hasNotificationsContent,\n          [styles['has-sticky-background']]: hasStickyBackground,\n          [styles['sticky-notifications']]: stickyNotifications,\n        })}\n      />\n\n      <div\n        className={clsx(styles.overlap, {\n          [styles['has-sticky-background']]: hasStickyBackground,\n        })}\n      />\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\n\n/**\n * The CSS class 'awsui-context-content-header' needs to be added to the root element so\n * that the design tokens used are overridden with the appropriate values.\n */\nexport default function Header() {\n  const { breadcrumbs, contentHeader, hasNotificationsContent } = useContext(AppLayoutContext);\n\n  if (!contentHeader) {\n    return null;\n  }\n\n  return (\n    <header\n      className={clsx(\n        styles.content,\n        {\n          [styles['has-breadcrumbs']]: breadcrumbs,\n          [styles['has-notifications-content']]: hasNotificationsContent,\n        },\n        'awsui-context-content-header'\n      )}\n    >\n      {contentHeader}\n    </header>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext, useLayoutEffect } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport { AppLayoutProps } from '../interfaces';\nimport customCssProps from '../../internal/generated/custom-css-properties';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\n/**\n * The layoutElement ref will be used by the resize observers to calculate the offset from\n * the top and bottom of the viewport based on the header and footer elements. This is to\n * ensure the Layout component minimum height will fill 100% of the viewport less those\n * cumulative heights.\n */\nexport default function Layout({ children }: LayoutProps) {\n  const {\n    contentHeader,\n    contentType,\n    disableBodyScroll,\n    disableContentHeaderOverlap,\n    dynamicOverlapHeight,\n    footerHeight,\n    hasNotificationsContent,\n    headerHeight,\n    isNavigationOpen,\n    isSplitPanelOpen,\n    isToolsOpen,\n    layoutElement,\n    layoutWidth,\n    mainOffsetLeft,\n    maxContentWidth,\n    minContentWidth,\n    navigationHide,\n    notificationsHeight,\n    setOffsetBottom,\n    splitPanel,\n    stickyNotifications,\n    toolsHide,\n  } = useContext(AppLayoutContext);\n\n  const {\n    getHeader: getSplitPanelHeader,\n    position: splitPanelPosition,\n    size: splitPanelSize,\n  } = useContext(SplitPanelContext);\n\n  const isOverlapDisabled = getOverlapDisabled(dynamicOverlapHeight, contentHeader, disableContentHeaderOverlap);\n\n  // Content gaps on the left and right are used with the minmax function in the CSS grid column definition\n  const hasContentGapLeft = getContentGapLeft(isNavigationOpen, navigationHide);\n  const hasContentGapRight = getContentGapRight(\n    splitPanelPosition,\n    isSplitPanelOpen,\n    isToolsOpen,\n    splitPanel,\n    toolsHide\n  );\n\n  /**\n   * Determine the offsetBottom value based on the presence of a footer element and\n   * the SplitPanel component. Ignore the SplitPanel if it is not in the bottom\n   * position. Use the size property if it is open and the header height if it is closed.\n   */\n  useLayoutEffect(\n    function handleOffsetBottom() {\n      let offsetBottom = footerHeight;\n\n      if (splitPanel && splitPanelPosition === 'bottom') {\n        if (isSplitPanelOpen) {\n          offsetBottom += splitPanelSize;\n        } else {\n          const splitPanelHeader = getSplitPanelHeader();\n          offsetBottom += splitPanelHeader ? splitPanelHeader.clientHeight : 0;\n        }\n      }\n\n      setOffsetBottom(offsetBottom);\n    },\n    [\n      footerHeight,\n      getSplitPanelHeader,\n      isSplitPanelOpen,\n      setOffsetBottom,\n      splitPanelPosition,\n      splitPanel,\n      splitPanelSize,\n    ]\n  );\n\n  return (\n    <main\n      className={clsx(\n        styles.layout,\n        styles[`content-type-${contentType}`],\n        styles[`split-panel-position-${splitPanelPosition ?? 'bottom'}`],\n        {\n          [styles['disable-body-scroll']]: disableBodyScroll,\n          [testutilStyles['disable-body-scroll-root']]: disableBodyScroll,\n          [styles['has-content-gap-left']]: hasContentGapLeft,\n          [styles['has-content-gap-right']]: hasContentGapRight,\n          [styles['has-max-content-width']]: maxContentWidth && maxContentWidth > 0,\n          [styles['has-split-panel']]: splitPanel,\n          [styles['has-sticky-notifications']]: stickyNotifications && hasNotificationsContent,\n          [styles['is-overlap-disabled']]: isOverlapDisabled,\n        },\n        testutilStyles.root\n      )}\n      ref={layoutElement}\n      style={{\n        [customCssProps.headerHeight]: `${headerHeight}px`,\n        [customCssProps.footerHeight]: `${footerHeight}px`,\n        [customCssProps.layoutWidth]: `${layoutWidth}px`,\n        [customCssProps.mainOffsetLeft]: `${mainOffsetLeft}px`,\n        ...(maxContentWidth && { [customCssProps.maxContentWidth]: `${maxContentWidth}px` }),\n        ...(minContentWidth && { [customCssProps.minContentWidth]: `${minContentWidth}px` }),\n        [customCssProps.notificationsHeight]: `${notificationsHeight}px`,\n        ...(!isOverlapDisabled &&\n          dynamicOverlapHeight > 0 && { [customCssProps.overlapHeight]: `${dynamicOverlapHeight}px` }),\n      }}\n    >\n      {children}\n    </main>\n  );\n}\n\n/**\n * When the Navigation and Tools are present the grid definition has the center column\n * touch the first and last columns with no gap. The forms with the circular buttons\n * for Navigation and Tools have internal padding which creates the necessary\n * horizontal space when the drawers are closed. The remaining conditions below\n * determine the necessity of utilizing the content gap left property to create\n * horizontal space between the center column and its adjacent siblings.\n */\nfunction getContentGapRight(\n  splitPanelPosition: AppLayoutProps.SplitPanelPosition,\n  isSplitPanelOpen?: boolean,\n  isToolsOpen?: boolean,\n  splitPanel?: React.ReactNode,\n  toolsHide?: boolean\n) {\n  let hasContentGapRight = false;\n\n  // Main is touching the edge of the Layout and needs a content gap\n  if (!splitPanel && toolsHide) {\n    hasContentGapRight = true;\n  }\n\n  // Main is touching the Tools drawer and needs a content gap\n  if ((!splitPanel || !isSplitPanelOpen) && !toolsHide && isToolsOpen) {\n    hasContentGapRight = true;\n  }\n\n  // Main is touching the edge of the Layout and needs a content gap\n  if (splitPanel && splitPanelPosition === 'bottom' && (isToolsOpen || toolsHide)) {\n    hasContentGapRight = true;\n  }\n\n  // Main is touching the Split Panel drawer and needs a content gap\n  if (splitPanel && isSplitPanelOpen && splitPanelPosition === 'side') {\n    hasContentGapRight = true;\n  }\n\n  return hasContentGapRight;\n}\n\n/**\n * Additional function to determine whether or not a content gap is needed\n * on the left (see the getContentGapRight function). The same render logic applies\n * regarding the center column touching an adjacent sibling but the only\n * component state that needs to be tracked is the Navigation.\n */\nfunction getContentGapLeft(isNavigationOpen: boolean, navigationHide?: boolean) {\n  return isNavigationOpen || navigationHide ? true : false;\n}\n\n/**\n * Determine whether the overlap between the contentHeader and content slots should be disabled.\n * The disableContentHeaderOverlap property is absolute and will always disable the overlap\n * if it is set to true. If there is no contentHeader then the overlap should be disabled\n * unless there is a dynamicOverlapHeight. The dynamicOverlapHeight property is set by a\n * component in the content slot that needs to manually control the overlap height. Components\n * such as the Table (full page variant), Wizard, ContentLayout use this property and will\n * retain the overlap even if there is nothing rendered in the contentHeader slot.\n */\nfunction getOverlapDisabled(\n  dynamicOverlapHeight: number,\n  contentHeader?: React.ReactNode,\n  disableContentHeaderOverlap?: boolean\n) {\n  let isOverlapDisabled = false;\n\n  if (disableContentHeaderOverlap) {\n    isOverlapDisabled = true;\n  } else if (!contentHeader && dynamicOverlapHeight <= 0) {\n    isOverlapDisabled = true;\n  }\n\n  return isOverlapDisabled;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n\nexport default function Main() {\n  const {\n    breadcrumbs,\n    content,\n    contentHeader,\n    contentType,\n    disableContentPaddings,\n    dynamicOverlapHeight,\n    hasNotificationsContent,\n    isNavigationOpen,\n    isSplitPanelOpen,\n    isToolsOpen,\n    isMobile,\n    isAnyPanelOpen,\n    mainElement,\n  } = useContext(AppLayoutContext);\n\n  const { position: splitPanelPosition } = useContext(SplitPanelContext);\n  const isUnfocusable = isMobile && isAnyPanelOpen;\n\n  return (\n    <div\n      className={clsx(\n        styles.container,\n        styles[`content-type-${contentType}`],\n        styles[`split-panel-position-${splitPanelPosition ?? 'bottom'}`],\n        {\n          [styles['disable-content-paddings']]: disableContentPaddings,\n          [styles['has-breadcrumbs']]: breadcrumbs,\n          [styles['has-dynamic-overlap-height']]: dynamicOverlapHeight > 0,\n          [styles['has-header']]: contentHeader,\n          [styles['has-notifications-content']]: hasNotificationsContent,\n          [styles['is-navigation-open']]: isNavigationOpen,\n          [styles['is-tools-open']]: isToolsOpen,\n          [styles['is-split-panel-open']]: isSplitPanelOpen,\n          [styles.unfocusable]: isUnfocusable,\n        },\n        testutilStyles.content\n      )}\n      ref={mainElement}\n    >\n      {content}\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport { InternalButton } from '../../button/internal';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport { useFocusControl } from '../utils/use-focus-control';\nimport { Transition } from '../../internal/components/transition';\nimport { findUpUntil } from '../../internal/utils/dom';\nimport customCssProps from '../../internal/generated/custom-css-properties';\n\n/**\n * The Navigation component consists of the following elements:\n * the container, or root element, that sits as a direct child to the Layout grid definition;\n * the show navigation form that contains the trigger for the drawer in large viewports;\n * the navigation, or drawer, that contains the hide navigation form and the children\n * passed through the API;\n */\nexport default function Navigation() {\n  const {\n    ariaLabels,\n    handleNavigationClick,\n    isMobile,\n    isNavigationOpen,\n    navigation,\n    navigationHide,\n    navigationWidth,\n    isToolsOpen,\n    isAnyPanelOpen,\n    toolsHide,\n  } = useContext(AppLayoutContext);\n\n  const { refs: focusRefs } = useFocusControl(isNavigationOpen);\n\n  if (navigationHide) {\n    return null;\n  }\n\n  // Close the Navigation drawer on mobile when a user clicks a link inside.\n  const onNavigationClick = (event: React.MouseEvent) => {\n    const hasLink = findUpUntil(\n      event.target as HTMLElement,\n      node => node.tagName === 'A' && !!(node as HTMLAnchorElement).href\n    );\n    if (hasLink && isMobile) {\n      handleNavigationClick(false);\n    }\n  };\n\n  const isUnfocusable = isMobile && isAnyPanelOpen && isToolsOpen && !toolsHide;\n\n  return (\n    <Transition in={isNavigationOpen}>\n      {(state, transitionEventsRef) => (\n        <div\n          className={clsx(styles['navigation-container'], {\n            [testutilStyles['drawer-closed']]: !isNavigationOpen,\n            [styles.unfocusable]: isUnfocusable,\n          })}\n          // Overwrite the default nav width (depends on breakpoints) only when the `navigationWidth` property is set.\n          style={{ ...(navigationWidth && { [customCssProps.navigationWidth]: `${navigationWidth}px` }) }}\n        >\n          {!isMobile && (\n            <nav\n              aria-hidden={isMobile || isNavigationOpen ? true : false}\n              aria-label={ariaLabels?.navigation ?? undefined}\n              className={clsx(styles['show-navigation'], {\n                [styles.animating]: state === 'exiting',\n                [styles['is-navigation-open']]: isNavigationOpen,\n              })}\n              ref={state === 'exiting' ? transitionEventsRef : undefined}\n            >\n              <TriggerButton\n                ariaLabel={ariaLabels?.navigationToggle}\n                iconName=\"menu\"\n                className={testutilStyles['navigation-toggle']}\n                onClick={() => handleNavigationClick(true)}\n                ref={focusRefs.toggle}\n              />\n            </nav>\n          )}\n\n          <nav\n            aria-label={ariaLabels?.navigation ?? undefined}\n            className={clsx(\n              styles.navigation,\n              {\n                [styles.animating]: state === 'entering',\n                [styles['is-navigation-open']]: isNavigationOpen,\n              },\n              testutilStyles.navigation\n            )}\n            ref={state !== 'exiting' ? transitionEventsRef : undefined}\n            aria-hidden={!isNavigationOpen}\n            onClick={event => {\n              onNavigationClick && onNavigationClick(event);\n            }}\n          >\n            <div className={clsx(styles['animated-content'])}>\n              <div className={clsx(styles['hide-navigation'])}>\n                <InternalButton\n                  ariaLabel={ariaLabels?.navigationClose ?? undefined}\n                  iconName={isMobile ? 'close' : 'angle-left'}\n                  onClick={() => handleNavigationClick(false)}\n                  variant=\"icon\"\n                  formAction=\"none\"\n                  className={testutilStyles['navigation-close']}\n                  ref={focusRefs.close}\n                  ariaExpanded={true}\n                  __nativeAttributes={{ 'aria-haspopup': true }}\n                />\n              </div>\n              {navigation}\n            </div>\n          </nav>\n        </div>\n      )}\n    </Transition>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport useFocusVisible from '../../internal/hooks/focus-visible';\nimport Icon from '../../icon/internal';\nimport styles from './styles.css.js';\nimport { ButtonProps } from '../../button/interfaces';\nimport { IconProps } from '../../icon/interfaces';\n\ninterface TriggerButtonProps {\n  ariaLabel?: string;\n  iconName: IconProps.Name;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n  selected?: boolean;\n  className?: string;\n}\n\nfunction TriggerButton(\n  { ariaLabel, iconName, onClick, selected = false, className }: TriggerButtonProps,\n  ref: React.Ref<ButtonProps.Ref>\n) {\n  const focusVisible = useFocusVisible();\n\n  return (\n    <button\n      aria-label={ariaLabel}\n      aria-expanded={false}\n      aria-haspopup={true}\n      className={clsx(\n        styles.trigger,\n        {\n          [styles.selected]: selected,\n        },\n        className\n      )}\n      onClick={onClick}\n      type=\"button\"\n      ref={ref as React.Ref<HTMLButtonElement>}\n      {...focusVisible}\n    >\n      <Icon name={iconName} />\n    </button>\n  );\n}\n\nexport default React.forwardRef(TriggerButton);\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { AppLayoutContext } from './context';\nimport styles from './styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\n\n/**\n * The CSS class 'awsui-context-content-header' needs to be added to the root element so\n * that the design tokens used are overridden with the appropriate values.\n */\nexport default function Notifications() {\n  const { ariaLabels, hasNotificationsContent, notifications, notificationsElement, stickyNotifications } =\n    useContext(AppLayoutContext);\n\n  if (!notifications) {\n    return null;\n  }\n\n  return (\n    <div\n      role=\"region\"\n      aria-label={ariaLabels?.notifications ?? undefined}\n      className={clsx(\n        styles.notifications,\n        {\n          [styles['has-notifications-content']]: hasNotificationsContent,\n          [styles['sticky-notifications']]: stickyNotifications,\n        },\n        testutilStyles.notifications,\n        'awsui-context-content-header'\n      )}\n      ref={notificationsElement}\n    >\n      {notifications}\n    </div>\n  );\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useContext } from 'react';\nimport clsx from 'clsx';\nimport { InternalButton } from '../../button/internal';\nimport { AppLayoutContext } from './context';\nimport { SplitPanelContext } from '../../internal/context/split-panel-context';\nimport TriggerButton from './trigger-button';\nimport styles from './styles.css.js';\nimport splitPanelStyles from '../../split-panel/styles.css.js';\nimport testutilStyles from '../test-classes/styles.css.js';\nimport { Transition } from '../../internal/components/transition';\nimport customCssProps from '../../internal/generated/custom-css-properties';\n\ninterface ToolsProps {\n  children: React.ReactNode;\n}\n\n/**\n * The Tools component consists of the following elements:\n * the container, or root element, that sits as a direct child to the Layout grid definition;\n * the split panel, which exists only if there is a split panel in side position;\n * the tools, or drawer, that contains the hide tools form and the children passed through the API;\n * the show tools form that contains the triggers for both the drawer and the\n * split panel in large viewports;\n */\nexport default function Tools({ children }: ToolsProps) {\n  const {\n    ariaLabels,\n    handleSplitPanelClick,\n    handleToolsClick,\n    hasDefaultToolsWidth,\n    isNavigationOpen,\n    isMobile,\n    isSplitPanelOpen,\n    isToolsOpen,\n    splitPanel,\n    tools,\n    toolsHide,\n    toolsWidth,\n    isAnyPanelOpen,\n    navigationHide,\n    toolsFocusControl,\n  } = useContext(AppLayoutContext);\n\n  const { position: splitPanelPosition, openButtonAriaLabel } = useContext(SplitPanelContext);\n\n  const hasSplitPanel = getSplitPanelStatus(splitPanel, splitPanelPosition);\n  const hasToolsForm = getToolsFormStatus(hasSplitPanel, isMobile, isSplitPanelOpen, isToolsOpen, toolsHide);\n  const hasToolsFormPersistence = getToolsFormPersistence(hasSplitPanel, isSplitPanelOpen, isToolsOpen, toolsHide);\n\n  const { refs: focusRefs } = toolsFocusControl;\n\n  if (toolsHide && !hasSplitPanel) {\n    return null;\n  }\n\n  const isUnfocusable = isMobile && isAnyPanelOpen && isNavigationOpen && !navigationHide;\n\n  return (\n    <Transition in={isToolsOpen ?? false}>\n      {(state, transitionEventsRef) => (\n        <div\n          className={clsx(styles['tools-container'], {\n            [testutilStyles['drawer-closed']]: !isToolsOpen,\n            [styles.unfocusable]: isUnfocusable,\n          })}\n          style={{\n            [customCssProps.toolsAnimationStartingOpacity]: `${hasSplitPanel && isSplitPanelOpen ? 1 : 0}`,\n            // Overwrite the default tools width (depends on breakpoints) only when the `toolsWidth` property has been set.\n            [customCssProps.toolsWidth]: hasDefaultToolsWidth ? '' : `${toolsWidth}px`,\n          }}\n          onBlur={e => {\n            if (!e.relatedTarget || !e.currentTarget.contains(e.relatedTarget)) {\n              toolsFocusControl.loseFocus();\n            }\n          }}\n        >\n          {children}\n\n          {!toolsHide && (\n            <aside\n              aria-hidden={!isToolsOpen ? true : false}\n              aria-label={ariaLabels?.tools ?? undefined}\n              className={clsx(\n                styles.tools,\n                {\n                  [styles.animating]: state === 'entering',\n                  [styles['has-tools-form-persistence']]: hasToolsFormPersistence,\n                  [styles['is-tools-open']]: isToolsOpen,\n                },\n                testutilStyles.tools\n              )}\n              ref={state !== 'exiting' ? transitionEventsRef : undefined}\n            >\n              <div className={clsx(styles['animated-content'])}>\n                <div className={clsx(styles['hide-tools'])}>\n                  <InternalButton\n                    ariaLabel={ariaLabels?.toolsClose ?? undefined}\n                    iconName={isMobile ? 'close' : 'angle-right'}\n                    onClick={() => handleToolsClick(false)}\n                    variant=\"icon\"\n                    formAction=\"none\"\n                    className={testutilStyles['tools-close']}\n                    ref={focusRefs.close}\n                    ariaExpanded={true}\n                    __nativeAttributes={{ 'aria-haspopup': true }}\n                  />\n                </div>\n\n                {tools}\n              </div>\n            </aside>\n          )}\n\n          {!isMobile && (\n            <aside\n              aria-hidden={!hasToolsForm ? true : false}\n              aria-label={ariaLabels?.tools ?? undefined}\n              className={clsx(\n                styles['show-tools'],\n                {\n                  [styles.animating]: state === 'exiting',\n                  [styles['has-tools-form']]: hasToolsForm,\n                  [styles['has-tools-form-persistence']]: hasToolsFormPersistence,\n                },\n                splitPanelStyles.root\n              )}\n              ref={state === 'exiting' ? transitionEventsRef : undefined}\n            >\n              {!toolsHide && (\n                <TriggerButton\n                  ariaLabel={ariaLabels?.toolsToggle}\n                  iconName=\"status-info\"\n                  onClick={() => handleToolsClick(!isToolsOpen)}\n                  selected={hasSplitPanel && isToolsOpen}\n                  className={testutilStyles['tools-toggle']}\n                  ref={focusRefs.toggle}\n                />\n              )}\n\n              {hasSplitPanel && (\n                <TriggerButton\n                  ariaLabel={openButtonAriaLabel}\n                  iconName=\"view-vertical\"\n                  onClick={() => handleSplitPanelClick()}\n                  selected={hasSplitPanel && isSplitPanelOpen}\n                  className={splitPanelStyles['open-button']}\n                  // TODO should this button also get focus handling? (i.e. when the split panel is toggled)\n                />\n              )}\n            </aside>\n          )}\n        </div>\n      )}\n    </Transition>\n  );\n}\n\n/**\n * Determine the default state of the Tools component. Mobile viewports should be\n * closed by default under all circumstances. If the toolsOpen prop has not been\n * set then it should be closed as well. Otherwise, default to the toolsOpen prop.\n */\nexport function getToolsDefaultState(isMobile: boolean, stateFromProps?: boolean) {\n  let isToolsOpen;\n\n  if (isMobile || stateFromProps === undefined) {\n    isToolsOpen = false;\n  } else {\n    isToolsOpen = stateFromProps;\n  }\n\n  return isToolsOpen;\n}\n\n/**\n * This simple function returns the presence of the split panel as a child of the\n * Tools component. It must exist and be in side position.\n */\nfunction getSplitPanelStatus(splitPanel: React.ReactNode, splitPanelPosition: string) {\n  return splitPanel && splitPanelPosition === 'side' ? true : false;\n}\n\n/**\n * By default the Tools form is styled as display: none; This behavior should\n * be unchanged in mobile viewports where the Tools form is always suppressed.\n * In large viewports, however the Tools form and its corresponding buttons\n * should be present in the UI under the below circumstances.\n */\nfunction getToolsFormStatus(\n  hasSplitPanel: boolean,\n  isMobile: boolean,\n  isSplitPanelOpen?: boolean,\n  isToolsOpen?: boolean,\n  toolsHide?: boolean\n) {\n  let hasToolsForm = false;\n\n  if (!isMobile) {\n    // Both the Split Panel and Tools button are needed\n    if (hasSplitPanel && !toolsHide) {\n      hasToolsForm = true;\n    }\n\n    // The Split Panel button is needed\n    if (hasSplitPanel && !isSplitPanelOpen && toolsHide) {\n      hasToolsForm = true;\n    }\n\n    // The Tools button is needed\n    if (!hasSplitPanel && !toolsHide && !isToolsOpen) {\n      hasToolsForm = true;\n    }\n  }\n\n  return hasToolsForm;\n}\n\n/**\n * Under two scenarios the Tools form that contains the triggers\n * for the Tools content and the Split Panel may be persistent\n * in the UI (as opposed to disappearing when one of the drawers\n * is open). This will also add a white background as opposed to the\n * default transparent background. The buttons will present and in a\n * selected / not selected state.\n */\nfunction getToolsFormPersistence(\n  hasSplitPanel: boolean,\n  isSplitPanelOpen?: boolean,\n  isToolsOpen?: boolean,\n  toolsHide?: boolean\n) {\n  let hasToolsFormPersistence = false;\n\n  // Both Tools and Split Panel exist and one or both is open\n  if (hasSplitPanel && !toolsHide && (isSplitPanelOpen || isToolsOpen)) {\n    hasToolsFormPersistence = true;\n  }\n\n  return hasToolsFormPersistence;\n}\n", "\n    import './styles.scoped.css';\n    export default {\n  \"drawer\": \"awsui_drawer_1r9lg_1d1qh_189\",\n  \"refresh\": \"awsui_refresh_1r9lg_1d1qh_189\",\n  \"animating\": \"awsui_animating_1r9lg_1d1qh_203\",\n  \"preference-icon--layout-border\": \"awsui_preference-icon--layout-border_1r9lg_1d1qh_226\",\n  \"preference-icon--layout-background\": \"awsui_preference-icon--layout-background_1r9lg_1d1qh_230\",\n  \"preference-icon--layout-header\": \"awsui_preference-icon--layout-header_1r9lg_1d1qh_233\",\n  \"preference-icon--border\": \"awsui_preference-icon--border_1r9lg_1d1qh_236\",\n  \"preference-icon--primary-button\": \"awsui_preference-icon--primary-button_1r9lg_1d1qh_240\",\n  \"preference-icon--secondary\": \"awsui_preference-icon--secondary_1r9lg_1d1qh_243\",\n  \"preference-icon--disabled-element\": \"awsui_preference-icon--disabled-element_1r9lg_1d1qh_246\",\n  \"preference-icon--separator\": \"awsui_preference-icon--separator_1r9lg_1d1qh_249\",\n  \"preference-icon--focus-text\": \"awsui_preference-icon--focus-text_1r9lg_1d1qh_252\",\n  \"preference-icon-refresh--layout-top\": \"awsui_preference-icon-refresh--layout-top_1r9lg_1d1qh_256\",\n  \"preference-icon-refresh--layout-main\": \"awsui_preference-icon-refresh--layout-main_1r9lg_1d1qh_259\",\n  \"preference-icon-refresh--primary\": \"awsui_preference-icon-refresh--primary_1r9lg_1d1qh_262\",\n  \"preference-icon-refresh--disabled\": \"awsui_preference-icon-refresh--disabled_1r9lg_1d1qh_265\",\n  \"preference-icon-refresh--column-header\": \"awsui_preference-icon-refresh--column-header_1r9lg_1d1qh_268\",\n  \"preference-icon-refresh--window\": \"awsui_preference-icon-refresh--window_1r9lg_1d1qh_271\",\n  \"preference-icon-refresh--secondary\": \"awsui_preference-icon-refresh--secondary_1r9lg_1d1qh_275\",\n  \"preference-icon-refresh--default\": \"awsui_preference-icon-refresh--default_1r9lg_1d1qh_278\",\n  \"preference-icon-refresh--separator\": \"awsui_preference-icon-refresh--separator_1r9lg_1d1qh_281\",\n  \"preference-icon-refresh--input-default\": \"awsui_preference-icon-refresh--input-default_1r9lg_1d1qh_284\",\n  \"preference-icon-refresh--heading\": \"awsui_preference-icon-refresh--heading_1r9lg_1d1qh_287\",\n  \"resize-active\": \"awsui_resize-active_1r9lg_1d1qh_292\",\n  \"resize-side\": \"awsui_resize-side_1r9lg_1d1qh_298\",\n  \"resize-bottom\": \"awsui_resize-bottom_1r9lg_1d1qh_301\",\n  \"root\": \"awsui_root_1r9lg_1d1qh_306\",\n  \"preferences-button\": \"awsui_preferences-button_1r9lg_1d1qh_317\",\n  \"close-button\": \"awsui_close-button_1r9lg_1d1qh_321\",\n  \"drawer-closed\": \"awsui_drawer-closed_1r9lg_1d1qh_332\",\n  \"drawer-content-side\": \"awsui_drawer-content-side_1r9lg_1d1qh_337\",\n  \"drawer-content-bottom\": \"awsui_drawer-content-bottom_1r9lg_1d1qh_357\",\n  \"position-bottom\": \"awsui_position-bottom_1r9lg_1d1qh_366\",\n  \"position-side\": \"awsui_position-side_1r9lg_1d1qh_393\",\n  \"slider\": \"awsui_slider_1r9lg_1d1qh_399\",\n  \"slider-side\": \"awsui_slider-side_1r9lg_1d1qh_428\",\n  \"slider-wrapper-bottom\": \"awsui_slider-wrapper-bottom_1r9lg_1d1qh_433\",\n  \"slider-wrapper-side\": \"awsui_slider-wrapper-side_1r9lg_1d1qh_444\",\n  \"open-button\": \"awsui_open-button_1r9lg_1d1qh_455\",\n  \"open-button-side\": \"awsui_open-button-side_1r9lg_1d1qh_459\",\n  \"slider-icon\": \"awsui_slider-icon_1r9lg_1d1qh_466\",\n  \"slider-icon-bottom\": \"awsui_slider-icon-bottom_1r9lg_1d1qh_472\",\n  \"slider-icon-side\": \"awsui_slider-icon-side_1r9lg_1d1qh_475\",\n  \"pane-header-wrapper-bottom\": \"awsui_pane-header-wrapper-bottom_1r9lg_1d1qh_479\",\n  \"drawer-mobile\": \"awsui_drawer-mobile_1r9lg_1d1qh_489\",\n  \"drawer-disable-content-paddings\": \"awsui_drawer-disable-content-paddings_1r9lg_1d1qh_492\",\n  \"content-bottom\": \"awsui_content-bottom_1r9lg_1d1qh_500\",\n  \"pane-bottom-center-align\": \"awsui_pane-bottom-center-align_1r9lg_1d1qh_511\",\n  \"pane-bottom-content-nav-padding\": \"awsui_pane-bottom-content-nav-padding_1r9lg_1d1qh_516\",\n  \"pane-bottom-content-tools-padding\": \"awsui_pane-bottom-content-tools-padding_1r9lg_1d1qh_520\",\n  \"content-bottom-max-width\": \"awsui_content-bottom-max-width_1r9lg_1d1qh_524\",\n  \"content-side\": \"awsui_content-side_1r9lg_1d1qh_529\",\n  \"pane-header-wrapper-side\": \"awsui_pane-header-wrapper-side_1r9lg_1d1qh_540\",\n  \"pane-content-wrapper-side\": \"awsui_pane-content-wrapper-side_1r9lg_1d1qh_543\",\n  \"header\": \"awsui_header_1r9lg_1d1qh_548\",\n  \"header-text\": \"awsui_header-text_1r9lg_1d1qh_557\",\n  \"header-divider\": \"awsui_header-divider_1r9lg_1d1qh_565\",\n  \"header-actions\": \"awsui_header-actions_1r9lg_1d1qh_571\",\n  \"divider\": \"awsui_divider_1r9lg_1d1qh_579\"\n};\n  "],
  "mappings": "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",
  "names": ["import_react", "styles_css_default", "React", "styles_css_default", "import_react", "import_react", "styles_css_default", "React", "styles_css_default", "styles_css_default", "styles_css_default", "styles_css_default", "React", "styles_css_default", "import_react", "React", "import_react", "import_react", "import_react", "styles_css_default", "React", "styles_css_default", "import_react", "import_react", "React", "styles_css_default", "React", "styles_css_default", "import_react", "React", "styles_css_default", "import_react", "import_react", "_a", "import_react", "import_react", "AppLayoutContext", "React", "styles_css_default", "import_react", "AppLayoutContext", "React", "import_react", "AppLayoutContext", "React", "import_react", "AppLayoutContext", "React", "styles_css_default", "import_react", "AppLayoutContext", "React", "styles_css_default", "import_react", "import_react", "React", "AppLayoutContext", "React", "_a", "styles_css_default", "import_react", "Notifications", "AppLayoutContext", "React", "styles_css_default", "import_react", "styles_css_default", "AppLayoutContext", "React", "_a", "styles_css_default", "_b", "_c", "React", "AppLayoutContext", "Notifications", "AppLayout", "React", "styles_css_default"]
}
